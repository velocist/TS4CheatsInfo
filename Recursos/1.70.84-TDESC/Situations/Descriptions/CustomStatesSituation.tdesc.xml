<?xml version="1.0" encoding="iso-8859-1"?>

<TuningRoot>
    <Instance instance_type="situation" class="CustomStatesSituation" module="situations.custom_states.custom_states_situation" muid="DF4443C7FF5E7CA5" description="A custom states situation where the situation can be defined in tuning for its situation states and transitions&#xA;between them." instance_subclasses_only="False" parents="BaseCustomStatesSituation, SituationComplexCommon, SituationComplex, Situation" path="Situations\Descriptions" use_guid_for_reference="True">
        <TunableList name="_situation_states" class="TunableMapping" display="Situation States" muid="1E97B06589589B1E" mapping_key="Situation State Key" mapping_value="Situation State" description="A tunable mapping between situation state keys and situation states." Deprecated="False" filter="0" group="~Core~">
            <TunableTuple class="TunableTuple" muid="ADD3002681E1F8F3" Deprecated="False" filter="0" group="General">
                <TunableVariant type="None" name="Situation State" class="TunableCustomStatesSituationStateSnippet" default="literal" display="Situation State" muid="85F1912E4059A679" description="The situation state that is tied to this key.&#xA; (This may be tuned in place here using 'literal' or as a reference to a CustomStatesSituationState tuning snippet.)" Deprecated="False" filter="0" group="General">
                    <TunableTuple name="literal" class="TunableCustomStatesSituationState" display="Literal" muid="8E46B07DB38AC374" description="Custom States Situation State" Deprecated="False" filter="0" group="General">
                        <TunableList name="job_and_role_changes" class="TunableMapping" display="Job And Role Changes" muid="9988B0CB44F1308E" mapping_key="Situation Job" mapping_value="Role State" description="A mapping between situation jobs and role states that defines&#xA;what role states we want to switch to for sims on which jobs&#xA;when this situation state is entered.&#xA;&#xA;If a situation role does not need to change it does not need to&#xA;be specified." Deprecated="False" filter="0" group="General">
                            <TunableTuple class="TunableTuple" muid="49B320AC87AD9B62" Deprecated="False" filter="0" group="General">
                                <Tunable type="role_state" name="Role State" class="TunableReference" display="Role State" muid="E93423EB2C23F10" description="The role state that we will switch sims of the linked job&#xA;into." allow_none="False" Deprecated="False" filter="0" group="General" />
                                <Tunable type="situation_job" name="Situation Job" class="TunableReference" display="Situation Job" muid="D6F211C5C766301D" description="A reference to a SituationJob that we will use to change&#xA;sim's role state." allow_none="False" Deprecated="False" filter="0" group="General" />
                            </TunableTuple>
                        </TunableList>
                        <TunableList name="triggers" class="TunableList" display="Triggers" muid="52974536DAD6EF70" description="A link between effects and triggers for those effects." Deprecated="False" filter="0" group="General">
                            <TunableTuple class="TunableTuple" muid="CF8A7007D13A93D0" description="A grouping of an effect and triggers for that effect." Deprecated="False" filter="0" group="General">
                                <TunableVariant type="None" name="effect" class="TunableVariant" default="change_state" display="Effect" muid="4B3C971EAE1FD4F1" description="The effect that will occur when one of the triggers is met." Deprecated="False" filter="0" group="General">
                                    <TunableTuple name="change_state" class="TunableCustomStatesSituationStateChange" display="Change State" muid="51A1003C57FAAF37" description="Change to a new situation state based on a weighted random." Deprecated="False" filter="0" group="General">
                                        <TunableTuple name="possible_states" class="TunableRandomWeightedSituationStateKey" display="Possible States" muid="2347AC7965CB1C74" description="Randomly pick a situation state key with a weighted random." Deprecated="False" filter="0" group="General">
                                            <TunableList name="possible_state_keys" class="TunableList" display="Possible State Keys" muid="E3E8D16BE540057C" min="1" description="The possible situation state keys." Deprecated="False" filter="0" group="General">
                                                <TunableTuple class="TunableTuple" muid="C78A3725AF714AC3" Deprecated="False" filter="0" group="General">
                                                    <Tunable type="str" name="situation_key" class="Tunable" default="None" display="Situation Key" muid="280876B05B84AD69" description="The key of the situation state." Deprecated="False" filter="0" group="General" />
                                                    <TunableTuple name="weight" class="TunableTunableMultiplier" display="Weight" muid="D69BB261D5C0CF50" description="A weight with testable multipliers that is used to &#xA;determine how likely this entry is to be picked when &#xA;selecting randomly." Deprecated="False" filter="0" group="General">
                                                        <Tunable type="float" name="base_value" class="Tunable" default="1" display="Base Value" muid="C3D5AEDB0718B7E0" description="The basic value to return if no modifications are applied." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                        <TunableList name="multipliers" class="TunableList" display="Multipliers" muid="B6E3EDB21801C0E7" description="A list of multipliers to apply to base_value." Deprecated="False" filter="0" group="General">
                                                            <TunableTuple class="TunableTuple" muid="E9385E3758669D18" Deprecated="False" filter="0" group="General">
                                                                <Tunable type="float" name="multiplier" class="TunableRange" default="1" display="Multiplier" muid="166BE2ED6A7399EF" min="0" max="None" description="The multiplier to apply to base_value if the associated&#xA;tests pass." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                <TdescFragTag name="tests" class="TunableTestSet" display="Tests" muid="128E6E3FE7166EE2" description="A series of tests that must pass in order for multiplier to&#xA;be applied." filter="0" group="General" />
                                                            </TunableTuple>
                                                        </TunableList>
                                                    </TunableTuple>
                                                </TunableTuple>
                                            </TunableList>
                                        </TunableTuple>
                                    </TunableTuple>
                                    <TunableTuple name="end_situation" class="TunableCustomStatesSituationEndSituation" display="End Situation" muid="7FB549EE0F4BCBE" description="End the owning situation." Deprecated="False" filter="0" group="General" />
                                    <TunableTuple name="loot" class="TunableCustomStatesSituationGiveLoot" display="Loot" muid="7C9B68DF0BA03A2E" description="Give loot to Situation Participants." Deprecated="False" filter="0" group="General">
                                        <TunableList name="loot_actions" class="TunableList" display="Loot Actions" muid="42A1B10B146F7875" description="A list of loot actions to apply." Deprecated="False" filter="0" group="General">
                                            <Tunable type="action" class="TunableReference" muid="F37617799CFC545" description="The loot to apply." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="LootActions,RandomWeightedLoot" />
                                        </TunableList>
                                    </TunableTuple>
                                    <TunableTuple name="replace_situation" class="TunableCustomStatesSituationReplaceSituation" display="Replace Situation" muid="CE5C65556D20AC8C" description="End the current situation and start another." Deprecated="False" filter="0" group="General">
                                        <Tunable type="situation" name="new_situation" class="TunableReference" display="New Situation" muid="852C94A1EB14F176" description="The new situation to be created.&#xA;&#xA;This situation will be created using the default guest list (predefined if the situation has one else an&#xA;empty one) and non-user facing.  If we want either Sims transferred between this situation and the next one&#xA;or the following situation to be user facing GPE would just need to add new tuning within this factory to&#xA;add the logic." allow_none="False" Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                </TunableVariant>
                                <TunableList name="triggers" class="TunableList" display="Triggers" muid="C18713739131B1A" description="The different triggers that are linked to this effect." Deprecated="False" filter="0" group="General">
                                    <TunableVariant type="None" class="TunableVariant" default="duration" muid="DAC4C7F31D4300A0" description="A trigger to perform an effect within the situation." Deprecated="False" filter="0" group="General">
                                        <TunableTuple name="duration" class="TunableDurationTrigger" display="Duration" muid="8914646EDCE36601" description="A trigger that triggers after an amount of time." Deprecated="False" filter="0" group="General">
                                            <TunableTuple name="duration" class="TunableTimeSpan" display="Duration" muid="4B312A6B9B2D8CFB" description="The amount of time that will expire before this duration effect is triggered." Deprecated="False" filter="0" group="General">
                                                <Tunable type="int" name="days" class="TunableRange" default="0" display="Days" muid="CE399728E709BE15" min="0" max="None" description="Number of days" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                <Tunable type="int" name="hours" class="TunableRange" default="0" display="Hours" muid="D0F4A82CC35B547" min="0" max="23" description="Number of hours" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                <Tunable type="int" name="minutes" class="TunableRange" default="0" display="Minutes" muid="9F7300CD3FFF101B" min="0" max="59" description="Number of minutes" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                        </TunableTuple>
                                        <TunableTuple name="test_event" class="TunableTestEventTrigger" display="Test Event" muid="39FEB1C9FBCACD73" description="A trigger that triggers based on a test and the events associated with that test." Deprecated="False" filter="0" group="General">
                                            <Tunable type="bool" name="only_trigger_for_situation_sims" class="Tunable" default="True" display="Only Trigger For Situation Sims" muid="1626169A45E8656C" description="If checked then we will only perform this trigger if the Sim linked to the even is in the&#xA;situation." Deprecated="False" filter="0" group="General" />
                                            <TunableVariant type="None" name="test" class="CustomStatesSituationTriggerDataTestVariant" default="ran_interaction_test" display="Test" muid="8E4C1DE5B8FD7212" description="A test that will be listened to in order to act as a trigger.  These tests will not be checked&#xA;when entering the state to see if they are already complete." Deprecated="False" filter="0" group="General">
                                                <TunableTuple name="at_work" class="TunableAtWorkTest" display="At Work" muid="3D720CBBF2D761F3" description="Tests if the subject is currently at work." Deprecated="False" filter="0" group="General">
                                                    <TunableVariant type="None" name="active_work_restriction" class="OptionalTunable" default="disabled" display="Active Work Restriction" muid="A515206773C78902" description="If enabled, if this is set the test will only pass if the Sim is at&#xA;an active event. If not set, the test will instead only pass if the&#xA;Sim is not at an active event." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="3D57DC183BA57182" />
                                                        <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="90E0D97537A02F2E" Deprecated="False" filter="0" group="General" />
                                                    </TunableVariant>
                                                    <Tunable type="bool" name="is_at_work" class="Tunable" default="True" display="Is At Work" muid="DA5660AC82CAA99D" description="Check to return True if any of the subjects are at work." Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableTuple name="bucks_perk_unlocked" class="TunableBucksPerkTest" display="Bucks Perk Unlocked" muid="5FA895B7B2CDEA25" description="A test for which kind of bucks perk is being unlocked" Deprecated="False" filter="0" group="General">
                                                    <Tunable type="bucks_perk" name="bucks_perk" class="TunableReference" display="Bucks Perk" muid="AA652EFA30984752" description="The specific Perk to check against." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                    <Tunable type="bool" name="invert" class="Tunable" default="False" display="Invert" muid="1F160D2CFE14050A" description="If checked, the results of the test will be inverted. &#xA;The truth table is as follows for sim with the perk:&#xA;test_if_unlocked is true and invert is false: True&#xA;test_if_unlocked is true and invert is true: False&#xA;test_if_unlocked is false and invert is false: False&#xA;test_if_unlocked is false and invert is true: True" Deprecated="False" filter="0" group="General" />
                                                    <TunableEnum type="ParticipantTypeSingle" name="participant" class="TunableEnumEntry" default="Actor" display="Participant" muid="A0919B7EA2BC18F3" static_entries="interactions.ParticipantTypeSingle" description="The participant whose household will be checked for the specified&#xA;Perk  If being used outside of an interaction, any Sim participant&#xA;types are not valid.  Consider using object in these circumstances." Deprecated="False" filter="0" group="General" />
                                                    <TunableVariant type="None" name="requires_same_club" class="OptionalTunable" default="disabled" display="Requires Same Club" muid="B09512DD902741EA" description="When enabled it requires that the tuned target be in the &#xA;associated club with the participant.&#xA;&#xA;For example, this can be used to require that the participant&#xA;and target be in the club associated with the secret handshake&#xA;interaction and that the correct perk for that handshake is &#xA;unlocked." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="7592CC6708C5056C" />
                                                        <TunableEnum type="ParticipantTypeSingle" name="enabled" class="TunableEnumEntry" default="TargetSim" display="Enabled" muid="D404418C6344ACCD" static_entries="interactions.ParticipantTypeSingle" description="The participant that must also have the perk unlocked in a &#xA;bucks tracker that they share in common with the tuned &#xA;participant." Deprecated="False" filter="0" group="General" />
                                                    </TunableVariant>
                                                    <Tunable type="bool" name="test_if_unlocked" class="Tunable" default="True" display="Test If Unlocked" muid="3A03F6E2B535AE9" description="If checked, this test will check to see if the specified Perk is&#xA;unlocked. If unchecked, this test will check to see if the&#xA;specified Perk is locked." Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableTuple name="buff_added" class="TunableBuffAddedTest" display="Buff Added" muid="7FBD2126B0F94ACA" description="A factory that tests whether a specified buff or buffs are given to a sim." Deprecated="False" filter="0" group="General">
                                                    <TunableList name="acceptable_buffs" class="TunableSet" display="Acceptable Buffs" muid="5F775F2D3F74F6D4" description="Buffs that will pass the test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                        <Tunable type="buff" class="TunableReference" muid="5A0EA4A6F08C1FDE" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                    </TunableList>
                                                    <Tunable type="bool" name="check_visibility" class="Tunable" default="False" display="Check Visibility" muid="4513BB14F92CE20A" description="If checked then we will check to make sure that the buff is&#xA;visible." Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableTuple name="career_promoted" class="TunableCareerPromotedTest" display="Career Promoted" muid="D9A9E4B430F7704B" description="Tunable test that checks a career that was promoted." Deprecated="False" filter="0" group="General">
                                                    <TunableTuple name="careers" class="TunableWhiteBlackList" display="Careers" muid="E38767E15F9C6F82" description="A check against the career that was just promoted." Deprecated="False" filter="0" group="General">
                                                        <TunableVariant type="None" name="blacklist" class="OptionalTunable" default="nothing" display="Blacklist" muid="F92DD45F3CA2ED37" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is not in the blacklist. If no blacklist is&#xA;specified, no items are disallowed." Deprecated="False" filter="0" group="General">
                                                            <Tunable name="nothing" class="TunableExistance" display="Nothing" muid="F21B6512F34BBFFA" />
                                                            <TunableTuple name="specify" class="TunableBlacklist" display="Specify" muid="28FA88EB04D66716" description="A tunable blacklist." Deprecated="False" filter="0" group="General">
                                                                <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="EF2AB93FB2D08D96" description="Blacklisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                    <Tunable type="career" class="TunableReference" muid="8A3008660E599EC1" description="Allowed and Disallowed Careers." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                                </TunableList>
                                                                <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="FC24829625AEB5F7" description="Tunable option for how many items must be in the blacklist&#xA;for the blacklist to fail when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                    <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="EEA6B32DE64FE015" />
                                                                    <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="BA6E6287F6B1D219" description="When testing a collection of items, the number of items in&#xA;that collection that are in the blacklist must pass this&#xA;threshold test for the blacklist to disallow them all." Deprecated="False" filter="0" group="General">
                                                                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="80ED1BF65D0DE7C" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                        <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="A951E51E458E9FF4" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                    </TunableTuple>
                                                                </TunableVariant>
                                                            </TunableTuple>
                                                        </TunableVariant>
                                                        <TunableVariant type="None" name="whitelist" class="OptionalTunable" default="everything" display="Whitelist" muid="28FA3F59B63E7DD4" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is in the whitelist. If no whitelist is&#xA;specified, all items are allowed." Deprecated="False" filter="0" group="General">
                                                            <Tunable name="everything" class="TunableExistance" display="Everything" muid="8F7162D06D092160" />
                                                            <TunableTuple name="specify" class="TunableWhitelist" display="Specify" muid="509B45E7C3D0FF7C" description="A tunable whitelist." Deprecated="False" filter="0" group="General">
                                                                <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="EA7B4868ED238BB8" description="Tunable option for how many items must be in the whitelist&#xA;for the whitelist to pass when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                    <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="BB60F2BC68D6074F" />
                                                                    <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="96CBF2EF9697AEEE" description="When testing a collection of items, the number of items in&#xA;that collection that are in the whitelist must pass this&#xA;threshold test for the whitelist to allow them all." Deprecated="False" filter="0" group="General">
                                                                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="41CBB8A4FF7BD5EB" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                        <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="302E1A591DD2EC68" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                    </TunableTuple>
                                                                </TunableVariant>
                                                                <TunableList name="whitelist" class="TunableSet" display="Whitelist" muid="CCE96115A316633" description="Whitelisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                    <Tunable type="career" class="TunableReference" muid="302700AB2CB28F3B" description="Allowed and Disallowed Careers." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                                </TunableList>
                                                            </TunableTuple>
                                                        </TunableVariant>
                                                    </TunableTuple>
                                                </TunableTuple>
                                                <TunableTuple name="career_test" class="TunableTunableCareerTest" display="Career Test" muid="62FF431E27863760" description="Tunable test for what careers a Sim has.&#xA;&#xA;subjects: A ParticipantType used for choosing whom to run the test on.&#xA;test_type: A variant of the different tunable tests that handle testing&#xA;        for careers." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="bool" name="negate" class="Tunable" default="False" display="Negate" muid="C78F4318299251D3" description="If this is true then it will negate &#xA;the result of the test type. For instance if this is true and the test&#xA;would return true for whether or not a sim has a particular career&#xA;False will be returned instead." Deprecated="False" filter="0" group="General" />
                                                    <TunableVariant type="None" name="test_type" class="TunableCareerTestVariant" default="career_reference" display="Test Type" muid="C747F4E4A87A2D0A" Deprecated="False" filter="0" group="General">
                                                        <TunableTuple name="attended_first_day" class="TunableCareerAttendedFirstDay" display="Attended First Day" muid="5DFEB9ECF0399E98" description="Test for whether or not the Sim has gone to work at all for the career." Deprecated="False" filter="0" group="General">
                                                            <Tunable type="career" name="career" class="TunableReference" display="Career" muid="12183D8585C7FF49" description="The career to see if the Sim has gone to work for." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                            <TunableVariant type="None" name="tooltip" class="OptionalTunable" default="disabled" display="Tooltip" muid="C6303F9F1CAC8A43" description="Reason of failure." Deprecated="False" filter="0" group="General">
                                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="23E685F2FAE909AB" />
                                                                <Tunable type="int" name="enabled" class="TunableLocalizedString" default="0x0" display="Enabled" muid="C049A36724C2CA7B" description="Reason of failure." Deprecated="False" filter="0" group="General" />
                                                            </TunableVariant>
                                                        </TunableTuple>
                                                        <TunableTuple name="can_join_career" class="TunableCareerAvailabilityTestFactory" display="Can Join Career" muid="2FEC8D82ABF6A859" description="A test for whether a sim can join a tunable number threshold of the tuned&#xA;careers. This requires that the career be valid for the sim and that the sim&#xA;not already be in the career." Deprecated="False" filter="0" group="General">
                                                            <TunableTuple name="careers_to_consider" class="TunableWhiteBlackList" display="Careers To Consider" muid="6C04341246C67C2A" description="The set of careers to consider and the threshold for passing." Deprecated="False" filter="0" group="General">
                                                                <TunableVariant type="None" name="blacklist" class="OptionalTunable" default="nothing" display="Blacklist" muid="E08737081EBF852C" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is not in the blacklist. If no blacklist is&#xA;specified, no items are disallowed." Deprecated="False" filter="0" group="General">
                                                                    <Tunable name="nothing" class="TunableExistance" display="Nothing" muid="AAE9000C61C4B7D6" />
                                                                    <TunableTuple name="specify" class="TunableBlacklist" display="Specify" muid="EBE2CA45264CA5CD" description="A tunable blacklist." Deprecated="False" filter="0" group="General">
                                                                        <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="FE66632F7CBCE61E" description="Blacklisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                            <Tunable type="career" class="TunableReference" muid="A057C8AF072F1A9" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                                        </TunableList>
                                                                        <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="E863A72FE661F0EF" description="Tunable option for how many items must be in the blacklist&#xA;for the blacklist to fail when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                            <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="BAD9739D119AF3AC" />
                                                                            <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="F241FBE5630DE711" description="When testing a collection of items, the number of items in&#xA;that collection that are in the blacklist must pass this&#xA;threshold test for the blacklist to disallow them all." Deprecated="False" filter="0" group="General">
                                                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="6E9ED9D5CA50D867" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                                <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="58D5A5E23FF5B908" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                            </TunableTuple>
                                                                        </TunableVariant>
                                                                    </TunableTuple>
                                                                </TunableVariant>
                                                                <TunableVariant type="None" name="whitelist" class="OptionalTunable" default="everything" display="Whitelist" muid="273D1E9AE67F29B2" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is in the whitelist. If no whitelist is&#xA;specified, all items are allowed." Deprecated="False" filter="0" group="General">
                                                                    <Tunable name="everything" class="TunableExistance" display="Everything" muid="50A4D1ED3DC44CCE" />
                                                                    <TunableTuple name="specify" class="TunableWhitelist" display="Specify" muid="1C89D1574E2B054B" description="A tunable whitelist." Deprecated="False" filter="0" group="General">
                                                                        <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="45FEAA57CE0371E0" description="Tunable option for how many items must be in the whitelist&#xA;for the whitelist to pass when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                            <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="2865D7D6214DDFED" />
                                                                            <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="833DDF4F31E9AA5F" description="When testing a collection of items, the number of items in&#xA;that collection that are in the whitelist must pass this&#xA;threshold test for the whitelist to allow them all." Deprecated="False" filter="0" group="General">
                                                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="BFB9CF74D55E0CA8" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                                <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="399E8B7A58E7626F" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                            </TunableTuple>
                                                                        </TunableVariant>
                                                                        <TunableList name="whitelist" class="TunableSet" display="Whitelist" muid="D751D578DCE7106F" description="Whitelisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                            <Tunable type="career" class="TunableReference" muid="907733E49DEEAFA5" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                                        </TunableList>
                                                                    </TunableTuple>
                                                                </TunableVariant>
                                                            </TunableTuple>
                                                        </TunableTuple>
                                                        <TunableTuple name="career_level" class="TunableCareerLevelTestFactory" display="Career Level" muid="6DC2F3BEE3BBA097" description="Test to see if the participants have a career at the specified level." Deprecated="False" filter="0" group="General">
                                                            <Tunable type="career_level" name="career_level" class="TunableReference" display="Career Level" muid="9DC7E4D4645C1BEF" description="A reference to career level tuning that each subject must have in &#xA;at least one career in order for this test to pass." tuning_state="NeedsTuning" allow_none="False" Deprecated="False" filter="0" group="General" />
                                                        </TunableTuple>
                                                        <TunableTuple name="career_reference" class="TunableCareerReferenceTestFactory" display="Career Reference" muid="2F92858AB749B16B" description="A test for whether or not the specified subjects have the specified career,&#xA;career user level, or both." Deprecated="False" filter="0" group="General">
                                                            <Tunable type="bool" name="allow_invisible_careers" class="Tunable" default="False" display="Allow Invisible Careers" muid="6CB0D7136613C0E0" description="If checked, this test will also allow non-visible careers (such as&#xA;Odd Jobs) to tested against." Deprecated="False" filter="0" group="General" />
                                                            <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="7D9EB81BD14D4382" description="Should be called &quot;Ignore List&quot;.  Set of careers that will be ignored&#xA;on the Sim.  If the Sim only had these careers, it would be like having no careers." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                <Tunable type="career" class="TunableReference" muid="E8A5A2AA8CC11719" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                            </TunableList>
                                                            <TunableVariant type="None" name="career" class="OptionalTunable" default="all_careers" display="Career" muid="7754971CB168388A" description="The career to test for on the Sim. When set by itself it will pass&#xA;if the subject simply has this career. When set with user level it&#xA;will only pass if the subjects user level passes the threshold&#xA;test." Deprecated="False" filter="0" group="General">
                                                                <Tunable name="all_careers" class="TunableExistance" display="All Careers" muid="1F5A5A161154B103" />
                                                                <Tunable type="career" name="specific_career" class="TunableReference" display="Specific Career" muid="6BF89146051FA6F" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                            </TunableVariant>
                                                            <TunableVariant type="None" name="user_level" class="OptionalTunable" default="disabled" display="User Level" muid="96EB4A2CDBB6971B" description="Threshold test for the current user value of a career. If user_level&#xA;is set without career then it will pass if any of their careers &#xA;pass the threshold test. If set along with career then it will only&#xA;pass if the specified career passes the threshold test for user &#xA;level. &#xA;&#xA;The min and max for the user level are inclusive. So the Sim&#xA;can have any career level that meets the following equation and it&#xA;will pass.&#xA;&#xA;min &lt;= current career level &lt;= max." Deprecated="False" filter="0" group="General">
                                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="3E70D5D1EDAEBB01" />
                                                                <TunableTuple name="enabled" class="TunableInterval" display="Enabled" muid="285FA41B3B50EE9C" description="Threshold test for the current user value of a career. If user_level&#xA;is set without career then it will pass if any of their careers &#xA;pass the threshold test. If set along with career then it will only&#xA;pass if the specified career passes the threshold test for user &#xA;level. &#xA;&#xA;The min and max for the user level are inclusive. So the Sim&#xA;can have any career level that meets the following equation and it&#xA;will pass.&#xA;&#xA;min &lt;= current career level &lt;= max." Deprecated="False" filter="0" group="General">
                                                                    <Tunable type="int" name="lower_bound" class="TunableRange" default="1" display="Lower Bound" muid="39C995E6B1E3597D" min="0" max="None" description="The lower bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                    <Tunable type="int" name="upper_bound" class="TunableRange" default="11" display="Upper Bound" muid="5D997E735F778B5A" min="None" max="11" description="The upper bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                </TunableTuple>
                                                            </TunableVariant>
                                                        </TunableTuple>
                                                        <TunableTuple name="career_track" class="TunableCareerTrackTestFactory" display="Career Track" muid="6B41707AE104BEF5" description="Test for whether the specified subjects have a career currently on the &#xA;track specified." Deprecated="False" filter="0" group="General">
                                                            <Tunable type="career_track" name="career_track" class="TunableReference" display="Career Track" muid="DF633DB1056DB24" description="A reference to the career track that each subject must have in at&#xA;least one career in order for this test to pass." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                            <TunableVariant type="None" name="user_level" class="OptionalTunable" default="disabled" display="User Level" muid="AB0AFB9024200DE1" description="Interval test for the current user value of a career. Career track&#xA;must also be specified for this check to work properly." Deprecated="False" filter="0" group="General">
                                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="2765425751987FDA" />
                                                                <TunableTuple name="enabled" class="TunableInterval" display="Enabled" muid="4B518DAB1B0A191E" description="Interval test for the current user value of a career. Career track&#xA;must also be specified for this check to work properly." Deprecated="False" filter="0" group="General">
                                                                    <Tunable type="int" name="lower_bound" class="TunableRange" default="1" display="Lower Bound" muid="51639B70B69DF760" min="0" max="None" description="The lower bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                    <Tunable type="int" name="upper_bound" class="TunableRange" default="10" display="Upper Bound" muid="160D9603FB3F548" min="None" max="10" description="The upper bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                </TunableTuple>
                                                            </TunableVariant>
                                                        </TunableTuple>
                                                        <TunableTuple name="common_career" class="TunableCareerCommonTestFactory" display="Common Career" muid="E5244F1ECA9B4CB1" description="Test used to see if multiple participants have a career in common." Deprecated="False" filter="0" group="General">
                                                            <TunableList name="targets" class="TunableEnumFlags" default="Listeners" display="Targets" muid="A52D6E009325B948" description="tuning for the targets to check for the same common career on." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                <TunableEnum type="ParticipantType" class="TunableEnumEntry" default="Invalid" muid="4647CAC3FD7DB9DA" static_entries="interactions.ParticipantType" Deprecated="False" filter="0" group="General" />
                                                            </TunableList>
                                                            <TunableVariant type="None" name="test_type" class="TunableCommonCareerTestsVariant" default="career_reference" display="Test Type" muid="CDFD57E2AA47A565" Deprecated="False" filter="0" group="General">
                                                                <TunableTuple name="career_level" class="TunableCareerLevelTestFactory" display="Career Level" muid="4DA1E3EC2B62BFF7" description="Test to see if the participants have a career at the specified level." Deprecated="False" filter="0" group="General">
                                                                    <Tunable type="career_level" name="career_level" class="TunableReference" display="Career Level" muid="997BA7B4651F1C95" description="A reference to career level tuning that each subject must have in &#xA;at least one career in order for this test to pass." tuning_state="NeedsTuning" allow_none="False" Deprecated="False" filter="0" group="General" />
                                                                </TunableTuple>
                                                                <TunableTuple name="career_reference" class="TunableCareerReferenceTestFactory" display="Career Reference" muid="2F36668BBA0EEB9C" description="A test for whether or not the specified subjects have the specified career,&#xA;career user level, or both." Deprecated="False" filter="0" group="General">
                                                                    <Tunable type="bool" name="allow_invisible_careers" class="Tunable" default="False" display="Allow Invisible Careers" muid="B96194B4B21ADA2D" description="If checked, this test will also allow non-visible careers (such as&#xA;Odd Jobs) to tested against." Deprecated="False" filter="0" group="General" />
                                                                    <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="A53EB85BAD23C588" description="Should be called &quot;Ignore List&quot;.  Set of careers that will be ignored&#xA;on the Sim.  If the Sim only had these careers, it would be like having no careers." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                        <Tunable type="career" class="TunableReference" muid="E01F5F71AF252FEF" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                                    </TunableList>
                                                                    <TunableVariant type="None" name="career" class="OptionalTunable" default="all_careers" display="Career" muid="BAA65347B331486D" description="The career to test for on the Sim. When set by itself it will pass&#xA;if the subject simply has this career. When set with user level it&#xA;will only pass if the subjects user level passes the threshold&#xA;test." Deprecated="False" filter="0" group="General">
                                                                        <Tunable name="all_careers" class="TunableExistance" display="All Careers" muid="F726B8AD5090476B" />
                                                                        <Tunable type="career" name="specific_career" class="TunableReference" display="Specific Career" muid="F2672F1CEC808A9A" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                                    </TunableVariant>
                                                                    <TunableVariant type="None" name="user_level" class="OptionalTunable" default="disabled" display="User Level" muid="8876F3CD7AE0FBF0" description="Threshold test for the current user value of a career. If user_level&#xA;is set without career then it will pass if any of their careers &#xA;pass the threshold test. If set along with career then it will only&#xA;pass if the specified career passes the threshold test for user &#xA;level. &#xA;&#xA;The min and max for the user level are inclusive. So the Sim&#xA;can have any career level that meets the following equation and it&#xA;will pass.&#xA;&#xA;min &lt;= current career level &lt;= max." Deprecated="False" filter="0" group="General">
                                                                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="C4740360C96A1966" />
                                                                        <TunableTuple name="enabled" class="TunableInterval" display="Enabled" muid="BDF3CDF4721E23D2" description="Threshold test for the current user value of a career. If user_level&#xA;is set without career then it will pass if any of their careers &#xA;pass the threshold test. If set along with career then it will only&#xA;pass if the specified career passes the threshold test for user &#xA;level. &#xA;&#xA;The min and max for the user level are inclusive. So the Sim&#xA;can have any career level that meets the following equation and it&#xA;will pass.&#xA;&#xA;min &lt;= current career level &lt;= max." Deprecated="False" filter="0" group="General">
                                                                            <Tunable type="int" name="lower_bound" class="TunableRange" default="1" display="Lower Bound" muid="BF8852B473942DC1" min="0" max="None" description="The lower bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                            <Tunable type="int" name="upper_bound" class="TunableRange" default="11" display="Upper Bound" muid="FA9C4F886BE39AC0" min="None" max="11" description="The upper bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                        </TunableTuple>
                                                                    </TunableVariant>
                                                                </TunableTuple>
                                                                <TunableTuple name="career_track" class="TunableCareerTrackTestFactory" display="Career Track" muid="F5D632F76C265A46" description="Test for whether the specified subjects have a career currently on the &#xA;track specified." Deprecated="False" filter="0" group="General">
                                                                    <Tunable type="career_track" name="career_track" class="TunableReference" display="Career Track" muid="9224B233F9DFC399" description="A reference to the career track that each subject must have in at&#xA;least one career in order for this test to pass." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                                    <TunableVariant type="None" name="user_level" class="OptionalTunable" default="disabled" display="User Level" muid="E9245E9D9D5BE079" description="Interval test for the current user value of a career. Career track&#xA;must also be specified for this check to work properly." Deprecated="False" filter="0" group="General">
                                                                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="6B871A55DF9126EB" />
                                                                        <TunableTuple name="enabled" class="TunableInterval" display="Enabled" muid="1EFF205E90C0C887" description="Interval test for the current user value of a career. Career track&#xA;must also be specified for this check to work properly." Deprecated="False" filter="0" group="General">
                                                                            <Tunable type="int" name="lower_bound" class="TunableRange" default="1" display="Lower Bound" muid="E55721F09284A557" min="0" max="None" description="The lower bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                            <Tunable type="int" name="upper_bound" class="TunableRange" default="10" display="Upper Bound" muid="38196B27BB19EDBA" min="None" max="10" description="The upper bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                        </TunableTuple>
                                                                    </TunableVariant>
                                                                </TunableTuple>
                                                                <TunableTuple name="same_career_at_user_level" class="TunableSameCareerAtUserLevelTestFactory" display="Same Career At User Level" muid="1F5CC2AC43D8FCD1" description="Test to see if the participants share any career that they have the same&#xA;user level." Deprecated="False" filter="0" group="General">
                                                                    <TunableTuple name="user_level" class="TunableThreshold" display="User Level" muid="C7489DBF50C352A" description="User level to test for." Deprecated="False" filter="0" group="General">
                                                                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="59B03A3311685207" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                        <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="7C51AC7ACFE8E5A" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                    </TunableTuple>
                                                                </TunableTuple>
                                                            </TunableVariant>
                                                        </TunableTuple>
                                                        <TunableTuple name="days_worked" class="TunableCareerDaysWorked" display="Days Worked" muid="60FAEA009B8EC162" description="Test for how many days the Sim has worked for a career." Deprecated="False" filter="0" group="General">
                                                            <Tunable type="bool" name="active_only" class="Tunable" default="True" display="Active Only" muid="D6EA20DEBA84DC84" description="If checked, only workdays that the player has actively played will&#xA;count." Deprecated="False" filter="0" group="General" />
                                                            <Tunable type="career" name="career" class="TunableReference" display="Career" muid="15F05AB13E57C2F5" description="The career to test against." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                            <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="35E535B2FC7B3025" description="Threshold test for days worked." Deprecated="False" filter="0" group="General">
                                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="35144876A870FF66" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="7F734AD21CF49992" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                            </TunableTuple>
                                                            <TunableVariant type="None" name="tooltip" class="OptionalTunable" default="disabled" display="Tooltip" muid="C4C68E44B6E82E60" description="Reason of failure." Deprecated="False" filter="0" group="General">
                                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="4B68D5ABCBA056C9" />
                                                                <Tunable type="int" name="enabled" class="TunableLocalizedString" default="0x0" display="Enabled" muid="9E3A6695EE1BFD11" description="Reason of failure." Deprecated="False" filter="0" group="General" />
                                                            </TunableVariant>
                                                        </TunableTuple>
                                                        <TunableTuple name="has_available_assignment" class="TunableCareerHasAssignmentTestFactory" display="Has Available Assignment" muid="534242C995E3A129" description="A test for whether or not the specified subjects has an available assignment&#xA;in the specified career" Deprecated="False" filter="0" group="General">
                                                            <Tunable type="career" name="career" class="TunableReference" display="Career" muid="CD2BD1ED4141413C" description="The career to test for having an available assignment.&#xA;&#xA;If None, will expect career passed in via PickedItemIds (i.e. via picker)." allow_none="True" Deprecated="False" filter="0" group="General" />
                                                        </TunableTuple>
                                                        <TunableTuple name="has_career" class="TunableHasCareerTestFactory" display="Has Career" muid="19DF82747C64ADF2" description="Test for whether or not the specified subjects have a career or not." Deprecated="False" filter="0" group="General">
                                                            <Tunable type="bool" name="has_career" class="Tunable" default="True" display="Has Career" muid="A3B2626A60B664CA" description="If true all subjects must have a &#xA;career for the test to pass. If False then none of the subjects &#xA;can have a career for the test to pass." Deprecated="False" filter="0" group="General" />
                                                            <TunableVariant type="None" name="tooltip" class="OptionalTunable" default="disabled" display="Tooltip" muid="66E0305604EA391B" description="Reason of failure." Deprecated="False" filter="0" group="General">
                                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="F1A11A2407A0CE09" />
                                                                <Tunable type="int" name="enabled" class="TunableLocalizedString" default="0x0" display="Enabled" muid="9BCACBA80A94CA5F" description="Reason of failure." Deprecated="False" filter="0" group="General" />
                                                            </TunableVariant>
                                                        </TunableTuple>
                                                        <TunableTuple name="has_career_outfit" class="TunableHasCareerOutfit" display="Has Career Outfit" muid="D58FA954B030CBDD" description="Test for if the subjects have a career outfit." Deprecated="False" filter="0" group="General" />
                                                        <TunableTuple name="has_quittable_career" class="TunableQuittableCareerTestFactory" display="Has Quittable Career" muid="5A8D23679BB078DC" description="Test for whether or not the specified subjects have a quittable career or not." Deprecated="False" filter="0" group="General">
                                                            <Tunable type="bool" name="has_quittable_career" class="Tunable" default="True" display="Has Quittable Career" muid="8C6D56BB34C44CF7" description="If True then all of the subjects must have a quittable career in &#xA;order for the test to pass. If False then none of the subjects &#xA;can have a quittable career in order to pass." Deprecated="False" filter="0" group="General" />
                                                        </TunableTuple>
                                                        <TunableTuple name="highest_level_achieved" class="TunableCareerHighestLevelAchievedTest" display="Highest Level Achieved" muid="1EE39B5E66F8A2F0" description="Test looking at the highest level ever achieved of a specific career." Deprecated="False" filter="0" group="General">
                                                            <TunableList name="career_blacklist" class="TunableSet" display="Career Blacklist" muid="D0582B91FF95EE7F" description="A set of careers that will not be looked at." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                <Tunable type="career" class="TunableReference" muid="2B7D7EC6291482CC" description="The career we will not check." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                            </TunableList>
                                                            <TunableVariant type="None" name="careers_to_check" class="OptionalTunable" default="disabled" display="Careers To Check" muid="799284D033F43A92" description="If enabled then we will only look at the careers listed in this.&#xA;set.  Otherwise will will look at all careers." Deprecated="False" filter="0" group="General">
                                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="78D8C666595D3690" />
                                                                <TunableList name="enabled" class="TunableSet" display="Enabled" muid="45256C9985D6399B" description="A set of careers that will be looked at." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                    <Tunable type="career" class="TunableReference" muid="C61F7A359B654C38" description="The career we will check." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                                </TunableList>
                                                            </TunableVariant>
                                                            <Tunable type="int" name="careers_to_find" class="TunableRange" default="1" display="Careers To Find" muid="B49B0820A0EE5EE5" min="1" max="None" description="The number of careers that need to match the passing threshold for&#xA;this test to pass." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                            <TunableTuple name="passing_threshold" class="TunableThreshold" display="Passing Threshold" muid="DDA54F1CD7140923" description="Threshold for determining if a career is considered passing for&#xA;this test." Deprecated="False" filter="0" group="General">
                                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="7479BC7AFF49B1DA" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="9FD9E465357AA30C" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                            </TunableTuple>
                                                            <TunableVariant type="None" name="tooltip" class="OptionalTunable" default="disabled" display="Tooltip" muid="BC58DC801234437E" description="Reason of failure." Deprecated="False" filter="0" group="General">
                                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="9FB1E34C5EF9C23E" />
                                                                <Tunable type="int" name="enabled" class="TunableLocalizedString" default="0x0" display="Enabled" muid="F1F0DE049875DB3C" description="Reason of failure." Deprecated="False" filter="0" group="General" />
                                                            </TunableVariant>
                                                        </TunableTuple>
                                                        <TunableTuple name="is_elective_course" class="TunableCareerIsElectiveCourseTest" display="Is Elective Course" muid="20A3F7704FB4A5A8" description="Test used to see if a career slot for a sim's university course is associated with an &#xA;elective Univerity course." Deprecated="False" filter="0" group="General">
                                                            <Tunable type="career" name="career" class="TunableReference" display="Career" muid="113372C3BBC96A3F" description="The career slot to test for associated elective course data on the &#xA;subjects. " allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="UniversityCourseCareerSlot" />
                                                        </TunableTuple>
                                                        <TunableTuple name="is_retired" class="TunableIsRetiredTestFactory" display="Is Retired" muid="A36320ECDD3DA8FE" description="Test for whether or not the specified subjects retired from a career." Deprecated="False" filter="0" group="General">
                                                            <Tunable type="career" name="career" class="TunableReference" display="Career" muid="78D0B894A4102BCA" description="The retired career to test for on the subjects. If left unset, the&#xA;test will pass if the Sim is retired from any career." allow_none="False" Deprecated="False" filter="0" group="General" />
                                                        </TunableTuple>
                                                        <TunableTuple name="pto_amount" class="TunableCareerPTOAmountTestFactory" display="Pto Amount" muid="68555305E1BB39FD" description="A test for whether or not the specified subjects has the requested amount&#xA;of PTO available in the specified career" Deprecated="False" filter="0" group="General">
                                                            <Tunable type="career" name="career" class="TunableReference" display="Career" muid="25E25A0D4DEC8306" description="The career to test for how much PTO the sim has.&#xA;&#xA;If None, will expect career passed in via PickedItemIds (i.e. via picker)." allow_none="True" Deprecated="False" filter="0" group="General" />
                                                            <TunableTuple name="required_pto_available" class="TunableThreshold" display="Required Pto Available" muid="73F345A78ED24F20" description="Threshold test for how much PTO is required" Deprecated="False" filter="0" group="General">
                                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="8B19BCE9995E15D7" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="A03749CD22B1E100" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                            </TunableTuple>
                                                        </TunableTuple>
                                                        <TunableTuple name="time_off" class="TunableCareerTimeOffTest" display="Time Off" muid="6784C21A72B140E0" description="Require a Sim to be in a career that does not have requested time off for&#xA;the any reason." Deprecated="False" filter="0" group="General">
                                                            <TunableVariant type="None" name="tooltip" class="OptionalTunable" default="disabled" display="Tooltip" muid="498441E48419CED3" description="Reason of failure." Deprecated="False" filter="0" group="General">
                                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="7FFE352BEEDB4882" />
                                                                <Tunable type="int" name="enabled" class="TunableLocalizedString" default="0x0" display="Enabled" muid="966FC038B1BC0AF2" description="Reason of failure." Deprecated="False" filter="0" group="General" />
                                                            </TunableVariant>
                                                        </TunableTuple>
                                                        <TunableTuple name="time_until_work" class="TunableCareerTimeUntilWorkTestFactory" display="Time Until Work" muid="715BAB7882F98894" description="A test for whether or not the specified subjects has the specified career,&#xA;And that their next work day starts within the specified number of hours" Deprecated="False" filter="0" group="General">
                                                            <Tunable type="career" name="career" class="TunableReference" display="Career" muid="DDADF33DEB2FCE23" description="The career to test the next start time of.&#xA;&#xA;If None, will expect career passed in via PickedItemIds (i.e. via picker)." allow_none="True" Deprecated="False" filter="0" group="General" />
                                                            <Tunable type="bool" name="check_all_careers" class="Tunable" default="False" display="Check All Careers" muid="946FBCB6E9DE0C5E" description="If checked then we will check all careers rather than just the one defined&#xA;in the career tunable.  The test will fail if any career fails." Deprecated="False" filter="0" group="General" />
                                                            <TunableTuple name="hours_till_work" class="TunableInterval" display="Hours Till Work" muid="73A1FACD74AFB4E2" description="Threshold test for how long 'till the &quot;next&quot; start time.  It will&#xA;test up to one hour past the start time, at which point it will test&#xA;against the next start time." Deprecated="False" filter="0" group="General">
                                                                <Tunable type="float" name="lower_bound" class="TunableRange" default="-1" display="Lower Bound" muid="37AD7F4675AA603" min="-23" max="None" description="The lower bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                <Tunable type="float" name="upper_bound" class="TunableRange" default="23" display="Upper Bound" muid="E0BD9D5771AFC741" min="None" max="168" description="The upper bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                            </TunableTuple>
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                </TunableTuple>
                                                <TunableTuple name="club_tests" class="TunableClubTest" display="Club Tests" muid="58DE23E5E11A7406" description="A tunable factory that tests against Clubs.&#xA;&#xA;For use only with ClubSuperInteractions and ClubMixerInteractions." Deprecated="False" filter="0" group="General">
                                                    <TunableVariant type="None" name="affordance_rule" class="OptionalTunable" default="disabled" display="Affordance Rule" muid="862226D39CD5E386" description="If set, then the affordance being tested (should one exist) must&#xA;satisfy this rule requirement." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="D1D1BB8D3FD54263" />
                                                        <TunableVariant type="None" name="enabled" class="TunableVariant" default="is_encouraged" display="Enabled" muid="2025022A1CBC035B" description="The rule requirement that the affordance must satisfy." Deprecated="False" filter="0" group="General">
                                                            <Tunable name="is_discouraged" class="TunableExistance" display="Is Discouraged" muid="7B352C62FE74CBA4" />
                                                            <Tunable name="is_encouraged" class="TunableExistance" display="Is Encouraged" muid="9C852088B37471AE" />
                                                            <Tunable name="is_not_discouraged" class="TunableExistance" display="Is Not Discouraged" muid="93F4B0596C87A10F" />
                                                            <Tunable name="is_not_encouraged" class="TunableExistance" display="Is Not Encouraged" muid="49C90C9AD42EFFE2" />
                                                        </TunableVariant>
                                                    </TunableVariant>
                                                    <TunableVariant type="None" name="club_status" class="OptionalTunable" default="disabled" display="Club Status" muid="D184C651DECED0E6" description="In enabled, require the tuned &quot;subject&quot; to either be or not be a&#xA;member of this interaction's associated Club." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="F72E069822FB4E53" />
                                                        <TunableVariant type="None" name="enabled" class="TunableVariant" default="none" display="Enabled" muid="260D327083F19732" description="In enabled, require the tuned &quot;subject&quot; to either be or not be a&#xA;member of this interaction's associated Club." Deprecated="False" filter="0" group="General">
                                                            <Tunable name="Leader" class="TunableExistance" display="Leader" muid="471DE16945275421" />
                                                            <Tunable name="Member" class="TunableExistance" display="Member" muid="4FCF671D5865014A" />
                                                            <Tunable name="none" class="TunableExistance" display="None" muid="93E885AB56595AE0" />
                                                            <Tunable name="Not Leader" class="TunableExistance" display="Not Leader" muid="DC1B16569BC5C608" />
                                                            <Tunable name="Not Member" class="TunableExistance" display="Not Member" muid="8CE6CB22C0E71808" />
                                                        </TunableVariant>
                                                    </TunableVariant>
                                                    <TunableVariant type="None" name="invite_only" class="OptionalTunable" default="disabled" display="Invite Only" muid="953E0DC2B2EA345A" description="If enabled, require the associated Club to either be invite only or&#xA;be open to everyone." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="CC4FCE16B5B965CD" />
                                                        <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="4039B85BC11DC36" description="If enabled, require the associated Club to either be invite only or&#xA;be open to everyone." Deprecated="False" filter="0" group="General" />
                                                    </TunableVariant>
                                                    <Tunable type="bool" name="pass_if_any_clubs_pass" class="Tunable" default="False" display="Pass If Any Clubs Pass" muid="D2962362CA93946E" description="If checked then this test will pass if any of the clubs match the&#xA;requirements otherwise we require all clubs to meet the&#xA;requirements." Deprecated="False" filter="0" group="General" />
                                                    <TunableVariant type="None" name="recent_member_status" class="OptionalTunable" default="disabled" display="Recent Member Status" muid="3FB5160F4489549" description="If specified, the Sim must satisfy recent member status&#xA;requirements." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="C8662FBCE255E77F" />
                                                        <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="B75EF1A415775BDC" description="Whether or not the Sim must be a recent member of the Club in&#xA;order to pass this test." Deprecated="False" filter="0" group="General" />
                                                    </TunableVariant>
                                                    <TunableVariant type="None" name="require_common_club" class="OptionalTunable" default="disabled" display="Require Common Club" muid="DE6BBAD05422A560" description="If enabled, then there must be a common Club that both the subject&#xA;Sim and this specified Sim are in. If the club type is set to &quot;Use&#xA;Club from Resolver&quot;, then both Sims must be in that Club. If the&#xA;club type is set to &quot;Use Any Club&quot;, then there must be one club both&#xA;the subject Sim and this Sim are in." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="E66D0E7FEE008F39" />
                                                        <TunableEnum type="ParticipantType" name="enabled" class="TunableEnumEntry" default="TargetSim" display="Enabled" muid="A19726FE89D2F5D4" static_entries="interactions.ParticipantType" description="The Sim to test against for a common Club. If a multi-Sim&#xA;participant is specified, the union of their clubs is&#xA;considered, i.e. the test passes if at least one Sim satisfies&#xA;the requirements." Deprecated="False" filter="0" group="General" />
                                                    </TunableVariant>
                                                    <TunableVariant type="None" name="required_sim_count" class="OptionalTunable" default="disabled" display="Required Sim Count" muid="A5DEEC94CD1A0956" description="If enabled then this test will only pass if the group has a number &#xA;of members that passes the tuned threshold." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="FFFBCF8B15834CD" />
                                                        <TunableTuple name="enabled" class="TunableThreshold" display="Enabled" muid="FF9109654EFBABA7" description="The member requirement for this test to pass." Deprecated="False" filter="0" group="General">
                                                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="E45965D307BBF83A" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                            <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="E6FAACE13107942D" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                    <TunableEnum type="ParticipantType" name="subject" class="TunableEnumEntry" default="Actor" display="Subject" muid="46BD2AC6594D0FB3" static_entries="interactions.ParticipantType" description="The subject whose Club status to check." Deprecated="False" filter="0" group="General" />
                                                    <TunableVariant type="None" name="subject_relationship_with_leader" class="OptionalTunable" default="disabled" display="Subject Relationship With Leader" muid="38624B3DD6BBFD9A" description="If enabled, the tuned subject is required to have a specific&#xA;relationship with the leader. If the subject and the leader match,&#xA;the test fails." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="439660DFE6BF584D" />
                                                        <TunableTuple name="enabled" class="TunableRelationshipTest" display="Enabled" muid="2D9A4485EAAB7A3B" description="Gate availability by a relationship status." Deprecated="False" filter="0" group="General">
                                                            <Tunable type="bool" name="invert_num_relations" class="Tunable" default="False" display="Invert Num Relations" muid="9865644F8F1AA8E1" description="If checked then we will check that your Num Relations is less than or&#xA;equal to the value rather than the other way around." Deprecated="False" filter="0" group="General" />
                                                            <TunableTuple name="prohibited_relationship_bits" class="TunableTuple" display="Prohibited Relationship Bits" muid="1D247D00B80402FE" Deprecated="False" filter="0" group="General">
                                                                <TunableList name="match_all" class="TunableSet" display="Match All" muid="98A22E2E5A546C1C" description="All of these relationship bits must match to fail the test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                    <Tunable type="relbit" class="TunableReference" muid="CB586B3056EBE075" allow_none="False" Deprecated="False" filter="0" group="General" />
                                                                </TunableList>
                                                                <TunableList name="match_any" class="TunableSet" display="Match Any" muid="3D574D3DFD7B1C6B" description="If any of these relationship bits match the test will fail." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                    <Tunable type="relbit" class="TunableReference" muid="81DB43B0053B36A5" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                                </TunableList>
                                                            </TunableTuple>
                                                            <TunableTuple name="relationship_score_interval" class="TunableInterval" display="Relationship Score Interval" muid="649DE16A42E276A4" description="The range that the relationship score must be within in order for&#xA;this test to pass." Deprecated="False" filter="0" group="General">
                                                                <Tunable type="float" name="lower_bound" class="TunableRange" default="-100.0" display="Lower Bound" muid="75AE61F0CD87AD7B" min="-100.0" max="None" description="The lower bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                <Tunable type="float" name="upper_bound" class="TunableRange" default="100.0" display="Upper Bound" muid="40723840F349346B" min="None" max="100.0" description="The upper bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                            </TunableTuple>
                                                            <TunableTuple name="required_relationship_bits" class="TunableTuple" display="Required Relationship Bits" muid="6D854DFD93AC9B29" Deprecated="False" filter="0" group="General">
                                                                <TunableList name="match_all" class="TunableSet" display="Match All" muid="FB5E39B9EF90CCE9" description="All of these relationship bits must be present to pass the&#xA;test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                    <Tunable type="relbit" class="TunableReference" muid="CB01C091FDE49D27" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                                </TunableList>
                                                                <TunableList name="match_any" class="TunableSet" display="Match Any" muid="306EF00261A0B072" description="Any of these relationship bits will pass the test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                    <Tunable type="relbit" class="TunableReference" muid="FBA020A2D0F0A9" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                                </TunableList>
                                                            </TunableTuple>
                                                            <TunableEnum type="RelationshipTestEvents" name="test_event" class="TunableEnumEntry" default="AllRelationshipEvents" display="Test Event" muid="46D48E5CB0C67B55" static_entries="relationships-relationship_tests.RelationshipTestEvents" description="The event that we want to trigger this instance of the tuned test&#xA;on." Deprecated="False" filter="0" group="General" />
                                                            <TunableVariant type="None" name="test_incest" class="TunableVariant" default="disabled" display="Test Incest" muid="D6CD40BDD6797057" description="Test for incest status. Test passes if this matches the two Sim's&#xA;incest status." Deprecated="False" filter="0" group="General">
                                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="8B37D1FDA35BECCC" />
                                                                <Tunable name="is incestuous" class="TunableExistance" display="Is Incestuous" muid="E6AC25738AFB4C74" />
                                                                <Tunable name="is not incestuous" class="TunableExistance" display="Is Not Incestuous" muid="8DB0660B8BD33BA0" />
                                                            </TunableVariant>
                                                            <Tunable type="statistic" name="track" class="TunableReference" display="Track" muid="BA65A16BA2522AD9" description="If set, the test will use the relationship score between sims for&#xA;this track. If unset, the track defaults to the global module&#xA;tunable REL_INSPECTOR_TRACK." allow_none="True" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="RelationshipTrack" />
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                </TunableTuple>
                                                <TunableTuple name="collected_item_test" class="TunableCollectedItemTest" display="Collected Item Test" muid="B9E25F9469CC098E" description="A tunable test method that checks a single item being collected." Deprecated="False" filter="0" group="General">
                                                    <TunableVariant type="None" name="test_type" class="TunableVariant" default="collection_type" display="Test Type" muid="4F0950D3F302C" description="The type of test that will be run." Deprecated="False" filter="0" group="General">
                                                        <TunableTuple name="collection_type" class="TunableTuple" display="Collection Type" muid="617814B3B09E8BE2" description="If selected we will check that the collected item is from the&#xA;collection that we are looking for." Deprecated="False" filter="0" group="General">
                                                            <TunableList name="collection_types" class="TunableList" display="Collection Types" muid="963EE9CB2E2FEFF6" description="A list of collections to check against.  The test will pass if it&#xA;is a part of any of them.  If this list is empty, then it will pass if&#xA;it is part of any collection." Deprecated="False" filter="0" group="General">
                                                                <TunableEnum type="CollectionIdentifier" class="TunableEnumEntry" default="Unindentified" muid="B0358FC48A6DD35C" dynamic_entries="objects-collection_manager.CollectionIdentifier._elements" static_entries="objects-collection_manager.CollectionIdentifier" description="The collection we are checking against." Deprecated="False" filter="0" group="General" invalid_entries="Unindentified" />
                                                            </TunableList>
                                                        </TunableTuple>
                                                        <TunableTuple name="specific_items" class="TunableTuple" display="Specific Items" muid="7D86C20060210308" description="If selected we will check that the collected item is from a&#xA;specific list of collectable items that we are looking for." Deprecated="False" filter="0" group="General">
                                                            <TunableList name="specific_items" class="TunableList" display="Specific Items" muid="75B7BC2242A7B513" description="List of allowed objects within a collection that we want to&#xA;check." Deprecated="False" filter="0" group="General">
                                                                <Tunable type="object" class="TunableReference" muid="6B57D0D416ABE0D" description="Object reference to each collectible object." allow_none="False" Deprecated="False" filter="0" group="General" />
                                                            </TunableList>
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                </TunableTuple>
                                                <TunableTuple name="collection_test" class="TunableCollectionThresholdTest" display="Collection Test" muid="6977120332D0DD46" description="Tests for a provided amount of a given collection type." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="CollectionIdentifier" name="collection_type" class="TunableEnumEntry" default="Unindentified" display="Collection Type" muid="BD885D80C88C908B" dynamic_entries="objects-collection_manager.CollectionIdentifier._elements" static_entries="objects-collection_manager.CollectionIdentifier" description="The collection we are checking on.  If collection type is&#xA;unidentified then we will look through all collections." Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="bool" name="complete_collection" class="Tunable" default="False" display="Complete Collection" muid="8D1A2E4EBC7A37E2" description="Setting this to True (checked) will override the threshold and&#xA;check for collection completed" Deprecated="False" filter="0" group="General" />
                                                    <TunableVariant type="None" name="specific_items" class="OptionalTunable" default="disabled" display="Specific Items" muid="AF9CCC5A827F6A25" description="If enabled then the collection threshold test will check for&#xA;specific items within the collection.  When enabled both the&#xA;Collection Type and Complete Collection tuning will be ignored." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="49F428028CBA0CA7" />
                                                        <TunableList name="enabled" class="TunableList" display="Enabled" muid="49B9E25ED45DD073" description="List of allowed objects within a collection that we want to&#xA;check." Deprecated="False" filter="0" group="General">
                                                            <Tunable type="object" class="TunableReference" muid="479DFF2A685A5344" description="Object reference to each collectible object." allow_none="False" Deprecated="False" filter="0" group="General" />
                                                        </TunableList>
                                                    </TunableVariant>
                                                    <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="3B6E4A4F4EE8781E" description="Threshold for which the Sim experiences motive failure" Deprecated="False" filter="0" group="General">
                                                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="5DD4ED87CBBF9225" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                        <Tunable type="int" name="value" class="Tunable" default="1" display="Value" muid="FF56863D1BB3854F" description="The value of the threshold that the collection is compared&#xA;against." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                    </TunableTuple>
                                                </TunableTuple>
                                                <TunableTuple name="crafted_item" class="TunableCraftedItemTest" display="Crafted Item" muid="8D73A9268A31D007" description="Require participants to craft items that meet certain requirements, such as&#xA;used skill, tags, etc..." Deprecated="False" filter="0" group="General">
                                                    <TunableVariant type="None" name="masterwork_threshold" class="OptionalTunable" default="disabled" display="Masterwork Threshold" muid="971E06EF714A4E39" description="If enabled, require the item to match a certain masterwork&#xA;threshold." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="B70F8B7F7CB6D255" />
                                                        <TunableTuple name="enabled" class="TunableObjectStateValueThreshold" display="Enabled" muid="EA422D3326C9694D" description="Value/comparison pair used to define a Threshold." Deprecated="False" filter="0" group="General">
                                                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="6F8A5D207260C36C" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                            <Tunable type="object_state" name="value" class="TunableReference" display="Value" muid="12DB2A01090CB65F" description="The masterwork threshold to satisfy." allow_none="False" Deprecated="False" filter="0" group="General" restrict="ObjectStateValue" />
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                    <TunableVariant type="None" name="quality_threshold" class="OptionalTunable" default="disabled" display="Quality Threshold" muid="7CA3DEB3A88E3BD6" description="If enabled, require the item to match a certain quality threshold." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="3E99BEA599B8D964" />
                                                        <TunableTuple name="enabled" class="TunableObjectStateValueThreshold" display="Enabled" muid="8FB5EF4686ECBFCA" description="Value/comparison pair used to define a Threshold." Deprecated="False" filter="0" group="General">
                                                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="7CC3ADB239052469" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                            <Tunable type="object_state" name="value" class="TunableReference" display="Value" muid="25326F7316884BBA" description="The quality threshold to satisfy." allow_none="False" Deprecated="False" filter="0" group="General" restrict="ObjectStateValue" />
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                    <TunableVariant type="None" name="skill_or_item" class="TunableVariant" default="crafted_with_skill" display="Skill Or Item" muid="24D02ADDF112027C" description="Whether to test for a specific item or use of a skill for the item." Deprecated="False" filter="0" group="General">
                                                        <TunableTuple name="crafted_actual_item" class="CraftActualItemFactory" display="Crafted Actual Item" muid="9A25EE26FF25BDE8" description="This option tests crafted item against a list of possible items" Deprecated="False" filter="0" group="General">
                                                            <TunableList name="items_to_check" class="TunableList" display="Items To Check" muid="FBE939BF966983EB" Deprecated="False" filter="0" group="General">
                                                                <Tunable type="object" class="TunableReference" muid="3F2E642C3E838F09" description="Object that qualifies for this check." allow_none="False" Deprecated="False" filter="0" group="General" />
                                                            </TunableList>
                                                        </TunableTuple>
                                                        <TunableTuple name="crafted_tagged_item" class="CraftTaggedItemFactory" display="Crafted Tagged Item" muid="25F4C22EFFC33FFB" description="This option tests crafted item's tags against a list of possible tags" Deprecated="False" filter="0" group="General">
                                                            <TunableList name="tag_set" class="TunableSet" display="Tag Set" muid="E9E6CE767791CEAA" description="The tag of objects we want to test ownership of" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                <TunableEnum type="Tag" class="TunableEnumEntry" default="INVALID" muid="FFFDE7D4EBE74ABD" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="What tag to test for" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                            </TunableList>
                                                            <TunableEnum type="TagTestType" name="test_type" class="TunableEnumEntry" default="CONTAINS_ANY_TAG_IN_SET" display="Test Type" muid="6934BFDA65D88A6D" static_entries="objects-object_tests.TagTestType" description="How to test the tags in the tag set against the objects on the lot." Deprecated="False" filter="0" group="General" />
                                                        </TunableTuple>
                                                        <TunableTuple name="crafted_with_skill" class="CraftedWithSkillFactory" display="Crafted With Skill" muid="E74C5954F2FA0A25" description="This option tests for an item craft with the selected skill" Deprecated="False" filter="0" group="General">
                                                            <Tunable type="statistic" name="skill_to_test" class="TunableReference" display="Skill To Test" muid="5B6B53713F260DBE" description="Skills needed to pass amount on." allow_none="False" Deprecated="False" filter="0" group="General" />
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                </TunableTuple>
                                                <TunableTuple name="event_ran_successfully" class="TunableEventRanSuccessfullyTest" display="Event Ran Successfully" muid="20CAED4FD7C2B564" description="This is a simple test that always returns true whenever one of&#xA;the tuned test events is processed." Deprecated="False" filter="0" group="General">
                                                    <TunableList name="test_events" class="TunableList" display="Test Events" muid="F8BE6DBB689FA7D3" description="List of events that this test wants to listen for. Whenever&#xA;these tests are processed this test will just return True." Deprecated="False" filter="0" group="General">
                                                        <TunableEnum type="TestEvent" class="TunableEnumEntry" default="Invalid" muid="AEB97884A20DA885" dynamic_entries="event_testing-test_events.TestEvent._elements" static_entries="event_testing-test_events.TestEvent" description="An event type to listen for in order to satsify this test." Deprecated="False" filter="0" group="General" />
                                                    </TunableList>
                                                </TunableTuple>
                                                <TunableTuple name="festival_running" class="TunableFestivalRunningTest" display="Festival Running" muid="36A0D2367634F3D2" description="This is a test that triggers when the festival begins." Deprecated="False" filter="0" group="General">
                                                    <TunableVariant type="None" name="check_if_on_festival_street" class="OptionalTunable" default="disabled" display="Check If On Festival Street" muid="1FA21ADC0E6195DB" description="If enabled, test against if the player is on the festival's street." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="3029484791D31280" />
                                                        <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="539AEAEEF57EA2A3" description="If checked, this test will pass only if the player is on the&#xA;festival's street. If unchecked, the test will pass only if the&#xA;player is not on the festival street." Deprecated="False" filter="0" group="General" />
                                                    </TunableVariant>
                                                    <TunableVariant type="None" name="drama_node" class="OptionalTunable" default="enabled" display="Drama Node" muid="EED5832C3E81D87D" description="If enabled then we will check a specific type of festival drama&#xA;node otherwise we will look at all of the festival drama nodes." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="A6788429A4814621" />
                                                        <Tunable type="drama_node" name="enabled" class="TunableReference" display="Enabled" muid="6FC805055D97A1A5" description="Reference to the festival drama node that we want to be running." allow_none="False" Deprecated="False" filter="0" group="General" restrict="FestivalDramaNode" />
                                                    </TunableVariant>
                                                    <TunableVariant type="None" name="festivals_to_check" class="OptionalTunable" default="disabled" display="Festivals To Check" muid="A8544DEC8379057C" description="If enabled then we will only check a subset of all festival drama nodes referenced here.&#xA;This will only apply if there is no specific drama node specified." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="30BA66496A15385F" />
                                                        <TunableList name="enabled" class="TunableList" display="Enabled" muid="3E81B89DBE36B799" description="A list of festival drama nodes that we want to check against." Deprecated="False" filter="0" group="General">
                                                            <Tunable type="drama_node" class="TunableReference" muid="79AA7D5BCFB69562" description="Reference to the festival drama node that we want to check against." allow_none="False" Deprecated="False" filter="0" group="General" restrict="FestivalDramaNode" />
                                                        </TunableList>
                                                    </TunableVariant>
                                                    <Tunable type="bool" name="negate" class="Tunable" default="False" display="Negate" muid="B524BB4C1B1A0571" description="If enabled this test will pass if no festivals of the tuned&#xA;requirements are running." Deprecated="False" filter="0" group="General" />
                                                    <TunableTuple name="valid_time_blocks" class="TunableTuple" display="Valid Time Blocks" muid="E7460FDC27304ADC" description="Festival drama nodes have a tunable pre-festival duration that&#xA;delay festival start to some point after the drama node has&#xA;started. For example, if the festival drama node has a pre-festival&#xA;duration of 2 hours and the drama node runs at 8am, the festival&#xA;will not start until 10am.&#xA;&#xA;By default, this test passes if the festival drama node is running,&#xA;regardless if the festival is in its pre-festival duration. This&#xA;tuning changes that behavior." Deprecated="False" filter="0" group="General">
                                                        <Tunable type="bool" name="pre_festival" class="Tunable" default="True" display="Pre Festival" muid="4056FFF46A3F3740" description="If the festival is currently in its pre-festival duration,&#xA;test can pass if this is checked and fails if unchecked." Deprecated="False" filter="0" group="General" />
                                                        <Tunable type="bool" name="running" class="Tunable" default="True" display="Running" muid="1D8B51589B09BADD" description="If the festival is running (it is past its pre-festival&#xA;duration), test can pass if this is checked and fails if&#xA;unchecked." Deprecated="False" filter="0" group="General" />
                                                    </TunableTuple>
                                                </TunableTuple>
                                                <TunableTuple name="generation_created" class="TunableGenerationTest" display="Generation Created" muid="793501C61B865D1" description="A test that determines if a player has completed some sort of Legacy&#xA;Challenge. This allows the combination of two tests: whether or not any&#xA;household has been played for a certain number of generations, and whether&#xA;or not there is a specific number of households that have been played for a&#xA;certain number of generations.&#xA;&#xA;Please note: this does not take into account households that are no longer&#xA;in the world. This test can only operate on the current state of the game.&#xA;&#xA;This test is triggered upon either giving birth or adoption a Sim." Deprecated="False" filter="0" group="General">
                                                    <TunableTuple name="generation_threshold" class="TunableThreshold" display="Generation Threshold" muid="174473075BB73406" description="A household is considered only if at least one Sim in it satisfies&#xA;this threshold." Deprecated="False" filter="0" group="General">
                                                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="6E842A94E6EF9F62" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                        <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="3A4E394923165CFD" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                    </TunableTuple>
                                                    <TunableVariant type="None" name="household_threshold" class="OptionalTunable" default="disabled" display="Household Threshold" muid="FD84FB6725966583" description="If enabled, then this test must pass for the specified number of&#xA;households. If disabled, then this test must pass for the active&#xA;household only." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="A3DF5155E9FC083F" />
                                                        <TunableTuple name="enabled" class="TunableThreshold" display="Enabled" muid="4708DFF395C10AAC" description="Require a certain number of households to have at least one Sim&#xA;satisfying 'generation_threshold'." Deprecated="False" filter="0" group="General">
                                                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="2052642AD8785C1F" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                            <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="C1C2E53065CB26B6" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                </TunableTuple>
                                                <TunableTuple name="has_buff" class="TunableBuffTest" display="Has Buff" muid="1E818B3074F27E1D" description="Test whether or not a participant has or doesn't have specific buffs." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="bool" name="apply_whitelist_on_individual_basis" class="Tunable" default="True" display="Apply Whitelist On Individual Basis" muid="5F043C777A8826D9" description="If checked, will require that each target has at least one&#xA;whitelisted buff. If unchecked, will require only a single target to&#xA;have at least one whitelisted trait." Deprecated="False" filter="0" group="General" />
                                                    <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="F57C192F59430900" description="The Sim must not have any buff in this list to pass the test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                        <Tunable type="buff" class="TunableReference" muid="40795BF9969902FF" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                    </TunableList>
                                                    <TunableVariant type="None" name="whitelist" class="OptionalTunable" default="disabled" display="Whitelist" muid="74EA5D9807F371FC" description="If enabled, participant will test for buff's on the whitelist." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="DAABEA1E1BD4CF6A" />
                                                        <TunableList name="enabled" class="TunableSet" display="Enabled" muid="D3640B180B96C3FF" description="The participant must have at least one buff in this list to pass the&#xA;test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                            <Tunable type="buff" class="TunableReference" muid="E565CB80DDDB3A39" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                        </TunableList>
                                                    </TunableVariant>
                                                </TunableTuple>
                                                <TunableTuple name="household_size" class="TunableHouseholdSizeTest" display="Household Size" muid="52E5F37975238FEC" description="Require the specified participant's household to have a specified&#xA;number of free Sim slots." Deprecated="False" filter="0" group="General">
                                                    <TunableVariant type="None" name="test_type" class="TunableVariant" default="count" display="Test Type" muid="7BBD7F3D9B7EAB86" description="The type of test to " Deprecated="False" filter="0" group="General">
                                                        <TunableTuple name="actual_size" class="TunableTuple" display="Actual Size" muid="A39A51EADDA4EF48" description="Use this option when you're testing the actual number of sims&#xA;in a household.  This should not be used for testing if you&#xA;are able to add a sim to the household and should only be used&#xA;for functionality that depents on the actual household members&#xA;being there and not counting reserved slots.&#xA;ex. Achievement for having a household of 8 sims." Deprecated="False" filter="0" group="General">
                                                            <TunableTuple name="count" class="TunableThreshold" display="Count" muid="C19000D044498FDA" description="The number of household members." Deprecated="False" filter="0" group="General">
                                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="DD098C6CABB8FA51" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                <Tunable type="int" name="value" class="Tunable" default="1" display="Value" muid="F4FDAEB72F9A63A4" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                            </TunableTuple>
                                                        </TunableTuple>
                                                        <TunableTuple name="count" class="TunableTuple" display="Count" muid="F9186CEE13A27B63" description="Use this option when you're testing for a specific number of&#xA;free slots in the household." Deprecated="False" filter="0" group="General">
                                                            <TunableTuple name="count" class="TunableThreshold" display="Count" muid="2CCB071DA222E129" description="The number of required free slots for the specified&#xA;household." Deprecated="False" filter="0" group="General">
                                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="A61A2A81FB88BF15" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                <Tunable type="int" name="value" class="Tunable" default="1" display="Value" muid="48BEE11B37DB3755" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                            </TunableTuple>
                                                        </TunableTuple>
                                                        <TunableTuple name="participant" class="TunableTuple" display="Participant" muid="1F43355E0A387551" description="Use this option when you're testing a specific Sim being added&#xA;to the household." Deprecated="False" filter="0" group="General">
                                                            <TunableEnum type="ParticipantType" name="participant" class="TunableEnumEntry" default="TargetSim" display="Participant" muid="2F6E9B10AB111F75" static_entries="interactions.ParticipantType" description="The participant whose required slot count we consider." Deprecated="False" filter="0" group="General" />
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                </TunableTuple>
                                                <TunableTuple name="inventory" class="TunableInventoryTest" display="Inventory" muid="AB46A7B4EA7D8BC0" description="A test to check on the contents of either a sim inventory or&#xA;an object inventory." Deprecated="False" filter="0" group="General">
                                                    <TunableVariant type="None" name="contents_check" class="TunableVariant" default="has_anything" display="Contents Check" muid="28E309D942EE519C" description="Checks to run on each object of the specified inventory" Deprecated="False" filter="0" group="General">
                                                        <Tunable name="has_anything" class="TunableExistance" display="Has Anything" muid="DCF16CEF1A58274D" />
                                                        <TunableTuple name="has_object_of_participant_type" class="TunableTuple" display="Has Object Of Participant Type" muid="707D7B2D7D72E8B0" description="Participant type we want to test if its in the selected&#xA;inventory." Deprecated="False" filter="0" group="General">
                                                            <TunableEnum type="ParticipantType" name="participant" class="TunableEnumEntry" default="Object" display="Participant" muid="F497ECF227316AAF" static_entries="interactions.ParticipantType" description="Which participant of the interaction do we want to validate&#xA;on the inventory. " Deprecated="False" filter="0" group="General" />
                                                        </TunableTuple>
                                                        <TunableTuple name="has_object_with_def" class="TunableTuple" display="Has Object With Def" muid="BEE66800AAD38357" Deprecated="False" filter="0" group="General">
                                                            <Tunable type="object" name="definition" class="TunableReference" display="Definition" muid="F22E26DF88E3F629" description="The object definition to look for inside inventory." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                        </TunableTuple>
                                                        <TunableTuple name="has_object_with_states" class="BasicStateCheckFactory" display="Has Object With States" muid="49EBF1BB1F0D2662" description="This option tests crafted item's tags against a list of possible&#xA;tags." Deprecated="False" filter="0" group="General">
                                                            <TunableVariant type="None" name="object_requirement" class="TunableVariant" default="any_object" display="Object Requirement" muid="426C8CD9F007B83D" Deprecated="False" filter="0" group="General">
                                                                <Tunable name="any_object" class="TunableExistance" display="Any Object" muid="A3969B475F9CBB6" />
                                                                <TunableTuple name="definition" class="TunableTuple" display="Definition" muid="F63A91AC72A4D012" Deprecated="False" filter="0" group="General">
                                                                    <Tunable type="object" name="definition" class="TunableReference" display="Definition" muid="EE5B7E715EA01261" description="The object must have this definition." allow_none="False" Deprecated="False" filter="0" group="General" />
                                                                </TunableTuple>
                                                                <TunableTuple name="tag" class="TunableTuple" display="Tag" muid="D9807714A9FDD3C1" Deprecated="False" filter="0" group="General">
                                                                    <TunableTuple name="tag" class="CraftTaggedItemFactory" display="Tag" muid="8E6F7C59C421D806" description="The object must have this tag." Deprecated="False" filter="0" group="General">
                                                                        <TunableList name="tag_set" class="TunableSet" display="Tag Set" muid="D1572A9F9A647D37" description="The tag of objects we want to test ownership of" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                            <TunableEnum type="Tag" class="TunableEnumEntry" default="INVALID" muid="479156AA859524C5" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="What tag to test for" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                                        </TunableList>
                                                                        <TunableEnum type="TagTestType" name="test_type" class="TunableEnumEntry" default="CONTAINS_ANY_TAG_IN_SET" display="Test Type" muid="F789F4FC0E991ADC" static_entries="objects-object_tests.TagTestType" description="How to test the tags in the tag set against the objects on the lot." Deprecated="False" filter="0" group="General" />
                                                                    </TunableTuple>
                                                                </TunableTuple>
                                                            </TunableVariant>
                                                            <TunableList name="state_set" class="TunableSet" display="State Set" muid="CC71D617E06445D9" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                <Tunable type="object_state" class="TunableReference" muid="69FEC1F3968A4920" description="What state to test for." allow_none="False" Deprecated="False" filter="0" group="General" />
                                                            </TunableList>
                                                            <TunableEnum type="StateTestType" name="test_type" class="TunableEnumEntry" default="CONTAINS_ANY_STATE_IN_SET" display="Test Type" muid="2E99A26AB86ED63E" static_entries="objects-object_tests.StateTestType" description="How to test the states in the state set against the objects in&#xA;the inventory." Deprecated="False" filter="0" group="General" />
                                                        </TunableTuple>
                                                        <TunableTuple name="has_object_with_tag" class="CraftTaggedItemFactory" display="Has Object With Tag" muid="2D7411368469CE3B" description="This option tests crafted item's tags against a list of possible tags" Deprecated="False" filter="0" group="General">
                                                            <TunableList name="tag_set" class="TunableSet" display="Tag Set" muid="97FF6965D46A9696" description="The tag of objects we want to test ownership of" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                <TunableEnum type="Tag" class="TunableEnumEntry" default="INVALID" muid="60846C46BF98FDFC" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="What tag to test for" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                            </TunableList>
                                                            <TunableEnum type="TagTestType" name="test_type" class="TunableEnumEntry" default="CONTAINS_ANY_TAG_IN_SET" display="Test Type" muid="5CBB9D6C57E4E132" static_entries="objects-object_tests.TagTestType" description="How to test the tags in the tag set against the objects on the lot." Deprecated="False" filter="0" group="General" />
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                    <TunableVariant type="None" name="inventory_location" class="TunableVariant" default="participant_inventory" display="Inventory Location" muid="CB5C7F7E48B027EB" description="Who owns the inventory. Either look in the inventory of a &#xA;participant or specify an object inventory type directly.&#xA;&#xA;If participant returns multiple inventory owners, the test will &#xA;pass only if ALL of those owners pass the inventory content test." Deprecated="False" filter="0" group="General">
                                                        <TunableTuple name="hidden_inventory_objects" class="TunableTuple" display="Hidden Inventory Objects" muid="4F220E00373BE976" Deprecated="False" filter="0" group="General">
                                                            <TunableEnum type="InventoryType" name="inventory" class="TunableEnumEntry" default="UNDEFINED" display="Inventory" muid="E51DAD5311117024" dynamic_entries="objects-components-inventory_enums.InventoryType._elements" static_entries="objects-components-inventory_enums.InventoryType" description="Check in the hidden inventory for objects that can go into the&#xA;specified inventory type. EX: check that there are mailbox&#xA;objects in the hidden inventory" Deprecated="False" filter="0" group="General" />
                                                        </TunableTuple>
                                                        <TunableTuple name="object_inventory_type" class="TunableTuple" display="Object Inventory Type" muid="11B7ABF3973435CD" Deprecated="False" filter="0" group="General">
                                                            <TunableEnum type="InventoryType" name="inventory" class="TunableEnumEntry" default="UNDEFINED" display="Inventory" muid="1191FD72B5F8C5B5" dynamic_entries="objects-components-inventory_enums.InventoryType._elements" static_entries="objects-components-inventory_enums.InventoryType" description="Check the global Object inventory that has the specified type.&#xA;EX: check in the global fridge inventory that exists for all&#xA;fridges" Deprecated="False" filter="0" group="General" />
                                                        </TunableTuple>
                                                        <TunableTuple name="participant_inventory" class="TunableTuple" display="Participant Inventory" muid="FC732E23ABDFC63A" Deprecated="False" filter="0" group="General">
                                                            <TunableEnum type="ParticipantType" name="inventory" class="TunableEnumEntry" default="Actor" display="Inventory" muid="4B272457FB9FFD0B" static_entries="interactions.ParticipantType" description="The owner of the inventory" Deprecated="False" filter="0" group="General" />
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                    <TunableTuple name="required_count" class="TunableThreshold" display="Required Count" muid="C5A8E901AEC18B6" description="The inventory must have a tunable threshold of objects that&#xA;pass the contents check test.&#xA;&#xA;EX: test is object definition of type pizza. required count is enabled&#xA;and has a threshold of &gt;= 5. That means this test will pass if you&#xA;have 5 or more pizzas in your inventory. To check if any objects&#xA;exist, use required count &gt;= 1" Deprecated="False" filter="0" group="General">
                                                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="54AD5EFB50A9ABEC" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                        <Tunable type="int" name="value" class="Tunable" default="1" display="Value" muid="2C6FBD7A4CB8A7A0" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                    </TunableTuple>
                                                    <TunableEnum type="TestHiddenInventories" name="test_hidden" class="TunableEnumEntry" default="ANY" display="Test Hidden" muid="3380310B9C65253" static_entries="objects-object_tests.InventoryTest.TestHiddenInventories" description="Optionally restrict to only hidden or non-hidden inventories." Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableTuple name="location_test" class="TunableLocationTest" display="Location Test" muid="BF56369C624301C7" description="Tests for object locations.&#xA;Outside: Check if an object is on the inside or outside (has a roof over&#xA;its head)&#xA;Natural ground: Checks the floor tiles where the object is to see if it &#xA;qualifies as natural ground" Deprecated="False" filter="0" group="General">
                                                    <TunableTuple name="location_tests" class="TunableTuple" display="Location Tests" muid="BD7F6EF8C2169755" Deprecated="False" filter="0" group="General">
                                                        <TunableVariant type="None" name="has_terrain_tag" class="OptionalTunable" default="Don't_Test" display="Has Terrain Tag" muid="ECB1FD1675E97032" description="If checked, will verify the subject of the test is currently on&#xA;the tuned terrain tag." Deprecated="False" filter="0" group="General">
                                                            <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="E031B1184084D503" />
                                                            <TunableTuple name="enabled" class="TunableTuple" display="Enabled" muid="E02A1868FC085C3C" description=",&#xA;A set of terrain tags required for this test to pass." Deprecated="False" filter="0" group="General">
                                                                <Tunable type="bool" name="negate" class="Tunable" default="False" display="Negate" muid="1F04D690CDEA3237" description="If checked, the test will be inverted. In other words,&#xA;the test will fail if at least one tag is detected at&#xA;this location." Deprecated="False" filter="0" group="General" />
                                                                <TunableList name="terrain_tags" class="TunableEnumSet" display="Terrain Tags" muid="35E2D417435905EB" description="A set of terrain tags. Only one of these tags needs to be&#xA;present at this location. Although it is not tunable, there&#xA;is a threshold weight underneath which a terrain tag will&#xA;not appear to be present." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                    <TunableEnum type="TerrainTag" class="TunableEnumEntry" default="INVALID" muid="B06B3B8F6F02A" static_entries="world-terrain_enums.TerrainTag" Deprecated="False" filter="0" group="General" />
                                                                </TunableList>
                                                                <Tunable type="bool" name="test_floor_tiles" class="Tunable" default="False" display="Test Floor Tiles" muid="28EF0921BF597897" description="If checked, floor tiles will be tested. Otherwise, &#xA;it'll only check the terrain and will ignore the &#xA;floor tiles on the terrain." Deprecated="False" filter="0" group="General" />
                                                            </TunableTuple>
                                                        </TunableVariant>
                                                        <TunableVariant type="None" name="in_common_area" class="OptionalTunable" default="Don't_Test" display="In Common Area" muid="4813940BA07BB2FC" description="If checked, will verify the subject is in the common area&#xA;of an apartment.  If unchecked will verify the subject is not." Deprecated="False" filter="0" group="General">
                                                            <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="8F6D092F4C1FC8AB" />
                                                            <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="962DD0B28C5BDB63" Deprecated="False" filter="0" group="General" />
                                                        </TunableVariant>
                                                        <TunableVariant type="None" name="is_fire_allowed" class="OptionalTunable" default="Don't_Test" display="Is Fire Allowed" muid="A5CF06CBA64128F1" description="If checked, will verify if fire is possible at the subject's position. &#xA;If unchecked, will pass if fire is not possible.&#xA;If not enabled, doesn't care either way." Deprecated="False" filter="0" group="General">
                                                            <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="A714253856552C63" />
                                                            <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="6EA92BDEA9ACB542" Deprecated="False" filter="0" group="General" />
                                                        </TunableVariant>
                                                        <TunableVariant type="None" name="is_inside_building" class="OptionalTunable" default="Don't_Test" display="Is Inside Building" muid="72F31F9DB69BE2D9" description="If checked, will verify if the subject of the test is inside a&#xA;building. This uses a client function that checks if the block&#xA;the sim is mostly enclosed by walls or if not, if the adjoining&#xA;blocks are themselves enclosed. This should be used when we&#xA;want to test if a subject is inside a normally constructed &#xA;building. If we simply want to test whether the subject is &#xA;covered / has a roof over them, use is_outside. See comment on&#xA;is_outside for more details. If unchecked, will negate this &#xA;test." Deprecated="False" filter="0" group="General">
                                                            <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="5EFA04D3AE5ED95A" />
                                                            <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="3710F2658E113168" Deprecated="False" filter="0" group="General" />
                                                        </TunableVariant>
                                                        <TunableVariant type="None" name="is_venue_type" class="OptionalTunable" default="Don't_Test" display="Is Venue Type" muid="4F445C230F70BC41" description="If checked, will verify if the subject is at a venue of the&#xA;specified type." Deprecated="False" filter="0" group="General">
                                                            <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="A5E52E329D3CD0CE" />
                                                            <TunableTuple name="enabled" class="TunableTuple" display="Enabled" muid="2231194060F52A05" description="Venue type required for this test to pass." Deprecated="False" filter="0" group="General">
                                                                <Tunable type="bool" name="negate" class="Tunable" default="False" display="Negate" muid="81B796266DE48D32" description="If enabled, the test will return true if the subject&#xA;IS NOT at a venue of the specified type." Deprecated="False" filter="0" group="General" />
                                                                <Tunable type="bool" name="use_source_venue" class="Tunable" default="False" display="Use Source Venue" muid="B587691C5A786FF2" description="If enabled, the test will test the source venue instead of the active&#xA;venue.  For example, the Community Lot instead of the active Marketplace.&#xA;Testing the active venue is the default." Deprecated="False" filter="0" group="General" />
                                                                <Tunable type="venue" name="venue_type" class="TunableReference" display="Venue Type" muid="5967C7BF0D604E21" description="Venue type to test against." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                            </TunableTuple>
                                                        </TunableVariant>
                                                        <TunableVariant type="None" name="valid_surface_types" class="OptionalTunable" default="Don't_Test" display="Valid Surface Types" muid="69FA69DE41B7938F" description="If enabled, we will test the surface type of the subject&#xA;against prohibited or required surface types." Deprecated="False" filter="0" group="General">
                                                            <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="DD162F24C8A28F68" />
                                                            <TunableTuple name="Test_Surface_Types" class="TunableWhiteBlackList" display="Test Surface Types" muid="E59FA63B350F22C2" description="Required and Prohibited Surface Types. " Deprecated="False" filter="0" group="General">
                                                                <TunableVariant type="None" name="blacklist" class="OptionalTunable" default="nothing" display="Blacklist" muid="8D438897EA08DBDA" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is not in the blacklist. If no blacklist is&#xA;specified, no items are disallowed." Deprecated="False" filter="0" group="General">
                                                                    <Tunable name="nothing" class="TunableExistance" display="Nothing" muid="E4F746D1834E0A93" />
                                                                    <TunableTuple name="specify" class="TunableBlacklist" display="Specify" muid="8F5210196E2EF1EC" description="A tunable blacklist." Deprecated="False" filter="0" group="General">
                                                                        <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="6DFD32933B91C5A" description="Blacklisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                            <TunableEnum type="SurfaceType" class="TunableEnumEntry" default="SURFACETYPE_WORLD" muid="66D1FB84FA812C6D" static_entries="routing.SurfaceType" description="Surface Type the object is placed on." Deprecated="False" filter="0" group="General" invalid_entries="SURFACETYPE_UNKNOWN" />
                                                                        </TunableList>
                                                                        <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="1B591DB4402D1A8E" description="Tunable option for how many items must be in the blacklist&#xA;for the blacklist to fail when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                            <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="959310C7445E9F42" />
                                                                            <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="D9AADE6DE9F46222" description="When testing a collection of items, the number of items in&#xA;that collection that are in the blacklist must pass this&#xA;threshold test for the blacklist to disallow them all." Deprecated="False" filter="0" group="General">
                                                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="F2F411E2A1D0E23E" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                                <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="9E04493205713A3E" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                            </TunableTuple>
                                                                        </TunableVariant>
                                                                    </TunableTuple>
                                                                </TunableVariant>
                                                                <TunableVariant type="None" name="whitelist" class="OptionalTunable" default="everything" display="Whitelist" muid="D1FF12D6130DFCC8" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is in the whitelist. If no whitelist is&#xA;specified, all items are allowed." Deprecated="False" filter="0" group="General">
                                                                    <Tunable name="everything" class="TunableExistance" display="Everything" muid="BB293CEA9AE1285" />
                                                                    <TunableTuple name="specify" class="TunableWhitelist" display="Specify" muid="3648BDA4F413469F" description="A tunable whitelist." Deprecated="False" filter="0" group="General">
                                                                        <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="5471C6DA67A8CD06" description="Tunable option for how many items must be in the whitelist&#xA;for the whitelist to pass when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                            <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="1042A61604E91E1D" />
                                                                            <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="69ADC2C3C58572EC" description="When testing a collection of items, the number of items in&#xA;that collection that are in the whitelist must pass this&#xA;threshold test for the whitelist to allow them all." Deprecated="False" filter="0" group="General">
                                                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="1D261A2337CDEF9C" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                                <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="F6CCA4DC09540519" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                            </TunableTuple>
                                                                        </TunableVariant>
                                                                        <TunableList name="whitelist" class="TunableSet" display="Whitelist" muid="C0FA3A2402D6E95E" description="Whitelisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                            <TunableEnum type="SurfaceType" class="TunableEnumEntry" default="SURFACETYPE_WORLD" muid="E8A68AC3AFC09DC0" static_entries="routing.SurfaceType" description="Surface Type the object is placed on." Deprecated="False" filter="0" group="General" invalid_entries="SURFACETYPE_UNKNOWN" />
                                                                        </TunableList>
                                                                    </TunableTuple>
                                                                </TunableVariant>
                                                            </TunableTuple>
                                                        </TunableVariant>
                                                    </TunableTuple>
                                                    <TunableEnum type="ParticipantType" name="subject" class="TunableEnumEntry" default="Actor" display="Subject" muid="F674930475BCD967" static_entries="interactions.ParticipantType" description="Who or what to apply this &#xA;test to." Deprecated="False" filter="0" group="General" />
                                                    <TunableVariant type="None" name="tooltip" class="OptionalTunable" default="disabled" display="Tooltip" muid="6AF3B75BB391E4DD" description="Reason of failure." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="4F3D69E710BC86BE" />
                                                        <Tunable type="int" name="enabled" class="TunableLocalizedString" default="0x0" display="Enabled" muid="B5CE3D2915C8319E" description="Reason of failure." Deprecated="False" filter="0" group="General" />
                                                    </TunableVariant>
                                                </TunableTuple>
                                                <TunableTuple name="mood_test" class="TunableMoodTest" display="Mood Test" muid="835F82280557387E" description="A tunable test that tests if a Sim has the requested mood." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="bool" name="disallow" class="Tunable" default="False" display="Disallow" muid="D7DA7466804F6E5C" description="If True, this test will pass if the Sim's mood does NOT match the tuned mood reference." Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="mood" name="mood" class="TunableReference" display="Mood" muid="91B41BB31DC0EB19" description="The mood that must be active (or must be inactive, if 'Disallow' is&#xA;checked)." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                </TunableTuple>
                                                <TunableTuple name="object_criteria" class="TunableObjectCriteriaTest" display="Object Criteria" muid="42D1698DA58C7859" description="A test to look at all the objects and compare them to the tuned criteria." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="bool" name="completed" class="Tunable" default="False" display="Completed" muid="7214FAA974813E93" description="If checked, any craftable object (such as a painting) must be finished&#xA;for it to be considered." Deprecated="False" filter="0" group="General" />
                                                    <TunableVariant type="None" name="desired_state_threshold" class="OptionalTunable" default="disabled" display="Desired State Threshold" muid="BD629B14F5B84058" description="A state threshold that the object must satisfy for this test to pass" Deprecated="False" filter="0" group="General">
                                                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="F4C56446AAFC7A26" />
                                                        <TunableTuple name="enabled" class="TunableThreshold" display="Enabled" muid="700B5FAD7C5D6E81" description="A state threshold that the object must satisfy for this test to pass" Deprecated="False" filter="0" group="General">
                                                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="892386A6F84C92D7" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                            <Tunable type="object_state" name="value" class="TunableReference" display="Value" muid="F01236149E6B5913" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="ObjectStateValue" />
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                    <TunableVariant type="None" name="identity_test" class="TunableVariant" default="no_identity_test" display="Identity Test" muid="A0B173326A954254" description="Which test to run on the object in order to determine &#xA;if it matches or not." Deprecated="False" filter="0" group="General">
                                                        <TunableTuple name="definition_id" class="TunableObjectTypeFactory" display="Definition Id" muid="3B71CE28799AE562" Deprecated="False" filter="0" group="General">
                                                            <Tunable type="object" name="actual_object" class="TunableReference" display="Actual Object" muid="C5FC8831BEDB48C0" description="The object we want to test ownership of" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                        </TunableTuple>
                                                        <Tunable name="no_identity_test" class="TunableExistance" display="No Identity Test" muid="ABAA4B20F4D500DA" />
                                                        <TunableTuple name="tags" class="TunableObjectTagFactory" display="Tags" muid="2F17DAC7DEDACD81" Deprecated="False" filter="0" group="General">
                                                            <TunableList name="tag_set" class="TunableSet" display="Tag Set" muid="62330A33B377C257" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                <TunableEnum type="Tag" class="TunableEnumEntry" default="INVALID" muid="CA1F61B061A05D01" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="What tag to test for." Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                            </TunableList>
                                                            <TunableEnum type="TagTestType" name="test_type" class="TunableEnumEntry" default="CONTAINS_ANY_TAG_IN_SET" display="Test Type" muid="A55BF51611BFE662" static_entries="objects-object_tests.TagTestType" description="How to test the tags in the tag set against the objects on the lot." Deprecated="False" filter="0" group="General" />
                                                        </TunableTuple>
                                                        <TunableTuple name="trending" class="TunableObjectTrendingFactory" display="Trending" muid="1E257BE5789FF133" Deprecated="False" filter="0" group="General" />
                                                    </TunableVariant>
                                                    <Tunable type="bool" name="on_active_lot" class="Tunable" default="False" display="On Active Lot" muid="1A91AC0AD154DAB8" description="If checked, test whether or not the object is on the active&#xA;lot. If unchecked the object can be either on the active lot or&#xA;in the open streets area, we don't really care." Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="bool" name="owned" class="Tunable" default="True" display="Owned" muid="F0B30685D1B5C70B" description="If checked will test if the object is owned by the active &#xA;household. If unchecked it doesn't matter who owns the object or&#xA;if it is owned at all." Deprecated="False" filter="0" group="General" />
                                                    <TunableVariant type="None" name="positional_relationship_test" class="TunableVariant" default="no_positional_relationship_test" display="Positional Relationship Test" muid="6A5BE687D276C3E3" description="The type of positional relationship test to run on the object with respect to &#xA;another object." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="no_positional_relationship_test" class="TunableExistance" display="No Positional Relationship Test" muid="C2C28EB44B6EE8C8" />
                                                        <TunableTuple name="radius_test" class="Tunable_RadiusFactory" display="Radius Test" muid="DD9DA9EFC9501997" description="The object must be within a certain radius of a&#xA;tuned participant in order for the test to pass." Deprecated="False" filter="0" group="General">
                                                            <Tunable type="float" name="radius" class="TunableDistanceSquared" default="5.0" display="Radius" muid="F7348E95C54E428A" description="The radius, with the radius actor's position, that defines&#xA;the area within which the object is valid." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                            <TunableEnum type="ParticipantType" name="radius_actor" class="TunableEnumEntry" default="ParticipantTypeSingle.Object" display="Radius Actor" muid="1658CCBEFBC1138B" static_entries="interactions.ParticipantType" description="The actor whose position, with the radius, defines the&#xA;area within which the object is valid." Deprecated="False" filter="0" group="General" />
                                                        </TunableTuple>
                                                        <TunableTuple name="tagged_object_on_same_level_test" class="Tunable_TaggedObjectOnSameLevelFactory" display="Tagged Object On Same Level Test" muid="658A641E2F90344E" description="The object must has at least one object with a tuned tag on the&#xA;same level as a tuned participant in order for the test to pass." Deprecated="False" filter="0" group="General">
                                                            <TunableEnum type="ParticipantType" name="subject" class="TunableEnumEntry" default="ParticipantTypeSingle.Object" display="Subject" muid="58346174851BB385" static_entries="interactions.ParticipantType" description="The participant to test against. " Deprecated="False" filter="0" group="General" />
                                                            <TunableEnum type="Tag" name="tag" class="TunableTag" default="INVALID" display="Tag" muid="5DC1A1F36A23F779" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="A single tag to find an object matching to test against the participant. " Deprecated="False" dynamic_entries_prefix="" filter="0" group="General" invalid_entries="INVALID" pack_safe="True" />
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                    <TunableVariant type="None" name="sim_ownership" class="OptionalTunable" default="disabled" display="Sim Ownership" muid="9A4070767667B461" description="If enabled, test whether or not the object is owned by the active &#xA;Sim.  If checked, test will pass if the Sim owns the object." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="2320F06FC89739F5" />
                                                        <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="EE81027838C4C0CF" Deprecated="False" filter="0" group="General" />
                                                    </TunableVariant>
                                                    <TunableVariant type="None" name="subject_specific_tests" class="TunableVariant" default="all_objects" display="Subject Specific Tests" muid="D7F98200D9CC7A4F" Deprecated="False" filter="0" group="General">
                                                        <TunableTuple name="all_objects" class="TunableTuple" display="All Objects" muid="E32489C2CD2BC304" Deprecated="False" filter="0" group="General">
                                                            <TunableTuple name="quantity" class="TunableThreshold" display="Quantity" muid="7AA61899A59538C1" description="The number of objects that meet the tuned critera needed to pass this&#xA;test. quantity is run after a list of matching objects is created&#xA;using the tuned criteria." Deprecated="False" filter="0" group="General">
                                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="6A7414DD76D38290" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                <Tunable type="float" name="value" class="Tunable" default="1" display="Value" muid="AEAE04FD736F7B48" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                            </TunableTuple>
                                                            <TunableVariant type="None" name="total_value" class="OptionalTunable" default="disabled" display="Total Value" muid="E6B1245E09B53E68" description="If set, the total monetary value of all the objects that meet the tuned &#xA;criteria needed in order to pass this test. total_value is run after &#xA;a list of matching objects is created using the tuned criteria." Deprecated="False" filter="0" group="General">
                                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="6B10911FCE2034F5" />
                                                                <TunableTuple name="enabled" class="TunableThreshold" display="Enabled" muid="70A44ECD9595D108" description="If set, the total monetary value of all the objects that meet the tuned &#xA;criteria needed in order to pass this test. total_value is run after &#xA;a list of matching objects is created using the tuned criteria." Deprecated="False" filter="0" group="General">
                                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="2E7179D8B4578B62" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                    <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="B8441BF986B7139B" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                </TunableTuple>
                                                            </TunableVariant>
                                                        </TunableTuple>
                                                        <TunableTuple name="single_object" class="TunableTuple" display="Single Object" muid="9E4D95273EB9B493" Deprecated="False" filter="0" group="General">
                                                            <TunableEnum type="ParticipantType" name="target" class="TunableEnumEntry" default="Object" display="Target" muid="80F2ADAED7779E17" static_entries="interactions.ParticipantType" description="If set this test will loop through the specified participants and&#xA;run the object identity and criteria tests on them instead of all&#xA;of the objects on the lot." Deprecated="False" filter="0" group="General" />
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                    <TunableList name="test_events" class="TunableList" display="Test Events" muid="A656BD650F64A921" description="The list of events that trigger this instance of the tuned test on.&#xA;&#xA;If you pick ObjectStateChange, the test will be registered with&#xA;EventManager for every ObjectStateValue managed by ObjectState&#xA;controlling the desired_state_threshold. E.g. if the test cares&#xA;about BrokenState_Broken, we will register tolisten for events for&#xA;state changes of BrokenState_Broken, BrokenState_Unbroken,&#xA;BrokenState_Repairing, etc." Deprecated="False" filter="0" group="General">
                                                        <TunableEnum type="ObjectCriteriaTestEvents" class="TunableEnumEntry" default="AllObjectEvents" muid="AD10CE785DCAA8F" static_entries="objects-object_tests.ObjectCriteriaTestEvents" Deprecated="False" filter="0" group="General" />
                                                    </TunableList>
                                                    <Tunable type="bool" name="use_depreciated_values" class="Tunable" default="False" display="Use Depreciated Values" muid="CA5B0D2978DDA6F9" description="If checked, the value consideration for each checked object will at its depreciated amount.&#xA;This affects the &quot;All Objects&quot; test type, changing the total value considered to be at the&#xA;non-depreciated amount." Deprecated="False" filter="0" group="General" />
                                                    <TunableVariant type="None" name="value" class="OptionalTunable" default="disabled" display="Value" muid="4ED741B24ADBD6D7" description="A threshold test for the monetary value of a single object in order for it&#xA;to be considered." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="358EC6832B8508BE" />
                                                        <TunableTuple name="enabled" class="TunableTuple" display="Enabled" muid="82BB1615E02E45D1" Deprecated="False" filter="0" group="General">
                                                            <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="8FE3683F0F5DD003" description="Value/comparison pair used to define a Threshold." Deprecated="False" filter="0" group="General">
                                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="722E770BC616FA05" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="E71E92BB522BB16C" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                            </TunableTuple>
                                                            <TunableVariant type="None" name="value_to_check" class="TunableVariant" default="catalog_value" display="Value To Check" muid="8BA5E0826D87C1B3" Deprecated="False" filter="0" group="General">
                                                                <Tunable name="catalog_value" class="TunableExistance" display="Catalog Value" muid="7957C680A9414302" />
                                                                <Tunable name="current_value" class="TunableExistance" display="Current Value" muid="3E3E08BBCC6C088A" />
                                                                <Tunable name="depreciated_value" class="TunableExistance" display="Depreciated Value" muid="DFF79E8D1D74BC84" />
                                                            </TunableVariant>
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                </TunableTuple>
                                                <TunableTuple name="object_purchase_test" class="TunableObjectPurchasedTest" display="Object Purchase Test" muid="371CDA53BBF7C032" description="Test the value of a purchased object against tuned requirements." Deprecated="False" filter="0" group="General">
                                                    <TunableVariant type="None" name="test_type" class="TunableVariant" default="any_object" display="Test Type" muid="1CAB0638B14941C3" description="The object we want to test for." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="any_object" class="TunableExistance" display="Any Object" muid="57E880179CD7DA34" />
                                                        <TunableTuple name="object" class="TunableObjectTypeFactory" display="Object" muid="E186D6DFBC4EF9F4" Deprecated="False" filter="0" group="General">
                                                            <Tunable type="object" name="actual_object" class="TunableReference" display="Actual Object" muid="674E3A0B8BE00BBF" description="The object we want to test ownership of" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                        </TunableTuple>
                                                        <TunableTuple name="tag_set" class="TunableObjectTagFactory" display="Tag Set" muid="8133444E87B5F372" Deprecated="False" filter="0" group="General">
                                                            <TunableList name="tag_set" class="TunableSet" display="Tag Set" muid="A5798CADCBB084C2" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                <TunableEnum type="Tag" class="TunableEnumEntry" default="INVALID" muid="3CAF01103DAC62BC" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="What tag to test for." Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                            </TunableList>
                                                            <TunableEnum type="TagTestType" name="test_type" class="TunableEnumEntry" default="CONTAINS_ANY_TAG_IN_SET" display="Test Type" muid="E28BAE3082714D6D" static_entries="objects-object_tests.TagTestType" description="How to test the tags in the tag set against the objects on the lot." Deprecated="False" filter="0" group="General" />
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                    <Tunable type="bool" name="use_depreciated_value" class="Tunable" default="False" display="Use Depreciated Value" muid="CEFC447A2C4F78B0" description="If checked, the value consideration for purchased object will at its&#xA;depreciated amount." Deprecated="False" filter="0" group="General" />
                                                    <TunableTuple name="value_threshold" class="TunableThreshold" display="Value Threshold" muid="881AF9282D5087CD" description="The condition the object's value (in Simoleons) is required to&#xA;satisfy in order for the test to pass." Deprecated="False" filter="0" group="General">
                                                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="F14AAE4C9D4D3821" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                        <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="BC098466636323CD" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                    </TunableTuple>
                                                </TunableTuple>
                                                <TunableTuple name="offspring_created_test" class="TunableOffspringCreatedTest" display="Offspring Created Test" muid="3B53F2C6995F9788" description="This test checks for a tuned number of offspring to have been created upon&#xA;the moment of the DeliverBabySuperInteraction completion." Deprecated="False" filter="0" group="General">
                                                    <TunableTuple name="offspring_threshold" class="TunableThreshold" display="Offspring Threshold" muid="E2B7DF844CAA2FF8" description="The comparison of amount of offspring created to the number desired." Deprecated="False" filter="0" group="General">
                                                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="1004BEE3E51E135E" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                        <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="EB987A89E95265E9" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                    </TunableTuple>
                                                </TunableTuple>
                                                <TunableTuple name="photo_taken" class="TunableTookPhotoTest" display="Photo Taken" muid="15D85D25722E61D8" description="A test for player taken photos." Deprecated="False" filter="0" group="General">
                                                    <TdescFragTag name="tests" class="TunableTestSet" display="Tests" muid="F10BD6C0BB958642" description="A set of tests that are run with the photographer as the actor,&#xA;and the photograph as the object and PhotographyTargets as the&#xA;subjects." filter="0" group="General" />
                                                    <TunableVariant type="None" name="tooltip" class="OptionalTunable" default="disabled" display="Tooltip" muid="F709B2D697E86035" description="Reason of failure." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="21EF7907CB389EC6" />
                                                        <Tunable type="int" name="enabled" class="TunableLocalizedString" default="0x0" display="Enabled" muid="E158790FD41C52DF" description="Reason of failure." Deprecated="False" filter="0" group="General" />
                                                    </TunableVariant>
                                                </TunableTuple>
                                                <TunableTuple name="purchase_perk_test" class="TunablePurchasePerkTest" display="Purchase Perk Test" muid="142C9EDF8CC8B37F" description="A test for which kind of perk is being purchased." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="BucksType" name="bucks_type" class="TunableEnumEntry" default="INVALID" display="Bucks Type" muid="26FC95FDA75DFFCA" dynamic_entries="bucks-bucks_enums.BucksType._elements" static_entries="bucks-bucks_enums.BucksType" description="The participant of whos ensemble we want to look at." Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                    <Tunable type="bool" name="consider_existing_perks" class="Tunable" default="False" display="Consider Existing Perks" muid="80481278EF11A0BB" description="If checked, this test will return true if the sim has already&#xA;purchased a perk with the tuned buck type." Deprecated="False" filter="0" group="General" />
                                                    <TunableVariant type="None" name="tooltip" class="OptionalTunable" default="disabled" display="Tooltip" muid="CC8E7C62EA2E9C93" description="Reason of failure." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="C7EAD73F8B45FF44" />
                                                        <Tunable type="int" name="enabled" class="TunableLocalizedString" default="0x0" display="Enabled" muid="272D09AF126B0379" description="Reason of failure." Deprecated="False" filter="0" group="General" />
                                                    </TunableVariant>
                                                </TunableTuple>
                                                <TunableTuple name="ran_away_action_test" class="TunableParticipantRanAwayActionTest" display="Ran Away Action Test" muid="5D9C7A84B2D1CC1F" description="Check to see if the Sim ran an away action" Deprecated="False" filter="0" group="General">
                                                    <TunableList name="away_actions" class="TunableSet" display="Away Actions" muid="A705279F1F78FC8A" description="The Sim must have run an away action in this set" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                        <Tunable type="away_action" class="TunableReference" muid="FF5974B77C356B5B" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                    </TunableList>
                                                    <TunableEnum type="AwayActionTestEvents" name="test_event" class="TunableEnumEntry" default="AwayActionStop" display="Test Event" muid="2C11BE973B4B7151" static_entries="event_testing-tests_with_data.AwayActionTestEvents" description="The event that we want to trigger this instance of the tuned&#xA;test on.&#xA;AwayActionStart: Triggers when the away action starts.&#xA;AwayActionStop: Triggers when the away action stops." Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableTuple name="ran_interaction_test" class="TunableParticipantRanInteractionTest" display="Ran Interaction Test" muid="4E43E0A67D9C0F33" description="Check to see if the Sim ran an affordance as a particular actor" Deprecated="False" filter="0" group="General">
                                                    <TunableList name="affordance_lists" class="TunableSet" display="Affordance Lists" muid="B5F5AD357FD8F2C2" description="The Sim must have run either any affordance or have a proxied affordance&#xA;in Affordances or these Affordance Lists, or an interaction matching&#xA;one of the tags in this tunable's Tags field." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                        <Tunable type="snippet" class="TunableReference" muid="5EF47400155BAA52" description="A reference to a AffordanceList tuning snippet." allow_none="False" Deprecated="False" filter="0" group="General" restrict="AffordanceList" />
                                                    </TunableList>
                                                    <TunableList name="affordances" class="TunableSet" display="Affordances" muid="D80F85D637D25AD" description="The Sim must have run either any affordance or have a proxied affordance&#xA;in this list or Affordance Lists, or an interaction matching&#xA;one of the tags in this tunable's Tags field." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                        <Tunable type="interaction" class="TunableReference" muid="9271A39518B158A6" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                    </TunableList>
                                                    <Tunable type="bool" name="consider_all_cancelled_as_failure" class="Tunable" default="False" display="Consider All Cancelled As Failure" muid="3558645E94A44838" description="If True, test will consider the interaction outcome to be Failure if&#xA;canceled for any reason. If this box is checked and&#xA;consider_user_cancelled_as_failure is not checked, user cancel's&#xA;will still be treated as failures." Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="bool" name="consider_user_cancelled_as_failure" class="Tunable" default="True" display="Consider User Cancelled As Failure" muid="50D080C7E458A52B" description="If True, test will consider the interaction outcome to be Failure if&#xA;canceled by the user." Deprecated="False" filter="0" group="General" />
                                                    <TunableVariant type="None" name="interaction_outcome" class="OptionalTunable" default="disabled" display="Interaction Outcome" muid="3BAAAF395A928C8" description="The interaction's outcome must match the outcome tuned here to pass this test." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="DC04B967EF2D00EB" />
                                                        <TunableEnum type="OutcomeResult" name="enabled" class="TunableEnumEntry" default="NONE" display="Enabled" muid="44EC5436ABC2AB7E" dynamic_entries="interactions-utils-outcome_enums.OutcomeResult._elements" static_entries="interactions-utils-outcome_enums.OutcomeResult" Deprecated="False" filter="0" group="General" />
                                                    </TunableVariant>
                                                    <TunableVariant type="None" name="running_time" class="OptionalTunable" default="disabled" display="Running Time" muid="FA0FA4D4A8B9E19E" description="Amount of time in sim minutes that this interaction needs to&#xA;have been running for for this test to pass true. This time is how&#xA;long the interaction has been in the SI State.&#xA;&#xA;If your setting this, you probably want Test Event to be set to&#xA;InteractionUpdate." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="5D0BF1A8908BFFEE" />
                                                        <Tunable type="float" name="enabled" class="TunableSimMinute" default="10" display="Enabled" muid="C9C0191B5B2A902" min="0" max="None" description="Amount of time in sim minutes that this interaction needs to&#xA;have been running for for this test to pass true. This time is how&#xA;long the interaction has been in the SI State.&#xA;&#xA;If your setting this, you probably want Test Event to be set to&#xA;InteractionUpdate." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                    </TunableVariant>
                                                    <TunableList name="skill_tags" class="TunableSet" display="Skill Tags" muid="2DC3E0B2B053A593" description="Skill tags to check against skill attached to the interaction,&#xA;determined by if the interaction identifies it in skill  &#xA;loot data, or if it is an associated skill in the outcome.&#xA;&#xA;If you are setting this and are not using affordances or lists &#xA;for filtering, you probably want to ensure that you set&#xA;interaction tags that are more or equally restrictive to either &#xA;one of Interaction_Super or Interaction_Mixer.  And do not&#xA;use Interaction_All, unless you really want to trigger &#xA;for both mixers and super interactions." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                        <TunableEnum type="Tag" class="TunableEnumWithFilter" default="INVALID" muid="6C6386AB649DC312" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" Deprecated="False" dynamic_entries_prefix="skill" filter="0" group="General" />
                                                    </TunableList>
                                                    <TunableList name="tags" class="TunableSet" display="Tags" muid="131CA1BAD996AA36" description="The Sim must have run either an interaction matching one of these Tags &#xA;or an affordance from the list of Affordances in this tunable." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                        <TunableEnum type="Tag" class="TunableEnumEntry" default="INVALID" muid="CFABB0D6AB0D74C" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" Deprecated="False" filter="0" group="General" />
                                                    </TunableList>
                                                    <TunableTuple name="target_filters" class="TunableTuple" display="Target Filters" muid="6674E33522C200" description="Restrictions on the target of this interaction." Deprecated="False" filter="0" group="General">
                                                        <TunableVariant type="None" name="object_states" class="OptionalTunable" default="disabled" display="Object States" muid="AB51B7A5D158BF99" description="Limit test success only to target objects that are in certain states" Deprecated="False" filter="0" group="General">
                                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="FDAA9D6D1C2ECB51" />
                                                            <TunableTuple name="enabled" class="BasicStateCheckFactory" display="Enabled" muid="BEC5719AADA04DB6" description="This option tests crafted item's tags against a list of possible&#xA;tags." Deprecated="False" filter="0" group="General">
                                                                <TunableVariant type="None" name="object_requirement" class="TunableVariant" default="any_object" display="Object Requirement" muid="625537A37CB2DD24" Deprecated="False" filter="0" group="General">
                                                                    <Tunable name="any_object" class="TunableExistance" display="Any Object" muid="F56E615CAB30B71E" />
                                                                    <TunableTuple name="definition" class="TunableTuple" display="Definition" muid="EC45560BE7B58D70" Deprecated="False" filter="0" group="General">
                                                                        <Tunable type="object" name="definition" class="TunableReference" display="Definition" muid="732AEF4C793D2FB6" description="The object must have this definition." allow_none="False" Deprecated="False" filter="0" group="General" />
                                                                    </TunableTuple>
                                                                    <TunableTuple name="tag" class="TunableTuple" display="Tag" muid="34EAA18C1A434C1B" Deprecated="False" filter="0" group="General">
                                                                        <TunableTuple name="tag" class="CraftTaggedItemFactory" display="Tag" muid="865C692C7F9C6A93" description="The object must have this tag." Deprecated="False" filter="0" group="General">
                                                                            <TunableList name="tag_set" class="TunableSet" display="Tag Set" muid="A69B6A86FAE3AFE8" description="The tag of objects we want to test ownership of" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                                <TunableEnum type="Tag" class="TunableEnumEntry" default="INVALID" muid="33EEF72FD2DD288C" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="What tag to test for" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                                            </TunableList>
                                                                            <TunableEnum type="TagTestType" name="test_type" class="TunableEnumEntry" default="CONTAINS_ANY_TAG_IN_SET" display="Test Type" muid="DF74484DA0721B79" static_entries="objects-object_tests.TagTestType" description="How to test the tags in the tag set against the objects on the lot." Deprecated="False" filter="0" group="General" />
                                                                        </TunableTuple>
                                                                    </TunableTuple>
                                                                </TunableVariant>
                                                                <TunableList name="state_set" class="TunableSet" display="State Set" muid="43FA2F22C9A4BF8F" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                    <Tunable type="object_state" class="TunableReference" muid="8B22D0CDAFE17EC6" description="What state to test for." allow_none="False" Deprecated="False" filter="0" group="General" />
                                                                </TunableList>
                                                                <TunableEnum type="StateTestType" name="test_type" class="TunableEnumEntry" default="CONTAINS_ANY_STATE_IN_SET" display="Test Type" muid="EF2B5BA50345F55B" static_entries="objects-object_tests.StateTestType" description="How to test the states in the state set against the objects in&#xA;the inventory." Deprecated="False" filter="0" group="General" />
                                                            </TunableTuple>
                                                        </TunableVariant>
                                                        <TunableVariant type="None" name="object_tags" class="OptionalTunable" default="disabled" display="Object Tags" muid="4565650B8B726449" description="Object tags for limiting test success to a subset of target &#xA;objects." Deprecated="False" filter="0" group="General">
                                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="C5E75DBDCA849125" />
                                                            <TunableTuple name="enabled" class="TunableTuple" display="Enabled" muid="9F7E71556D65FB9C" description="Target object tags and how they are tested." Deprecated="False" filter="0" group="General">
                                                                <TunableList name="tag_set" class="TunableSet" display="Tag Set" muid="3C0E8E048780A768" description="A set of tags to test the target object for." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                    <TunableEnum type="Tag" class="TunableEnumEntry" default="INVALID" muid="2DA40FD1DD1D2B3C" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="A tag to test the target object for." Deprecated="False" filter="0" group="General" />
                                                                </TunableList>
                                                                <TunableEnum type="TagTestType" name="test_type" class="TunableEnumEntry" default="CONTAINS_ANY_TAG_IN_SET" display="Test Type" muid="D7CE304E811AD855" static_entries="objects-object_tests.TagTestType" description="How to test the tags in the tag set against the &#xA;target object." Deprecated="False" filter="0" group="General" />
                                                            </TunableTuple>
                                                        </TunableVariant>
                                                    </TunableTuple>
                                                    <TunableEnum type="InteractionTestEvents" name="test_event" class="TunableEnumEntry" default="InteractionComplete" display="Test Event" muid="B4437A361078683F" static_entries="event_testing-tests_with_data.InteractionTestEvents" description="The event that we want to trigger this instance of the tuned&#xA;test on.&#xA;InteractionStart: Triggers when the interaction starts.&#xA;InteractionComplete: Triggers when the interaction ends. This is best&#xA;used with a one shot interaction. It will not get called if an interaction&#xA;is canceled. If you have a Sim parked in an interaction that you can&#xA;only exit via cancel, you will not hit this.&#xA;InteractionUpdate: Triggers on a 15 sim minute cadence from the&#xA;start of the interaction.  If the interaction ends before a cycle&#xA;is up it does not trigger.  Do not use this for short interactions&#xA;as it has a possibility of never getting an update for an&#xA;interaction." Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableTuple name="ranked_statistic" class="TunableRankedStatThresholdTest" display="Ranked Statistic" muid="625BAE5C2D24E07A" description="A test that checks whether or not a statistic is at a certain threshold for&#xA;a given participant." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="bool" name="must_have_ranked_stat" class="Tunable" default="False" display="Must Have Ranked Stat" muid="B57C5E0548C5150C" description="Setting this to True (checked) will ensure that this test only&#xA;passes if the tested Sim actually has the ranked statistic &#xA;referenced. If left False (unchecked), this test will evaluate &#xA;as if the Sim had the ranked statistic at the value of 0" Deprecated="False" filter="0" group="General" />
                                                    <TunableVariant type="None" name="num_participants" class="OptionalTunable" default="all_participants" display="Num Participants" muid="C5F6F5CCAC9C14D0" description="If disabled, all participants must pass this stat test.&#xA;If enabled, we test against this number for the number of participants&#xA;that need this value of stat to pass. " Deprecated="False" filter="0" group="General">
                                                        <Tunable name="all_participants" class="TunableExistance" display="All Participants" muid="E80756F9D5813B7C" />
                                                        <TunableTuple name="enabled" class="TunableThreshold" display="Enabled" muid="44AB780C67B39D3E" description="The threshold of the number of participants who must meet the &#xA;criteria individually." Deprecated="False" filter="0" group="General">
                                                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="CEEBC80DFC2C8351" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                            <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="B2396C994C567F96" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                    <Tunable type="statistic" name="ranked_stat" class="TunableReference" display="Ranked Stat" muid="E7E4862B438B06D3" description="The ranked stat we are operating on." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                    <Tunable type="bool" name="test_against_highest_rank" class="Tunable" default="False" display="Test Against Highest Rank" muid="566F02334959AEEC" description="When checked this test will only return True is the highest rank&#xA;achieved is in the threshold specified, and not the current rank." Deprecated="False" filter="0" group="General" />
                                                    <TunableVariant type="None" name="threshold" class="TunableVariant" default="value_threshold" display="Threshold" muid="82FD19379C00D8E1" description="The value or state threshold to test against." Deprecated="False" filter="0" group="General">
                                                        <TunableTuple name="state_value_threshold" class="TunableObjectStateValueThreshold" display="State Value Threshold" muid="56D08D1671148497" description="Value/comparison pair used to define a Threshold." Deprecated="False" filter="0" group="General">
                                                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="8DAD48F98C9D7282" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                            <Tunable type="object_state" name="value" class="TunableReference" display="Value" muid="DD4A2C351344CBF7" description="The state threshold for this test." allow_none="False" Deprecated="False" filter="0" group="General" restrict="ObjectStateValue" />
                                                        </TunableTuple>
                                                        <TunableTuple name="value_threshold" class="TunableThreshold" display="Value Threshold" muid="B1E813488BA6B103" description="The threshold to control availability based on the ranked&#xA;statistic's value." Deprecated="False" filter="0" group="General">
                                                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="81B16BE0602B6C41" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                            <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="1001E8BF544A5C47" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                </TunableTuple>
                                                <TunableTuple name="relationship" class="TunableRelationshipTest" display="Relationship" muid="2B43AB48D72064CB" description="Gate availability by a relationship status." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="bool" name="invert_num_relations" class="Tunable" default="False" display="Invert Num Relations" muid="E8F47DF7B2E1970F" description="If checked then we will check that your Num Relations is less than or&#xA;equal to the value rather than the other way around." Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="int" name="num_relations" class="Tunable" default="0" display="Num Relations" muid="9785D23EDF3E08F8" description="Number of Sims with specified relationships required to pass,&#xA;default(0) is all known relations.&#xA;&#xA;If value set to 1 or greater, then test is looking at least that&#xA;number of relationship to match the criteria.&#xA;&#xA;If value is set to 0, then test will pass if relationships being&#xA;tested must match all criteria of the test to succeed.  For&#xA;example, if interaction should not appear if any relationship&#xA;contains a relationship bit, this value should be 0." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                    <TunableTuple name="prohibited_relationship_bits" class="TunableTuple" display="Prohibited Relationship Bits" muid="1E3915EEA8D9A59" Deprecated="False" filter="0" group="General">
                                                        <TunableList name="match_all" class="TunableSet" display="Match All" muid="A5DE105E0947B194" description="All of these relationship bits must match to fail the test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                            <Tunable type="relbit" class="TunableReference" muid="33B2038C4BAC3E96" allow_none="False" Deprecated="False" filter="0" group="General" />
                                                        </TunableList>
                                                        <TunableList name="match_any" class="TunableSet" display="Match Any" muid="7BCF3723FD6BF518" description="If any of these relationship bits match the test will fail." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                            <Tunable type="relbit" class="TunableReference" muid="CCEF64B8CD1E1012" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                        </TunableList>
                                                    </TunableTuple>
                                                    <TunableTuple name="relationship_score_interval" class="TunableInterval" display="Relationship Score Interval" muid="FC78010745D82F36" description="The range that the relationship score must be within in order for&#xA;this test to pass." Deprecated="False" filter="0" group="General">
                                                        <Tunable type="float" name="lower_bound" class="TunableRange" default="-100.0" display="Lower Bound" muid="BF9D966B69FE4D88" min="-100.0" max="None" description="The lower bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                        <Tunable type="float" name="upper_bound" class="TunableRange" default="100.0" display="Upper Bound" muid="D070109CDFBBEB63" min="None" max="100.0" description="The upper bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                    </TunableTuple>
                                                    <TunableTuple name="required_relationship_bits" class="TunableTuple" display="Required Relationship Bits" muid="F4F8A6CAF6362A6E" Deprecated="False" filter="0" group="General">
                                                        <TunableList name="match_all" class="TunableSet" display="Match All" muid="85585C3CE8A66392" description="All of these relationship bits must be present to pass the&#xA;test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                            <Tunable type="relbit" class="TunableReference" muid="9730BDC1A7BD1B34" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                        </TunableList>
                                                        <TunableList name="match_any" class="TunableSet" display="Match Any" muid="4AFD08A0C5FFCE9F" description="Any of these relationship bits will pass the test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                            <Tunable type="relbit" class="TunableReference" muid="112626A44AFEB5FF" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                        </TunableList>
                                                    </TunableTuple>
                                                    <TunableList name="subject" class="TunableEnumFlags" default="Actor" display="Subject" muid="62523CD9A5511D9C" description="Owner(s) of the relationship(s)." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                        <TunableEnum type="ParticipantType" class="TunableEnumEntry" default="Invalid" muid="441F6E478E7DBCF4" static_entries="interactions.ParticipantType" Deprecated="False" filter="0" group="General" />
                                                    </TunableList>
                                                    <TunableList name="target_sim" class="TunableEnumFlags" default="AllRelationships" display="Target Sim" muid="28D030D26B69DC35" description="Target(s) of the relationship(s)." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                        <TunableEnum type="ParticipantTypeTargetAllRelationships" class="TunableEnumEntry" default="TargetSim" muid="EC29F28E327BE928" static_entries="event_testing-objective_tuning.ParticipantTypeTargetAllRelationships" Deprecated="False" filter="0" group="General" />
                                                    </TunableList>
                                                    <TunableEnum type="RelationshipTestEvents" name="test_event" class="TunableEnumEntry" default="AllRelationshipEvents" display="Test Event" muid="654A4188A6F0605F" static_entries="relationships-relationship_tests.RelationshipTestEvents" description="The event that we want to trigger this instance of the tuned test&#xA;on." Deprecated="False" filter="0" group="General" />
                                                    <TunableVariant type="None" name="test_incest" class="TunableVariant" default="disabled" display="Test Incest" muid="F6035F9CAD5AB399" description="Test for incest status. Test passes if this matches the two Sim's&#xA;incest status." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="7E0C064CE009D659" />
                                                        <Tunable name="is incestuous" class="TunableExistance" display="Is Incestuous" muid="F608DA91E6CB2E0E" />
                                                        <Tunable name="is not incestuous" class="TunableExistance" display="Is Not Incestuous" muid="DB3999C3F148B212" />
                                                    </TunableVariant>
                                                    <Tunable type="statistic" name="track" class="TunableReference" display="Track" muid="C798EFB3FF36004D" description="If set, the test will use the relationship score between sims for&#xA;this track. If unset, the track defaults to the global module&#xA;tunable REL_INSPECTOR_TRACK." allow_none="True" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="RelationshipTrack" />
                                                </TunableTuple>
                                                <TunableTuple name="relationship_bit" class="TunableRelationshipBitTest" display="Relationship Bit" muid="5C84B640B41956C9" description="A tunable event-driven test method to test when a relationship bit is&#xA;added or removed between a subject and target.&#xA;&#xA;If you just want to check if a bit exists (usually for gating),&#xA;use RelationshipTest instead." Deprecated="False" filter="0" group="General">
                                                    <TunableList name="relationship_bits" class="TunableSet" display="Relationship Bits" muid="7A8CFDC421D70952" min="1" description="Any of these relationship bits will pass the test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                        <Tunable type="relbit" class="TunableReference" muid="BE1BF5BCBB56C56B" allow_none="False" Deprecated="False" filter="0" group="General" />
                                                    </TunableList>
                                                    <TunableVariant type="None" name="test_event" class="TunableVariant" default="Bit Added" display="Test Event" muid="65B9F55BC12419CF" description="Event to listen to." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="Bit Added" class="TunableExistance" display="Bit Added" muid="94F8CC3D6B9F6C6D" />
                                                        <Tunable name="Bit Removed" class="TunableExistance" display="Bit Removed" muid="2B7549754FF36F40" />
                                                    </TunableVariant>
                                                </TunableTuple>
                                                <TunableTuple name="season_test" class="TunableSeasonTest" display="Season Test" muid="AF66E0FB6B01F081" description="SeasonTest will test if the current simulation time falls within the&#xA;specified test conditions." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="bool" name="requires_seasons_pack" class="Tunable" default="True" display="Requires Seasons Pack" muid="F6BBF2E7FAF54A2C" description="If checked, this test will require that the Seasons pack be &#xA;installed in order for the seasons test to pass.  If unchecked, &#xA;this test will automatically pass." Deprecated="False" filter="0" group="General" />
                                                    <TunableList name="seasons" class="TunableEnumSet" display="Seasons" muid="8D05B1F59E20C1C5" min="1" description="Season(s) that we must be in to pass the test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                        <TunableEnum type="SeasonType" class="TunableEnumEntry" default="SUMMER" muid="7A1BC5809ED130C" static_entries="seasons-seasons_enums.SeasonType" Deprecated="False" filter="0" group="General" />
                                                    </TunableList>
                                                    <TunableVariant type="None" name="time_of_season" class="OptionalTunable" default="disabled" display="Time Of Season" muid="95CD396CE4731934" description="Portion(s) of season(s) that we must be in to pass the test." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="9C1D8517989A651B" />
                                                        <TunableList name="enabled" class="TunableEnumSet" display="Enabled" muid="F290AF46CA368906" min="1" description="Portion(s) of season(s) that we must be in to pass the test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                            <TunableEnum type="SeasonSegment" class="TunableEnumEntry" default="EARLY" muid="2BCE997290FCA09B" static_entries="seasons-seasons_enums.SeasonSegment" Deprecated="False" filter="0" group="General" />
                                                        </TunableList>
                                                    </TunableVariant>
                                                </TunableTuple>
                                                <TunableTuple name="selected_aspiration_test" class="TunableSelectedAspirationTest" display="Selected Aspiration Test" muid="8077E3FA82759DC8" description="A tunable test that a Sim has the tuned Aspiration selected." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="aspiration" name="aspiration" class="TunableReference" display="Aspiration" muid="D435682CF99E6D3F" description="The aspiration that must be active." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                </TunableTuple>
                                                <TunableTuple name="selected_aspiration_track_test" class="TunableSelectedAspirationTrackTest" display="Selected Aspiration Track Test" muid="213970F965B9B98A" description="A tunable test that a Sim has the tuned AspirationTrack selected." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="aspiration_track" name="aspiration_track" class="TunableReference" display="Aspiration Track" muid="5964DFF913872D6D" description="The mood that must be active (or must not be active, if disallow is True)." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                </TunableTuple>
                                                <TunableTuple name="simoleon_value" class="TunableSimoleonsTest" display="Simoleon Value" muid="8691EA7F1039F6C6" description="Tests the Simoleon value of various contexts (property value, object value, net&#xA;worth, etc.)." Deprecated="False" filter="0" group="General">
                                                    <TunableVariant type="None" name="is_apartment" class="OptionalTunable" default="Don't_Test" display="Is Apartment" muid="48ED979E79321DC9" description="If checked, test will pass if the zone is an apartment. If&#xA;unchecked, test passes if the zone is NOT an apartment. Useful&#xA; in aspiration tuning, to discriminate between property&#xA;types in tests of lot value. Allows &quot;Own a House worth X&quot; and&#xA;&quot;Own an Apartment worth X&quot;" Deprecated="False" filter="0" group="General">
                                                        <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="CDCDDAB6D9C27DAF" />
                                                        <TunableTuple name="Is_or_is_not_apartment_zone" class="TunableTuple" display="Is Or Is Not Apartment Zone" muid="689DA4A80F0D2445" description="Test whether the zone is an apartment or not." Deprecated="False" filter="0" group="General">
                                                            <Tunable type="bool" name="consider_penthouse_an_apartment" class="Tunable" default="True" display="Consider Penthouse An Apartment" muid="517CAF356C83FD11" description="If enabled, we will consider penthouses to be&#xA;apartments when testing them against the apartment&#xA;check." Deprecated="False" filter="0" group="General" />
                                                            <Tunable type="bool" name="is_apartment" class="Tunable" default="True" display="Is Apartment" muid="3024386D4D2FD337" description="If checked, test will pass if the zone is an apartment.&#xA;If unchecked, test passes if the zone is NOT an&#xA;apartment." Deprecated="False" filter="0" group="General" />
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                    <TunableEnum type="SimoleonsTestEvents" name="test_event" class="TunableEnumEntry" default="AllSimoloenEvents" display="Test Event" muid="3F074D32164B9F01" static_entries="event_testing-test_variants.SimoleonsTestEvents" description="The event that we want to trigger this instance of the tuned test on. NOTE: OnClientConnect is&#xA;still used as a trigger regardless of this choice in order to update the UI." Deprecated="False" filter="0" group="General" />
                                                    <TunableVariant type="None" name="value_context" class="TunableVariant" default="net_worth" display="Value Context" muid="B4EFEF37624FA0C0" description="The context against which to test the value." Deprecated="False" filter="0" group="General">
                                                        <TunableTuple name="current_value" class="Tunable_SimoleonTestValueContextCurrentValue" display="Current Value" muid="BC7A2E458F8C7B36" Deprecated="False" filter="0" group="General">
                                                            <TunableEnum type="ParticipantTypeObject" name="subject" class="TunableEnumEntry" default="ParticipantType.Object" display="Subject" muid="A97CD35B7E8DB3B8" static_entries="interactions.ParticipantTypeObject" description="Who to examine for Simoleon values." Deprecated="False" filter="0" group="General" />
                                                        </TunableTuple>
                                                        <TunableTuple name="net_worth" class="Tunable_SimoleonTestValueContextNetWorth" display="Net Worth" muid="71F4522212B4B272" description="The net worth of the participants' households." Deprecated="False" filter="0" group="General">
                                                            <TunableEnum type="ParticipantTypeSingleSim" name="subject" class="TunableEnumEntry" default="ParticipantType.Actor" display="Subject" muid="A0849E576C732623" static_entries="interactions.ParticipantTypeSingleSim" description="Who to examine for Simoleon values." Deprecated="False" filter="0" group="General" invalid_entries="Invalid" />
                                                        </TunableTuple>
                                                        <TunableTuple name="property_only" class="Tunable_SimoleonTestValueContextPropertyOnly" display="Property Only" muid="58A62D1B370BBFDE" description="The property value of the participants' households." Deprecated="False" filter="0" group="General">
                                                            <TunableEnum type="ParticipantTypeSingleSim" name="subject" class="TunableEnumEntry" default="ParticipantType.Actor" display="Subject" muid="9CBCD7A042545611" static_entries="interactions.ParticipantTypeSingleSim" description="Who to examine for Simoleon values." Deprecated="False" filter="0" group="General" invalid_entries="Invalid" />
                                                        </TunableTuple>
                                                        <TunableTuple name="retail_funds" class="Tunable_SimoleonTestValueContextRetailFunds" display="Retail Funds" muid="8AC7687CCED7173" description="The total retail funds on the current retail lot. Returns a False test&#xA;result if the active lot is not a business or is not owned by the subject." Deprecated="False" filter="0" group="General">
                                                            <TunableEnum type="ParticipantTypeSingleSim" name="subject" class="TunableEnumEntry" default="ParticipantType.Actor" display="Subject" muid="7C9FEF9E3F6E41A4" static_entries="interactions.ParticipantTypeSingleSim" description="Who to examine for Simoleon values." Deprecated="False" filter="0" group="General" invalid_entries="Invalid" />
                                                        </TunableTuple>
                                                        <TunableTuple name="total_cash" class="Tunable_SimoleonTestValueContextTotalCash" display="Total Cash" muid="DA973F0545077BC3" description="The total funds for the participants' households." Deprecated="False" filter="0" group="General">
                                                            <TunableEnum type="ParticipantTypeSingleSim" name="subject" class="TunableEnumEntry" default="ParticipantType.Actor" display="Subject" muid="DBEB122F8A5725B6" static_entries="interactions.ParticipantTypeSingleSim" description="Who to examine for Simoleon values." Deprecated="False" filter="0" group="General" invalid_entries="Invalid" />
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                    <TunableTuple name="value_threshold" class="TunableThreshold" display="Value Threshold" muid="625381ACA38CA663" description="Amounts in Simoleons required to pass" Deprecated="False" filter="0" group="General">
                                                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="79D3974E299A511F" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                        <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="90D8F8E8838996FC" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                    </TunableTuple>
                                                </TunableTuple>
                                                <TunableTuple name="simoleons_earned" class="TunableSimoleonsEarnedTest" display="Simoleons Earned" muid="866CEFB252469123" description="Require the participant(s) to (each) earn a specific amount of Simoleons for a skill or tag on an object sold." Deprecated="False" filter="0" group="General">
                                                    <TunableVariant type="None" name="event_type_to_test" class="TunableVariant" default="none" display="Event Type To Test" muid="89FEA5F8808F4321" description="Test a skill for an event or tags on an object." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="none" class="TunableExistance" display="None" muid="9D75C14637974BC0" />
                                                        <TunableTuple name="skill_to_test" class="SkillTestFactory" display="Skill To Test" muid="2A3B1B3E2B89886F" Deprecated="False" filter="0" group="General">
                                                            <Tunable type="statistic" name="skill_to_test" class="TunableReference" display="Skill To Test" muid="75A46994D71A8174" description="The skill used to earn the Simoleons, if applicable." allow_none="False" Deprecated="False" filter="0" group="General" />
                                                        </TunableTuple>
                                                        <TunableTuple name="tags_to_test" class="TagSetTestFactory" display="Tags To Test" muid="5476442053FCAEE6" Deprecated="False" filter="0" group="General">
                                                            <TunableList name="tags_to_test" class="TunableSet" display="Tags To Test" muid="F2884A0A8ACE9757" description="The tags on the object for selling." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                <TunableEnum type="Tag" class="TunableEnumEntry" default="INVALID" muid="E7F5588329441627" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" Deprecated="False" filter="0" group="General" />
                                                            </TunableList>
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                    <TunableVariant type="None" name="household_fund_threshold" class="OptionalTunable" default="disabled" display="Household Fund Threshold" muid="F42478326721E467" description="Restricts test success based on household funds." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="82859ECDC8A4501E" />
                                                        <TunableTuple name="enabled" class="TunableTuple" display="Enabled" muid="4B8B0EB3E83182B9" description="Household fund threshold and moment of evaluation." Deprecated="False" filter="0" group="General">
                                                            <Tunable type="bool" name="test_before_earnings" class="Tunable" default="False" display="Test Before Earnings" muid="E3918993FA499FE2" description="If True, threshold will be evaluated before funds were &#xA;updated with earnings." Deprecated="False" filter="0" group="General" />
                                                            <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="5C3ACD390CF79B49" description="Amount of simoleons in household funds required to pass." Deprecated="False" filter="0" group="General">
                                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="D9FD76143667AC8D" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="598FAFE4EB41EE8" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                            </TunableTuple>
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                    <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="B9E58B151DAB8D72" description="Amount in Simoleons required to pass" Deprecated="False" filter="0" group="General">
                                                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="78C6DD727A0AC17A" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                        <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="BB57437341407CF5" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                    </TunableTuple>
                                                </TunableTuple>
                                                <TunableTuple name="situation_running_test" class="TunableSituationRunningTest" display="Situation Running Test" muid="7178EF2F84581A36" description="A test to see if the participant is part of any situations that are&#xA;running that satisfy the conditions of the test." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="bool" name="check_for_initiating_sim" class="Tunable" default="False" display="Check For Initiating Sim" muid="2B6864688B9C55BB" description="If checked, the situation must be initiated by the tuned Participant." Deprecated="False" filter="0" group="General" />
                                                    <TunableVariant type="None" name="level" class="OptionalTunable" default="disabled" display="Level" muid="10019ECB521E2ED9" description="A check for the level of the situation we are checking." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="E7C212215715551D" />
                                                        <TunableTuple name="enabled" class="TunableThreshold" display="Enabled" muid="60AF0FBCF0A4C5D7" description="A check for the level of the situation we are checking." Deprecated="False" filter="0" group="General">
                                                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="A7F2A742544F069B" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                            <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="8E332932D06AD962" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                    <TunableVariant type="None" name="participant" class="OptionalTunable" default="disabled" display="Participant" muid="C901C30B6D79A603" description="The subject of this situation test." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="BA2BB89435EE8819" />
                                                        <TunableEnum type="ParticipantType" name="enabled" class="TunableEnumEntry" default="Actor" display="Enabled" muid="2FEE006CFDF404A7" static_entries="interactions.ParticipantType" description="The subject of this situation test." Deprecated="False" filter="0" group="General" />
                                                    </TunableVariant>
                                                    <TunableVariant type="None" name="situation_blacklist" class="OptionalTunable" default="disabled" display="Situation Blacklist" muid="CEAB1041B69B5AA3" description="Blacklisted situations, specified by this set of references or by&#xA;tag in Tag Blacklist, will cause this test to fail." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="301DBCC4933E3983" />
                                                        <TunableList name="enabled" class="TunableSet" display="Enabled" muid="891EDE93C1763868" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                            <Tunable type="situation" class="TunableReference" muid="8CEBFFA66CB5A0BA" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                        </TunableList>
                                                    </TunableVariant>
                                                    <TunableVariant type="None" name="situation_whitelist" class="OptionalTunable" default="disabled" display="Situation Whitelist" muid="6FB9AC4E20700D1E" description="Only whitelisted situations, specified by this set of references or&#xA;by tags in Tag Whitelist, can cause this test to pass. If no&#xA;situations are specified in this whitelist, all situations are&#xA;considered whitelisted." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="7EE1D3577E393E4C" />
                                                        <TunableList name="enabled" class="TunableSet" display="Enabled" muid="3AA606D1E4B4B00" description="Only whitelisted situations, specified by this set of references or&#xA;by tags in Tag Whitelist, can cause this test to pass. If no&#xA;situations are specified in this whitelist, all situations are&#xA;considered whitelisted." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                            <Tunable type="situation" class="TunableReference" muid="6CBA7255A507924B" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                        </TunableList>
                                                    </TunableVariant>
                                                    <TunableList name="tag_blacklist" class="TunableSet" display="Tag Blacklist" muid="B89DFE2570DF76B9" description="Blacklisted situations, specified by this set of tags or by&#xA;references in Situation Tag Blacklist, will cause this test to&#xA;fail." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                        <TunableEnum type="Tag" class="TunableEnumWithFilter" default="INVALID" muid="CCA01ADD0966007F" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" Deprecated="False" dynamic_entries_prefix="situation" filter="0" group="General" pack_safe="True" />
                                                    </TunableList>
                                                    <TunableVariant type="None" name="tag_whitelist" class="OptionalTunable" default="disabled" display="Tag Whitelist" muid="734AFA047570D07E" description="Only whitelisted situations, specified by this set of tags or by&#xA;references in Situation Whitelist, can cause this test to pass. If&#xA;this whitelist is not enabled, all situations are considered&#xA;whitelisted." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="E0B084A3F1AFA350" />
                                                        <TunableList name="enabled" class="TunableSet" display="Enabled" muid="A44AFC9FF728F4F2" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                            <TunableEnum type="Tag" class="TunableEnumWithFilter" default="INVALID" muid="CFF734B0E1793404" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" Deprecated="False" dynamic_entries_prefix="situation" filter="0" group="General" pack_safe="True" />
                                                        </TunableList>
                                                    </TunableVariant>
                                                    <TunableEnum type="SituationRunningTestEvents" name="test_event" class="TunableEnumEntry" default="SituationEnded" display="Test Event" muid="FF222D62F7D2C3A3" static_entries="event_testing-test_variants.SituationRunningTestEvents" description="The test event that this test will run on when tuned within an&#xA;objective or the main goal trigger of a sitaution.&#xA;&#xA;If you are tuning this on an interaction then it will do nothing." Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableTuple name="skill_tag" class="TunableSkillTagThresholdTest" display="Skill Tag" muid="811255A753806407" description="A tunable test method that checks the TAGS of ALL THE PARTICIPANTS SKILLS each against a threshold." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="int" name="skill_quantity" class="Tunable" default="0" display="Skill Quantity" muid="37B19AC0376639BE" description="The minimum number of skills at or above this level required to pass." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                    <TunableEnum type="Tag" name="skill_tag" class="TunableEnumEntry" default="INVALID" display="Skill Tag" muid="EF62EBC7B3BE25CF" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="What tag to test for." Deprecated="False" filter="0" group="General" invalid_entries="INVALID" />
                                                    <TunableTuple name="skill_threshold" class="TunableThreshold" display="Skill Threshold" muid="EE8C8977F00C7684" description="The threshold level to test of each skill." Deprecated="False" filter="0" group="General">
                                                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="1B96102BD448F7A4" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                        <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="8633C0626270942A" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                    </TunableTuple>
                                                    <Tunable type="bool" name="test_only_changed_skill" class="Tunable" default="False" display="Test Only Changed Skill" muid="8BB1F3879911F88D" description="If checked then we will only test the skill that actually changed." Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableTuple name="statistic" class="TunableStatThresholdTest" display="Statistic" muid="A0262DE77AB6C344" description="A test that checks whether or not a statistic is at a certain threshold for&#xA;a given participant. It can also test whether or not the participant has the&#xA;statistic explicitly added on them." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="bool" name="must_have_stat" class="Tunable" default="False" display="Must Have Stat" muid="B15D015A01B58BE" description="Setting this to True (checked) will ensure that this test only&#xA;passes if the tested Sim actually has the statistic referenced. If&#xA;left False (unchecked), this test will evaluate as if the Sim had&#xA;the statistic at the value of 0" Deprecated="False" filter="0" group="General" />
                                                    <TunableVariant type="None" name="score_to_use" class="TunableVariant" default="user_value" display="Score To Use" muid="A83622F7950CF9E5" description="Depending on the choice, this decides what value to use for the &#xA;threshold comparison." Deprecated="False" filter="0" group="General">
                                                        <TunableTuple name="points" class="Tunable_PointsValue" display="Points" muid="37223714AE3E0066" description="Use the raw points for the comparison in the test." Deprecated="False" filter="0" group="General" />
                                                        <TunableTuple name="rank" class="Tunable_RankValue" display="Rank" muid="431D56AFAE1BF38A" description="Use the rank value for the comparison in the test." Deprecated="False" filter="0" group="General" />
                                                        <TunableTuple name="user_value" class="Tunable_UserValue" display="User Value" muid="EE8CBB79A674DEE" description="Use the user value for the comparison in the test." Deprecated="False" filter="0" group="General">
                                                            <Tunable type="bool" name="highest_level_reached_instead" class="Tunable" default="False" display="Highest Level Reached Instead" muid="3A4C7FD2F0D05C3E" description="If checked this will test against the highest level reached. This&#xA;currently only works with Ranked Statistics. Other statistics do&#xA;not have a notion of highest level reached. If we are using&#xA;something that doesn't support highest level reached it will &#xA;test against the current level instead." Deprecated="False" filter="0" group="General" />
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                    <Tunable type="statistic" name="stat" class="TunableReference" display="Stat" muid="3E5C7D156DCA25C8" description="The stat we are operating on." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                    <TunableVariant type="None" name="threshold" class="TunableVariant" default="value_threshold" display="Threshold" muid="A6BC9EFEC43B3291" description="The value or state threshold to test against." Deprecated="False" filter="0" group="General">
                                                        <TunableTuple name="state_value_threshold" class="TunableObjectStateValueThreshold" display="State Value Threshold" muid="3B5E130825B821E5" description="Value/comparison pair used to define a Threshold." Deprecated="False" filter="0" group="General">
                                                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="3A145BE636E3C32A" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                            <Tunable type="object_state" name="value" class="TunableReference" display="Value" muid="20629CD42369C85B" description="The state threshold for this test." allow_none="False" Deprecated="False" filter="0" group="General" restrict="ObjectStateValue" />
                                                        </TunableTuple>
                                                        <TunableTuple name="value_threshold" class="TunableThreshold" display="Value Threshold" muid="26432BBA4701D899" description="The threshold to control availability based on the statistic's&#xA;value." Deprecated="False" filter="0" group="General">
                                                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="FBC35443765CE255" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                            <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="A51D51EC182D19C7" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                </TunableTuple>
                                                <TunableTuple name="trait" class="TunableTraitTest" display="Trait" muid="C87FE2EB3D069B31" description="Test to require a Sim to have or not have certain specific traits." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="bool" name="apply_thresholds_on_individual_basis" class="Tunable" default="True" display="Apply Thresholds On Individual Basis" muid="B50F07C015C5AC6F" description="If checked then Num Whitelist Required and Num Blacklist Allowed&#xA;will be applied to each individual participant from the subject.&#xA;If unchecked then it will apply the values to the total whitelist&#xA;and blacklist matches on the group.&#xA;&#xA;IMPORTANT!!!&#xA;In the case of objectives this should probably be set to false&#xA;since we know that this is coming from only one sim and that we&#xA;want to use the value that comes out of the test result numeric.&#xA;This isn't just locked to being this value since there are valid&#xA;cases within that system when you are looking at a group of sims&#xA;and could want to test that one of your sims passes.  Ex. Having&#xA;a ghost sim in the household." Deprecated="False" filter="0" group="General" />
                                                    <TunableList name="blacklist_trait_types" class="TunableEnumSet" display="Blacklist Trait Types" muid="D8C8091B23EC615E" description="The Sim is required to not have traits of these types to pass this &#xA;test. Should Num Blacklist Allowed be specified, then the Sim is &#xA;allowed to have up to that amount of blacklisted traits before &#xA;failing this test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                        <TunableEnum type="TraitType" class="TunableEnumEntry" default="PERSONALITY" muid="471BF887B6176D17" static_entries="traits-trait_type.TraitType" Deprecated="False" filter="0" group="General" />
                                                    </TunableList>
                                                    <TunableList name="blacklist_traits" class="TunableList" display="Blacklist Traits" muid="2769F402EF2973E9" description="The is required to not have traits from this list in order to pass&#xA;this test. Should num_blacklist_allowed be specified, then the Sim&#xA;is allowed to have up to that amount of blacklisted traits before&#xA;failing this test." Deprecated="False" filter="0" group="General">
                                                        <Tunable type="trait" class="TunableReference" muid="FA3B6FC1803DD9F8" description="A blacklist trait." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                    </TunableList>
                                                    <Tunable type="int" name="num_blacklist_allowed" class="Tunable" default="0" display="Num Blacklist Allowed" muid="60572F2DB5D3D1CF" description="The threshold of blacklist traits owned by the specified Sim that&#xA;will trigger a test failure." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="int" name="num_whitelist_required" class="Tunable" default="1" display="Num Whitelist Required" muid="C9AA90AD08B07BE1" description="The number of whitelist traits that the specified Sim is required to&#xA;have in order to pass this test." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                    <TunableEnum type="ParticipantTypeActorHousehold" name="subject" class="TunableEnumEntry" default="Actor" display="Subject" muid="F321110D0E9EACA7" static_entries="event_testing-objective_tuning.ParticipantTypeActorHousehold" description="Who or what to apply this test to" Deprecated="False" filter="0" group="General" />
                                                    <TunableList name="whitelist_trait_types" class="TunableEnumSet" display="Whitelist Trait Types" muid="23665AF0E9F8E924" description="The Sim is required to have the specified number of traits with &#xA;these types in order to pass the test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                        <TunableEnum type="TraitType" class="TunableEnumEntry" default="PERSONALITY" muid="17E7234FDD411D30" static_entries="traits-trait_type.TraitType" Deprecated="False" filter="0" group="General" />
                                                    </TunableList>
                                                    <TunableList name="whitelist_traits" class="TunableList" display="Whitelist Traits" muid="323505934DD16372" description="The Sim is required to have the specified number of traits from this&#xA;list in order to pass the test." Deprecated="False" filter="0" group="General">
                                                        <Tunable type="trait" class="TunableReference" muid="64D5F55AD3E4D966" description="A whitelist trait. Please note: for pack-safe entries that are&#xA;not loaded, the game will behave as if the entry doesn't exist.&#xA;This allows you to specify a pack trait and required count of 1&#xA;and always fail the test should the appropriate pack not be&#xA;installed." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                    </TunableList>
                                                </TunableTuple>
                                                <TunableTuple name="unlock_earned" class="TunableUnlockedTest" display="Unlock Earned" muid="9A70CAAD2AE69FAF" description="Require the participant to have a specific achievement, aspiration, or&#xA;career." Deprecated="False" filter="0" group="General">
                                                    <TunableVariant type="None" name="unlock_to_test" class="TunableVariant" default="achievement" display="Unlock To Test" muid="44F253523675C9E9" description="The unlocked aspiration, career, achievement, or milestone want to test for." Deprecated="False" filter="0" group="General">
                                                        <TunableTuple name="achievement" class="AchievementEarnedFactory" display="Achievement" muid="FB8D21A3919C8219" description="This option tests for completion of a tuned Achievement." Deprecated="False" filter="0" group="General">
                                                            <Tunable type="achievement" name="achievement" class="TunableReference" display="Achievement" muid="A4D865CB30F5163" description="The achievement we want to test." allow_none="False" Deprecated="False" filter="0" group="General" />
                                                            <Tunable type="bool" name="negate" class="Tunable" default="False" display="Negate" muid="7C700BAA7E55AB75" description="If enabled, we will require that the achievement is NOT unlocked." Deprecated="False" filter="0" group="General" />
                                                        </TunableTuple>
                                                        <TunableTuple name="aspiration" class="AspirationEarnedFactory" display="Aspiration" muid="ABA74EBF40524AE0" description="This option tests for completion of a tuned Aspiration." Deprecated="False" filter="0" group="General">
                                                            <Tunable type="aspiration" name="aspiration" class="TunableReference" display="Aspiration" muid="6ACEC94187DA44AF" description="The aspiration we want to test." allow_none="False" Deprecated="False" filter="0" group="General" />
                                                            <Tunable type="bool" name="negate" class="Tunable" default="False" display="Negate" muid="6C54F356E9A25451" description="If enabled, we will require that the aspiration is NOT unlocked." Deprecated="False" filter="0" group="General" />
                                                        </TunableTuple>
                                                        <TunableTuple name="aspiration_unlocked" class="TunableTestAspirationUnlock" display="Aspiration Unlocked" muid="4C04C330F3906CAA" description="Test the actual aspiration that is being unlocked." Deprecated="False" filter="0" group="General">
                                                            <TunableVariant type="None" name="check_aspiration_type" class="OptionalTunable" default="disabled" display="Check Aspiration Type" muid="1836B30EB55AA16A" description="If enabled then we will check the aspiration type of the aspiration&#xA;that was just unlocked." Deprecated="False" filter="0" group="General">
                                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="351153CCAF50A0F" />
                                                                <TunableEnum type="AspriationType" name="enabled" class="TunableEnumEntry" default="FULL_ASPIRATION" display="Enabled" muid="8581659881A4A301" static_entries="aspirations-aspiration_types.AspriationType" description="The aspiration type that we are checking if it just completed." Deprecated="False" filter="0" group="General" />
                                                            </TunableVariant>
                                                            <TunableVariant type="None" name="check_complete_only_in_sequence" class="OptionalTunable" default="disabled" display="Check Complete Only In Sequence" muid="B0E870BA810C7411" description="If enabled then we will check that the aspiration that was just&#xA;unlocked has a specific value of complete only in sequence set." Deprecated="False" filter="0" group="General">
                                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="C6C5FA4005F08D25" />
                                                                <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="4CA3618B10FB1F1F" description="If complete only in sequence should be also be set or not." Deprecated="False" filter="0" group="General" />
                                                            </TunableVariant>
                                                        </TunableTuple>
                                                        <TunableTuple name="aspirations_available" class="TunableTestAspirationsAvailable" display="Aspirations Available" muid="DC64C4E416A3BE64" description="Test if there is still an aspiration that can be unlocked." Deprecated="False" filter="0" group="General">
                                                            <Tunable type="bool" name="negate" class="Tunable" default="False" display="Negate" muid="2A47BC3C59E58437" description="If checked then this test will pass if all aspirations are&#xA;complete otherwise it will pass if there is a still an aspiration&#xA;that can be unlocked." Deprecated="False" filter="0" group="General" />
                                                        </TunableTuple>
                                                        <TunableTuple name="household_milestone_earned" class="TunableTestHouseholdMilestoneEarned" display="Household Milestone Earned" muid="E6164AE2E161E559" description="Helper class for Unlock Earned test that tests a reference to a household milestone." Deprecated="False" filter="0" group="General">
                                                            <Tunable type="household_milestone" name="household_milestone" class="TunableReference" display="Household Milestone" muid="F5DA757D9000DAEE" description="The household milestone to check unlock status against. " allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                            <Tunable type="bool" name="negate" class="Tunable" default="False" display="Negate" muid="C9C467E2E2291889" description="If checked then this test will pass if the milestone is not&#xA;complete otherwise it will pass if it's been earned." Deprecated="False" filter="0" group="General" />
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                </TunableTuple>
                                                <TunableTuple name="unlock_tracker_amount" class="TunableUnlockTrackerAmountTest" display="Unlock Tracker Amount" muid="45C17C5008CDFE79" description="Test to see if a sim has unlocked a number of things from the Unlock Tracker." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="Tag" name="test_tag" class="TunableEnumWithFilter" default="INVALID" display="Test Tag" muid="C8FE97739EE5758F" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="This test will look how many items with this tag have been unlocked." binary_type="uint32" Deprecated="False" dynamic_entries_prefix="recipe|spell" filter="0" group="General" invalid_entries="INVALID" pack_safe="True" />
                                                    <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="B82B3F3F081AFC7E" description="The required number of specified things required to pass the test." Deprecated="False" filter="0" group="General">
                                                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="164088B0586AB445" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                        <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="91A9F1C6DE9EF372" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                    </TunableTuple>
                                                </TunableTuple>
                                                <TunableTuple name="whim_completed_test" class="TunableWhimCompletedTest" display="Whim Completed Test" muid="D50061205A87CFD7" description="This test checks for a specific tuned Whim Goal to have been completed, or&#xA;if not specific goal is tuned here, then completing any Whim Goal will&#xA;result in this test firing and resulting in a True result." Deprecated="False" filter="0" group="General">
                                                    <TunableVariant type="None" name="whim_to_check" class="OptionalTunable" default="Any_Whim" display="Whim To Check" muid="ADA8CF7C83236758" description="Define them whim that is to be completed in order to pass the test." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="Any_Whim" class="TunableExistance" display="Any Whim" muid="82E5C31AC4D637DD" />
                                                        <Tunable type="situation_goal" name="Specific_Whim" class="TunableReference" display="Specific Whim" muid="60ED11BFCC1B3C37" description="This is the whim to check for matching the completed whim,&#xA;resulting in passing test." allow_none="False" Deprecated="False" filter="0" group="General" />
                                                    </TunableVariant>
                                                </TunableTuple>
                                                <TunableTuple name="zone" class="TunableZoneTest" display="Zone" muid="39822A0730179D2E" description="A tunable factory that tests properties of a particular zone." Deprecated="False" filter="0" group="General">
                                                    <TunableVariant type="None" name="zone_source" class="TunableVariant" default="use_current_zone" display="Zone Source" muid="1D071A3197D27AA7" description="Which zone we want to test." Deprecated="False" filter="0" group="General">
                                                        <TunableTuple name="use_current_zone" class="TunableActiveZone" display="Use Current Zone" muid="C73FC01E2A8E6920" description="Get the active zone." Deprecated="False" filter="0" group="General" />
                                                        <TunableTuple name="use_participant_home_zone" class="TunableParticipantHomeZone" display="Use Participant Home Zone" muid="9C3F088B2708A143" description="Get a participant's home zone. Can be None if they don't have one." Deprecated="False" filter="0" group="General">
                                                            <TunableEnum type="ParticipantTypeSingleSim" name="participant" class="TunableEnumEntry" default="Actor" display="Participant" muid="D5B7352305D7B16B" static_entries="interactions.ParticipantTypeSingleSim" description="Test against the participant's home zone. Townies' home zone will&#xA;be None." Deprecated="False" filter="0" group="General" />
                                                        </TunableTuple>
                                                        <TunableTuple name="use_pick_info" class="TunablePickInfoZone" display="Use Pick Info" muid="808ABB0847365011" description="Get the zone of the lot the user clicked on." Deprecated="False" filter="0" group="General" />
                                                        <TunableTuple name="use_picked_zone_ids" class="TunablePickedZoneIds" display="Use Picked Zone Ids" muid="9C667D2B6BD517EC" description="Get the zone from the interaction's picked_zone_ids participant. Usually&#xA;comes from a picker." Deprecated="False" filter="0" group="General" />
                                                    </TunableVariant>
                                                    <TunableTuple name="zone_tests" class="TunableTuple" display="Zone Tests" muid="905FCE3B0176B855" description="The tests we wish to run on the zone in question." Deprecated="False" filter="0" group="General">
                                                        <TunableVariant type="None" name="business_tests" class="OptionalTunable" default="Don't_Test" display="Business Tests" muid="A181493B4B2578F" description="If enabled, test if the specified zone is a business or not." Deprecated="False" filter="0" group="General">
                                                            <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="66ABEDFF9054305E" />
                                                            <TunableVariant type="None" name="enabled" class="TunableVariant" default="is_business" display="Enabled" muid="AB883A97CA2CBA19" description="Test if the zone is a business, an open business, or a&#xA;closed business." Deprecated="False" filter="0" group="General">
                                                                <TunableTuple name="is_business" class="Tunable_IsBusinessTest" display="Is Business" muid="6EE743E1DA21DD35" description="Test if the zone specified by the zone id is a business or not." Deprecated="False" filter="0" group="General" />
                                                                <TunableTuple name="is_business_open" class="Tunable_IsBusinessOpenTest" display="Is Business Open" muid="4B6931A38E6F43BD" description="Test if the zone specified by the zone id is an open business." Deprecated="False" filter="0" group="General" />
                                                            </TunableVariant>
                                                        </TunableVariant>
                                                        <TunableVariant type="None" name="is_apartment" class="OptionalTunable" default="Don't_Test" display="Is Apartment" muid="90601B94650A4C4C" description="If checked, test will pass if the zone is an apartment. If&#xA;unchecked, test passes if the zone is NOT an apartment. Useful&#xA; in aspiration tuning, to discriminate between property&#xA;types in tests of lot value. Allows &quot;Own a House worth X&quot; and&#xA;&quot;Own an Apartment worth X&quot;" Deprecated="False" filter="0" group="General">
                                                            <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="EC4E9C855150E706" />
                                                            <TunableTuple name="Is_or_is_not_apartment_zone" class="TunableTuple" display="Is Or Is Not Apartment Zone" muid="B3A0C42E1459E28E" description="Test whether the zone is an apartment or not." Deprecated="False" filter="0" group="General">
                                                                <Tunable type="bool" name="consider_penthouse_an_apartment" class="Tunable" default="True" display="Consider Penthouse An Apartment" muid="12DB6A98897D3D5C" description="If enabled, we will consider penthouses to be&#xA;apartments when testing them against the apartment&#xA;check." Deprecated="False" filter="0" group="General" />
                                                                <Tunable type="bool" name="is_apartment" class="Tunable" default="True" display="Is Apartment" muid="389CB3BAF8BC41EB" description="If checked, test will pass if the zone is an apartment.&#xA;If unchecked, test passes if the zone is NOT an&#xA;apartment." Deprecated="False" filter="0" group="General" />
                                                            </TunableTuple>
                                                        </TunableVariant>
                                                        <TunableVariant type="None" name="is_penthouse" class="OptionalTunable" default="disabled" display="Is Penthouse" muid="102BD5F3E71AD810" description="If enabled, test whether or not the current zone is a penthouse." Deprecated="False" filter="0" group="General">
                                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="5F3791FD583A8D74" />
                                                            <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="E521E1D61E482056" description="If checked, the zone must be a penthouse. If unchecked, the&#xA;zone cannot be a penthouse." Deprecated="False" filter="0" group="General" />
                                                        </TunableVariant>
                                                        <Tunable type="bool" name="use_source_venue" class="Tunable" default="False" display="Use Source Venue" muid="E98FCA80AC1EA0A8" description="If enabled, the test will test the source venue instead of the active&#xA;venue.  For example, the Community Lot instead of the active Marketplace.&#xA;Testing the active venue is the default." Deprecated="False" filter="0" group="General" />
                                                        <TunableVariant type="None" name="venue_tier" class="OptionalTunable" default="disabled" display="Venue Tier" muid="E29E85262A910412" description="If checked, will verify that the zone's venue is at the tuned &#xA;tier. If &quot;no valid tier&quot; is selected, this test will be True&#xA;if either the current venue doesn't have tiers or if it does but&#xA;it doesn't currently meet any of their requirements." Deprecated="False" filter="0" group="General">
                                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="CEFF0014584C5B23" />
                                                            <TunableVariant type="None" name="enabled" class="TunableVariant" default="none" display="Enabled" muid="344622471ED3E37D" description="                    " Deprecated="False" filter="0" group="General">
                                                                <Tunable name="no_valid_tier" class="TunableExistance" display="No Valid Tier" muid="D88E3802DFE5F17E" />
                                                                <Tunable name="none" class="TunableExistance" display="None" muid="982C0D59E6A67F9C" />
                                                                <Tunable type="int" name="tier_number" class="TunableRange" default="0" display="Tier Number" muid="80C90377D83351F1" min="0" max="None" description="The index of the tier to test. This test will return&#xA;true if this tier is active and false otherwise. This&#xA;should be the index of the tier in the tier list and not&#xA;any player-facing index. For instance, if a tier list&#xA;had a single tier, that tier would be 0, and if a second&#xA;tier were added, that second tier would be 1." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                            </TunableVariant>
                                                        </TunableVariant>
                                                        <TunableVariant type="None" name="venue_type" class="OptionalTunable" default="Don't_Test" display="Venue Type" muid="51E11A91E073FDF1" description="If checked, will verify the zone's venue type is allowed or&#xA;disallowed." Deprecated="False" filter="0" group="General">
                                                            <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="E46E333DBD8DB955" />
                                                            <TunableTuple name="enabled" class="TunableWhiteBlackList" display="Enabled" muid="AA50BFA8553EC203" description="The zone's venue type must pass the whitelist and blacklist&#xA;to pass the test." Deprecated="False" filter="0" group="General">
                                                                <TunableVariant type="None" name="blacklist" class="OptionalTunable" default="nothing" display="Blacklist" muid="C18988D8187B116A" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is not in the blacklist. If no blacklist is&#xA;specified, no items are disallowed." Deprecated="False" filter="0" group="General">
                                                                    <Tunable name="nothing" class="TunableExistance" display="Nothing" muid="1242894F341B1BCC" />
                                                                    <TunableTuple name="specify" class="TunableBlacklist" display="Specify" muid="C4F0955C74DBF2E" description="A tunable blacklist." Deprecated="False" filter="0" group="General">
                                                                        <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="138D87967A9C64A5" description="Blacklisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                            <Tunable type="venue" class="TunableReference" muid="A1927A93D61496F5" description="Allowed and disallowed venue types." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                                        </TunableList>
                                                                        <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="FEABC1696882E093" description="Tunable option for how many items must be in the blacklist&#xA;for the blacklist to fail when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                            <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="88017EB345732C29" />
                                                                            <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="83CFF65FC41E85B4" description="When testing a collection of items, the number of items in&#xA;that collection that are in the blacklist must pass this&#xA;threshold test for the blacklist to disallow them all." Deprecated="False" filter="0" group="General">
                                                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="2387EA6A9B718C06" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                                <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="2586D1D17CA62D70" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                            </TunableTuple>
                                                                        </TunableVariant>
                                                                    </TunableTuple>
                                                                </TunableVariant>
                                                                <TunableVariant type="None" name="whitelist" class="OptionalTunable" default="everything" display="Whitelist" muid="8F88EA967753F103" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is in the whitelist. If no whitelist is&#xA;specified, all items are allowed." Deprecated="False" filter="0" group="General">
                                                                    <Tunable name="everything" class="TunableExistance" display="Everything" muid="EB73584875FC58B5" />
                                                                    <TunableTuple name="specify" class="TunableWhitelist" display="Specify" muid="EB663771068C0768" description="A tunable whitelist." Deprecated="False" filter="0" group="General">
                                                                        <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="631EFB6C26179F62" description="Tunable option for how many items must be in the whitelist&#xA;for the whitelist to pass when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                            <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="2798132A120FE5DF" />
                                                                            <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="9766153891004E88" description="When testing a collection of items, the number of items in&#xA;that collection that are in the whitelist must pass this&#xA;threshold test for the whitelist to allow them all." Deprecated="False" filter="0" group="General">
                                                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="BD5D4F1E84CBF49A" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                                <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="3AB5ADE92680BDF6" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                            </TunableTuple>
                                                                        </TunableVariant>
                                                                        <TunableList name="whitelist" class="TunableSet" display="Whitelist" muid="F04943B5BA3524C5" description="Whitelisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                            <Tunable type="venue" class="TunableReference" muid="251CC8A2A51FB01B" description="Allowed and disallowed venue types." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                                        </TunableList>
                                                                    </TunableTuple>
                                                                </TunableVariant>
                                                            </TunableTuple>
                                                        </TunableVariant>
                                                        <TunableVariant type="None" name="was_owner_household_changed" class="OptionalTunable" default="Don't_Test" display="Was Owner Household Changed" muid="C1C62274D00EA7CC" description="If enabled, test if the lot owner household for the specified zone &#xA;was changed between when the zone was saved and when it was loaded." Deprecated="False" filter="0" group="General">
                                                            <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="26D8870B3B466215" />
                                                            <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="EAD0C055209313FE" description="If checked,  test will pass if the zone's owner household was changed &#xA;between when the zone was saved and when it was loaded. &#xA;If unchecked, test will pass if the zone's owner household was NOT changed &#xA;between when the zone was saved and when it was loaded. " Deprecated="False" filter="0" group="General" />
                                                        </TunableVariant>
                                                        <TunableVariant type="None" name="world_tests" class="OptionalTunable" default="disabled" display="World Tests" muid="E2ECD5D5E8D36232" description="If enabled, we test if specified zone is or is not in the specified world(s)" Deprecated="False" filter="0" group="General">
                                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="4A5899A0C9254ED" />
                                                            <TunableTuple name="enabled" class="TunableWhiteBlackList" display="Enabled" muid="90E427B811156912" description="Pass if zone is in one of the worlds in the whitelist,&#xA;or fail if it is any of the worlds in the blacklist." Deprecated="False" filter="0" group="General">
                                                                <TunableVariant type="None" name="blacklist" class="OptionalTunable" default="nothing" display="Blacklist" muid="DD3EEF7B4423CFD8" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is not in the blacklist. If no blacklist is&#xA;specified, no items are disallowed." Deprecated="False" filter="0" group="General">
                                                                    <Tunable name="nothing" class="TunableExistance" display="Nothing" muid="3EE9F90723657ED1" />
                                                                    <TunableTuple name="specify" class="TunableBlacklist" display="Specify" muid="15BDA8F744628414" description="A tunable blacklist." Deprecated="False" filter="0" group="General">
                                                                        <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="C14CDE4FDEB2BB89" description="Blacklisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                            <Tunable type="worlddescription" class="TunableReference" muid="A7A78492F98F3EF" description="World to check against." Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                                        </TunableList>
                                                                        <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="729B70EC8C5CE1B5" description="Tunable option for how many items must be in the blacklist&#xA;for the blacklist to fail when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                            <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="586BBE4315622A47" />
                                                                            <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="652CE62D0E795054" description="When testing a collection of items, the number of items in&#xA;that collection that are in the blacklist must pass this&#xA;threshold test for the blacklist to disallow them all." Deprecated="False" filter="0" group="General">
                                                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="10A7658443853D4D" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                                <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="CED7492EF92B6B61" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                            </TunableTuple>
                                                                        </TunableVariant>
                                                                    </TunableTuple>
                                                                </TunableVariant>
                                                                <TunableVariant type="None" name="whitelist" class="OptionalTunable" default="everything" display="Whitelist" muid="7FBFFC822DCBA5CD" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is in the whitelist. If no whitelist is&#xA;specified, all items are allowed." Deprecated="False" filter="0" group="General">
                                                                    <Tunable name="everything" class="TunableExistance" display="Everything" muid="F71CB5787301D01A" />
                                                                    <TunableTuple name="specify" class="TunableWhitelist" display="Specify" muid="A1D22468F5459FB8" description="A tunable whitelist." Deprecated="False" filter="0" group="General">
                                                                        <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="596455354BEBAB89" description="Tunable option for how many items must be in the whitelist&#xA;for the whitelist to pass when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                            <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="6E01619751F4730C" />
                                                                            <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="E273974852460600" description="When testing a collection of items, the number of items in&#xA;that collection that are in the whitelist must pass this&#xA;threshold test for the whitelist to allow them all." Deprecated="False" filter="0" group="General">
                                                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="87BDA75465AA4420" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                                <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="22796DD12320203A" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                            </TunableTuple>
                                                                        </TunableVariant>
                                                                        <TunableList name="whitelist" class="TunableSet" display="Whitelist" muid="97F4FE8AC2B81732" description="Whitelisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                            <Tunable type="worlddescription" class="TunableReference" muid="51130AB7CBA7CC51" description="World to check against." Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                                        </TunableList>
                                                                    </TunableTuple>
                                                                </TunableVariant>
                                                            </TunableTuple>
                                                        </TunableVariant>
                                                        <TunableVariant type="None" name="zone_modifiers" class="OptionalTunable" default="Don't_Test" display="Zone Modifiers" muid="80674F252DED3F62" description="if enabled, we test the zone modifiers allowed or disallowed." Deprecated="False" filter="0" group="General">
                                                            <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="5F5ECA2DEF8A814B" />
                                                            <TunableTuple name="enabled" class="TunableWhiteBlackList" display="Enabled" muid="F47808856B6DD9E8" description="The zone's modifiers must pass this whitelist and blacklist for the&#xA;test to pass." Deprecated="False" filter="0" group="General">
                                                                <TunableVariant type="None" name="blacklist" class="OptionalTunable" default="nothing" display="Blacklist" muid="7AAE7076D6FFB217" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is not in the blacklist. If no blacklist is&#xA;specified, no items are disallowed." Deprecated="False" filter="0" group="General">
                                                                    <Tunable name="nothing" class="TunableExistance" display="Nothing" muid="2907E6E75EF1D024" />
                                                                    <TunableTuple name="specify" class="TunableBlacklist" display="Specify" muid="8CA01FBF8F807DC2" description="A tunable blacklist." Deprecated="False" filter="0" group="General">
                                                                        <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="6DD0457DA823F2AD" description="Blacklisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                            <Tunable type="zone_modifier" class="TunableReference" muid="5D4BFE5C8DA927CD" description="Allowed and disallowed zone modifiers." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                                        </TunableList>
                                                                        <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="28C6242D80ABE24E" description="Tunable option for how many items must be in the blacklist&#xA;for the blacklist to fail when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                            <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="AC3BBB5F5F9231F2" />
                                                                            <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="A1235213DB30FCFA" description="When testing a collection of items, the number of items in&#xA;that collection that are in the blacklist must pass this&#xA;threshold test for the blacklist to disallow them all." Deprecated="False" filter="0" group="General">
                                                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="51A70E2D1A5C236" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                                <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="F0A751F6CD1E75F6" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                            </TunableTuple>
                                                                        </TunableVariant>
                                                                    </TunableTuple>
                                                                </TunableVariant>
                                                                <TunableVariant type="None" name="whitelist" class="OptionalTunable" default="everything" display="Whitelist" muid="D4A010CE964B366F" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is in the whitelist. If no whitelist is&#xA;specified, all items are allowed." Deprecated="False" filter="0" group="General">
                                                                    <Tunable name="everything" class="TunableExistance" display="Everything" muid="63A7FCDD68FC8408" />
                                                                    <TunableTuple name="specify" class="TunableWhitelist" display="Specify" muid="43ED3300D2FD01F2" description="A tunable whitelist." Deprecated="False" filter="0" group="General">
                                                                        <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="7751DF92A30084B4" description="Tunable option for how many items must be in the whitelist&#xA;for the whitelist to pass when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                            <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="BA45BD76EEF542F0" />
                                                                            <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="14D9E3FE4ED18CCC" description="When testing a collection of items, the number of items in&#xA;that collection that are in the whitelist must pass this&#xA;threshold test for the whitelist to allow them all." Deprecated="False" filter="0" group="General">
                                                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="2CFDAAA65FCEDA4C" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                                <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="8B5F14359E183E38" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                            </TunableTuple>
                                                                        </TunableVariant>
                                                                        <TunableList name="whitelist" class="TunableSet" display="Whitelist" muid="83801ACA23320DD1" description="Whitelisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                            <Tunable type="zone_modifier" class="TunableReference" muid="C8216909B2D6605B" description="Allowed and disallowed zone modifiers." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                                        </TunableList>
                                                                    </TunableTuple>
                                                                </TunableVariant>
                                                            </TunableTuple>
                                                        </TunableVariant>
                                                    </TunableTuple>
                                                </TunableTuple>
                                            </TunableVariant>
                                        </TunableTuple>
                                        <TunableTuple name="time_of_day" class="TunableTimeOfDayTrigger" display="Time Of Day" muid="6CF1A047E8ED162E" description="A trigger that triggers at a time of day." Deprecated="False" filter="0" group="General">
                                            <TunableTuple name="time" class="TunableTimeOfDay" display="Time" muid="5B658D39F8C60146" description="The time of day that this trigger will occur at." Deprecated="False" filter="0" group="General">
                                                <Tunable type="int" name="hour" class="TunableRange" default="12" display="Hour" muid="8D27B073D7DA2AE2" min="0" max="23" description="Hour of the day" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                <Tunable type="int" name="minute" class="TunableRange" default="0" display="Minute" muid="AADA1272F4E9F774" min="0" max="59" description="Minute of Hour" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                        </TunableTuple>
                                    </TunableVariant>
                                </TunableList>
                            </TunableTuple>
                        </TunableList>
                    </TunableTuple>
                    <Tunable type="snippet" name="reference" class="TunableReference" display="Reference" muid="4ADB4F8ED425FF6" description="A reference to a CustomStatesSituationState tuning snippet." allow_none="False" Deprecated="False" filter="0" group="General" restrict="CustomStatesSituationState" />
                </TunableVariant>
                <Tunable type="str" name="Situation State Key" class="Tunable" default="None" display="Situation State Key" muid="BF12E9D12CE15D46" description="The key of this situation state.  This key will be used when attempting to transition between different&#xA;situation states." Deprecated="False" filter="0" group="General" />
            </TunableTuple>
        </TunableList>

        <TunableVariant type="None" name="_starting_state" class="TunableVariant" default="random_starting_state" display="Starting State" muid="BC60068C14909C82" description="The starting state of this situation." Deprecated="False" filter="0" group="~Core~">
            <TunableTuple name="random_starting_state" class="TunableRandomWeightedSituationStateKey" display="Random Starting State" muid="AFB3EADB593510D8" description="Randomly pick a situation state key with a weighted random." Deprecated="False" filter="0" group="General">
                <TunableList name="possible_state_keys" class="TunableList" display="Possible State Keys" muid="9DE195923BCAD726" min="1" description="The possible situation state keys." Deprecated="False" filter="0" group="General">
                    <TunableTuple class="TunableTuple" muid="F3A33001D92DCAA9" Deprecated="False" filter="0" group="General">
                        <Tunable type="str" name="situation_key" class="Tunable" default="None" display="Situation Key" muid="27793866E8901F7E" description="The key of the situation state." Deprecated="False" filter="0" group="General" />
                        <TunableTuple name="weight" class="TunableTunableMultiplier" display="Weight" muid="6BC8040740739902" description="A weight with testable multipliers that is used to &#xA;determine how likely this entry is to be picked when &#xA;selecting randomly." Deprecated="False" filter="0" group="General">
                            <Tunable type="float" name="base_value" class="Tunable" default="1" display="Base Value" muid="1BF6391F1C05C293" description="The basic value to return if no modifications are applied." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                            <TunableList name="multipliers" class="TunableList" display="Multipliers" muid="85B9D817FA3BC127" description="A list of multipliers to apply to base_value." Deprecated="False" filter="0" group="General">
                                <TunableTuple class="TunableTuple" muid="F1DF5C602C2B737B" Deprecated="False" filter="0" group="General">
                                    <Tunable type="float" name="multiplier" class="TunableRange" default="1" display="Multiplier" muid="8B6B2AA4C25EA377" min="0" max="None" description="The multiplier to apply to base_value if the associated&#xA;tests pass." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                    <TdescFragTag name="tests" class="TunableTestSet" display="Tests" muid="68565E7FFF95FE00" description="A series of tests that must pass in order for multiplier to&#xA;be applied." filter="0" group="General" />
                                </TunableTuple>
                            </TunableList>
                        </TunableTuple>
                    </TunableTuple>
                </TunableList>
            </TunableTuple>
            <TunableTuple name="time_based" class="TunableTimeBasedSituationStateKey" display="Time Based" muid="7FED6A8CF0BF5D09" description="A situation state based on the time of day." Deprecated="False" filter="0" group="General">
                <TunableList name="situation_key_schedule" class="TunableList" display="Situation Key Schedule" muid="C4EDD2257C34624F" min="1" description="The schedule of situation starting keys." Deprecated="False" filter="0" group="General">
                    <TunableTuple class="TunableTuple" muid="694D508547BD1F3E" description="A time block for a situation key." Deprecated="False" filter="0" group="General">
                        <TunableTuple name="possible_situation_keys" class="TunableRandomWeightedSituationStateKey" display="Possible Situation Keys" muid="E1C2061559578EEC" description="Randomly pick a situation state key with a weighted random." Deprecated="False" filter="0" group="General">
                            <TunableList name="possible_state_keys" class="TunableList" display="Possible State Keys" muid="7C162202EE9B0E1E" min="1" description="The possible situation state keys." Deprecated="False" filter="0" group="General">
                                <TunableTuple class="TunableTuple" muid="CC8635E43ED5B1A" Deprecated="False" filter="0" group="General">
                                    <Tunable type="str" name="situation_key" class="Tunable" default="None" display="Situation Key" muid="3ADAA6A8E68E416A" description="The key of the situation state." Deprecated="False" filter="0" group="General" />
                                    <TunableTuple name="weight" class="TunableTunableMultiplier" display="Weight" muid="9529F73E678ABA03" description="A weight with testable multipliers that is used to &#xA;determine how likely this entry is to be picked when &#xA;selecting randomly." Deprecated="False" filter="0" group="General">
                                        <Tunable type="float" name="base_value" class="Tunable" default="1" display="Base Value" muid="62F4057D592EDEBC" description="The basic value to return if no modifications are applied." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        <TunableList name="multipliers" class="TunableList" display="Multipliers" muid="427792CBE2E827BE" description="A list of multipliers to apply to base_value." Deprecated="False" filter="0" group="General">
                                            <TunableTuple class="TunableTuple" muid="B21CFD1C7897089A" Deprecated="False" filter="0" group="General">
                                                <Tunable type="float" name="multiplier" class="TunableRange" default="1" display="Multiplier" muid="ADCB5632762B91F7" min="0" max="None" description="The multiplier to apply to base_value if the associated&#xA;tests pass." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                <TdescFragTag name="tests" class="TunableTestSet" display="Tests" muid="FC39AE410A1B8B48" description="A series of tests that must pass in order for multiplier to&#xA;be applied." filter="0" group="General" />
                                            </TunableTuple>
                                        </TunableList>
                                    </TunableTuple>
                                </TunableTuple>
                            </TunableList>
                        </TunableTuple>
                        <TunableTuple name="time" class="TunableTimeOfDay" display="Time" muid="FEFC8BB1DB062CAB" description="The time of this situation key.  This time block will exist until the next time block tuned." Deprecated="False" filter="0" group="General">
                            <Tunable type="int" name="hour" class="TunableRange" default="9" display="Hour" muid="C941F8C5E12D140B" min="0" max="23" description="Hour of the day" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                            <Tunable type="int" name="minute" class="TunableRange" default="0" display="Minute" muid="3BB2823F497396F3" min="0" max="59" description="Minute of Hour" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                        </TunableTuple>
                    </TunableTuple>
                </TunableList>
            </TunableTuple>
        </TunableVariant>
    </Instance>

    <VersionHistory>
        <ActionList>
            <Action type="kRename" old_muid="F40883365DE6E88C" new_muid="7FED6A8CF0BF5D09" />
        </ActionList>

        <ActionList>
            <Action type="kRemove" old_muid="7A8A037AF6812045" />
            <Action type="kRemove" old_muid="6BB3FAEE6589BCA5" />
            <Action type="kRemove" old_muid="5ED4F8D0BFCDC2F9" />
            <Action type="kRemove" old_muid="8CCC4B98609538EC" />
            <Action type="kRemove" old_muid="E9BB22172CDC947D" />
            <Action type="kRemove" old_muid="CB61DF837A97DB59" />
        </ActionList>

        <ActionList>
            <Action type="kRename" old_muid="35EAC20C248D999B" new_muid="B0358FC48A6DD35C" />
        </ActionList>
    </VersionHistory>
</TuningRoot>