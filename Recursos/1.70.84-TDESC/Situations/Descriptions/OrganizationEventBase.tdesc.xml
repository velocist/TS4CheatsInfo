<?xml version="1.0" encoding="iso-8859-1"?>

<TuningRoot>
    <Instance instance_type="situation" class="OrganizationEventBase" module="organizations.organization_situations" muid="A77F4C04DCDDF740" description="Common tuning for minor, single-job Organization Event Situations." instance_subclasses_only="False" parents="SituationComplexCommon, SituationComplex, Situation" path="Situations\Descriptions" use_guid_for_reference="True">
        <Deleted name="_buff" muid="D69C16E7AF8ED19E" />

        <Deleted name="_cost" muid="E78A3E71E51459AF" />

        <Deleted name="_display_name" muid="B4161A867BDB70DA" />

        <Deleted name="_icon" muid="DE0051C6B6F7A2A7" />

        <Deleted name="_implies_greeted_status" muid="6E124BE719B6D7E2" />

        <Deleted name="_initiating_sim_tests" muid="65EDAFDDF8755848" />

        <Deleted name="_level_data" muid="452E27955E336F50" />

        <Deleted name="_main_goal_visibility_test" muid="8F801CA5A90DEE5E" />

        <Deleted name="_relationship_between_job_members" muid="C81B120A18A10931" />

        <Deleted name="_resident_job" muid="19A687805E07C5B2" />

        <TunableList name="additional_filters" class="TunableList" display="Additional Filters" muid="D9D2E27873799EBB" Deprecated="False" filter="0" group="Situation">
            <TunableVariant type="None" class="FilterTermVariant" default="skill" muid="F82A0816A991647B" description="Additional filters to be applied to the members request.&#xA;&#xA;If the existing members pool does not include sims that pass these&#xA;filters, the org service will attempt to populate the list with&#xA;more members that satisfy these filters." Deprecated="False" filter="0" group="General">
                <TunableTuple name="age" class="TunableAgeFilterTerm" display="Age" muid="455418D9715A6C6B" description="A term for filtering Sims based on their age. The score is modified based on&#xA;the tuned ideal value for the age. If you are looking for age variation, please&#xA;choose &quot;Age Variant&quot; instead.&#xA;&#xA;Only new Sims may be conformed by creating them of a valid age. Existing&#xA;Sims may not be conformed." Deprecated="False" filter="0" group="General">
                    <TunableEnum type="Age" name="ideal_value" class="TunableEnumEntry" default="ADULT" display="Ideal Value" muid="482E3E61674DDCBA" static_entries="sims-sim_info_types.Age" description="The ideal age of the sim we are filtering for." Deprecated="False" filter="0" group="General" />
                    <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="D40CFC55D72B12E" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                    <TunableEnum type="Age" name="max_value" class="TunableEnumEntry" default="ELDER" display="Max Value" muid="BDEF6A9717605B2A" static_entries="sims-sim_info_types.Age" description="The maximum age of the sim we are filtering for." Deprecated="False" filter="0" group="General" />
                    <TunableEnum type="Age" name="min_value" class="TunableEnumEntry" default="BABY" display="Min Value" muid="87B146589E7EC830" static_entries="sims-sim_info_types.Age" description="The minimum age of the sim we are filtering for." Deprecated="False" filter="0" group="General" />
                    <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="42B0D7937E7011A2" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                </TunableTuple>
                <TunableTuple name="age_progress" class="TunableAgeProgressFilterTerm" display="Age Progress" muid="69C9D4EBACED53CF" description="A term for filtering Sims based on their age progress. The score is modified&#xA;based on the tuned ideal value.&#xA;&#xA;New and existing Sims can be conformed by advancing their age progress,&#xA;within the tuned bounds." Deprecated="False" filter="0" group="General">
                    <Tunable type="float" name="ideal_value" class="Tunable" default="5" display="Ideal Value" muid="E5B6B0E9744EC0EA" description="Ideal value of age progress." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                    <Tunable type="float" name="max_value" class="Tunable" default="10" display="Max Value" muid="4F190256BE4E5B29" description="Maximum value of age progress." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                    <Tunable type="float" name="min_value" class="Tunable" default="0" display="Min Value" muid="FDBD9FC9E7632F48" description="Minimum value of age progress." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                    <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="E79029EDA89DC326" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                </TunableTuple>
                <TunableTuple name="age_progress_percentage" class="TunableAgeProgressPercentageFilterTerm" display="Age Progress Percentage" muid="F420047671D87578" description="A term for filtering Sims based on their age progress as a percentage. The &#xA;score is modified based on the tuned ideal value. Age progress values over&#xA;100% are capped at 100% for the purposes of evaluating a sim's age progress&#xA;for this filter.&#xA;&#xA;Sims may not be conformed to match this filter term." Deprecated="False" filter="0" group="General">
                    <Tunable type="int" name="ideal_value" class="Tunable" default="50" display="Ideal Value" muid="630D5D3276A28E8E" description="Ideal value of age progress as a percentage." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                    <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="2D1D5D9748470750" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                    <TunableTuple name="value_range" class="TunableInterval" display="Value Range" muid="103C1C11B97D601F" description="The minimum and maximum age progress percentage." Deprecated="False" filter="0" group="General">
                        <Tunable type="int" name="lower_bound" class="TunableRange" default="0" display="Lower Bound" muid="54C52E7B231CD658" min="0" max="None" description="The lower bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                        <Tunable type="int" name="upper_bound" class="TunableRange" default="100" display="Upper Bound" muid="3EAFB888E5BFAB0C" min="None" max="100" description="The upper bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                    </TunableTuple>
                </TunableTuple>
                <TunableTuple name="age_variant" class="TunableAgeVariationFilterTerm" display="Age Variant" muid="8B1A324926715FDE" description="A term for filtering Sims based on a list of allowed ages.&#xA;&#xA;Only new Sims may be conformed by creating them of a valid age. Existing&#xA;Sims may not be conformed." Deprecated="False" filter="0" group="General">
                    <TunableList name="allowed_ages" class="TunableEnumSet" display="Allowed Ages" muid="E6CB6A380D4D975D" description="The allowed ages we're filtering for." Deprecated="False" filter="0" group="General" unique_entries="true">
                        <TunableEnum type="Age" class="TunableEnumEntry" default="ADULT" muid="A635D3D83ED288B" static_entries="sims-sim_info_types.Age" Deprecated="False" filter="0" group="General" />
                    </TunableList>
                    <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="7DFB4ACF2D8AE34D" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                </TunableTuple>
                <TunableTuple name="can_age_up" class="TunableAgeUpFilterTerm" display="Can Age Up" muid="DB06C089C3852DD4" description="A term for filtering Sims that may or may not age up at this time. Note:&#xA;This probably does not do what you want it to do. It simply checks if the&#xA;sim is not an elder and that aging is not disabled.&#xA;&#xA;Sims may not be conformed to match this filter term." Deprecated="False" filter="0" group="General">
                    <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="E7888769AE6F6DB5" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                    <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="FB2F67AA63DFFB78" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                </TunableTuple>
                <TunableTuple name="can_be_outside" class="TunableCanBeOutside" display="Can Be Outside" muid="B37BE876329AB3A2" description="A term for filtering Sims that may or may not be outside.&#xA;Restriction is implemented only for vampires. It needs to be updated &#xA;if we add other occults or systems that resctrict it.&#xA;&#xA;Normal Sim will always pass this filter. Certain Sim, e.g Vampire, &#xA;cannot be outside on daytime except daywalker vampire.&#xA;&#xA;New and existing Sims may be conformed to match this filter term by&#xA;granting or removing vampire trait and daywalker perk." Deprecated="False" filter="0" group="General">
                    <Tunable type="bool" name="at_anytime" class="Tunable" default="False" display="At Anytime" muid="201C70D0EFAE1C3D" description="If enabled, the Sim needs to be able to go outside during day and night.&#xA;Otherwise, it needs to be able to go outside at current time or &#xA;during certain period of time." Deprecated="False" filter="0" group="General" />
                    <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="7BA56B4E379CBE27" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                    <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="2AC9B31DD6D61285" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                </TunableTuple>
                <TunableTuple name="career" class="TunableCareerFilterTerm" display="Career" muid="CF78C3119CEFD5AA" description="A term for filtering Sims in a specific career.&#xA;&#xA;New and existing Sims can be conformed by granting them the career, provided&#xA;any availability tests pass." Deprecated="False" filter="0" group="General">
                    <TunableVariant type="None" name="career" class="TunableVariant" default="from_explicit_type" display="Career" muid="D905893A8C4D05CD" description="Define the career that this filter term applies to." Deprecated="False" filter="0" group="General">
                        <TunableTuple name="from_category" class="Tunable_CareerTypeFromCategory" display="From Category" muid="3D2314A9FC2901F" description="The filter term applies to the career, if any, of the specified category&#xA;for the Sim." Deprecated="False" filter="0" group="General">
                            <TunableEnum type="CareerCategory" name="career_category" class="TunableEnumEntry" default="Work" display="Career Category" muid="75474C944B8708B7" static_entries="careers-career_enums.CareerCategory" description="The career category that this filter term applies to. Sims may&#xA;be conformed if we want to remove the career, i.e. the term is&#xA;inverted, but may not be conformed to join a career." Deprecated="False" filter="0" group="General" />
                        </TunableTuple>
                        <TunableTuple name="from_explicit_type" class="Tunable_CareerTypeExplicit" display="From Explicit Type" muid="6028B9DE0E0930CC" description="The filter term applies to a specific career." Deprecated="False" filter="0" group="General">
                            <Tunable type="career" name="career_type" class="TunableReference" display="Career Type" muid="227DC93A7DDBDD81" description="The career that this term applies to. Sims that are conformed to the&#xA;filter will enter the career at its entry level." allow_none="False" Deprecated="False" filter="0" group="General" />
                        </TunableTuple>
                    </TunableVariant>
                    <TunableVariant type="None" name="career_level" class="OptionalTunable" default="disabled" display="Career Level" muid="6E880F1505691AC3" description="If enabled we add an additional requirement of the user level of&#xA;the career to the requirements." Deprecated="False" filter="0" group="General">
                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="B6496207913195D9" />
                        <TunableVariant type="None" name="enabled" class="TunableVariant" default="career_level_reference" display="Enabled" muid="A8593737954FA245" Deprecated="False" filter="0" group="General">
                            <TunableTuple name="career_level_reference" class="Tunable_CareerLevelReferenceFilter" display="Career Level Reference" muid="F5D9FD2BABBE686B" description="Filters sims based on a list of CareerLevel references." Deprecated="False" filter="0" group="General">
                                <TunableList name="career_level_references" class="TunableList" display="Career Level References" muid="B84A5CC87E3305AD" description="A list of CareerLevels. One will be randomly chosen&#xA;when conforming sims." Deprecated="False" filter="0" group="General">
                                    <Tunable type="career_level" class="TunableReference" muid="71A269244F53BA16" description="A reference to a CareerLevel to join the career at.&#xA;The CareerLevel must belong to the career tuned above." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                </TunableList>
                            </TunableTuple>
                            <TunableTuple name="career_user_level" class="Tunable_CareerUserLevelFilter" display="Career User Level" muid="1CD211BE6D223481" description="Filters sims based on a user career level." Deprecated="False" filter="0" group="General">
                                <Tunable type="int" name="career_user_level" class="TunableRange" default="1" display="Career User Level" muid="CBF537D6AF9028C3" min="1" max="None" description="A user level. If this level cooresponds to an advanced branch&#xA;and we conform or generate a sim with this filter and the career &#xA;has branches a branch will be chosen at random. If this behavior&#xA;is not desired, use Career Level Reference instead." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                            </TunableTuple>
                        </TunableVariant>
                    </TunableVariant>
                    <TunableVariant type="None" name="career_location" class="TunableVariant" default="none" display="Career Location" muid="963EA9730767E5EA" description="Define how important career location is for this filter. Leave None&#xA;if location is not important." Deprecated="False" filter="0" group="General">
                        <Tunable name="none" class="TunableExistance" display="None" muid="2EE0F5A9C8705735" />
                        <TunableTuple name="on_active_lot" class="Tunable_CareerLocationFilterActiveLot" display="On Active Lot" muid="F7EB6B6092E2FFF3" description="Any Sim must be in the specified career and hired by the venue on the&#xA;active lot in order to match the filter. Sims that are conformed by&#xA;joining a career will be hired by the venue on the active lot." Deprecated="False" filter="0" group="General" />
                    </TunableVariant>
                    <TunableVariant type="None" name="career_schedule" class="TunableVariant" default="none" display="Career Schedule" muid="DA3E21698DC8900C" description="Define how scheduling affects this filter. Leave None if schedule is&#xA;not important." Deprecated="False" filter="0" group="General">
                        <TunableTuple name="available_now" class="Tunable_CareerScheduleFilterAvailableNow" display="Available Now" muid="4B738965417C5178" description="Any Sim must be in the specified career and must be scheduled to work at&#xA;the time of the filter request. If they are not, their career will not&#xA;be conformed to match the filter." Deprecated="False" filter="0" group="General" />
                        <Tunable name="none" class="TunableExistance" display="None" muid="B906A8E4B3F931CF" />
                    </TunableVariant>
                    <Tunable type="bool" name="career_seniority" class="Tunable" default="True" display="Career Seniority" muid="73555EE29212DA1" description="If enabled, Sims that have been in the career for longer will score&#xA;higher than Sims that have been in the career for less time." Deprecated="False" filter="0" group="General" />
                    <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="3E0E9BD1E50320A2" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                    <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="65C4E5CB91997063" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                </TunableTuple>
                <TunableTuple name="cas_tags" class="TunableCasTagsFilterTerm" display="Cas Tags" muid="147238F9924F4253" description="A term for filtering Sims based on their CAS tags.&#xA;&#xA;Only new Sims may be conformed by creating them with valid CAS tags.&#xA;Existing Sims may not be conformed." Deprecated="False" filter="0" group="General">
                    <TunableList name="cas_tags" class="TunableSet" display="Cas Tags" muid="39B7750FDBE1F1F5" description="Sims must have at least one of these tags on their parts for the&#xA;filter to pass." Deprecated="False" filter="0" group="General" unique_entries="true">
                        <TunableEnum type="Tag" class="TunableEnumEntry" default="INVALID" muid="4074F445403C1D2A" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" Deprecated="False" filter="0" group="General" />
                    </TunableList>
                    <TunableVariant type="None" name="creation_cas_tags" class="OptionalTunable" default="same_as_cas_tags" display="Creation Cas Tags" muid="FF2E44E793F6B2DA" description="The tags to use when creating a new Sim with this filter term.&#xA;&#xA;This should be same_as_cas_tags for almost all cases. Note that&#xA;custom cas tags are supplied, the Sim must still have Cas Tags&#xA;for sim creation to succeed." Deprecated="False" filter="0" group="General">
                        <TunableList name="custom" class="TunableTags" display="Custom" muid="AA5943CA97C518FD" min="1" Deprecated="False" filter="0" group="General" unique_entries="true">
                            <TunableEnum type="Tag" class="TunableEnumEntry" default="INVALID" muid="C45DD9041CBC7F36" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" Deprecated="False" filter="0" group="General" invalid_entries="INVALID" />
                        </TunableList>
                        <Tunable name="same_as_cas_tags" class="TunableExistance" display="Same As Cas Tags" muid="8424B849FA78B8F6" />
                    </TunableVariant>
                    <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="A4ECC93B4D9C57DC" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                </TunableTuple>
                <TunableTuple name="gender" class="TunableGenderFilterTerm" display="Gender" muid="D83B022EAA6CB226" description="A term for filtering Sims base on their gender.&#xA;&#xA;Only new Sims may be conformed by creating them of a valid gender. Existing&#xA;Sims may not be conformed." Deprecated="False" filter="0" group="General">
                    <TunableEnum type="Gender" name="gender" class="TunableEnumEntry" default="MALE" display="Gender" muid="97202D56EC263096" static_entries="sims-sim_info_types.Gender" description="The required gender of the sim we are filtering for." Deprecated="False" filter="0" group="General" />
                    <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="A26119A990C8F967" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                </TunableTuple>
                <TunableTuple name="gender_preference" class="TunableGenderPreferenceFilterTerm" display="Gender Preference" muid="D2CA176303FD0EAF" description="A filter term for filtering sims that fit the requesting sim info's gender &#xA;preference." Deprecated="False" filter="0" group="General">
                    <Tunable type="bool" name="fallback_if_no_preference_is_set" class="Tunable" default="False" display="Fallback If No Preference Is Set" muid="3CC2B335DC8A90B4" description="If checked then if no gender preference is set then fallback." Deprecated="False" filter="0" group="General" />
                    <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="F05C49160B9CC6C3" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                </TunableTuple>
                <TunableTuple name="gender_relative" class="TunableGenderRelativeFilterTerm" display="Gender Relative" muid="EA6B746F77C5ABE0" description="A term for filtering Sims base on their gender relative to target sims&#xA;gender.&#xA;&#xA;Only new Sims may be conformed by creating them of a valid gender. Existing&#xA;Sims may not be conformed." Deprecated="False" filter="0" group="General">
                    <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="8A22055366DF5736" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                    <Tunable type="bool" name="same" class="Tunable" default="False" display="Same" muid="28E612C37879D622" description="If checked then we will make sure that the sim is the same gender&#xA;as the target sim.  Otherwise the opposite gender" Deprecated="False" filter="0" group="General" />
                </TunableTuple>
                <TunableTuple name="genealogy" class="TunableGenealogyFilterTerm" display="Genealogy" muid="970EDA0B6EA9AA95" description="A term for filtering Sims based on their genealogy.&#xA;&#xA;New and existing Sims can be conformed by propagating genealogy relations." Deprecated="False" filter="0" group="General">
                    <TunableEnum type="FamilyRelationshipIndex" name="family_relationship" class="TunableEnumEntry" default="MOTHER" display="Family Relationship" muid="B345F5607EBDECD5" static_entries="sims-genealogy_tracker.FamilyRelationshipIndex" description="This is the family relationship between the requesting sim and the&#xA;target sim." Deprecated="False" filter="0" group="General" />
                    <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="AF699181CF09AE43" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                    <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="2C5A42C39D86995F" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                    <Tunable type="bool" name="swap_direction" class="Tunable" default="False" display="Swap Direction" muid="5E64247D1E53E5C9" description="This is the direction between the requesting sim and the target sim&#xA;so that the genealogy is checked between the sim info and the&#xA;requesting sim info." Deprecated="False" filter="0" group="General" />
                </TunableTuple>
                <TunableTuple name="has_home_zone" class="TunableHasHomeZoneFilterTerm" display="Has Home Zone" muid="2C8736FE63028528" description="A term for filtering Sims that may or may not have a home zone.&#xA;&#xA;Sims may not be conformed to match this filter term." Deprecated="False" filter="0" group="General">
                    <Tunable type="bool" name="include_vacation_home" class="Tunable" default="False" display="Include Vacation Home" muid="F831587535ABB761" description="If enabled and the Sim is on a vacation at a zone, this will return&#xA;True." Deprecated="False" filter="0" group="General" />
                    <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="A91560D48AF05120" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                    <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="287260AC560A2400" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                </TunableTuple>
                <TunableTuple name="has_household_ever_been_played" class="TunableHasHouseholdEverBeenPlayedFilterTerm" display="Has Household Ever Been Played" muid="687164C16518C6A1" description="A term for filtering Sims that may or may not have ever been played by the&#xA;user.&#xA;&#xA;Sims may not be conformed to match this filter term." Deprecated="False" filter="0" group="General">
                    <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="950B5D5C64B74E08" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                    <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="DC6E74B33F049A2B" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                </TunableTuple>
                <TunableTuple name="household_composition" class="TunableHouseholdCompositionFilterTerm" display="Household Composition" muid="4983220CB439E908" description="A term for filtering Sims based on the composition of their household." Deprecated="False" filter="0" group="General">
                    <TunableVariant type="None" name="age" class="OptionalTunable" default="Dont_Care" display="Age" muid="1BF35A38FD8A0B27" description="Define an age condition for Sims in the household." Deprecated="False" filter="0" group="General">
                        <Tunable name="Dont_Care" class="TunableExistance" display="Dont Care" muid="84DC8763B406D14B" />
                        <TunableTuple name="enabled" class="TunableAgeFilterTerm" display="Enabled" muid="1AE844231E871D70" description="A term for filtering Sims based on their age. The score is modified based on&#xA;the tuned ideal value for the age. If you are looking for age variation, please&#xA;choose &quot;Age Variant&quot; instead.&#xA;&#xA;Only new Sims may be conformed by creating them of a valid age. Existing&#xA;Sims may not be conformed." Deprecated="False" filter="0" group="General">
                            <TunableEnum type="Age" name="ideal_value" class="TunableEnumEntry" default="ADULT" display="Ideal Value" muid="ED22AB63C521FA16" static_entries="sims-sim_info_types.Age" description="The ideal age of the sim we are filtering for." Deprecated="False" filter="0" group="General" />
                            <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="533F41A23B9B34D4" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                            <TunableEnum type="Age" name="max_value" class="TunableEnumEntry" default="ELDER" display="Max Value" muid="6B1B001ADCCF4A00" static_entries="sims-sim_info_types.Age" description="The maximum age of the sim we are filtering for." Deprecated="False" filter="0" group="General" />
                            <TunableEnum type="Age" name="min_value" class="TunableEnumEntry" default="BABY" display="Min Value" muid="CD2A8B7C062F8587" static_entries="sims-sim_info_types.Age" description="The minimum age of the sim we are filtering for." Deprecated="False" filter="0" group="General" />
                            <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="B63BD8F8065CDA8" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                        </TunableTuple>
                    </TunableVariant>
                    <TunableVariant type="None" name="gender" class="OptionalTunable" default="Dont_Care" display="Gender" muid="A0D64F447CF0D266" description="Define a gender condition for Sims in the household." Deprecated="False" filter="0" group="General">
                        <Tunable name="Dont_Care" class="TunableExistance" display="Dont Care" muid="6F3C77A9F0B05FA" />
                        <TunableTuple name="enabled" class="TunableGenderFilterTerm" display="Enabled" muid="84DEFE411FC40B5C" description="A term for filtering Sims base on their gender.&#xA;&#xA;Only new Sims may be conformed by creating them of a valid gender. Existing&#xA;Sims may not be conformed." Deprecated="False" filter="0" group="General">
                            <TunableEnum type="Gender" name="gender" class="TunableEnumEntry" default="MALE" display="Gender" muid="F09288E997E51D0B" static_entries="sims-sim_info_types.Gender" description="The required gender of the sim we are filtering for." Deprecated="False" filter="0" group="General" />
                            <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="BA45398AC821A994" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                        </TunableTuple>
                    </TunableVariant>
                    <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="2AABE72F5DBB1DA8" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                    <TunableVariant type="None" name="species" class="OptionalTunable" default="Dont_Care" display="Species" muid="BFAAE8A552A896F2" description="Define a species condition for Sims in the household." Deprecated="False" filter="0" group="General">
                        <Tunable name="Dont_Care" class="TunableExistance" display="Dont Care" muid="FE17E8017904923E" />
                        <TunableTuple name="enabled" class="TunableSpeciesFilterTerm" display="Enabled" muid="EC2AAA42BCB1E2DF" description="A term for filtering Sim based on their species.&#xA;&#xA;Only new Sims may be conformed by creating them with a valid species.&#xA;Existing Sims may not be conformed." Deprecated="False" filter="0" group="General">
                            <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="DFF31E6BBB8EA5CF" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                            <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="8251C78E4110155A" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                            <TunableEnum type="Species" name="species" class="TunableEnumEntry" default="HUMAN" display="Species" muid="AAE8A7CC74DDC587" static_entries="sims-sim_info_types.Species" description="The species to filter for." Deprecated="False" filter="0" group="General" invalid_entries="INVALID" />
                        </TunableTuple>
                    </TunableVariant>
                    <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="A6415E4A08ED8AC0" description="Define the required number of Sims required in order to satisfy the&#xA;term." Deprecated="False" filter="0" group="General">
                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="75C3D498ADCFB930" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                        <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="FFC27BAF4F74A315" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                    </TunableTuple>
                </TunableTuple>
                <TunableTuple name="household_value" class="TunableHouseholdValueFilterTerm" display="Household Value" muid="27DED0B51AAA326A" description="A term for filtering Sims based on their household value.&#xA;&#xA;We intentionally do not conform Sims for this filter term. The only thing&#xA;we have safe control over here is household funds, and this isn't player-&#xA;facing, so it wouldn't be obvious if a Sim was conformed. A player will&#xA;really only judge NPC wealth by property ownership and clothing." Deprecated="False" filter="0" group="General">
                    <TunableTuple name="household_value" class="TunableInterval" display="Household Value" muid="F4D50FA7011F5712" description="An interval the Sim's household value must be between in order to&#xA;conform to this filter term." Deprecated="False" filter="0" group="General">
                        <Tunable type="int" name="lower_bound" class="TunableRange" default="0" display="Lower Bound" muid="741CC68B6E89973D" min="0" max="None" description="The lower bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                        <Tunable type="int" name="upper_bound" class="TunableRange" default="1000" display="Upper Bound" muid="8FD12E8A1A785B96" min="None" max="None" description="The upper bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                    </TunableTuple>
                    <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="2CE71CCF7EC314F2" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                </TunableTuple>
                <TunableTuple name="in_club" class="TunableInClubFilterTerm" display="In Club" muid="DC348007C0401CE6" description="A term for filtering Sims based on if they are in a club or not." Deprecated="False" filter="0" group="General">
                    <Tunable type="bool" name="check_if_requesting_sim_can_join" class="Tunable" default="False" display="Check If Requesting Sim Can Join" muid="87FDE40E20F8FC95" description="If checked then we will make sure that the requesting Sim can join&#xA;one of the clubs of this Sim." Deprecated="False" filter="0" group="General" />
                    <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="FA221A8291A7CA3F" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                    <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="68FD63D725169496" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                </TunableTuple>
                <TunableTuple name="in_compatible_region" class="TunableInCompatibleRegionFilterTerm" display="In Compatible Region" muid="3D849EED75E9EB8E" description="A term for filtering Sims that may or may not be in the Same region, thus&#xA;gating their availability to be in certain situations.&#xA;&#xA;Sims may not be conformed to match this filter term." Deprecated="False" filter="0" group="General">
                    <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="D01EAEA89EC1EB09" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                    <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="CFE8F8A83D5562B0" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                </TunableTuple>
                <TunableTuple name="in_family" class="TunableInFamilyFilterTerm" display="In Family" muid="F8DFDFACE4835242" description="A term for filtering Sims living in the same household.&#xA;&#xA;Sims may not be conformed to match this filter term." Deprecated="False" filter="0" group="General">
                    <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="9CA031943CD44FB2" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                    <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="D76397422D95F495" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                </TunableTuple>
                <TunableTuple name="in_same_club" class="TunableInSameClubFilterTerm" display="In Same Club" muid="F2BDC2116A335ABF" description="A term for filtering if the Sim and the requesting sim info are in the&#xA;same club." Deprecated="False" filter="0" group="General">
                    <Tunable type="bool" name="check_supplied_club" class="Tunable" default="False" display="Check Supplied Club" muid="6B98FB2186C32C15" description="If checked then we will check if the Sim is in a specific supplied&#xA;club.  Check with your GPE before using this option because it will&#xA;only work when the data is properly supplied by gameplay." Deprecated="False" filter="0" group="General" />
                    <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="8DE8697A29A7114C" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                    <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="856E8B26278F936F" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                </TunableTuple>
                <TunableTuple name="is_busy" class="TunableIsBusyFilterTerm" display="Is Busy" muid="2180881D4BCCDA49" description="A term for filtering Sims that might be busy at the requested times, based&#xA;on their work schedule.&#xA;&#xA;Sims may not be conformed to match this filter term." Deprecated="False" filter="0" group="General">
                    <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="5461C50FABF89342" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                    <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="83FD443C5F78EEEC" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                    <TunableVariant type="None" name="override" class="TunableVariant" default="no_override" display="Override" muid="FFFEFD573C495A67" description="Determine a set of Sims that is never considered busy." Deprecated="False" filter="0" group="General">
                        <Tunable name="no_override" class="TunableExistance" display="No Override" muid="2B1D944390ED31F7" />
                        <Tunable name="npc_sims" class="TunableExistance" display="Npc Sims" muid="F0EEA30FDF93F9BC" />
                        <Tunable name="selectable_sims" class="TunableExistance" display="Selectable Sims" muid="57650EEF6F5902D2" />
                    </TunableVariant>
                </TunableTuple>
                <TunableTuple name="is_ghost" class="TunableIsGhostFilterTerm" display="Is Ghost" muid="F550F43DB25A0F58" description="A filter term for filtering Sims that may or may not be ghosts.&#xA;&#xA;Sims may not be conformed to match this filter term." Deprecated="False" filter="0" group="General">
                    <Tunable type="bool" name="always_pass_active_household_sims" class="Tunable" default="False" display="Always Pass Active Household Sims" muid="BDEC1193416EE36E" description="If enabled then we will always pass sims in the active household,&#xA;whether they are a ghost or not." Deprecated="False" filter="0" group="General" />
                    <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="844F8635FEE6A47B" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                    <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="E1DD44236EEC5E3E" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                    <Tunable type="bool" name="require_npc" class="Tunable" default="True" display="Require Npc" muid="396B79766AD2D7DB" description="If enabled, the Sim needs to be an NPC. If not enabled, any Sim that&#xA;is a ghost will pass the filter." Deprecated="False" filter="0" group="General" />
                </TunableTuple>
                <TunableTuple name="is_hidden" class="TunableIsHiddenFilterTerm" display="Is Hidden" muid="E0F44C62A2AC3519" description="A filter term to filter out hidden sims. " Deprecated="False" filter="0" group="General">
                    <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="A942691E86AFB21B" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                    <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="7382DED2996094CD" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                </TunableTuple>
                <TunableTuple name="is_neighbor" class="TunableIsNeighborFilterTerm" display="Is Neighbor" muid="D720BB429D2BC23B" description="A term for filtering Sims that are or are not neighbors. This is applicable&#xA;even to neighbor Sims that have not met (thus not having relationship bits).&#xA;&#xA;Sims may not be conformed to match this filter term." Deprecated="False" filter="0" group="General">
                    <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="FA2D24D7DA1496CB" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                    <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="9B7E1F2B4C69FDEF" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                </TunableTuple>
                <TunableTuple name="is_not_incestuous" class="TunableIsNotIncestuousFilterTerm" display="Is Not Incestuous" muid="4712C997E55BE2FA" description="A filter term to filtering out sims that would be incestuous with the&#xA;requesting sim info." Deprecated="False" filter="0" group="General">
                    <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="28BB16E0CD688848" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                </TunableTuple>
                <TunableTuple name="is_roommate" class="TunableIsRoommateFilterTerm" display="Is Roommate" muid="B09BEEDEFC4276B3" description="A term for filtering Sims that are roommmates&#xA;&#xA;Sims may not be conformed to match this filter term." Deprecated="False" filter="0" group="General">
                    <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="536EB829B7063D5F" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                    <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="A7FFF58B3767E64D" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                    <TunableVariant type="None" name="target_household" class="TunableVariant" default="any" display="Target Household" muid="6C245F963DA310F6" description="Which household must the sim be a roommate of." Deprecated="False" filter="0" group="General">
                        <Tunable name="active_household" class="TunableExistance" display="Active Household" muid="7BBD64F3F1DC2B62" />
                        <Tunable name="any" class="TunableExistance" display="Any" muid="2BE03FAF0CF255C4" />
                        <Tunable name="requesting_sim_household" class="TunableExistance" display="Requesting Sim Household" muid="8A14C3B66205107B" />
                        <Tunable name="specified_household" class="TunableExistance" display="Specified Household" muid="79C61ADD2F983FDD" />
                    </TunableVariant>
                </TunableTuple>
                <TunableTuple name="is_sim_sick" class="TunableSickSimFilterTerm" display="Is Sim Sick" muid="4A49F9EFECDB2BB" description="A term for filtering Sims based on whether they are sick or not." Deprecated="False" filter="0" group="General">
                    <TunableVariant type="None" name="difficulty_range" class="OptionalTunable" default="disabled" display="Difficulty Range" muid="9E191BEC5FE054DA" description="Optionally define the difficulty rating range that is required&#xA;for the Sim's sickness." Deprecated="False" filter="0" group="General">
                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="B3443354BBD76DE6" />
                        <TunableTuple name="enabled" class="TunableInterval" display="Enabled" muid="9016574B0FDF2EEF" description="The difficulty rating range, this maps to 'difficulty_rating'&#xA;values in Sickness tuning." Deprecated="False" filter="0" group="General">
                            <Tunable type="float" name="lower_bound" class="TunableRange" default="0" display="Lower Bound" muid="6EC6B9C86F2FEAD8" min="0" max="None" description="The lower bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                            <Tunable type="float" name="upper_bound" class="TunableRange" default="10" display="Upper Bound" muid="440FC34EA7E0E9EC" min="None" max="10" description="The upper bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                        </TunableTuple>
                    </TunableVariant>
                    <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="97653C74A771CF42" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                    <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="ED792A8ACA7EF517" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                </TunableTuple>
                <TunableTuple name="lives_in_region" class="TunableLivesInRegion" display="Lives In Region" muid="F0BF081CD20849B3" description="A filter term for filtering if the Sims live in the specified region or not." Deprecated="False" filter="0" group="General">
                    <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="C11DC385AA2BEEFD" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                    <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="D22370E00A4AFD06" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                    <TunableVariant type="None" name="region" class="OptionalTunable" default="current_region" display="Region" muid="CFBFD75C36FAA323" description="Which region to test against." Deprecated="False" filter="0" group="General">
                        <Tunable name="current_region" class="TunableExistance" display="Current Region" muid="C12DDB1CA3B84F80" />
                        <TunableList name="specific_regions" class="TunableList" display="Specific Regions" muid="2B60E4CCE5FCCC03" min="1" description="The list of valid regions." Deprecated="False" filter="0" group="General" unique_entries="true">
                            <Tunable type="region" class="TunableReference" muid="C25295182C5113C0" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="Region" />
                        </TunableList>
                    </TunableVariant>
                    <TunableVariant type="None" name="street_for_creation" class="OptionalTunable" default="disabled" display="Street For Creation" muid="1EAAA93DB3312648" description="By default, Sims can only be created with this filter term if this&#xA;term is inverted (that is, the resulting Sim is a townie that lives&#xA;nowhere). Otherwise, the conform fails.&#xA;&#xA;If this is enabled and the term is not inverted, the Sim will&#xA;instead be assigned as townie living on the street." Deprecated="False" filter="0" group="General">
                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="6E8406B2575017EE" />
                        <Tunable type="worlddescription" name="enabled" class="TunableReference" display="Enabled" muid="CF0B5864C16C4375" Deprecated="False" filter="0" group="General" pack_safe="True" />
                    </TunableVariant>
                </TunableTuple>
                <TunableTuple name="lives_on_apartment_floor" class="TunableLivesOnApartmentFloor" display="Lives On Apartment Floor" muid="8081AA3340E5BE0A" description="A term for filtering Sims that live on the current apartment floor." Deprecated="False" filter="0" group="General">
                    <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="C6BC58326E87321C" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                    <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="7C355BC4CA8474C1" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                </TunableTuple>
                <TunableTuple name="lives_on_street" class="TunableLivesOnStreetFilterTerm" display="Lives On Street" muid="6D2B6A5846C5BC9A" description="A term for filtering Sims that live on the current street." Deprecated="False" filter="0" group="General">
                    <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="89BFADE92CDE3EF5" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                    <TunableVariant type="None" name="match_criteria" class="TunableVariant" default="match_target_population" display="Match Criteria" muid="B6F794CBB9EC9D9B" description="Criteria for a Sim to match this filter. This tunable is ignored if&#xA;the filter is inverted. If inverted, the filter passes if the Sim&#xA;doesn't live on the street and fails if so.&#xA;&#xA;Match Target Population: If the number of townies living on the&#xA;tuned street meets or exceeds the street's tuned townie threshold,&#xA;then this filter term will be considered met.&#xA;&#xA;Must Match: The Sim chosen or created must live on the street." Deprecated="False" filter="0" group="General">
                        <TunableTuple name="match_target_population" class="TunableMatchTargetPopulation" display="Match Target Population" muid="73D98E9CB545AC2B" description="If the street is at its townie population cap, allow all Sims." Deprecated="False" filter="0" group="General" />
                        <TunableTuple name="must_match" class="TunableMustMatch" display="Must Match" muid="788803A3B0D75736" description="Sims must live on the street." Deprecated="False" filter="0" group="General" />
                    </TunableVariant>
                    <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="CC1A3E6FEF448D67" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                    <TunableVariant type="None" name="street" class="OptionalTunable" default="current_street" display="Street" muid="93AACD8F1B8514DB" description="The street the Sim must live on." Deprecated="False" filter="0" group="General">
                        <Tunable name="current_street" class="TunableExistance" display="Current Street" muid="312F26FE3C9B2EB0" />
                        <Tunable type="worlddescription" name="specific_street" class="TunableReference" display="Specific Street" muid="C12D2F3DDCAE3CEA" Deprecated="False" filter="0" group="General" />
                    </TunableVariant>
                </TunableTuple>
                <TunableTuple name="lives_together" class="TunableLivesTogetherFilterTerm" display="Lives Together" muid="3E33050CBAFDFB7A" description="A term for filtering Sims who are in the same travel group or household.&#xA;&#xA;Sims may not be conformed to match this filter term." Deprecated="False" filter="0" group="General">
                    <Tunable type="bool" name="consider_household" class="Tunable" default="True" display="Consider Household" muid="B0881466B1FF4D4" description="If enabled, this will succeed if the Sim is in the same household as&#xA;the requesting Sim." Deprecated="False" filter="0" group="General" />
                    <Tunable type="bool" name="consider_travel_group" class="Tunable" default="True" display="Consider Travel Group" muid="A8D4D6CDA7EE8BC9" description="If enabled, this will succeed if the Sim is in the same household as&#xA;the requesting Sim." Deprecated="False" filter="0" group="General" />
                    <Tunable type="bool" name="exclude_sims_in_both" class="Tunable" default="False" display="Exclude Sims In Both" muid="66F78A357B74A10A" description="If enabled, this will fail if the Sim is in both the same household&#xA;and travel group. If false, it doesn't care." Deprecated="False" filter="0" group="General" />
                    <Tunable type="bool" name="include_roommates_as_household" class="Tunable" default="True" display="Include Roommates As Household" muid="E42B10D10E862AC3" description="If enabled, roommates will be considered part of the same household." Deprecated="False" filter="0" group="General" />
                    <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="B5CEFBA0FED9D4AD" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                    <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="66380138E8A1A3C0" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                </TunableTuple>
                <TunableTuple name="occult_ranked" class="TunableOccultRankFilterTerm" display="Occult Ranked" muid="C0D13C439A00215D" description="A term for filtering Sims based on ranked statistic.&#xA;&#xA;New and existing Sims can be conformed by granting them occult type and &#xA;XP to reach target rank." Deprecated="False" filter="0" group="General">
                    <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="A4AD73307C0FAF59" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                    <TunableEnum type="OccultType" name="occult_type" class="TunableEnumEntry" default="HUMAN" display="Occult Type" muid="559D9649277FE460" static_entries="sims-occult-occult_enums.OccultType" description="The occult type that this entry applies to." Deprecated="False" filter="0" group="General" />
                    <TunableTuple name="rank_values" class="TunableInterval" display="Rank Values" muid="668D9E465F2B7B9C" description="An interval of the Sim rank. Rank must be between the interval &#xA;in order to pass the filter term. We set lower and upper rank interval &#xA;so then Sim that is too weak or too strong will not pass the filter." Deprecated="False" filter="0" group="General">
                        <Tunable type="int" name="lower_bound" class="TunableRange" default="1" display="Lower Bound" muid="D6CF511C0F62095E" min="1" max="None" description="The lower bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                        <Tunable type="int" name="upper_bound" class="TunableRange" default="1" display="Upper Bound" muid="7953816E01F50DE3" min="None" max="None" description="The upper bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                    </TunableTuple>
                </TunableTuple>
                <TunableTuple name="perks" class="TunablePerksFilterTerm" display="Perks" muid="98B9D8C4C24BA9F" description="A term for filtering Sims that may or may not have perks.&#xA;&#xA;New and existing Sims can be conformed by granting or removing the perks." Deprecated="False" filter="0" group="General">
                    <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="C6517C9A0D5606ED" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                    <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="B6B0E514EB92103A" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                    <TunableList name="perks" class="TunableSet" display="Perks" muid="A37F0E6485FE312E" description="List of perks that a Sim should has." Deprecated="False" filter="0" group="General" unique_entries="true">
                        <Tunable type="bucks_perk" class="TunableReference" muid="211B34A37014C703" description="The perks that Sim should has." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                    </TunableList>
                </TunableTuple>
                <TunableTuple name="pregnancy" class="TunablePregnancyFilterTerm" display="Pregnancy" muid="7A03D7987D3E8D2C" description="A term for filtering pregnant sims." Deprecated="False" filter="0" group="General">
                    <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="18E81947E7332AFA" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                    <TunableVariant type="None" name="pregnancy_partner_filter" class="OptionalTunable" default="Use_Spouse_Exclusively" display="Pregnancy Partner Filter" muid="9548F5A94EF7D825" description="Specify how Sims are conformed to match this filter term." Deprecated="False" filter="0" group="General">
                        <Tunable name="Use_Spouse_Exclusively" class="TunableExistance" display="Use Spouse Exclusively" muid="A15B0E4997A30173" />
                        <Tunable type="sim_filter" name="Use_Spouse_or_Filter" class="TunableReference" display="Use Spouse Or Filter" muid="DC687EEC765FD12A" description="The filter that will be used to find a pregnancy partner for for&#xA;this Sim." allow_none="False" Deprecated="False" filter="0" group="General" />
                    </TunableVariant>
                    <TunableVariant type="None" name="pregnancy_progress" class="OptionalTunable" default="disabled" display="Pregnancy Progress" muid="EB55586FDC5607C6" description="If enabled then we will check a specific " Deprecated="False" filter="0" group="General">
                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="716F583EDBE1CC22" />
                        <TunableTuple name="enabled" class="TunableTuple" display="Enabled" muid="76EB3271AC14EE42" description="                " Deprecated="False" filter="0" group="General">
                            <Tunable type="float" name="ideal_value" class="Tunable" default="50.0" display="Ideal Value" muid="C1009C06EE29AD38" description="The ideal commodity value for scoring." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                            <Tunable type="float" name="maximum_value" class="Tunable" default="100.0" display="Maximum Value" muid="4703FC2671AD6B4F" description="The maximum commodity value that will pass." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                            <Tunable type="float" name="minimum_value" class="Tunable" default="0.0" display="Minimum Value" muid="DC6BE703F839E713" description="The minimum commodity value that will pass." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                        </TunableTuple>
                    </TunableVariant>
                </TunableTuple>
                <TunableTuple name="ranked_statistic" class="TunableRankedStatisticFilterTerm" display="Ranked Statistic" muid="3365CF0D1759F4AD" description="A term for filtering Sims based on their ranked skills. The score is&#xA;modified based on the tuned ideal value of the ranked statistic.&#xA;&#xA;New and existing Sims can be conformed by granting them ranked statistics,&#xA;within the new bounds.&#xA;&#xA;If you want to operate on the rank of the ranked statistic then make sure &#xA;that the check box for 'use_rank' is checked. If you want this to behave&#xA;more like a normal statistic using the &quot;points&quot; and not the rank then&#xA;uncheck that value." Deprecated="False" filter="0" group="General">
                    <Tunable type="int" name="ideal_value" class="Tunable" default="2" display="Ideal Value" muid="CC5FBE4C99D1C226" description="Ideal value of the ranked statistic that we are filtering against." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                    <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="A85FCDB319C1A493" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                    <Tunable type="int" name="max_value" class="Tunable" default="5" display="Max Value" muid="58AA891C1C28015B" description="Maximum value of the ranked statistic that we are filtering against." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                    <Tunable type="int" name="min_value" class="Tunable" default="0" display="Min Value" muid="1E6B6BE95F30CBC5" description="Minimum value of the ranked statistic that we are filtering against." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                    <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="BB59422DA1E8AD32" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                    <Tunable type="bool" name="only_check_statistic_owned" class="Tunable" default="False" display="Only Check Statistic Owned" muid="A3C134CF7C129CBF" description="Only require that the statistic is actually owned by the sim,&#xA;ignoring the statistic's level." Deprecated="False" filter="0" group="General" />
                    <Tunable type="statistic" name="ranked_statistic" class="TunableReference" display="Ranked Statistic" muid="5325E46BDDB6B7FF" description="The ranked statistic the range applies to." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="RankedStatistic" />
                    <TunableVariant type="None" name="score_spread_override" class="OptionalTunable" default="disabled" display="Score Spread Override" muid="53569935A832B883" description="If enabled this interval modifies the spread over which the score&#xA;should return.&#xA;&#xA;A score is typically between 0 and 1.  A score of 0 means&#xA;the sim will never be selected, the higher a score is the more&#xA;likely that sim is to be selected.&#xA;&#xA;The score for statistic scoring is based on how close to the &quot;ideal&quot; value&#xA;the value for the specified statistic for a sim is.  It's a 1 if it's&#xA;that exact score.  It's *near* 0  (though not exactly, because the&#xA;general idea behind this filter to make it a weight not elimination)&#xA;as it gets farther from the ideal value and closer to the min or max value.&#xA;(Note: it uses min_value -1 and max_value + 1 as the min/max values to avoid&#xA;hitting 0.  However the min/max values don't have to be accurate,&#xA;so you can hit 0 by adjusting the tuned min/max values here as desired.)&#xA;&#xA;So if you have it tuned as:&#xA;min value: 0&#xA;max value: 5&#xA;ideal value: 5&#xA;The resulting score for each integer will be:&#xA;0 gives you: 0.17&#xA;1 gives you: 0.33&#xA;2 gives you: 0.5&#xA;3 gives you: 0.66&#xA;4 gives you: 0.83&#xA;5 gives you: 1&#xA;&#xA;The minimum filter score tuning is simply a floor.  Regardless of how low&#xA;the calculated score is, if it's lower than the minimum filter score&#xA;the result will simply be replaced with the minimum filter score.&#xA;&#xA;So adding a minimum filter score of 0.5 simply results in:&#xA;0 gives you: 0.5&#xA;1 gives you: 0.5&#xA;2 gives you: 0.5&#xA;3 gives you: 0.66&#xA;4 gives you: 0.83&#xA;5 gives you: 1&#xA;&#xA;This optional tunable modifies the spread over which the score&#xA;is returned (and gets rid of the -1/+1 padding as you can specify&#xA;the padding in the actual range.)  So instead of returning from 0 to 1, &#xA;where 0 is as far away from the ideal as possible, and 1 is at the &#xA;ideal value, it'll return the lower value when the statistic is as &#xA;far away from the ideal value as possible, and the closer you get to the &#xA;ideal value, the closer the return value will be to the maximum value.&#xA;&#xA;So adding a score spread override of 0.5 to 1.0, (instead of a&#xA;minimum filter score) results in:&#xA;0 gives you: 0.5&#xA;1 gives you: 0.6&#xA;2 gives you: 0.7&#xA;3 gives you: 0.8&#xA;4 gives you: 0.9&#xA;5 gives you: 1&#xA;&#xA;Note:  Since, as stated, it's perfectly possible to lie about the&#xA;min/max value, this result is also possible to achieve with clever&#xA;tuning:&#xA;min value of -4&#xA;max value of 5&#xA;ideal value of 5" Deprecated="False" filter="0" group="General">
                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="339D92C6D1E12476" />
                        <TunableTuple name="enabled" class="TunableInterval" display="Enabled" muid="55221092E925045F" description="A tunable interval between lower_bound and upper_bound." Deprecated="False" filter="0" group="General">
                            <Tunable type="float" name="lower_bound" class="TunableRange" default="0.0" display="Lower Bound" muid="7D75C55592CFC49B" min="0" max="None" description="The lower bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                            <Tunable type="float" name="upper_bound" class="TunableRange" default="1.0" display="Upper Bound" muid="B9D49E9B8153D76B" min="None" max="None" description="The upper bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                        </TunableTuple>
                    </TunableVariant>
                    <Tunable type="bool" name="use_rank" class="Tunable" default="True" display="Use Rank" muid="19709C50EF9AAA6B" description="If checked then use the rank value instead of the point value for&#xA;our calculations." Deprecated="False" filter="0" group="General" />
                </TunableTuple>
                <TunableTuple name="relationship_bit" class="TunableRelationshipBitFilterTerm" display="Relationship Bit" muid="F3D462715472C366" description="A term for filtering against relationship bits.&#xA;&#xA;New and existing Sims can be conformed by granting or removing the specified&#xA;bits." Deprecated="False" filter="0" group="General">
                    <TunableList name="black_list" class="TunableSet" display="Black List" muid="2ED0D16AD0146A1" description="A set of relationship bits that requires the requesting sim to not&#xA;have any one matching relationship bits with the sims we are&#xA;scoring." Deprecated="False" filter="0" group="General" unique_entries="true">
                        <Tunable type="relbit" class="TunableReference" muid="78CC7FF2AD51FA2C" description="A relationship bit that we will use to check if the requesting&#xA;sim has it with the sim we are scoring." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                    </TunableList>
                    <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="8FFE04050F7D0839" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                    <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="628002BA3C92F7BC" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                    <TunableVariant type="None" name="relationship_selector" class="TunableVariant" default="use_requesting_sim" display="Relationship Selector" muid="DA56DBE5996363F1" description="Define which relationships are to be considered." Deprecated="False" filter="0" group="General">
                        <TunableTuple name="use_all_sims" class="Tunable_RelationshipAllKnown" display="Use All Sims" muid="6189A74BDB3C2D7E" description="Consider the relationship with all known Sims." Deprecated="False" filter="0" group="General" />
                        <TunableTuple name="use_played_sims" class="Tunable_RelationshipAllKnownPlayed" display="Use Played Sims" muid="34AA48A5C6A97621" description="Consider the relationship with all known played Sims." Deprecated="False" filter="0" group="General" />
                        <TunableTuple name="use_requesting_sim" class="Tunable_RelationshipRequestingSim" display="Use Requesting Sim" muid="4537095FA4AC76CF" description="Consider the relationship with the requesting Sim." Deprecated="False" filter="0" group="General" />
                    </TunableVariant>
                    <Tunable type="bool" name="requesting_sim_override" class="Tunable" default="False" display="Requesting Sim Override" muid="9E0DCA7593B13C11" description="If checked then the filter term will always return 1 if the&#xA;requesting sim info is the sim info we are looking at." Deprecated="False" filter="0" group="General" />
                    <Tunable type="bool" name="reverse_bit_lookup" class="Tunable" default="False" display="Reverse Bit Lookup" muid="AE69E025217E89B7" description="Look up the relationship bits for target to source sim,&#xA;instead of the default behavior of source to target relationship bits" Deprecated="False" filter="0" group="General" />
                    <TunableList name="white_list" class="TunableSet" display="White List" muid="8FE95BAF3686C5A3" description="A set of relationship bits that requires the requesting sim to have&#xA;at least one matching relationship bit with the sims we are scoring." Deprecated="False" filter="0" group="General" unique_entries="true">
                        <Tunable type="relbit" class="TunableReference" muid="56208BD538794D31" description="A relationship bit that we will use to check if the requesting&#xA;sim has it with the sim we are scoring.&#xA;WARNING: If all elements are in a pack, then no sim will pass&#xA;the filter if the pack(s) aren't installed." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                    </TunableList>
                </TunableTuple>
                <TunableTuple name="relationship_bit_collection" class="TunableRelationshipBitCollectionFilterTerm" display="Relationship Bit Collection" muid="97319C201EEFFA95" description="A term for filtering against relationship bits or bit collections.&#xA;&#xA;This filter is NOT conformable" Deprecated="False" filter="0" group="General">
                    <TunableList name="black_list" class="TunableSet" display="Black List" muid="6310D8CE7DEF9539" description="A set of relationship bits or bit collections that requires the &#xA;requesting sim to not have any one matching relationship bits with&#xA;the sims we are scoring." Deprecated="False" filter="0" group="General" unique_entries="true">
                        <Tunable type="relbit" class="TunableReference" muid="331480EFEC3ACBBA" description="A relationship bit or bit collection that we will use to check &#xA;if the requesting sim has it with the sim we are scoring." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                    </TunableList>
                    <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="4D2839B539686407" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                    <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="61787A449B3EB19A" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                    <TunableVariant type="None" name="relationship_selector" class="TunableVariant" default="use_requesting_sim" display="Relationship Selector" muid="C7416A04507A695F" description="Define which relationships are to be considered." Deprecated="False" filter="0" group="General">
                        <TunableTuple name="use_all_sims" class="Tunable_RelationshipAllKnown" display="Use All Sims" muid="ADAE3DBA5FD89FC2" description="Consider the relationship with all known Sims." Deprecated="False" filter="0" group="General" />
                        <TunableTuple name="use_played_sims" class="Tunable_RelationshipAllKnownPlayed" display="Use Played Sims" muid="B81DABF21FA44F62" description="Consider the relationship with all known played Sims." Deprecated="False" filter="0" group="General" />
                        <TunableTuple name="use_requesting_sim" class="Tunable_RelationshipRequestingSim" display="Use Requesting Sim" muid="BB3E9DEC8DA11AF1" description="Consider the relationship with the requesting Sim." Deprecated="False" filter="0" group="General" />
                    </TunableVariant>
                    <Tunable type="bool" name="requesting_sim_override" class="Tunable" default="False" display="Requesting Sim Override" muid="AB9CE671D9AA6C8" description="If checked then the filter term will always return 1 if the&#xA;requesting sim info is the sim info we are looking at." Deprecated="False" filter="0" group="General" />
                    <Tunable type="bool" name="reverse_bit_lookup" class="Tunable" default="False" display="Reverse Bit Lookup" muid="74DAD004FC2736D1" description="Look up the relationship bits for target to source sim,&#xA;instead of the default behavior of source to target relationship bits" Deprecated="False" filter="0" group="General" />
                    <TunableList name="white_list" class="TunableSet" display="White List" muid="5D94DE0E0DBCEB16" description="A set of relationship bits or bit collections that requires the &#xA;requesting sim to have at least one matching relationship bit with &#xA;the sims we are scoring." Deprecated="False" filter="0" group="General" unique_entries="true">
                        <Tunable type="relbit" class="TunableReference" muid="1FA856AEAA77D2D5" description="A relationship bit or bit collection that we will use to check &#xA;if the requesting sim has it with the sim we are scoring.&#xA;WARNING: If all elements are in a pack, then no sim will pass&#xA;the filter if the pack(s) aren't installed." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                    </TunableList>
                </TunableTuple>
                <TunableTuple name="relationship_track" class="TunableRelationshipTrackFilterTerm" display="Relationship Track" muid="A13E29C69F7D497A" description="A term for filtering against relationship tracks. The score is modified&#xA;based on the tuned ideal value of the relationship.&#xA;&#xA;New and existing Sims can be conformed by granting them relationship, within&#xA;the tuned bounds." Deprecated="False" filter="0" group="General">
                    <Tunable type="int" name="ideal_value" class="Tunable" default="0" display="Ideal Value" muid="5C2535F8F306B7CE" description="Ideal value of the relationship track that we are filtering against." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                    <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="57D79CE317649C83" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                    <Tunable type="int" name="max_value" class="Tunable" default="100" display="Max Value" muid="2270C51722ACAD24" description="The maximum value of the relationship track that we are filtering&#xA;against." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                    <Tunable type="int" name="min_value" class="Tunable" default="-100" display="Min Value" muid="9376827D99CCB304" description="The minimum value of the relationship track that we are filtering&#xA;against." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                    <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="23537BD893C1A080" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                    <TunableVariant type="None" name="relationship_selector" class="TunableVariant" default="use_requesting_sim" display="Relationship Selector" muid="8C289AA2316F55D1" description="Define which relationships are to be considered." Deprecated="False" filter="0" group="General">
                        <TunableTuple name="use_all_sims" class="Tunable_RelationshipAllKnown" display="Use All Sims" muid="14BC525B0B5C802" description="Consider the relationship with all known Sims." Deprecated="False" filter="0" group="General" />
                        <TunableTuple name="use_played_sims" class="Tunable_RelationshipAllKnownPlayed" display="Use Played Sims" muid="DBF57539F110D4A2" description="Consider the relationship with all known played Sims." Deprecated="False" filter="0" group="General" />
                        <TunableTuple name="use_requesting_sim" class="Tunable_RelationshipRequestingSim" display="Use Requesting Sim" muid="19FE06B56CD390E0" description="Consider the relationship with the requesting Sim." Deprecated="False" filter="0" group="General" />
                    </TunableVariant>
                    <Tunable type="statistic" name="relationship_track" class="TunableReference" display="Relationship Track" muid="B848283B651856F5" description="The relationship track that we are filtering against." allow_none="False" Deprecated="False" filter="0" group="General" restrict="RelationshipTrack" />
                    <Tunable type="bool" name="requesting_sim_override" class="Tunable" default="False" display="Requesting Sim Override" muid="DE0154EA54DF34EC" description="If checked then the filter term will always return 1 if the&#xA;requesting sim info is the sim info we are looking at." Deprecated="False" filter="0" group="General" />
                </TunableTuple>
                <TunableTuple name="requesting_sim" class="TunableRequestingSimFilterTerm" display="Requesting Sim" muid="4A63D00E27B3AAAE" description="A filter term for matching the requesting sim." Deprecated="False" filter="0" group="General">
                    <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="4E51E144A046EFC8" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                    <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="1C705DC15BF9E440" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                </TunableTuple>
                <TunableTuple name="sim_info_fixups" class="TunableSimInfoFixupFilterTerm" display="Sim Info Fixups" muid="A514D147040A2EB7" description="A term for filtering Sims based on a sim info fixup they may or may not have.&#xA;&#xA;New and existing Sims can be conformed by either granting or removing the&#xA;specified fixup." Deprecated="False" filter="0" group="General">
                    <Tunable type="sim_info_fixup" name="fixup" class="TunableReference" display="Fixup" muid="CB2891F16595350E" description="The sim info fixup to filter against." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                    <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="D7B71EB4DEE104D9" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                    <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="AEE68F1BB674F8D1" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                </TunableTuple>
                <TunableTuple name="sim_info_lod" class="TunableSimLODFilterTerm" display="Sim Info Lod" muid="38B77ECF675B7C4A" description="A term for filtering Sims that have or do not have the specified Sim Info&#xA;LOD value.&#xA;&#xA;Sims may not be conformed to match this filter term." Deprecated="False" filter="0" group="General">
                    <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="BCD3D5895B61F6FA" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                    <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="B3691AB76947967" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                    <TunableEnum type="SimInfoLODLevel" name="sim_lod_value" class="TunableEnumEntry" default="BACKGROUND" display="Sim Lod Value" muid="670631B314841888" static_entries="sims-sim_info_lod.SimInfoLODLevel" description="The Sim LOD value to check against." Deprecated="False" filter="0" group="General" />
                </TunableTuple>
                <TunableTuple name="skill" class="TunableSkillFilterTerm" display="Skill" muid="B8B0903FDDA6F01" description="A term for filtering Sims based on their skill. The score is modified based&#xA;on the tuned ideal value of the skill.&#xA;&#xA;New and existing Sims can be conformed by granting them the skill, within&#xA;the tuned bounds." Deprecated="False" filter="0" group="General">
                    <Tunable type="int" name="ideal_value" class="Tunable" default="5" display="Ideal Value" muid="9652532D76583AD8" description="Ideal value of the skill that we are filtering against." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                    <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="2D3593F67653549E" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                    <Tunable type="int" name="max_value" class="Tunable" default="10" display="Max Value" muid="2CE2BC751132B2E0" description="Maximum value of the skill that we are filtering against." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                    <Tunable type="int" name="min_value" class="Tunable" default="0" display="Min Value" muid="7C88A672A447004F" description="Minimum value of the skill that we are filtering against." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                    <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="2440FF092E9739" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                    <Tunable type="bool" name="only_check_statistic_owned" class="Tunable" default="False" display="Only Check Statistic Owned" muid="D7DB9254DF92B2D4" description="Only require that the statistic is actually owned by the sim,&#xA;ignoring the statistic's level." Deprecated="False" filter="0" group="General" />
                    <TunableVariant type="None" name="score_spread_override" class="OptionalTunable" default="disabled" display="Score Spread Override" muid="8177680C9BDD8A35" description="If enabled this interval modifies the spread over which the score&#xA;should return.&#xA;&#xA;A score is typically between 0 and 1.  A score of 0 means&#xA;the sim will never be selected, the higher a score is the more&#xA;likely that sim is to be selected.&#xA;&#xA;The score for statistic scoring is based on how close to the &quot;ideal&quot; value&#xA;the value for the specified statistic for a sim is.  It's a 1 if it's&#xA;that exact score.  It's *near* 0  (though not exactly, because the&#xA;general idea behind this filter to make it a weight not elimination)&#xA;as it gets farther from the ideal value and closer to the min or max value.&#xA;(Note: it uses min_value -1 and max_value + 1 as the min/max values to avoid&#xA;hitting 0.  However the min/max values don't have to be accurate,&#xA;so you can hit 0 by adjusting the tuned min/max values here as desired.)&#xA;&#xA;So if you have it tuned as:&#xA;min value: 0&#xA;max value: 5&#xA;ideal value: 5&#xA;The resulting score for each integer will be:&#xA;0 gives you: 0.17&#xA;1 gives you: 0.33&#xA;2 gives you: 0.5&#xA;3 gives you: 0.66&#xA;4 gives you: 0.83&#xA;5 gives you: 1&#xA;&#xA;The minimum filter score tuning is simply a floor.  Regardless of how low&#xA;the calculated score is, if it's lower than the minimum filter score&#xA;the result will simply be replaced with the minimum filter score.&#xA;&#xA;So adding a minimum filter score of 0.5 simply results in:&#xA;0 gives you: 0.5&#xA;1 gives you: 0.5&#xA;2 gives you: 0.5&#xA;3 gives you: 0.66&#xA;4 gives you: 0.83&#xA;5 gives you: 1&#xA;&#xA;This optional tunable modifies the spread over which the score&#xA;is returned (and gets rid of the -1/+1 padding as you can specify&#xA;the padding in the actual range.)  So instead of returning from 0 to 1, &#xA;where 0 is as far away from the ideal as possible, and 1 is at the &#xA;ideal value, it'll return the lower value when the statistic is as &#xA;far away from the ideal value as possible, and the closer you get to the &#xA;ideal value, the closer the return value will be to the maximum value.&#xA;&#xA;So adding a score spread override of 0.5 to 1.0, (instead of a&#xA;minimum filter score) results in:&#xA;0 gives you: 0.5&#xA;1 gives you: 0.6&#xA;2 gives you: 0.7&#xA;3 gives you: 0.8&#xA;4 gives you: 0.9&#xA;5 gives you: 1&#xA;&#xA;Note:  Since, as stated, it's perfectly possible to lie about the&#xA;min/max value, this result is also possible to achieve with clever&#xA;tuning:&#xA;min value of -4&#xA;max value of 5&#xA;ideal value of 5" Deprecated="False" filter="0" group="General">
                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="CA049432CBEB72E5" />
                        <TunableTuple name="enabled" class="TunableInterval" display="Enabled" muid="3065B75091C4EC69" description="A tunable interval between lower_bound and upper_bound." Deprecated="False" filter="0" group="General">
                            <Tunable type="float" name="lower_bound" class="TunableRange" default="0.0" display="Lower Bound" muid="16AE63B426BE1C55" min="0" max="None" description="The lower bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                            <Tunable type="float" name="upper_bound" class="TunableRange" default="1.0" display="Upper Bound" muid="CA91CC493D9CCE53" min="None" max="None" description="The upper bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                        </TunableTuple>
                    </TunableVariant>
                    <Tunable type="statistic" name="skill" class="TunableReference" display="Skill" muid="88F4FC88FA1CD943" description="The skill the range applies to." allow_none="False" Deprecated="False" filter="0" group="General" restrict="Skill" />
                </TunableTuple>
                <TunableTuple name="species" class="TunableSpeciesFilterTerm" display="Species" muid="C7F200548CCF7187" description="A term for filtering Sim based on their species.&#xA;&#xA;Only new Sims may be conformed by creating them with a valid species.&#xA;Existing Sims may not be conformed." Deprecated="False" filter="0" group="General">
                    <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="6979318F27D3706A" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                    <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="193BE171E2EF4C09" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                    <TunableEnum type="Species" name="species" class="TunableEnumEntry" default="HUMAN" display="Species" muid="B6C4A94C70BC715E" static_entries="sims-sim_info_types.Species" description="The species to filter for." Deprecated="False" filter="0" group="General" invalid_entries="INVALID" />
                </TunableTuple>
                <TunableTuple name="statistic" class="TunableStatisticFilterTerm" display="Statistic" muid="789E321B24ED3B57" description="A term for filtering Sims based on a statistic. The score is modified based&#xA;on the tuned ideal value of the statistic.&#xA;&#xA;New and existing Sims can be conformed by granting them the statistic, within&#xA;the tuned bounds." Deprecated="False" filter="0" group="General">
                    <Tunable type="float" name="ideal_value" class="Tunable" default="5.0" display="Ideal Value" muid="9F4C35704424722D" description="Ideal value of the statistic that we are filtering against." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                    <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="851302E0218EE37C" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                    <Tunable type="float" name="max_value" class="Tunable" default="10.0" display="Max Value" muid="CD901ED1092AB0E3" description="Maximum value of the statistic that we are filtering against." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                    <Tunable type="float" name="min_value" class="Tunable" default="0.0" display="Min Value" muid="18E28D85C8CF0C7F" description="Minimum value of the statistic that we are filtering against." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                    <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="2BE70A8E3FA29C63" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                    <Tunable type="bool" name="only_check_statistic_owned" class="Tunable" default="False" display="Only Check Statistic Owned" muid="8D844EF81AC958F3" description="Only require that the statistic is actually owned by the sim,&#xA;ignoring the statistic's level." Deprecated="False" filter="0" group="General" />
                    <TunableVariant type="None" name="score_spread_override" class="OptionalTunable" default="disabled" display="Score Spread Override" muid="FA5574277A12504A" description="If enabled this interval modifies the spread over which the score&#xA;should return.&#xA;&#xA;A score is typically between 0 and 1.  A score of 0 means&#xA;the sim will never be selected, the higher a score is the more&#xA;likely that sim is to be selected.&#xA;&#xA;The score for statistic scoring is based on how close to the &quot;ideal&quot; value&#xA;the value for the specified statistic for a sim is.  It's a 1 if it's&#xA;that exact score.  It's *near* 0  (though not exactly, because the&#xA;general idea behind this filter to make it a weight not elimination)&#xA;as it gets farther from the ideal value and closer to the min or max value.&#xA;(Note: it uses min_value -1 and max_value + 1 as the min/max values to avoid&#xA;hitting 0.  However the min/max values don't have to be accurate,&#xA;so you can hit 0 by adjusting the tuned min/max values here as desired.)&#xA;&#xA;So if you have it tuned as:&#xA;min value: 0&#xA;max value: 5&#xA;ideal value: 5&#xA;The resulting score for each integer will be:&#xA;0 gives you: 0.17&#xA;1 gives you: 0.33&#xA;2 gives you: 0.5&#xA;3 gives you: 0.66&#xA;4 gives you: 0.83&#xA;5 gives you: 1&#xA;&#xA;The minimum filter score tuning is simply a floor.  Regardless of how low&#xA;the calculated score is, if it's lower than the minimum filter score&#xA;the result will simply be replaced with the minimum filter score.&#xA;&#xA;So adding a minimum filter score of 0.5 simply results in:&#xA;0 gives you: 0.5&#xA;1 gives you: 0.5&#xA;2 gives you: 0.5&#xA;3 gives you: 0.66&#xA;4 gives you: 0.83&#xA;5 gives you: 1&#xA;&#xA;This optional tunable modifies the spread over which the score&#xA;is returned (and gets rid of the -1/+1 padding as you can specify&#xA;the padding in the actual range.)  So instead of returning from 0 to 1, &#xA;where 0 is as far away from the ideal as possible, and 1 is at the &#xA;ideal value, it'll return the lower value when the statistic is as &#xA;far away from the ideal value as possible, and the closer you get to the &#xA;ideal value, the closer the return value will be to the maximum value.&#xA;&#xA;So adding a score spread override of 0.5 to 1.0, (instead of a&#xA;minimum filter score) results in:&#xA;0 gives you: 0.5&#xA;1 gives you: 0.6&#xA;2 gives you: 0.7&#xA;3 gives you: 0.8&#xA;4 gives you: 0.9&#xA;5 gives you: 1&#xA;&#xA;Note:  Since, as stated, it's perfectly possible to lie about the&#xA;min/max value, this result is also possible to achieve with clever&#xA;tuning:&#xA;min value of -4&#xA;max value of 5&#xA;ideal value of 5" Deprecated="False" filter="0" group="General">
                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="72EE3FFA3D524FDC" />
                        <TunableTuple name="enabled" class="TunableInterval" display="Enabled" muid="E174B1506DEA87E8" description="A tunable interval between lower_bound and upper_bound." Deprecated="False" filter="0" group="General">
                            <Tunable type="float" name="lower_bound" class="TunableRange" default="0.0" display="Lower Bound" muid="FFAC2439DA28424" min="0" max="None" description="The lower bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                            <Tunable type="float" name="upper_bound" class="TunableRange" default="1.0" display="Upper Bound" muid="CCEE8E3B0E5DB75A" min="None" max="None" description="The upper bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                        </TunableTuple>
                    </TunableVariant>
                    <Tunable type="statistic" name="statistic" class="TunableReference" display="Statistic" muid="2C67F790CF9E5DB1" description="The statistic the range applies to." allow_none="False" Deprecated="False" filter="0" group="General" restrict="Statistic" />
                </TunableTuple>
                <TunableTuple name="trait" class="TunableTraitFilterTerm" display="Trait" muid="BC0FD315140B3361" description="A term for filtering Sims based on a trait they may or may not have.&#xA;&#xA;New and existing Sims can be conformed by either granting or removing the&#xA;specified trait." Deprecated="False" filter="0" group="General">
                    <Tunable type="bool" name="ignore_if_wrong_pack" class="Tunable" default="False" display="Ignore If Wrong Pack" muid="1F414CA1D51CAE14" description="If checked then we will ignore this filter term if the specified&#xA;trait isn't found.  (.e.g. trait is from uninstalled pack.)&#xA;For example we'd *like* to pick sims that use umbrellas.  But if &#xA;Seasons isn't installed it's ok to use sims that don't." Deprecated="False" filter="0" group="General" />
                    <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="B4781801EA45AAAE" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                    <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="8BA1AC1BE9F6C962" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                    <Tunable type="trait" name="trait" class="TunableReference" display="Trait" muid="4194372C0F5A0F9E" description="The trait to filter against." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                </TunableTuple>
                <TunableTuple name="university" class="TunableUniversityMajorFilterTerm" display="University" muid="C6459036386C6D75" description="A term for filtering Sims going to university/in a specific Major.&#xA;&#xA;To pass, Sims must have specified major as their current major and still be&#xA;enrolled in at least one class." Deprecated="False" filter="0" group="General">
                    <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="8DD60C26CB10F48" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                    <TunableVariant type="None" name="major" class="TunableVariant" default="any_majors" display="Major" muid="2F7EC3F2179ED81D" description="Which major(s) the sim must be pursuing." Deprecated="False" filter="0" group="General">
                        <TunableTuple name="any_majors" class="Tunable_AnyMajors" display="Any Majors" muid="63B3EF8B3744A084" description="To pass, sim must currently be enrolled in any major. " Deprecated="False" filter="0" group="General">
                            <Tunable type="bool" name="conform_using_skills" class="Tunable" default="False" display="Conform Using Skills" muid="733BC40D1CFB462E" description="If checked then when we conform a Sim using this filter term&#xA;we will use the Sims skills to choose which Major to enroll &#xA;them in. If unchecked we will pick one randomly." Deprecated="False" filter="0" group="General" />
                        </TunableTuple>
                        <TunableTuple name="specific_majors" class="Tunable_SpecificMajors" display="Specific Majors" muid="71643745179DE32A" description="To pass, the sim must currently be enrolled in 1 of the specified majors." Deprecated="False" filter="0" group="General">
                            <TunableList name="_majors" class="TunableList" display="Majors" muid="45EABB4FEAA13D3E" min="1" description="Sim must be currently enrolled in one of the specified majors." Deprecated="False" filter="0" group="General">
                                <Tunable type="university_major" class="TunableReference" muid="2B14BF0B6F35A0BA" description="                    " allow_none="False" Deprecated="False" filter="0" group="General" />
                            </TunableList>
                        </TunableTuple>
                    </TunableVariant>
                    <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="A27BB442D78E7BCA" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                    <TunableVariant type="None" name="university" class="OptionalTunable" default="disabled" display="University" muid="75FEDC914B46404" description="University in which the sim must be enrolled.&#xA;If Disabled, sim can be in any university." Deprecated="False" filter="0" group="General">
                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="EE2E7721137B21E7" />
                        <Tunable type="university" name="enabled" class="TunableReference" display="Enabled" muid="9672DE2C4B425CD2" description="The university to filter for." allow_none="False" Deprecated="False" filter="0" group="General" />
                    </TunableVariant>
                </TunableTuple>
            </TunableVariant>
        </TunableList>

        <Deleted name="audio_sting_on_start" muid="4ECA74F94852F49B" />

        <Deleted name="background_audio" muid="89B99310B1A59A14" />

        <Deleted name="category" muid="43A0D626FAC5EBC1" />

        <Deleted name="compatible_venues" muid="2168A31F23A51B6E" />

        <Deleted name="creation_ui_option" muid="B5FFA5698EF9C7F8" />

        <Deleted name="entitlement" muid="F7CD47EBBC56C82E" />

        <Deleted name="exclusivity" muid="60FFF875AC062FBE" />

        <Deleted name="force_invite_only" muid="BDD55CF10DEEDE19" />

        <Deleted name="goal_button_text" muid="BB562F1FB011ADE0" />

        <Deleted name="goal_sub_text" muid="53E66FE7B266B227" />

        <Deleted name="highlight_first_incomplete_minor_goal" muid="110328EA38CAC515" />

        <Deleted name="job_display_ordering" muid="F5969FB6E510E214" />

        <Deleted name="main_goal" muid="B2FF0023541F850B" />

        <Deleted name="main_goal_audio_sting" muid="8893014CE7249DF1" />

        <Deleted name="max_participants" muid="1F9E50769EAAB973" />

        <Deleted name="minor_goal_chains" muid="E8465EA1C843872A" />

        <TunableTuple name="number_of_members" class="TunableInterval" display="Number Of Members" muid="4B0C84F2C1F56588" description="The interval defines the range of number of members that need to &#xA;fill in the situation job." Deprecated="False" filter="0" group="Situation">
            <Tunable type="int" name="lower_bound" class="TunableRange" default="2" display="Lower Bound" muid="805E7B351A765569" min="1" max="None" description="The lower bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
            <Tunable type="int" name="upper_bound" class="TunableRange" default="3" display="Upper Bound" muid="96E1D16FDB8CE76E" min="None" max="None" description="The upper bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
        </TunableTuple>

        <Tunable type="snippet" name="organization" class="TunableReference" display="Organization" muid="C2286AC38E106C5A" description="The membership list of this organization fills in the situation's&#xA;jobs." allow_none="False" Deprecated="False" filter="0" group="Situation" restrict="Organization" />

        <Deleted name="recommended_job_object_notification" muid="7F8CF64454963CE1" />

        <Deleted name="recommended_job_object_text" muid="E5B3712B45BA5147" />

        <Deleted name="screen_slam_bronze" muid="BA678943F93BB6E6" />

        <Deleted name="screen_slam_gold" muid="5081AA3B0E76973" />

        <Deleted name="screen_slam_no_medal" muid="AFCC6A95E64615BD" />

        <Deleted name="screen_slam_silver" muid="E7B0785136079289" />

        <Deleted name="situation_description" muid="407B8CE26D400E2E" />

        <Deleted name="suppress_scoring_progress_bar" muid="F7BEB3FD2D25621" />

        <Deleted name="targeted_situation" muid="7A6B737FA418924E" />

        <Deleted name="travel_request_behavior" muid="771B29BF7C215A42" />

        <Deleted name="venue_invitation_message" muid="DD135C08210D2AD6" />

        <Deleted name="venue_situation_player_job" muid="624A509AA400D447" />
    </Instance>

    <VersionHistory>
        <ActionList>
            <Action type="kRemove" old_muid="18E1F2B1D6BAAED4" />
            <Action type="kRemove" old_muid="494C661363723A08" />
            <Action type="kRemove" old_muid="D5423E34BD257817" />
            <Action type="kRemove" old_muid="557884AABF5102D8" />
            <Action type="kRemove" old_muid="D682F046EB310435" />
            <Action type="kRemove" old_muid="2B17466E9A861437" />
            <Action type="kRemove" old_muid="9E488449490A134A" />
            <Action type="kRemove" old_muid="D9FD3C41005422C8" />
            <Action type="kRemove" old_muid="AFB2FC99598721C" />
            <Action type="kRemove" old_muid="8A6B1E4DEFA30C1B" />
            <Action type="kRemove" old_muid="937CF6B95C77173D" />
            <Action type="kRemove" old_muid="D90F65699B1CC85C" />
            <Action type="kRemove" old_muid="D779C5F740199122" />
            <Action type="kRemove" old_muid="25F3B3EC7345C94" />
            <Action type="kRemove" old_muid="F683A8CB298E2976" />
            <Action type="kRemove" old_muid="793C3E95F2F3D6DD" />
            <Action type="kRemove" old_muid="4DDD1A10C4E9EB9B" />
            <Action type="kRemove" old_muid="52D93CCE43B24790" />
            <Action type="kRemove" old_muid="B31A2590F44414FB" />
            <Action type="kRemove" old_muid="B791FEEB0A080CE1" />
            <Action type="kRemove" old_muid="154A65D52E0544A1" />
            <Action type="kRemove" old_muid="43FE36E2612A6425" />
            <Action type="kRemove" old_muid="A9451CC398564CD2" />
            <Action type="kRemove" old_muid="4D9E17BA6E7525F" />
            <Action type="kRemove" old_muid="9E4BA4649FE76FD1" />
            <Action type="kRemove" old_muid="A1D44A43DCAC1937" />
            <Action type="kRemove" old_muid="1778ABEEDE97AA90" />
            <Action type="kRemove" old_muid="212058D651C79697" />
            <Action type="kRemove" old_muid="6C237919CECC0FB5" />
            <Action type="kRemove" old_muid="9F3DFFD3C7C6089D" />
            <Action type="kRemove" old_muid="DE476C488F205FAC" />
            <Action type="kRemove" old_muid="CCE466AEE6B3D550" />
            <Action type="kRemove" old_muid="4EB915B6BB3948E2" />
        </ActionList>

        <ActionList>
            <Action type="kRemove" old_muid="8C78EAE9ACA2B0EA" />
            <Action type="kRemove" old_muid="48CEF55497C2DA81" />
            <Action type="kRemove" old_muid="1D8BE1100E73B12A" />
        </ActionList>

        <ActionList>
            <Action type="kRename" old_muid="86A44B8CAA2303C8" new_muid="B6496207913195D9" />
            <Action type="kRename" old_muid="A8BE5B38A74C368C" new_muid="CBF537D6AF9028C3" />
            <Action type="kRemove" old_muid="8C2CFE797548578A" />
        </ActionList>

        <ActionList>
            <Action type="kRename" old_muid="A05FD0A37A3EB1F0" new_muid="2168A31F23A51B6E" />
        </ActionList>

        <ActionList>
            <Action type="kRemove" old_muid="9D368E824C2DD0B" />
            <Action type="kRemove" old_muid="8E0CCCD9580398C1" />
        </ActionList>
    </VersionHistory>
</TuningRoot>