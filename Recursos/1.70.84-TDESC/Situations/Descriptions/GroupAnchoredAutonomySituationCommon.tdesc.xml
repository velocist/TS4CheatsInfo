<?xml version="1.0" encoding="iso-8859-1"?>

<TuningRoot>
    <Instance instance_type="situation" class="GroupAnchoredAutonomySituationCommon" module="situations.ambient.anchored_open_streets_autonomy_situation" muid="9345DFB052F83CC8" description="A class holding common code between situations that are anchoring &#xA;the groups autonomy to a specific position." instance_subclasses_only="True" parents="SituationComplexCommon, SituationComplex, Situation" path="Situations\Descriptions" use_guid_for_reference="True">
        <Tunable type="sim_filter" name="group_filter" class="TunableReference" display="Group Filter" muid="EB2B29ACFB267EF3" description="The group filter for this visit.  " allow_none="False" Deprecated="False" filter="0" group="Roles" restrict="TunableAggregateFilter" />

        <TunableEnum type="Tag" name="object_anchor_tag" class="TunableEnumEntry" default="INVALID" display="Object Anchor Tag" muid="DBB1AC128F3C67DD" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="The tag that defines the objects that are valid for the anchor point.&#xA;The situation will search the object manager for any object with this &#xA;tag and will choose one at random.  This object's position will be the &#xA;anchor point.  It is assumed that the roles in this situation will &#xA;have an autonomy modifier with off_lot_autonomy_rule set to ANCHORED." Deprecated="False" filter="0" group="Roles" />
    </Instance>
</TuningRoot>