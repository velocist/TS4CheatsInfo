<?xml version="1.0" encoding="iso-8859-1"?>

<TuningRoot>
    <Instance instance_type="service_npc" class="ServiceNpc" module="situations.service_npcs.service_npc_tuning" muid="C9FC47AC55C5483F" description="The base class for all Service NPCs" instance_needs_reference="True" instance_subclasses_only="True" path="ServiceNpcs\Descriptions" use_guid_for_reference="True">
        <Tunable type="float" name="_min_duration_left_for_arrival_on_lot" class="TunableSimMinute" default="0" display="Min Duration Left For Arrival On Lot" muid="CB313282C1D75CA8" min="0" max="None" description="When determining whether to fake perform a service, if the player&#xA;sim arrived onto the lot WHILE the service would be actively &#xA;running, if the service would have less than this amount of minutes &#xA;left to be on the lot, we pretend the service already came. &#xA;otherwise, the service npc will show up immediately.&#xA;&#xA;EX: maid works from 1:00pm to 5:00pm. If the player gets home at&#xA;4 pm, the maid would only be able to work 1 hour until she has&#xA;to go home. So if this tuned value is more than 60 minutes, the &#xA;maid will not show up, and we pretend she was already there. If &#xA;this tuned value is say 30 mins, we will not fake perform cleaning &#xA;and the maid will be already on the lot when the player spawns in." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />

        <TunableTuple name="_work_duration_min_max" class="TunableInterval" display="Work Duration Min Max" muid="C91EA14B52651353" description="If we decide to arrive on the lot, the amount of time the service&#xA;npc stays on the lot will be clamped to be within this interval.&#xA;Not to be confused with _min_duration_left_for_arrival_on_lot, &#xA;which is used to determine if the service npc arrives AT ALL.&#xA;&#xA;EX: mailman has _min_duration_left_for_arrival_on_lot set to 0&#xA;This means that if mailman hours are 1:00-4:00pm everyday, if&#xA;the random timer chooses for the mailman to arrive at 4:00, the &#xA;mailman will still arrive.&#xA;&#xA;However, to determine how long the mailman will stay on the lot, we &#xA;will use this interval." Deprecated="False" filter="0" group="General">
            <Tunable type="float" name="lower_bound" class="TunableSimMinute" default="60" display="Lower Bound" muid="4DC8FBD04B2DB912" min="0" max="None" description="The lower bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
            <Tunable type="float" name="upper_bound" class="TunableSimMinute" default="240" display="Upper Bound" muid="4D60481634C1A4E2" min="None" max="None" description="The upper bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
        </TunableTuple>

        <TunableVariant type="None" name="additional_culling_immunity" class="OptionalTunable" default="disabled" display="Additional Culling Immunity" muid="B50873A1BB5C784" description="In enabled, this unit less number will be a boost the Sim's&#xA;importance when the culling system scores this Sim. Higher the&#xA;number, lower the probability this Sim being culled.&#xA;&#xA;Performance WARNING: Remember that NPCs like Butlers can be hired&#xA;by many households via rotational gameplay. This number has to&#xA;balance the desire to keep this Sim around as well as supporting&#xA;multiple player families this service." Deprecated="False" filter="0" group="General">
            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="6D8D2AD7D1EDABF2" />
            <Tunable type="int" name="enabled" class="TunableRange" default="10" display="Enabled" muid="B81B3AB1BDA4D0BF" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
        </TunableVariant>

        <Tunable type="int" name="display_name" class="TunableLocalizedString" default="0x0" display="Display Name" muid="32595355D5FA18B8" description="Display name for this Service NPC type" Deprecated="False" filter="0" group="UI" />

        <Tunable type="bool" name="exclusive_to_household" class="Tunable" default="False" display="Exclusive To Household" muid="285371E76292A8E0" description="If enabled, service NPC will be exclusive to the first household&#xA;that hires the service.  This means, when another household &#xA;request a service NPC, the same Sim will not be considered for&#xA;that other household.&#xA;e.g. Butler should not be the same Sim when hired in multiple&#xA;played households." Deprecated="False" filter="0" group="General" />

        <TunableTuple name="fake_perform_job" class="TunableModifyAllLotItems" display="Fake Perform Job" muid="2ECD61842C2172FD" description="Tune modifications to apply to all objects on a lot.&#xA;Can do state changes, destroy certain items, etc.&#xA;&#xA;EX: for auto cleaning, tune to have objects with Dirtiness state that&#xA;equals dirty to be set to the clean state and tune to have dirty dishes&#xA;and spoiled food to be deleted" Deprecated="False" filter="0" group="General">
            <TunableList name="modifications" class="TunableList" display="Modifications" muid="E9AFED04A2A865A6" description="A list of where the elements define how to modify objects on the&#xA;lot. Each entry is a triplet of an object modification action&#xA;(currently either destroy the object or set its state), a list of&#xA;tests to run on the object to determine if we should actually apply&#xA;the modification, and a priority in case some modifications should&#xA;take precedence over other ones when both of their tests pass.&#xA;&#xA;EX: test list: object's dirtiness state != dirtiness clean&#xA;action: set state to Dirtiness_clean&#xA;&#xA;So dirty objects will become clean" Deprecated="False" filter="0" group="General">
                <TunableTuple class="TunableTuple" muid="3C2F0397990746F6" Deprecated="False" filter="0" group="General">
                    <TunableVariant type="None" name="action" class="TunableVariant" default="none" display="Action" muid="34DD5AC52CCFE63D" Deprecated="False" filter="0" group="General">
                        <TunableTuple name="cleanup_vehicle" class="TunableTuple" display="Cleanup Vehicle" muid="282F7F8275197A2A" description="Cleanup vehicles that are left around." Deprecated="False" filter="0" group="General" />
                        <TunableTuple name="deliver_bills" class="TunableTuple" display="Deliver Bills" muid="2F0E271A49A80C33" Deprecated="False" filter="0" group="General">
                            <TunableTuple name="action_value" class="TunableDeliverBillFakePerform" display="Action Value" muid="7663FFBD590D1027" description="Let the bills manager know that a bill has been delivered and&#xA;trigger appropriate bill-specific functionality." Deprecated="False" filter="0" group="General" />
                        </TunableTuple>
                        <TunableTuple name="destroy_object" class="TunableTuple" display="Destroy Object" muid="4F1F94408F32E277" Deprecated="False" filter="0" group="General" />
                        <TunableTuple name="inventory_transfer" class="TunableTuple" display="Inventory Transfer" muid="A673C4982C419B60" Deprecated="False" filter="0" group="General">
                            <TunableTuple name="action_value" class="TunableInventoryTransferFakePerform" display="Action Value" muid="66C21955F57CAB0C" description="Transfer all objects with a specified inventory type from the&#xA;specified inventory to the inventory of a specified participant." Deprecated="False" filter="0" group="General">
                                <TunableEnum type="InventoryType" name="recipient" class="TunableEnumEntry" default="UNDEFINED" display="Recipient" muid="3333820F5F5F7BAC" dynamic_entries="objects-components-inventory_enums.InventoryType._elements" static_entries="objects-components-inventory_enums.InventoryType" description="The inventory into which the objects will be transferred." Deprecated="False" filter="0" group="General" />
                                <TunableEnum type="InventoryType" name="source" class="TunableEnumEntry" default="UNDEFINED" display="Source" muid="892D4ED4E36DE394" dynamic_entries="objects-components-inventory_enums.InventoryType._elements" static_entries="objects-components-inventory_enums.InventoryType" description="The inventory from which the objects will be transferred." Deprecated="False" filter="0" group="General" />
                            </TunableTuple>
                        </TunableTuple>
                        <TunableTuple name="loot" class="TunableTuple" display="Loot" muid="2B8AA144AEE55982" description="Apply loots to the object." Deprecated="False" filter="0" group="General">
                            <TunableList name="loot_actions" class="TunableSet" display="Loot Actions" muid="40F8CC803BA51F20" description="Loot(s) to apply." Deprecated="False" filter="0" group="General" unique_entries="true">
                                <Tunable type="action" class="TunableReference" muid="557FF8617D0974EA" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                            </TunableList>
                        </TunableTuple>
                        <Tunable name="none" class="TunableExistance" display="None" muid="353D3175343A0908" />
                        <TunableTuple name="set_on_fire" class="TunableTuple" display="Set On Fire" muid="BAE6107C51A42B56" Deprecated="False" filter="0" group="General" />
                        <TunableTuple name="set_state" class="TunableTuple" display="Set State" muid="BC8E93FB8DC70FBA" Deprecated="False" filter="0" group="General">
                            <Tunable type="object_state" name="action_value" class="TunableReference" display="Action Value" muid="92A8522C2469DA83" description="An object state to set the object to" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="ObjectStateValue" />
                        </TunableTuple>
                    </TunableVariant>
                    <Tunable type="float" name="chance" class="TunablePercent" default="100" display="Chance" muid="8E2CD83364DFDF76" min="1" max="100" description="Chance this modification will occur." Deprecated="False" filter="0" group="General" />
                    <TunableList name="global_tests" class="TunableObjectModifyGlobalTestList" display="Global Tests" muid="45BFC1BAEC0601E7" description="Non object-related tests that gate this modification from occurring.  Use this for any global&#xA;tests that don't require the object, such as zone/location/time-elapsed tests.  These tests&#xA;will run only ONCE for this action, unlike 'Tests', which runs PER OBJECT. " Deprecated="False" filter="0" group="General">
                        <TunableVariant type="None" class="TunableObjectModifyGlobalTestVariant" default="none" muid="20E36AFB858EC460" Deprecated="False" filter="0" group="General">
                            <TunableTuple name="elapsed_time" class="TunableTimeElapsedZoneTest" display="Elapsed Time" muid="13AAE379A3FC37B4" description="Test to make sure enough time has passed since the zone was last saved." Deprecated="False" filter="0" group="General">
                                <Tunable type="float" name="minutes_passed" class="TunableSimMinute" default="720" display="Minutes Passed" muid="8D45BE45C69930D9" min="1" max="None" description="This test will pass when the minutes passed is greater than the&#xA;number minutes since last loading into zone." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                            </TunableTuple>
                            <Tunable name="none" class="TunableExistance" display="None" muid="DD4A6E49653BEFE3" />
                            <TunableTuple name="season" class="TunableSeasonTest" display="Season" muid="8CD24846CDF4E01B" description="SeasonTest will test if the current simulation time falls within the&#xA;specified test conditions." Deprecated="False" filter="0" group="General">
                                <Tunable type="bool" name="requires_seasons_pack" class="Tunable" default="True" display="Requires Seasons Pack" muid="A148C59743176458" description="If checked, this test will require that the Seasons pack be &#xA;installed in order for the seasons test to pass.  If unchecked, &#xA;this test will automatically pass." Deprecated="False" filter="0" group="General" />
                                <TunableList name="seasons" class="TunableEnumSet" display="Seasons" muid="11B59E4DE265D13C" min="1" description="Season(s) that we must be in to pass the test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                    <TunableEnum type="SeasonType" class="TunableEnumEntry" default="SUMMER" muid="7FE791738D964F85" static_entries="seasons-seasons_enums.SeasonType" Deprecated="False" filter="0" group="General" />
                                </TunableList>
                                <TunableVariant type="None" name="time_of_season" class="OptionalTunable" default="disabled" display="Time Of Season" muid="3FD3A9BEE5EE7B6C" description="Portion(s) of season(s) that we must be in to pass the test." Deprecated="False" filter="0" group="General">
                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="B1F766527FCA2978" />
                                    <TunableList name="enabled" class="TunableEnumSet" display="Enabled" muid="45A50E6165DB3CA1" min="1" description="Portion(s) of season(s) that we must be in to pass the test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                        <TunableEnum type="SeasonSegment" class="TunableEnumEntry" default="EARLY" muid="114A65B4ED945277" static_entries="seasons-seasons_enums.SeasonSegment" Deprecated="False" filter="0" group="General" />
                                    </TunableList>
                                </TunableVariant>
                            </TunableTuple>
                            <TunableTuple name="zone" class="TunableZoneTest" display="Zone" muid="80CD05E6E6FC3268" description="A tunable factory that tests properties of a particular zone." Deprecated="False" filter="0" group="General">
                                <TunableVariant type="None" name="zone_source" class="TunableVariant" default="use_current_zone" display="Zone Source" muid="42AB13EE8BC7A7F0" description="Which zone we want to test." Deprecated="False" filter="0" group="General">
                                    <TunableTuple name="use_current_zone" class="TunableActiveZone" display="Use Current Zone" muid="D0DBC00212AF9BE0" description="Get the active zone." Deprecated="False" filter="0" group="General" />
                                    <TunableTuple name="use_participant_home_zone" class="TunableParticipantHomeZone" display="Use Participant Home Zone" muid="C1CBFF0F818B0110" description="Get a participant's home zone. Can be None if they don't have one." Deprecated="False" filter="0" group="General">
                                        <TunableEnum type="ParticipantTypeSingleSim" name="participant" class="TunableEnumEntry" default="Actor" display="Participant" muid="FE67580486345B20" static_entries="interactions.ParticipantTypeSingleSim" description="Test against the participant's home zone. Townies' home zone will&#xA;be None." Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                    <TunableTuple name="use_pick_info" class="TunablePickInfoZone" display="Use Pick Info" muid="ABD30A5251EBB50C" description="Get the zone of the lot the user clicked on." Deprecated="False" filter="0" group="General" />
                                    <TunableTuple name="use_picked_zone_ids" class="TunablePickedZoneIds" display="Use Picked Zone Ids" muid="E2E7DAE4A9511D76" description="Get the zone from the interaction's picked_zone_ids participant. Usually&#xA;comes from a picker." Deprecated="False" filter="0" group="General" />
                                </TunableVariant>
                                <TunableTuple name="zone_tests" class="TunableTuple" display="Zone Tests" muid="F5D518A9FE25824D" description="The tests we wish to run on the zone in question." Deprecated="False" filter="0" group="General">
                                    <TunableVariant type="None" name="business_tests" class="OptionalTunable" default="Don't_Test" display="Business Tests" muid="83FA006E31F83BF5" description="If enabled, test if the specified zone is a business or not." Deprecated="False" filter="0" group="General">
                                        <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="F8BE99079166F515" />
                                        <TunableVariant type="None" name="enabled" class="TunableVariant" default="is_business" display="Enabled" muid="8BF5D6910B0B354F" description="Test if the zone is a business, an open business, or a&#xA;closed business." Deprecated="False" filter="0" group="General">
                                            <TunableTuple name="is_business" class="Tunable_IsBusinessTest" display="Is Business" muid="9396F26912EE0C83" description="Test if the zone specified by the zone id is a business or not." Deprecated="False" filter="0" group="General" />
                                            <TunableTuple name="is_business_open" class="Tunable_IsBusinessOpenTest" display="Is Business Open" muid="2671C65B2D027037" description="Test if the zone specified by the zone id is an open business." Deprecated="False" filter="0" group="General" />
                                        </TunableVariant>
                                    </TunableVariant>
                                    <TunableVariant type="None" name="is_apartment" class="OptionalTunable" default="Don't_Test" display="Is Apartment" muid="17D8D6567DCCDD9" description="If checked, test will pass if the zone is an apartment. If&#xA;unchecked, test passes if the zone is NOT an apartment. Useful&#xA; in aspiration tuning, to discriminate between property&#xA;types in tests of lot value. Allows &quot;Own a House worth X&quot; and&#xA;&quot;Own an Apartment worth X&quot;" Deprecated="False" filter="0" group="General">
                                        <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="C4D9B17A05BABB80" />
                                        <TunableTuple name="Is_or_is_not_apartment_zone" class="TunableTuple" display="Is Or Is Not Apartment Zone" muid="5B54EBE337CB6988" description="Test whether the zone is an apartment or not." Deprecated="False" filter="0" group="General">
                                            <Tunable type="bool" name="consider_penthouse_an_apartment" class="Tunable" default="True" display="Consider Penthouse An Apartment" muid="28E2158453F82CC6" description="If enabled, we will consider penthouses to be&#xA;apartments when testing them against the apartment&#xA;check." Deprecated="False" filter="0" group="General" />
                                            <Tunable type="bool" name="is_apartment" class="Tunable" default="True" display="Is Apartment" muid="93FC11F5F91095A7" description="If checked, test will pass if the zone is an apartment.&#xA;If unchecked, test passes if the zone is NOT an&#xA;apartment." Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                    </TunableVariant>
                                    <TunableVariant type="None" name="is_penthouse" class="OptionalTunable" default="disabled" display="Is Penthouse" muid="EFA09A27337E8D66" description="If enabled, test whether or not the current zone is a penthouse." Deprecated="False" filter="0" group="General">
                                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="5C1410906B7487AD" />
                                        <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="772F20123AF3B763" description="If checked, the zone must be a penthouse. If unchecked, the&#xA;zone cannot be a penthouse." Deprecated="False" filter="0" group="General" />
                                    </TunableVariant>
                                    <Tunable type="bool" name="use_source_venue" class="Tunable" default="False" display="Use Source Venue" muid="C43A0BE89C6165F3" description="If enabled, the test will test the source venue instead of the active&#xA;venue.  For example, the Community Lot instead of the active Marketplace.&#xA;Testing the active venue is the default." Deprecated="False" filter="0" group="General" />
                                    <TunableVariant type="None" name="venue_tier" class="OptionalTunable" default="disabled" display="Venue Tier" muid="F6B8FEF37D23DB3F" description="If checked, will verify that the zone's venue is at the tuned &#xA;tier. If &quot;no valid tier&quot; is selected, this test will be True&#xA;if either the current venue doesn't have tiers or if it does but&#xA;it doesn't currently meet any of their requirements." Deprecated="False" filter="0" group="General">
                                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="B8384D270EACFA82" />
                                        <TunableVariant type="None" name="enabled" class="TunableVariant" default="none" display="Enabled" muid="F0D5E154377EA1AA" description="                    " Deprecated="False" filter="0" group="General">
                                            <Tunable name="no_valid_tier" class="TunableExistance" display="No Valid Tier" muid="7E757C3D9BC5981A" />
                                            <Tunable name="none" class="TunableExistance" display="None" muid="F4B5DAF71AD588E2" />
                                            <Tunable type="int" name="tier_number" class="TunableRange" default="0" display="Tier Number" muid="AD7C194D46FF1D49" min="0" max="None" description="The index of the tier to test. This test will return&#xA;true if this tier is active and false otherwise. This&#xA;should be the index of the tier in the tier list and not&#xA;any player-facing index. For instance, if a tier list&#xA;had a single tier, that tier would be 0, and if a second&#xA;tier were added, that second tier would be 1." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        </TunableVariant>
                                    </TunableVariant>
                                    <TunableVariant type="None" name="venue_type" class="OptionalTunable" default="Don't_Test" display="Venue Type" muid="49C2A954F76FC272" description="If checked, will verify the zone's venue type is allowed or&#xA;disallowed." Deprecated="False" filter="0" group="General">
                                        <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="636F87E0997FE379" />
                                        <TunableTuple name="enabled" class="TunableWhiteBlackList" display="Enabled" muid="665944A1E34C0F5F" description="The zone's venue type must pass the whitelist and blacklist&#xA;to pass the test." Deprecated="False" filter="0" group="General">
                                            <TunableVariant type="None" name="blacklist" class="OptionalTunable" default="nothing" display="Blacklist" muid="61CE5FAC3F589B9C" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is not in the blacklist. If no blacklist is&#xA;specified, no items are disallowed." Deprecated="False" filter="0" group="General">
                                                <Tunable name="nothing" class="TunableExistance" display="Nothing" muid="B3CCBFEAE456D7B8" />
                                                <TunableTuple name="specify" class="TunableBlacklist" display="Specify" muid="1C40B6A61ED894A6" description="A tunable blacklist." Deprecated="False" filter="0" group="General">
                                                    <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="96C4BC16BE105C46" description="Blacklisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                        <Tunable type="venue" class="TunableReference" muid="54D276B8F185D3DC" description="Allowed and disallowed venue types." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                    </TunableList>
                                                    <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="F7AE4F9EEECDB435" description="Tunable option for how many items must be in the blacklist&#xA;for the blacklist to fail when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="41BD85F2A6B727A" />
                                                        <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="8B801E7F451B9C64" description="When testing a collection of items, the number of items in&#xA;that collection that are in the blacklist must pass this&#xA;threshold test for the blacklist to disallow them all." Deprecated="False" filter="0" group="General">
                                                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="3F1215CC2EEF6550" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                            <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="9BE8896F13617AD8" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                </TunableTuple>
                                            </TunableVariant>
                                            <TunableVariant type="None" name="whitelist" class="OptionalTunable" default="everything" display="Whitelist" muid="B0BDD64B9F096BFD" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is in the whitelist. If no whitelist is&#xA;specified, all items are allowed." Deprecated="False" filter="0" group="General">
                                                <Tunable name="everything" class="TunableExistance" display="Everything" muid="F043C832B60B032F" />
                                                <TunableTuple name="specify" class="TunableWhitelist" display="Specify" muid="78C11F33368494EE" description="A tunable whitelist." Deprecated="False" filter="0" group="General">
                                                    <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="68AB9B43E2DEA373" description="Tunable option for how many items must be in the whitelist&#xA;for the whitelist to pass when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="E6D7891E2F551785" />
                                                        <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="92F361724DFAA656" description="When testing a collection of items, the number of items in&#xA;that collection that are in the whitelist must pass this&#xA;threshold test for the whitelist to allow them all." Deprecated="False" filter="0" group="General">
                                                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="2D11289B49441CA7" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                            <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="4760E15AC242E3E6" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                    <TunableList name="whitelist" class="TunableSet" display="Whitelist" muid="1A6979537ED4BDCD" description="Whitelisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                        <Tunable type="venue" class="TunableReference" muid="AF968091C51019DC" description="Allowed and disallowed venue types." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                    </TunableList>
                                                </TunableTuple>
                                            </TunableVariant>
                                        </TunableTuple>
                                    </TunableVariant>
                                    <TunableVariant type="None" name="was_owner_household_changed" class="OptionalTunable" default="Don't_Test" display="Was Owner Household Changed" muid="3B6289FE68788039" description="If enabled, test if the lot owner household for the specified zone &#xA;was changed between when the zone was saved and when it was loaded." Deprecated="False" filter="0" group="General">
                                        <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="A31B4B06C634FF30" />
                                        <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="E8F57E9AB301A545" description="If checked,  test will pass if the zone's owner household was changed &#xA;between when the zone was saved and when it was loaded. &#xA;If unchecked, test will pass if the zone's owner household was NOT changed &#xA;between when the zone was saved and when it was loaded. " Deprecated="False" filter="0" group="General" />
                                    </TunableVariant>
                                    <TunableVariant type="None" name="world_tests" class="OptionalTunable" default="disabled" display="World Tests" muid="3ED7BBF00E271B0D" description="If enabled, we test if specified zone is or is not in the specified world(s)" Deprecated="False" filter="0" group="General">
                                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="792D89548EF60BEA" />
                                        <TunableTuple name="enabled" class="TunableWhiteBlackList" display="Enabled" muid="6081D1010FABA4C9" description="Pass if zone is in one of the worlds in the whitelist,&#xA;or fail if it is any of the worlds in the blacklist." Deprecated="False" filter="0" group="General">
                                            <TunableVariant type="None" name="blacklist" class="OptionalTunable" default="nothing" display="Blacklist" muid="3D6491708F149236" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is not in the blacklist. If no blacklist is&#xA;specified, no items are disallowed." Deprecated="False" filter="0" group="General">
                                                <Tunable name="nothing" class="TunableExistance" display="Nothing" muid="CC0304ED2F60A37B" />
                                                <TunableTuple name="specify" class="TunableBlacklist" display="Specify" muid="B50861C8B7CE7BE2" description="A tunable blacklist." Deprecated="False" filter="0" group="General">
                                                    <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="2321ABAC3864EACD" description="Blacklisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                        <Tunable type="worlddescription" class="TunableReference" muid="68BA2DAD1AE343D9" description="World to check against." Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                    </TunableList>
                                                    <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="1CDE60F28C55DE80" description="Tunable option for how many items must be in the blacklist&#xA;for the blacklist to fail when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="BB906A046170FBFC" />
                                                        <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="1ABA6AD1D6F210DA" description="When testing a collection of items, the number of items in&#xA;that collection that are in the blacklist must pass this&#xA;threshold test for the blacklist to disallow them all." Deprecated="False" filter="0" group="General">
                                                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="9209BEBC80DB2A99" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                            <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="C82AB63183B77D1C" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                </TunableTuple>
                                            </TunableVariant>
                                            <TunableVariant type="None" name="whitelist" class="OptionalTunable" default="everything" display="Whitelist" muid="D21093A60E5A322F" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is in the whitelist. If no whitelist is&#xA;specified, all items are allowed." Deprecated="False" filter="0" group="General">
                                                <Tunable name="everything" class="TunableExistance" display="Everything" muid="1F63D59D0B1F8B7C" />
                                                <TunableTuple name="specify" class="TunableWhitelist" display="Specify" muid="E7EBADC42661572B" description="A tunable whitelist." Deprecated="False" filter="0" group="General">
                                                    <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="60CBA84681BCAEFE" description="Tunable option for how many items must be in the whitelist&#xA;for the whitelist to pass when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="F73A158BF1DE02CC" />
                                                        <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="7EA1D071B84E3FE1" description="When testing a collection of items, the number of items in&#xA;that collection that are in the whitelist must pass this&#xA;threshold test for the whitelist to allow them all." Deprecated="False" filter="0" group="General">
                                                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="1B83A9C294A45928" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                            <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="683F7AA8E313177A" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                    <TunableList name="whitelist" class="TunableSet" display="Whitelist" muid="50D8E0CF27FE80C6" description="Whitelisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                        <Tunable type="worlddescription" class="TunableReference" muid="CBE959AA7DF1AF08" description="World to check against." Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                    </TunableList>
                                                </TunableTuple>
                                            </TunableVariant>
                                        </TunableTuple>
                                    </TunableVariant>
                                    <TunableVariant type="None" name="zone_modifiers" class="OptionalTunable" default="Don't_Test" display="Zone Modifiers" muid="9D283DBAFBE8B1C1" description="if enabled, we test the zone modifiers allowed or disallowed." Deprecated="False" filter="0" group="General">
                                        <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="47B21E3EE8B764AD" />
                                        <TunableTuple name="enabled" class="TunableWhiteBlackList" display="Enabled" muid="6262E7F8822F996C" description="The zone's modifiers must pass this whitelist and blacklist for the&#xA;test to pass." Deprecated="False" filter="0" group="General">
                                            <TunableVariant type="None" name="blacklist" class="OptionalTunable" default="nothing" display="Blacklist" muid="3772EB3807C9CD9B" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is not in the blacklist. If no blacklist is&#xA;specified, no items are disallowed." Deprecated="False" filter="0" group="General">
                                                <Tunable name="nothing" class="TunableExistance" display="Nothing" muid="CF96A055AD6ADBC6" />
                                                <TunableTuple name="specify" class="TunableBlacklist" display="Specify" muid="B85EF31C4F9DAF7D" description="A tunable blacklist." Deprecated="False" filter="0" group="General">
                                                    <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="FBD83444A099715C" description="Blacklisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                        <Tunable type="zone_modifier" class="TunableReference" muid="93536B26BC832E47" description="Allowed and disallowed zone modifiers." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                    </TunableList>
                                                    <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="3A079B4DEAB0AC00" description="Tunable option for how many items must be in the blacklist&#xA;for the blacklist to fail when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="88D4A4C84E34B9A9" />
                                                        <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="97663E9F795ACBA9" description="When testing a collection of items, the number of items in&#xA;that collection that are in the blacklist must pass this&#xA;threshold test for the blacklist to disallow them all." Deprecated="False" filter="0" group="General">
                                                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="E2663BC8CF565A" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                            <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="6CFABD4508F25885" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                </TunableTuple>
                                            </TunableVariant>
                                            <TunableVariant type="None" name="whitelist" class="OptionalTunable" default="everything" display="Whitelist" muid="C550D626024014B5" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is in the whitelist. If no whitelist is&#xA;specified, all items are allowed." Deprecated="False" filter="0" group="General">
                                                <Tunable name="everything" class="TunableExistance" display="Everything" muid="9E7E9914E8B6B7EB" />
                                                <TunableTuple name="specify" class="TunableWhitelist" display="Specify" muid="A6A9EE5C7D019205" description="A tunable whitelist." Deprecated="False" filter="0" group="General">
                                                    <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="CCB85877F28591E0" description="Tunable option for how many items must be in the whitelist&#xA;for the whitelist to pass when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="DED8BC9A0CADA3A3" />
                                                        <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="69C9C24459A7B193" description="When testing a collection of items, the number of items in&#xA;that collection that are in the whitelist must pass this&#xA;threshold test for the whitelist to allow them all." Deprecated="False" filter="0" group="General">
                                                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="C227B15ED5F90496" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                            <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="615EDB5D0DFDFF11" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                    <TunableList name="whitelist" class="TunableSet" display="Whitelist" muid="E7526623017DD88A" description="Whitelisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                        <Tunable type="zone_modifier" class="TunableReference" muid="BCC5E9CDA4324B3" description="Allowed and disallowed zone modifiers." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                    </TunableList>
                                                </TunableTuple>
                                            </TunableVariant>
                                        </TunableTuple>
                                    </TunableVariant>
                                </TunableTuple>
                            </TunableTuple>
                        </TunableVariant>
                    </TunableList>
                    <TunableList name="tests" class="TunableObjectModifyTestSet" display="Tests" muid="D67CBA5A223C95D8" description="All least one subtest group (AKA one list item) must pass&#xA;within this list before the action associated with this&#xA;tuning will be run." Deprecated="False" filter="0" group="General">
                        <TunableList class="TunableList" muid="937591573EFC6498" description="A list of tests.  All of these must pass for the group to pass." Deprecated="False" filter="0" group="General">
                            <TunableVariant type="None" class="TunableObjectModifyTestVariant" default="none" muid="67C9268CCCD34256" description="A single tunable test." Deprecated="False" filter="0" group="General">
                                <TunableTuple name="consumable_test" class="TunableConsumableTest" display="Consumable Test" muid="82F9FF567635DC87" description="A test that checks information about consumables." Deprecated="False" filter="0" group="General">
                                    <TunableTuple name="bites_left" class="TunableTuple" display="Bites Left" muid="50B856AE16D42D10" description="A check that tests against the number of bites left before the&#xA;subject is completely consumed." Deprecated="False" filter="0" group="General">
                                        <TunableEnum type="Operator" name="operator" class="TunableOperator" default="EQUAL" display="Operator" muid="54F02596CB149B4A" static_entries="sims4-math.Operator" description="The operator to use for the comparison." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="int" name="value" class="Tunable" default="1" display="Value" muid="26D4969639A47CF9" description="The number of bites to test against." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                    <Tunable type="bool" name="is_consumable" class="Tunable" default="True" display="Is Consumable" muid="32C02962E34BE8E" description="If checked, the subject must be a consumable, if unchecked, the&#xA;subject must not be a consumable." Deprecated="False" filter="0" group="General" />
                                    <TunableEnum type="ParticipantType" name="subject" class="TunableEnumEntry" default="Object" display="Subject" muid="A587CD7AA2CFA820" static_entries="interactions.ParticipantType" description="The subject of the test. This is the consumable object." Deprecated="False" filter="0" group="General" />
                                </TunableTuple>
                                <TunableTuple name="custom_name" class="TunableCustomNameTest" display="Custom Name" muid="134A67CD5ED49C65" description="Require or prohibit an object from having a custom&#xA;name or description set." Deprecated="False" filter="0" group="General">
                                    <TunableVariant type="None" name="has_custom_description" class="OptionalTunable" default="disabled" display="Has Custom Description" muid="6E2D4635BAE278A4" description="If checked, the subject must have a custom description set. If unchecked, it cannot have a custom description set." Deprecated="False" filter="0" group="General">
                                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="1A3DC47F09C3113A" />
                                        <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="1A28D2BBD9862A3B" description="If checked, the subject must have a custom description set. If unchecked, it cannot have a custom description set." Deprecated="False" filter="0" group="General" />
                                    </TunableVariant>
                                    <TunableVariant type="None" name="has_custom_name" class="OptionalTunable" default="disabled" display="Has Custom Name" muid="B30CFE15D230AC59" description="If checked, the subject must have a custom name set. If unchecked, it cannot have a custom name set." Deprecated="False" filter="0" group="General">
                                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="31977EA4502F5F88" />
                                        <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="B0C8333499154323" description="If checked, the subject must have a custom name set. If unchecked, it cannot have a custom name set." Deprecated="False" filter="0" group="General" />
                                    </TunableVariant>
                                    <TunableEnum type="ParticipantType" name="participant" class="TunableEnumEntry" default="Object" display="Participant" muid="18328A053AAA3F63" static_entries="interactions.ParticipantType" description="The subject who is the object of this test." Deprecated="False" filter="0" group="General" />
                                </TunableTuple>
                                <TunableTuple name="elapsed_time" class="TunableTimeElapsedZoneTest" display="Elapsed Time" muid="9B030F1E3A9A872E" description="Test to make sure enough time has passed since the zone was last saved." Deprecated="False" filter="0" group="General">
                                    <Tunable type="float" name="minutes_passed" class="TunableSimMinute" default="720" display="Minutes Passed" muid="3582E98135E38FCE" min="1" max="None" description="This test will pass when the minutes passed is greater than the&#xA;number minutes since last loading into zone." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                </TunableTuple>
                                <TunableTuple name="existence" class="TunableExistenceTest" display="Existence" muid="A234298C08B61293" description="A test to check whether the specified participant exists." Deprecated="False" filter="0" group="General">
                                    <Tunable type="bool" name="allow_hidden_sim_status" class="Tunable" default="False" display="Allow Hidden Sim Status" muid="1C116DDB01C1D36" description="If checked then we will ignore hidden Sim status such that they will count as existing even though they&#xA;have been hidden.  Use this in conjunction with Require Instantiated in order to determine the Sim's actual&#xA;instantiated status. " Deprecated="False" filter="0" group="General" />
                                    <Tunable type="bool" name="exists" class="Tunable" default="True" display="Exists" muid="59CE01E7E5A60280" description="When checked, require the specified participant to exist. When&#xA;unchecked, require the specified participant to not exist." Deprecated="False" filter="0" group="General" />
                                    <TunableEnum type="ParticipantType" name="participant" class="TunableEnumEntry" default="TargetSim" display="Participant" muid="C017C16D1574E29B" static_entries="interactions.ParticipantType" description="The participant for which to check existence." Deprecated="False" filter="0" group="General" />
                                    <Tunable type="bool" name="require_instantiatable" class="Tunable" default="True" display="Require Instantiatable" muid="13573DD580DB2634" description="If checked, the specified participant must be instantiatable. This&#xA;is generally true for all Sims at LOD above MINIMUM." Deprecated="False" filter="0" group="General" />
                                </TunableTuple>
                                <TunableTuple name="game_option" class="TunableSimInfoGameplayOptionsTest" display="Game Option" muid="69EEA17D7E3B856C" description="Test whether or not a Sim has a specific gameplay option set." Deprecated="False" filter="0" group="General">
                                    <TunableEnum type="TestableGameOptions" name="gameplay_option" class="TunableEnumEntry" default="CIVIC_POLICY_NPC_VOTING_ENABLED" display="Gameplay Option" muid="C8D29F5E0FF07276" static_entries="event_testing-game_option_tests.TestableGameOptions" description="The gameplay option to test. This test will pass if this option is&#xA;set." Deprecated="False" filter="0" group="General" />
                                    <Tunable type="bool" name="invert" class="Tunable" default="False" display="Invert" muid="39437ED517DC8AAC" description="If enabled, requires the option to be unset for the test to pass." Deprecated="False" filter="0" group="General" />
                                    <TunableVariant type="None" name="tooltip" class="OptionalTunable" default="disabled" display="Tooltip" muid="4394B3D26F9C9BCB" description="Reason of failure." Deprecated="False" filter="0" group="General">
                                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="B305C29258D7F17B" />
                                        <Tunable type="int" name="enabled" class="TunableLocalizedString" default="0x0" display="Enabled" muid="627FA81F56A11F42" description="Reason of failure." Deprecated="False" filter="0" group="General" />
                                    </TunableVariant>
                                </TunableTuple>
                                <TunableTuple name="inventory" class="TunableInventoryTest" display="Inventory" muid="90552E7B4D5CC6E3" description="A test to check on the contents of either a sim inventory or&#xA;an object inventory." Deprecated="False" filter="0" group="General">
                                    <TunableVariant type="None" name="contents_check" class="TunableVariant" default="has_anything" display="Contents Check" muid="C47B893BA0A9F5F5" description="Checks to run on each object of the specified inventory" Deprecated="False" filter="0" group="General">
                                        <Tunable name="has_anything" class="TunableExistance" display="Has Anything" muid="1DA5954AA44FF21" />
                                        <TunableTuple name="has_object_of_participant_type" class="TunableTuple" display="Has Object Of Participant Type" muid="33C81729879D76EA" description="Participant type we want to test if its in the selected&#xA;inventory." Deprecated="False" filter="0" group="General">
                                            <TunableEnum type="ParticipantType" name="participant" class="TunableEnumEntry" default="Object" display="Participant" muid="72B3E65AA7245572" static_entries="interactions.ParticipantType" description="Which participant of the interaction do we want to validate&#xA;on the inventory. " Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                        <TunableTuple name="has_object_with_def" class="TunableTuple" display="Has Object With Def" muid="66D24D74E980FAFE" Deprecated="False" filter="0" group="General">
                                            <Tunable type="object" name="definition" class="TunableReference" display="Definition" muid="424E7E8F2CBCBB1E" description="The object definition to look for inside inventory." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                        </TunableTuple>
                                        <TunableTuple name="has_object_with_states" class="BasicStateCheckFactory" display="Has Object With States" muid="6351E7F5B2C096D" description="This option tests crafted item's tags against a list of possible&#xA;tags." Deprecated="False" filter="0" group="General">
                                            <TunableVariant type="None" name="object_requirement" class="TunableVariant" default="any_object" display="Object Requirement" muid="FEBDB2E25A5B77A9" Deprecated="False" filter="0" group="General">
                                                <Tunable name="any_object" class="TunableExistance" display="Any Object" muid="61F316B6461ADE26" />
                                                <TunableTuple name="definition" class="TunableTuple" display="Definition" muid="F1D8ADEE35EBA69D" Deprecated="False" filter="0" group="General">
                                                    <Tunable type="object" name="definition" class="TunableReference" display="Definition" muid="1FDB5480591FDBC0" description="The object must have this definition." allow_none="False" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableTuple name="tag" class="TunableTuple" display="Tag" muid="966F78FBC1A84B31" Deprecated="False" filter="0" group="General">
                                                    <TunableTuple name="tag" class="CraftTaggedItemFactory" display="Tag" muid="A6EC11B27BA44561" description="The object must have this tag." Deprecated="False" filter="0" group="General">
                                                        <TunableList name="tag_set" class="TunableSet" display="Tag Set" muid="B151BB044BCE0519" description="The tag of objects we want to test ownership of" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                            <TunableEnum type="Tag" class="TunableEnumEntry" default="INVALID" muid="192991836575A899" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="What tag to test for" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                        </TunableList>
                                                        <TunableEnum type="TagTestType" name="test_type" class="TunableEnumEntry" default="CONTAINS_ANY_TAG_IN_SET" display="Test Type" muid="2C0584672E29428B" static_entries="objects-object_tests.TagTestType" description="How to test the tags in the tag set against the objects on the lot." Deprecated="False" filter="0" group="General" />
                                                    </TunableTuple>
                                                </TunableTuple>
                                            </TunableVariant>
                                            <TunableList name="state_set" class="TunableSet" display="State Set" muid="4859C52EAA0FBCA1" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                <Tunable type="object_state" class="TunableReference" muid="9AD22BB26473D361" description="What state to test for." allow_none="False" Deprecated="False" filter="0" group="General" />
                                            </TunableList>
                                            <TunableEnum type="StateTestType" name="test_type" class="TunableEnumEntry" default="CONTAINS_ANY_STATE_IN_SET" display="Test Type" muid="BF9086AAAD39BCE8" static_entries="objects-object_tests.StateTestType" description="How to test the states in the state set against the objects in&#xA;the inventory." Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                        <TunableTuple name="has_object_with_tag" class="CraftTaggedItemFactory" display="Has Object With Tag" muid="7258665A6152C0D2" description="This option tests crafted item's tags against a list of possible tags" Deprecated="False" filter="0" group="General">
                                            <TunableList name="tag_set" class="TunableSet" display="Tag Set" muid="30278A9C6F572A5F" description="The tag of objects we want to test ownership of" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                <TunableEnum type="Tag" class="TunableEnumEntry" default="INVALID" muid="D80E82AD913D6552" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="What tag to test for" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                            </TunableList>
                                            <TunableEnum type="TagTestType" name="test_type" class="TunableEnumEntry" default="CONTAINS_ANY_TAG_IN_SET" display="Test Type" muid="B85E478378C6E179" static_entries="objects-object_tests.TagTestType" description="How to test the tags in the tag set against the objects on the lot." Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                    </TunableVariant>
                                    <TunableVariant type="None" name="inventory_location" class="TunableVariant" default="participant_inventory" display="Inventory Location" muid="855255BC928EBCC1" description="Who owns the inventory. Either look in the inventory of a &#xA;participant or specify an object inventory type directly.&#xA;&#xA;If participant returns multiple inventory owners, the test will &#xA;pass only if ALL of those owners pass the inventory content test." Deprecated="False" filter="0" group="General">
                                        <TunableTuple name="hidden_inventory_objects" class="TunableTuple" display="Hidden Inventory Objects" muid="997E8433A4A3030E" Deprecated="False" filter="0" group="General">
                                            <TunableEnum type="InventoryType" name="inventory" class="TunableEnumEntry" default="UNDEFINED" display="Inventory" muid="C1510D4E4EF11202" dynamic_entries="objects-components-inventory_enums.InventoryType._elements" static_entries="objects-components-inventory_enums.InventoryType" description="Check in the hidden inventory for objects that can go into the&#xA;specified inventory type. EX: check that there are mailbox&#xA;objects in the hidden inventory" Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                        <TunableTuple name="object_inventory_type" class="TunableTuple" display="Object Inventory Type" muid="68DF986D1CCA0E43" Deprecated="False" filter="0" group="General">
                                            <TunableEnum type="InventoryType" name="inventory" class="TunableEnumEntry" default="UNDEFINED" display="Inventory" muid="787C72DCE6373341" dynamic_entries="objects-components-inventory_enums.InventoryType._elements" static_entries="objects-components-inventory_enums.InventoryType" description="Check the global Object inventory that has the specified type.&#xA;EX: check in the global fridge inventory that exists for all&#xA;fridges" Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                        <TunableTuple name="participant_inventory" class="TunableTuple" display="Participant Inventory" muid="5F45B36BF8E0BA8" Deprecated="False" filter="0" group="General">
                                            <TunableEnum type="ParticipantType" name="inventory" class="TunableEnumEntry" default="Actor" display="Inventory" muid="821C269BE0E5DB11" static_entries="interactions.ParticipantType" description="The owner of the inventory" Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                    </TunableVariant>
                                    <TunableTuple name="required_count" class="TunableThreshold" display="Required Count" muid="B7E3C1B7C5828A68" description="The inventory must have a tunable threshold of objects that&#xA;pass the contents check test.&#xA;&#xA;EX: test is object definition of type pizza. required count is enabled&#xA;and has a threshold of &gt;= 5. That means this test will pass if you&#xA;have 5 or more pizzas in your inventory. To check if any objects&#xA;exist, use required count &gt;= 1" Deprecated="False" filter="0" group="General">
                                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="5B3D86F51D8B185F" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="int" name="value" class="Tunable" default="1" display="Value" muid="20B8E9A170A5A8F3" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                    <TunableEnum type="TestHiddenInventories" name="test_hidden" class="TunableEnumEntry" default="ANY" display="Test Hidden" muid="8D9246BABA5A3657" static_entries="objects-object_tests.InventoryTest.TestHiddenInventories" description="Optionally restrict to only hidden or non-hidden inventories." Deprecated="False" filter="0" group="General" />
                                </TunableTuple>
                                <TunableTuple name="location" class="TunableLocationTest" display="Location" muid="C3AEFAC573791E3C" description="Tests for object locations.&#xA;Outside: Check if an object is on the inside or outside (has a roof over&#xA;its head)&#xA;Natural ground: Checks the floor tiles where the object is to see if it &#xA;qualifies as natural ground" Deprecated="False" filter="0" group="General">
                                    <TunableTuple name="location_tests" class="TunableTuple" display="Location Tests" muid="D9C32927DFEF34A" Deprecated="False" filter="0" group="General">
                                        <TunableVariant type="None" name="has_terrain_tag" class="OptionalTunable" default="Don't_Test" display="Has Terrain Tag" muid="A20CBB9799B7E97E" description="If checked, will verify the subject of the test is currently on&#xA;the tuned terrain tag." Deprecated="False" filter="0" group="General">
                                            <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="67121A3CF304B478" />
                                            <TunableTuple name="enabled" class="TunableTuple" display="Enabled" muid="6FCC085AC9EB30C" description=",&#xA;A set of terrain tags required for this test to pass." Deprecated="False" filter="0" group="General">
                                                <Tunable type="bool" name="negate" class="Tunable" default="False" display="Negate" muid="2EF98E322BBAFD22" description="If checked, the test will be inverted. In other words,&#xA;the test will fail if at least one tag is detected at&#xA;this location." Deprecated="False" filter="0" group="General" />
                                                <TunableList name="terrain_tags" class="TunableEnumSet" display="Terrain Tags" muid="97D1AF9C53357241" description="A set of terrain tags. Only one of these tags needs to be&#xA;present at this location. Although it is not tunable, there&#xA;is a threshold weight underneath which a terrain tag will&#xA;not appear to be present." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                    <TunableEnum type="TerrainTag" class="TunableEnumEntry" default="INVALID" muid="3BE9260ED8399AEC" static_entries="world-terrain_enums.TerrainTag" Deprecated="False" filter="0" group="General" />
                                                </TunableList>
                                                <Tunable type="bool" name="test_floor_tiles" class="Tunable" default="False" display="Test Floor Tiles" muid="834DBBC24DEE9541" description="If checked, floor tiles will be tested. Otherwise, &#xA;it'll only check the terrain and will ignore the &#xA;floor tiles on the terrain." Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                        </TunableVariant>
                                        <TunableVariant type="None" name="in_common_area" class="OptionalTunable" default="Don't_Test" display="In Common Area" muid="19CF9EDE86CCCC85" description="If checked, will verify the subject is in the common area&#xA;of an apartment.  If unchecked will verify the subject is not." Deprecated="False" filter="0" group="General">
                                            <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="A940326DBFC3AB" />
                                            <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="5E22996CB3D90E08" Deprecated="False" filter="0" group="General" />
                                        </TunableVariant>
                                        <TunableVariant type="None" name="is_fire_allowed" class="OptionalTunable" default="Don't_Test" display="Is Fire Allowed" muid="66883B1D0565DE9B" description="If checked, will verify if fire is possible at the subject's position. &#xA;If unchecked, will pass if fire is not possible.&#xA;If not enabled, doesn't care either way." Deprecated="False" filter="0" group="General">
                                            <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="13B11DBF59B58A89" />
                                            <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="E22E556879576B5E" Deprecated="False" filter="0" group="General" />
                                        </TunableVariant>
                                        <TunableVariant type="None" name="is_in_slot" class="OptionalTunable" default="Don't_Test" display="Is In Slot" muid="F5948362C4667182" description="If enabled will test if the object is attacked/deattached to&#xA;any of possible tuned slots.&#xA;If you tune a slot type set the test will test if the object &#xA;is slotted or not slotted into into any of those types. " Deprecated="False" filter="0" group="General">
                                            <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="3CF6095D60DB1C52" />
                                            <TunableTuple name="enabled" class="TunableTuple" display="Enabled" muid="1FC1970760E4E51" description="Test if an object is current slotted in any of a possible&#xA;list of slot types.&#xA;Empty slot type set is allowed for testing for slotted or&#xA;not slotted only." Deprecated="False" filter="0" group="General">
                                                <TunableVariant type="None" name="slot_test_type" class="TunableVariant" default="any_slot" display="Slot Test Type" muid="FFE646FE1F28CE25" description="Strategy to test the slots:&#xA;Any Slot - is the object in any slot&#xA;Surface Slot - is object is in a surface slot&#xA;Specific Slot - is the object in specific list of slots" Deprecated="False" filter="0" group="General">
                                                    <TunableTuple name="any_slot" class="TunableSlotTestType" display="Any Slot" muid="FC941F9AC459BA1F" description="Singleton factory for testing if object is slotted." Deprecated="False" filter="0" group="General">
                                                        <Tunable type="bool" name="require_slotted" class="Tunable" default="True" display="Require Slotted" muid="E6C66BE4FF425CF8" description="If checked, return success if the object is slotted&#xA;If unchecked, test the absense of slotting." Deprecated="False" filter="0" group="General" />
                                                    </TunableTuple>
                                                    <TunableTuple name="specific_slot" class="TunableSpecificSlotTest" display="Specific Slot" muid="61C95DEFD8B8EC02" description="Subclass of SlotTestType that can check against a specific&#xA;slot set." Deprecated="False" filter="0" group="General">
                                                        <Tunable type="bool" name="require_slotted" class="Tunable" default="True" display="Require Slotted" muid="2FBD60B156A49098" description="If checked, return success if the object is slotted&#xA;If unchecked, test the absense of slotting." Deprecated="False" filter="0" group="General" />
                                                        <Tunable type="slot_type_set" name="specific_slot_set" class="TunableReference" display="Specific Slot Set" muid="7CBBC371AB235012" description="Set of slots the object may be attached to." allow_none="False" Deprecated="False" filter="0" group="General" />
                                                    </TunableTuple>
                                                    <TunableTuple name="surface_slot" class="TunableSurfaceSlotTest" display="Surface Slot" muid="83CA594428997DB7" description="Subclass of SlotTestType that checks that a slot has&#xA;is_surface set to true." Deprecated="False" filter="0" group="General">
                                                        <Tunable type="bool" name="require_slotted" class="Tunable" default="True" display="Require Slotted" muid="F865C9A959880964" description="If checked, return success if the object is slotted&#xA;If unchecked, test the absense of slotting." Deprecated="False" filter="0" group="General" />
                                                    </TunableTuple>
                                                </TunableVariant>
                                            </TunableTuple>
                                        </TunableVariant>
                                        <TunableVariant type="None" name="is_inside_building" class="OptionalTunable" default="Don't_Test" display="Is Inside Building" muid="70BC348BD7D10C4A" description="If checked, will verify if the subject of the test is inside a&#xA;building. This uses a client function that checks if the block&#xA;the sim is mostly enclosed by walls or if not, if the adjoining&#xA;blocks are themselves enclosed. This should be used when we&#xA;want to test if a subject is inside a normally constructed &#xA;building. If we simply want to test whether the subject is &#xA;covered / has a roof over them, use is_outside. See comment on&#xA;is_outside for more details. If unchecked, will negate this &#xA;test." Deprecated="False" filter="0" group="General">
                                            <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="A07110F62E21D968" />
                                            <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="D54204E7A5468B8D" Deprecated="False" filter="0" group="General" />
                                        </TunableVariant>
                                        <TunableVariant type="None" name="is_natural_ground" class="OptionalTunable" default="Don't_Test" display="Is Natural Ground" muid="F93E50DD4D1278E7" description="If checked, will verify the subject of the test is on natural &#xA;ground (no floor tiles are under him).&#xA;Otherwise, will verify the subject of the test is not on &#xA;natural ground." Deprecated="False" filter="0" group="General">
                                            <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="501E4A5593F2F533" />
                                            <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="4477D9154D1EF928" Deprecated="False" filter="0" group="General" />
                                        </TunableVariant>
                                        <TunableVariant type="None" name="is_on_active_lot" class="OptionalTunable" default="Don't_Test" display="Is On Active Lot" muid="990FD40C8BC1836" description="If disabled the test will not be used.&#xA;If enabled and checked, the test will pass if the subject is&#xA;on the active lot. (their center is within the lot bounds)&#xA;If enabled and not checked, the test will pass if the subject is &#xA;outside of the active lot.&#xA;&#xA;For example, Ask To Leave is tuned with this enabled and checked&#xA;for the TargetSim. You can only ask someone to leave if they&#xA;are actually on the active lot, but not if they are wandering&#xA;around in the open streets." Deprecated="False" filter="0" group="General">
                                            <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="E564D9B06B509270" />
                                            <TunableTuple name="Is_or_is_not_on_active_lot" class="TunableTuple" display="Is Or Is Not On Active Lot" muid="BEC999A40D8525AC" Deprecated="False" filter="0" group="General">
                                                <Tunable type="bool" name="include_spawn_point" class="Tunable" default="False" display="Include Spawn Point" muid="4DBA9FDB56D872C7" description="If set to true, we will consider the lot's spawn point as part of the active lot." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="bool" name="is_or_is_not_on_active_lot" class="Tunable" default="True" display="Is Or Is Not On Active Lot" muid="4965C0BC8B0E4ECD" description="If checked then the test will pass if the subject is on&#xA;the active lot." Deprecated="False" filter="0" group="General" />
                                                <TunableVariant type="None" name="tolerance" class="TunableVariant" default="explicit" display="Tolerance" muid="512100FEA4903D6E" Deprecated="False" filter="0" group="General">
                                                    <Tunable type="int" name="explicit" class="Tunable" default="0" display="Explicit" muid="897C755605948D20" description="The tolerance from the edge of the lot that the&#xA;location test will use in order to determine if the&#xA;test target is considered on lot or not." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                    <TunableTuple name="use_default_tolerance" class="UseDefaultOfflotToleranceFactory" display="Use Default Tolerance" muid="238D25DAC7A4D369" description="Use the default tuned global offlot tolerance tuned&#xA;in objects.components.statistic_component.Default Off Lot." Deprecated="False" filter="0" group="General" />
                                                </TunableVariant>
                                            </TunableTuple>
                                        </TunableVariant>
                                        <TunableVariant type="None" name="is_on_level" class="OptionalTunable" default="Don't_Test" display="Is On Level" muid="2CCFEBE8E82E2F87" description="If enabled, we check the participant's current level against&#xA;the tuned threshold.  In the case of sims in pools, the effective&#xA;level will be that of the surface of the pool, not the bottom." Deprecated="False" filter="0" group="General">
                                            <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="F222BFF6E6AED100" />
                                            <TunableTuple name="enabled" class="TunableThreshold" display="Enabled" muid="40793CD49F0BB0F3" description="Value/comparison pair used to define a Threshold." Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="127687D2F4C9E65D" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="int" name="value" class="Tunable" default="0" display="Value" muid="133A885F9763D4BB" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                        </TunableVariant>
                                        <TunableVariant type="None" name="is_outside" class="OptionalTunable" default="Don't_Test" display="Is Outside" muid="1316D6EB7782CEC9" description="PLEASE BE AWARE. If checked, will verify if the subject of the&#xA;test does not have a roof over their head. If unchecked, will &#xA;test if the subject has a roof over their head. If the &#xA;intention is to determine if a subject is in/not in a building, &#xA;this test is deprecated in favor of is_inside_building. If you &#xA;would like to test if a subject is inside a building, but also &#xA;need to test if they have a roof over their head, please use &#xA;both options." Deprecated="False" filter="0" group="General">
                                            <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="AF944C65A9BC3124" />
                                            <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="4E275DE05115467D" Deprecated="False" filter="0" group="General" />
                                        </TunableVariant>
                                        <TunableVariant type="None" name="is_venue_type" class="OptionalTunable" default="Don't_Test" display="Is Venue Type" muid="F281F81F26268020" description="If checked, will verify if the subject is at a venue of the&#xA;specified type." Deprecated="False" filter="0" group="General">
                                            <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="C4FE1A356CE6E37F" />
                                            <TunableTuple name="enabled" class="TunableTuple" display="Enabled" muid="6B449DC082772ED3" description="Venue type required for this test to pass." Deprecated="False" filter="0" group="General">
                                                <Tunable type="bool" name="negate" class="Tunable" default="False" display="Negate" muid="DE28E577158505D5" description="If enabled, the test will return true if the subject&#xA;IS NOT at a venue of the specified type." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="bool" name="use_source_venue" class="Tunable" default="False" display="Use Source Venue" muid="83860050B080B6B3" description="If enabled, the test will test the source venue instead of the active&#xA;venue.  For example, the Community Lot instead of the active Marketplace.&#xA;Testing the active venue is the default." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="venue" name="venue_type" class="TunableReference" display="Venue Type" muid="D763AF0E7AC3D871" description="Venue type to test against." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                            </TunableTuple>
                                        </TunableVariant>
                                        <TunableVariant type="None" name="valid_surface_types" class="OptionalTunable" default="Don't_Test" display="Valid Surface Types" muid="9D7AD220900D51D5" description="If enabled, we will test the surface type of the subject&#xA;against prohibited or required surface types." Deprecated="False" filter="0" group="General">
                                            <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="DEFBA3C4E0B5E76F" />
                                            <TunableTuple name="Test_Surface_Types" class="TunableWhiteBlackList" display="Test Surface Types" muid="85ED6682884C169C" description="Required and Prohibited Surface Types. " Deprecated="False" filter="0" group="General">
                                                <TunableVariant type="None" name="blacklist" class="OptionalTunable" default="nothing" display="Blacklist" muid="40F174A6E33FE7CF" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is not in the blacklist. If no blacklist is&#xA;specified, no items are disallowed." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="nothing" class="TunableExistance" display="Nothing" muid="9D3EF5D7600737F2" />
                                                    <TunableTuple name="specify" class="TunableBlacklist" display="Specify" muid="725D25D754D2A3E9" description="A tunable blacklist." Deprecated="False" filter="0" group="General">
                                                        <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="40FCC4D7B4C58C8E" description="Blacklisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                            <TunableEnum type="SurfaceType" class="TunableEnumEntry" default="SURFACETYPE_WORLD" muid="280B4E164137F2F" static_entries="routing.SurfaceType" description="Surface Type the object is placed on." Deprecated="False" filter="0" group="General" invalid_entries="SURFACETYPE_UNKNOWN" />
                                                        </TunableList>
                                                        <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="56A9E31F8FBDB2E8" description="Tunable option for how many items must be in the blacklist&#xA;for the blacklist to fail when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                            <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="3BD3F6348041495C" />
                                                            <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="FCE15A0815B19CD3" description="When testing a collection of items, the number of items in&#xA;that collection that are in the blacklist must pass this&#xA;threshold test for the blacklist to disallow them all." Deprecated="False" filter="0" group="General">
                                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="106E7C5F32782DF2" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="86F0B1E1C4FEC3C4" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                            </TunableTuple>
                                                        </TunableVariant>
                                                    </TunableTuple>
                                                </TunableVariant>
                                                <TunableVariant type="None" name="whitelist" class="OptionalTunable" default="everything" display="Whitelist" muid="F5934CE76A8278B8" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is in the whitelist. If no whitelist is&#xA;specified, all items are allowed." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="everything" class="TunableExistance" display="Everything" muid="D2D3C941A74F15C7" />
                                                    <TunableTuple name="specify" class="TunableWhitelist" display="Specify" muid="E6620A6C04F03C99" description="A tunable whitelist." Deprecated="False" filter="0" group="General">
                                                        <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="1DE246D7A05B4CCC" description="Tunable option for how many items must be in the whitelist&#xA;for the whitelist to pass when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                            <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="C3A69FA6A45F4573" />
                                                            <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="42D17BB2BBD2757F" description="When testing a collection of items, the number of items in&#xA;that collection that are in the whitelist must pass this&#xA;threshold test for the whitelist to allow them all." Deprecated="False" filter="0" group="General">
                                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="E2C072746BDA7C92" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="DCB2C4E1C7218E4E" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                            </TunableTuple>
                                                        </TunableVariant>
                                                        <TunableList name="whitelist" class="TunableSet" display="Whitelist" muid="3F82D552F373921" description="Whitelisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                            <TunableEnum type="SurfaceType" class="TunableEnumEntry" default="SURFACETYPE_WORLD" muid="64221479A1470876" static_entries="routing.SurfaceType" description="Surface Type the object is placed on." Deprecated="False" filter="0" group="General" invalid_entries="SURFACETYPE_UNKNOWN" />
                                                        </TunableList>
                                                    </TunableTuple>
                                                </TunableVariant>
                                            </TunableTuple>
                                        </TunableVariant>
                                    </TunableTuple>
                                </TunableTuple>
                                <Tunable name="none" class="TunableExistance" display="None" muid="6D2F345777380B94" />
                                <TunableTuple name="object_definition" class="TunableObjectMatchesDefinitionOrTagTest" display="Object Definition" muid="556821565EC42B" description="Check to see if the specified object matches either a static definition or a set of tags" Deprecated="False" filter="0" group="General">
                                    <TunableVariant type="None" name="item" class="TunableVariant" default="tagged_item" display="Item" muid="69574887B8639F5" description="Whether to test for a specific item or item that has a set of tags" Deprecated="False" filter="0" group="General">
                                        <TunableTuple name="actual_item" class="CraftActualItemFactory" display="Actual Item" muid="F8A1E6A7531E1BC" description="This option tests crafted item against a list of possible items" Deprecated="False" filter="0" group="General">
                                            <TunableList name="items_to_check" class="TunableList" display="Items To Check" muid="41D314052A9A7FF2" Deprecated="False" filter="0" group="General">
                                                <Tunable type="object" class="TunableReference" muid="FB80C12C28EA9E2C" description="Object that qualifies for this check." allow_none="False" Deprecated="False" filter="0" group="General" />
                                            </TunableList>
                                        </TunableTuple>
                                        <TunableTuple name="tagged_item" class="CraftTaggedItemFactory" display="Tagged Item" muid="EE1B107A48073F8" description="This option tests crafted item's tags against a list of possible tags" Deprecated="False" filter="0" group="General">
                                            <TunableList name="tag_set" class="TunableSet" display="Tag Set" muid="A5180C6CC9B081C8" description="The tag of objects we want to test ownership of" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                <TunableEnum type="Tag" class="TunableEnumEntry" default="INVALID" muid="B51ACF534F0015E3" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="What tag to test for" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                            </TunableList>
                                            <TunableEnum type="TagTestType" name="test_type" class="TunableEnumEntry" default="CONTAINS_ANY_TAG_IN_SET" display="Test Type" muid="B671FB8CA8385A49" static_entries="objects-object_tests.TagTestType" description="How to test the tags in the tag set against the objects on the lot." Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                    </TunableVariant>
                                    <TunableVariant type="None" name="tooltip" class="OptionalTunable" default="disabled" display="Tooltip" muid="65E8AC4D8F853C56" description="Reason of failure." Deprecated="False" filter="0" group="General">
                                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="80B18D1B0DDB7CB6" />
                                        <Tunable type="int" name="enabled" class="TunableLocalizedString" default="0x0" display="Enabled" muid="C4EB993B1C0BDE91" description="Reason of failure." Deprecated="False" filter="0" group="General" />
                                    </TunableVariant>
                                </TunableTuple>
                                <TunableTuple name="object_preference" class="TunableObjectScoringPreferenceTest" display="Object Preference" muid="D62FBAE09E8415EA" description="A tunable factory that checks whether or not the target object of an affordance&#xA;is the Sim's preferred scoring object." Deprecated="False" filter="0" group="General">
                                    <TunableVariant type="None" name="any_sim" class="OptionalTunable" default="disabled" display="Any Sim" muid="7F8C68BBF0385FF" description="If enabled, will return whether the object has any &quot;Use Only&quot; preference&#xA;set for the specified tag.  Will not be sim specific, and thus only&#xA;works for &quot;use only&quot; preference type.  Does NOT rely on interaction&#xA;to determine preference type.&#xA;&#xA;Value is the tag to test for." Deprecated="False" filter="0" group="General">
                                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="A4A9D6464217CA0" />
                                        <TunableEnum type="ObjectPreferenceTag" name="enabled" class="TunableEnumEntry" default="INVALID" display="Enabled" muid="D7EC48F208654057" dynamic_entries="autonomy-autonomy_preference.ObjectPreferenceTag._elements" static_entries="autonomy-autonomy_preference.ObjectPreferenceTag" description="Tag to determine which preference type to use." Deprecated="False" filter="0" group="General" invalid_entries="INVALID" />
                                    </TunableVariant>
                                    <Tunable type="bool" name="require" class="Tunable" default="True" display="Require" muid="73066CD8A02D51C9" description="The Sim's preference is required to be True or required to be False." Deprecated="False" filter="0" group="General" />
                                </TunableTuple>
                                <TunableTuple name="season" class="TunableSeasonTest" display="Season" muid="84D09011FDA1B645" description="SeasonTest will test if the current simulation time falls within the&#xA;specified test conditions." Deprecated="False" filter="0" group="General">
                                    <Tunable type="bool" name="requires_seasons_pack" class="Tunable" default="True" display="Requires Seasons Pack" muid="395979CE752C3DCE" description="If checked, this test will require that the Seasons pack be &#xA;installed in order for the seasons test to pass.  If unchecked, &#xA;this test will automatically pass." Deprecated="False" filter="0" group="General" />
                                    <TunableList name="seasons" class="TunableEnumSet" display="Seasons" muid="F3B156BFDB2DCDC3" min="1" description="Season(s) that we must be in to pass the test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                        <TunableEnum type="SeasonType" class="TunableEnumEntry" default="SUMMER" muid="7B05B1631AA637EA" static_entries="seasons-seasons_enums.SeasonType" Deprecated="False" filter="0" group="General" />
                                    </TunableList>
                                    <TunableVariant type="None" name="time_of_season" class="OptionalTunable" default="disabled" display="Time Of Season" muid="A61EC562CA0A4F72" description="Portion(s) of season(s) that we must be in to pass the test." Deprecated="False" filter="0" group="General">
                                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="ECBCA01505CB66E9" />
                                        <TunableList name="enabled" class="TunableEnumSet" display="Enabled" muid="40DB517C261884C0" min="1" description="Portion(s) of season(s) that we must be in to pass the test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                            <TunableEnum type="SeasonSegment" class="TunableEnumEntry" default="EARLY" muid="5217200DBB326E" static_entries="seasons-seasons_enums.SeasonSegment" Deprecated="False" filter="0" group="General" />
                                        </TunableList>
                                    </TunableVariant>
                                </TunableTuple>
                                <TunableTuple name="state" class="TunableStateTest" display="State" muid="5F55F2BE076CB17B" description="Gate availability by object state.  By default, the test will use the&#xA;state's linked stat as a fallback in case the target doesn't have the&#xA;state involved." Deprecated="False" filter="0" group="General">
                                    <TunableVariant type="None" name="fallback_behavior" class="TunableVariant" default="always_fail" display="Fallback Behavior" muid="FB89283F15829C57" description="What to do if the given object doesn't have the state in question." Deprecated="False" filter="0" group="General">
                                        <Tunable name="always_fail" class="TunableExistance" display="Always Fail" muid="3D2E42CF5C300DE5" />
                                        <Tunable name="always_pass" class="TunableExistance" display="Always Pass" muid="13575042273310BB" />
                                    </TunableVariant>
                                    <TunableEnum type="Operator" name="operator" class="TunableOperator" default="EQUAL" display="Operator" muid="3AEAA53B53463D7B" static_entries="sims4-math.Operator" description="The comparison to use." Deprecated="False" filter="0" group="General" />
                                    <Tunable type="object_state" name="value" class="TunableReference" display="Value" muid="C23711C8112A682A" description="The value to compare to." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="ObjectStateValue" />
                                </TunableTuple>
                                <TunableTuple name="statistic" class="TunableStatThresholdTest" display="Statistic" muid="2B8FDA2928ADF37E" description="A test that checks whether or not a statistic is at a certain threshold for&#xA;a given participant. It can also test whether or not the participant has the&#xA;statistic explicitly added on them." Deprecated="False" filter="0" group="General">
                                    <Tunable type="bool" name="must_have_stat" class="Tunable" default="False" display="Must Have Stat" muid="F13CE87C4E001AA6" description="Setting this to True (checked) will ensure that this test only&#xA;passes if the tested Sim actually has the statistic referenced. If&#xA;left False (unchecked), this test will evaluate as if the Sim had&#xA;the statistic at the value of 0" Deprecated="False" filter="0" group="General" />
                                    <TunableVariant type="None" name="score_to_use" class="TunableVariant" default="user_value" display="Score To Use" muid="BDA822E1EC52687A" description="Depending on the choice, this decides what value to use for the &#xA;threshold comparison." Deprecated="False" filter="0" group="General">
                                        <TunableTuple name="points" class="Tunable_PointsValue" display="Points" muid="567CFDDD9CF6E370" description="Use the raw points for the comparison in the test." Deprecated="False" filter="0" group="General" />
                                        <TunableTuple name="rank" class="Tunable_RankValue" display="Rank" muid="1957B5CA1FB9E88D" description="Use the rank value for the comparison in the test." Deprecated="False" filter="0" group="General" />
                                        <TunableTuple name="user_value" class="Tunable_UserValue" display="User Value" muid="A983F4E0361DD535" description="Use the user value for the comparison in the test." Deprecated="False" filter="0" group="General">
                                            <Tunable type="bool" name="highest_level_reached_instead" class="Tunable" default="False" display="Highest Level Reached Instead" muid="EA456D2AD554889C" description="If checked this will test against the highest level reached. This&#xA;currently only works with Ranked Statistics. Other statistics do&#xA;not have a notion of highest level reached. If we are using&#xA;something that doesn't support highest level reached it will &#xA;test against the current level instead." Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                    </TunableVariant>
                                    <Tunable type="statistic" name="stat" class="TunableReference" display="Stat" muid="1B03AFB01A307249" description="The stat we are operating on." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                    <TunableVariant type="None" name="threshold" class="TunableVariant" default="value_threshold" display="Threshold" muid="F49232C126982EE1" description="The value or state threshold to test against." Deprecated="False" filter="0" group="General">
                                        <TunableTuple name="state_value_threshold" class="TunableObjectStateValueThreshold" display="State Value Threshold" muid="84BD2AD02D913338" description="Value/comparison pair used to define a Threshold." Deprecated="False" filter="0" group="General">
                                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="8EEF550915974052" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                            <Tunable type="object_state" name="value" class="TunableReference" display="Value" muid="E333AA332386143D" description="The state threshold for this test." allow_none="False" Deprecated="False" filter="0" group="General" restrict="ObjectStateValue" />
                                        </TunableTuple>
                                        <TunableTuple name="value_threshold" class="TunableThreshold" display="Value Threshold" muid="654B4921773616F2" description="The threshold to control availability based on the statistic's&#xA;value." Deprecated="False" filter="0" group="General">
                                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="C685E50307ADFD52" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                            <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="813AA5D8FA094DE1" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                    </TunableVariant>
                                    <TunableEnum type="ParticipantType" name="who" class="TunableEnumEntry" default="Actor" display="Who" muid="5A8FC936A50FBF9B" static_entries="interactions.ParticipantType" description="Who or what to apply this test to." Deprecated="False" filter="0" group="General" />
                                </TunableTuple>
                                <TunableTuple name="street_civic_policy_test" class="TunableStreetCivicPolicyTest" display="Street Civic Policy Test" muid="BA1210191C75563" description="Test the state of the selected Street's Civic Policy Provider." Deprecated="False" filter="0" group="General">
                                    <TunableList name="civic_policy_tests" class="TunableList" display="Civic Policy Tests" muid="8DD9DB857806629C" description="The tests we wish to run on the civic policies in question, run in&#xA;order.  AND operation, all must pass, first to fail stops tests." Deprecated="False" filter="0" group="General">
                                        <TunableVariant type="None" class="TunableVariant" default="voting_open" muid="8154ECF49E2E1994" description="Individual tests run on Civic Policy Provider." Deprecated="False" filter="0" group="General">
                                            <TunableTuple name="available" class="TunableBaseCivicPolicyTestAvailable" display="Available" muid="B4F584C677683E7F" description="Test available policies. Available policies include everything tuned." Deprecated="False" filter="0" group="General">
                                                <TunableTuple name="white_black_list" class="TunableWhiteBlackList" display="White Black List" muid="6B5C4E0167C2BDC2" description="The civic policies must pass the whitelist and blacklist&#xA;to pass the test." Deprecated="False" filter="0" group="General">
                                                    <TunableVariant type="None" name="blacklist" class="OptionalTunable" default="nothing" display="Blacklist" muid="A3A3004C1ADC1065" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is not in the blacklist. If no blacklist is&#xA;specified, no items are disallowed." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="nothing" class="TunableExistance" display="Nothing" muid="255283F0DA7262BF" />
                                                        <TunableTuple name="specify" class="TunableBlacklist" display="Specify" muid="AD6109AE44528865" description="A tunable blacklist." Deprecated="False" filter="0" group="General">
                                                            <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="527F40676A82588B" description="Blacklisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                <Tunable type="snippet" class="TunableReference" muid="651FD88AEAA5AE7C" description="Allowed and disallowed civic policies." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="BaseCivicPolicy" />
                                                            </TunableList>
                                                            <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="E18D8F8F4A2C309C" description="Tunable option for how many items must be in the blacklist&#xA;for the blacklist to fail when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="D0FA45775393A5C0" />
                                                                <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="6C8D8B97C753A79D" description="When testing a collection of items, the number of items in&#xA;that collection that are in the blacklist must pass this&#xA;threshold test for the blacklist to disallow them all." Deprecated="False" filter="0" group="General">
                                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="EC207D879B50F679" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                    <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="181C434AA4D23E86" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                </TunableTuple>
                                                            </TunableVariant>
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                    <TunableVariant type="None" name="whitelist" class="OptionalTunable" default="everything" display="Whitelist" muid="3BE8C017ABFA78F2" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is in the whitelist. If no whitelist is&#xA;specified, all items are allowed." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="everything" class="TunableExistance" display="Everything" muid="68BD1C2279E08942" />
                                                        <TunableTuple name="specify" class="TunableWhitelist" display="Specify" muid="7E2EC71FD25163C4" description="A tunable whitelist." Deprecated="False" filter="0" group="General">
                                                            <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="75813638E5D0B377" description="Tunable option for how many items must be in the whitelist&#xA;for the whitelist to pass when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="300725BA72ACC58" />
                                                                <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="C917E8BC6C208C36" description="When testing a collection of items, the number of items in&#xA;that collection that are in the whitelist must pass this&#xA;threshold test for the whitelist to allow them all." Deprecated="False" filter="0" group="General">
                                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="725FF3397D3EEF9" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                    <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="4ABC0807345D87C3" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                </TunableTuple>
                                                            </TunableVariant>
                                                            <TunableList name="whitelist" class="TunableSet" display="Whitelist" muid="F74EE1FC7AD751E2" description="Whitelisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                <Tunable type="snippet" class="TunableReference" muid="A9FF1F2B4A192514" description="Allowed and disallowed civic policies." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="BaseCivicPolicy" />
                                                            </TunableList>
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                </TunableTuple>
                                            </TunableTuple>
                                            <TunableTuple name="balloted" class="TunableBaseCivicPolicyTestBalloted" display="Balloted" muid="ECCDCB41EB873520" description="Test balloted policies.  Policies being considered by the next/current vote are&#xA;balloted." Deprecated="False" filter="0" group="General">
                                                <TunableTuple name="white_black_list" class="TunableWhiteBlackList" display="White Black List" muid="181E2AED4AC2CA8D" description="The civic policies must pass the whitelist and blacklist&#xA;to pass the test." Deprecated="False" filter="0" group="General">
                                                    <TunableVariant type="None" name="blacklist" class="OptionalTunable" default="nothing" display="Blacklist" muid="B9094DE063851EA0" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is not in the blacklist. If no blacklist is&#xA;specified, no items are disallowed." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="nothing" class="TunableExistance" display="Nothing" muid="3934310E9DE8B812" />
                                                        <TunableTuple name="specify" class="TunableBlacklist" display="Specify" muid="37F274E1F56E3933" description="A tunable blacklist." Deprecated="False" filter="0" group="General">
                                                            <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="8176962440DE8F97" description="Blacklisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                <Tunable type="snippet" class="TunableReference" muid="8F29569DD9F0A676" description="Allowed and disallowed civic policies." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="BaseCivicPolicy" />
                                                            </TunableList>
                                                            <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="2F832B33A187445" description="Tunable option for how many items must be in the blacklist&#xA;for the blacklist to fail when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="EDF5489692B65B0B" />
                                                                <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="EEF4A43B0772007F" description="When testing a collection of items, the number of items in&#xA;that collection that are in the blacklist must pass this&#xA;threshold test for the blacklist to disallow them all." Deprecated="False" filter="0" group="General">
                                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="C23AC4B3F7B7415B" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                    <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="CA559EFD07F1F8F8" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                </TunableTuple>
                                                            </TunableVariant>
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                    <TunableVariant type="None" name="whitelist" class="OptionalTunable" default="everything" display="Whitelist" muid="8C56199C7FCFFF06" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is in the whitelist. If no whitelist is&#xA;specified, all items are allowed." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="everything" class="TunableExistance" display="Everything" muid="266659FC22E67226" />
                                                        <TunableTuple name="specify" class="TunableWhitelist" display="Specify" muid="C19811CD3BD656F0" description="A tunable whitelist." Deprecated="False" filter="0" group="General">
                                                            <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="30740493D75B378B" description="Tunable option for how many items must be in the whitelist&#xA;for the whitelist to pass when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="9054AF72AFFD60D2" />
                                                                <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="5B01580E4FB96DEC" description="When testing a collection of items, the number of items in&#xA;that collection that are in the whitelist must pass this&#xA;threshold test for the whitelist to allow them all." Deprecated="False" filter="0" group="General">
                                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="A006F92DC31E9B4F" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                    <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="67E9EB2D5B226EDD" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                </TunableTuple>
                                                            </TunableVariant>
                                                            <TunableList name="whitelist" class="TunableSet" display="Whitelist" muid="BAC446D084F14268" description="Whitelisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                <Tunable type="snippet" class="TunableReference" muid="486B01623435FF4" description="Allowed and disallowed civic policies." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="BaseCivicPolicy" />
                                                            </TunableList>
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                </TunableTuple>
                                            </TunableTuple>
                                            <TunableTuple name="dormant" class="TunableBaseCivicPolicyTestDormant" display="Dormant" muid="D980B1224C82413F" description="Test dormant policies. Dormant policies are not enacted and not balloted." Deprecated="False" filter="0" group="General">
                                                <TunableTuple name="white_black_list" class="TunableWhiteBlackList" display="White Black List" muid="CF1878B7AF02024E" description="The civic policies must pass the whitelist and blacklist&#xA;to pass the test." Deprecated="False" filter="0" group="General">
                                                    <TunableVariant type="None" name="blacklist" class="OptionalTunable" default="nothing" display="Blacklist" muid="45F11B63283EA587" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is not in the blacklist. If no blacklist is&#xA;specified, no items are disallowed." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="nothing" class="TunableExistance" display="Nothing" muid="232312EA49196B14" />
                                                        <TunableTuple name="specify" class="TunableBlacklist" display="Specify" muid="493D8FDA925D1D1E" description="A tunable blacklist." Deprecated="False" filter="0" group="General">
                                                            <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="7813D577E9AB66F9" description="Blacklisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                <Tunable type="snippet" class="TunableReference" muid="101EA2F879C56DE" description="Allowed and disallowed civic policies." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="BaseCivicPolicy" />
                                                            </TunableList>
                                                            <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="EA29C507ACBC4780" description="Tunable option for how many items must be in the blacklist&#xA;for the blacklist to fail when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="ACB4339F8F3FC576" />
                                                                <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="34449B6ED4169794" description="When testing a collection of items, the number of items in&#xA;that collection that are in the blacklist must pass this&#xA;threshold test for the blacklist to disallow them all." Deprecated="False" filter="0" group="General">
                                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="99E255020776571B" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                    <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="1FEF9E34F8E8ED08" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                </TunableTuple>
                                                            </TunableVariant>
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                    <TunableVariant type="None" name="whitelist" class="OptionalTunable" default="everything" display="Whitelist" muid="630C64AE68DD6DCA" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is in the whitelist. If no whitelist is&#xA;specified, all items are allowed." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="everything" class="TunableExistance" display="Everything" muid="DE8B60E6FA3E9F42" />
                                                        <TunableTuple name="specify" class="TunableWhitelist" display="Specify" muid="35B7083BD561894D" description="A tunable whitelist." Deprecated="False" filter="0" group="General">
                                                            <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="5BFA2080538C8F45" description="Tunable option for how many items must be in the whitelist&#xA;for the whitelist to pass when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="1D1DD7CE24B6D6C2" />
                                                                <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="F267BA4BFE1F0FAD" description="When testing a collection of items, the number of items in&#xA;that collection that are in the whitelist must pass this&#xA;threshold test for the whitelist to allow them all." Deprecated="False" filter="0" group="General">
                                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="1263FB6A4E701601" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                    <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="F3975479914A1D16" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                </TunableTuple>
                                                            </TunableVariant>
                                                            <TunableList name="whitelist" class="TunableSet" display="Whitelist" muid="4925FFFB485A9495" description="Whitelisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                <Tunable type="snippet" class="TunableReference" muid="2100E263E36A9430" description="Allowed and disallowed civic policies." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="BaseCivicPolicy" />
                                                            </TunableList>
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                </TunableTuple>
                                            </TunableTuple>
                                            <TunableTuple name="enacted" class="TunableBaseCivicPolicyTestEnacted" display="Enacted" muid="A1A9A7EBAB0461E4" description="Test enacted policies." Deprecated="False" filter="0" group="General">
                                                <TunableTuple name="white_black_list" class="TunableWhiteBlackList" display="White Black List" muid="138842C32C10921F" description="The civic policies must pass the whitelist and blacklist&#xA;to pass the test." Deprecated="False" filter="0" group="General">
                                                    <TunableVariant type="None" name="blacklist" class="OptionalTunable" default="nothing" display="Blacklist" muid="6397DC4F3A02CD70" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is not in the blacklist. If no blacklist is&#xA;specified, no items are disallowed." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="nothing" class="TunableExistance" display="Nothing" muid="3FD805F3C3BFF45A" />
                                                        <TunableTuple name="specify" class="TunableBlacklist" display="Specify" muid="5CAA06253B0A5DA7" description="A tunable blacklist." Deprecated="False" filter="0" group="General">
                                                            <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="DD5C36FF9D7C3529" description="Blacklisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                <Tunable type="snippet" class="TunableReference" muid="326C7E84CF4FD00B" description="Allowed and disallowed civic policies." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="BaseCivicPolicy" />
                                                            </TunableList>
                                                            <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="28E95D1BF3BF93CE" description="Tunable option for how many items must be in the blacklist&#xA;for the blacklist to fail when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="53EA09404836167D" />
                                                                <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="E97DEF3934D2825F" description="When testing a collection of items, the number of items in&#xA;that collection that are in the blacklist must pass this&#xA;threshold test for the blacklist to disallow them all." Deprecated="False" filter="0" group="General">
                                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="85F58063D427F288" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                    <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="E2AD4577B13AB109" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                </TunableTuple>
                                                            </TunableVariant>
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                    <TunableVariant type="None" name="whitelist" class="OptionalTunable" default="everything" display="Whitelist" muid="45CCA4AE40713D9F" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is in the whitelist. If no whitelist is&#xA;specified, all items are allowed." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="everything" class="TunableExistance" display="Everything" muid="7537176A0AF788C5" />
                                                        <TunableTuple name="specify" class="TunableWhitelist" display="Specify" muid="37653EA8AC0AF11D" description="A tunable whitelist." Deprecated="False" filter="0" group="General">
                                                            <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="85A0EA2F2A6539B9" description="Tunable option for how many items must be in the whitelist&#xA;for the whitelist to pass when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="5AE670A83CD4589E" />
                                                                <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="A4DB8A4D496F947A" description="When testing a collection of items, the number of items in&#xA;that collection that are in the whitelist must pass this&#xA;threshold test for the whitelist to allow them all." Deprecated="False" filter="0" group="General">
                                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="D0975A7A723D90CC" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                    <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="515FD739F7A402A9" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                </TunableTuple>
                                                            </TunableVariant>
                                                            <TunableList name="whitelist" class="TunableSet" display="Whitelist" muid="67A5C30BC7BF3FF3" description="Whitelisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                <Tunable type="snippet" class="TunableReference" muid="F325DD9A763FB593" description="Allowed and disallowed civic policies." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="BaseCivicPolicy" />
                                                            </TunableList>
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                </TunableTuple>
                                            </TunableTuple>
                                            <TunableTuple name="repealable" class="TunableBaseCivicPolicyTestRepealable" display="Repealable" muid="655D9A1BE1FCE045" description="Test up for repeal policies. Up for Repeal policies have been specifically marked&#xA;as such and will (if the vote/petition threshold is reached) be repealed&#xA;as part of closing the next vote." Deprecated="False" filter="0" group="General">
                                                <TunableTuple name="white_black_list" class="TunableWhiteBlackList" display="White Black List" muid="EABA474A24A6731F" description="The civic policies must pass the whitelist and blacklist&#xA;to pass the test." Deprecated="False" filter="0" group="General">
                                                    <TunableVariant type="None" name="blacklist" class="OptionalTunable" default="nothing" display="Blacklist" muid="23EEEB5700C6AA3" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is not in the blacklist. If no blacklist is&#xA;specified, no items are disallowed." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="nothing" class="TunableExistance" display="Nothing" muid="9D1CDF711FC22B59" />
                                                        <TunableTuple name="specify" class="TunableBlacklist" display="Specify" muid="EAAF178A7CB3F06F" description="A tunable blacklist." Deprecated="False" filter="0" group="General">
                                                            <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="2E6BDE8A3FB323C2" description="Blacklisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                <Tunable type="snippet" class="TunableReference" muid="2A7A2B443CE0051C" description="Allowed and disallowed civic policies." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="BaseCivicPolicy" />
                                                            </TunableList>
                                                            <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="238088B5685CBF30" description="Tunable option for how many items must be in the blacklist&#xA;for the blacklist to fail when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="AE1F3505D5748125" />
                                                                <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="7B87382B56B953A3" description="When testing a collection of items, the number of items in&#xA;that collection that are in the blacklist must pass this&#xA;threshold test for the blacklist to disallow them all." Deprecated="False" filter="0" group="General">
                                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="232E98825F0293C5" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                    <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="9A8B069061859FB0" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                </TunableTuple>
                                                            </TunableVariant>
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                    <TunableVariant type="None" name="whitelist" class="OptionalTunable" default="everything" display="Whitelist" muid="57BC785A2222EA89" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is in the whitelist. If no whitelist is&#xA;specified, all items are allowed." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="everything" class="TunableExistance" display="Everything" muid="5EC98189D1FC16EE" />
                                                        <TunableTuple name="specify" class="TunableWhitelist" display="Specify" muid="C341E51FBB73431C" description="A tunable whitelist." Deprecated="False" filter="0" group="General">
                                                            <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="281FEE5E0B960ABD" description="Tunable option for how many items must be in the whitelist&#xA;for the whitelist to pass when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="386E214DB6E6EFB7" />
                                                                <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="5A5A0B8928BB7F68" description="When testing a collection of items, the number of items in&#xA;that collection that are in the whitelist must pass this&#xA;threshold test for the whitelist to allow them all." Deprecated="False" filter="0" group="General">
                                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="B52172C6B2D7A08D" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                    <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="78DE29A15DDF032A" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                </TunableTuple>
                                                            </TunableVariant>
                                                            <TunableList name="whitelist" class="TunableSet" display="Whitelist" muid="FD1FDC77A67A82E6" description="Whitelisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                <Tunable type="snippet" class="TunableReference" muid="A9EFD6530C48F32E" description="Allowed and disallowed civic policies." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="BaseCivicPolicy" />
                                                            </TunableList>
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                </TunableTuple>
                                            </TunableTuple>
                                            <TunableTuple name="voting_open" class="TunableBaseCivicPolicyTestVotingOpen" display="Voting Open" muid="4DF8F2A0609D9409" description="If checked, will verify that voting is currently active." Deprecated="False" filter="0" group="General">
                                                <Tunable type="bool" name="negate" class="Tunable" default="False" display="Negate" muid="FAFE4448985C9BF9" description="If checked then this test will return True when not active." Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <TunableTuple name="voting_time_until_change" class="TunableBaseCivicPolicyTestVotingTimeUntilChange" display="Voting Time Until Change" muid="F3C9311A498E068A" description="If checked, will check the time remaining before the next voting open status change." Deprecated="False" filter="0" group="General">
                                                <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="2B6F7A6194325D63" description="The amount of time relative to the next voting state change to test." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="37DFEAB214864AC4" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                    <TunableTuple name="value" class="TunableTimeSpan" display="Value" muid="BD2FE93601BA03C0" description="Duration before the next change." Deprecated="False" filter="0" group="General">
                                                        <Tunable type="int" name="days" class="TunableRange" default="0" display="Days" muid="5C15B26266AF1BC2" min="0" max="None" description="Number of days" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                        <Tunable type="int" name="hours" class="TunableRange" default="1" display="Hours" muid="7ED6DE0572DCA157" min="0" max="23" description="Number of hours" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                        <Tunable type="int" name="minutes" class="TunableRange" default="0" display="Minutes" muid="8B9D51620AAB3C1F" min="0" max="59" description="Number of minutes" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                    </TunableTuple>
                                                </TunableTuple>
                                            </TunableTuple>
                                        </TunableVariant>
                                    </TunableList>
                                    <TunableVariant type="None" name="street" class="TunableVariant" default="literal" display="Street" muid="197A27DED5F733F0" description="Select what street to test." Deprecated="False" filter="0" group="General">
                                        <Tunable type="street" name="literal" class="TunableReference" display="Literal" muid="41634FAC9827828" description="Identify a specific Street." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                        <TunableTuple name="via_street_participant" class="TunableStreetParticipant" display="Via Street Participant" muid="919371AEA66CC19F" description="Get the street participant." Deprecated="False" filter="0" group="General" />
                                        <TunableVariant type="None" name="via_zone_source" class="TunableVariant" default="use_current_zone" display="Via Zone Source" muid="7415E570FC2807D9" description="Select the street to use by specifying a Zone Source." Deprecated="False" filter="0" group="General">
                                            <TunableTuple name="use_current_zone" class="TunableActiveZone" display="Use Current Zone" muid="12EA171CCEEC4CF5" description="Get the active zone." Deprecated="False" filter="0" group="General" />
                                            <TunableTuple name="use_participant_home_zone" class="TunableParticipantHomeZone" display="Use Participant Home Zone" muid="EB3520F56E3515A9" description="Get a participant's home zone. Can be None if they don't have one." Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="ParticipantTypeSingleSim" name="participant" class="TunableEnumEntry" default="Actor" display="Participant" muid="BE21DC246EC6613F" static_entries="interactions.ParticipantTypeSingleSim" description="Test against the participant's home zone. Townies' home zone will&#xA;be None." Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <TunableTuple name="use_pick_info" class="TunablePickInfoZone" display="Use Pick Info" muid="56C4EE9CE37BD51B" description="Get the zone of the lot the user clicked on." Deprecated="False" filter="0" group="General" />
                                            <TunableTuple name="use_picked_zone_ids" class="TunablePickedZoneIds" display="Use Picked Zone Ids" muid="5F5A2BE335A11DB7" description="Get the zone from the interaction's picked_zone_ids participant. Usually&#xA;comes from a picker." Deprecated="False" filter="0" group="General" />
                                        </TunableVariant>
                                    </TunableVariant>
                                </TunableTuple>
                            </TunableVariant>
                        </TunableList>
                    </TunableList>
                    <TunableList name="weighted_tests" class="TunableList" display="Weighted Tests" muid="39D170D79AAEA979" description="Weighted tests for the individual object. One is chosen &#xA;based on weight, and all objects are run against that chosen&#xA;test set." Deprecated="False" filter="0" group="General">
                        <TunableTuple class="TunableTuple" muid="9B6F2A9BB5BFFBD4" Deprecated="False" filter="0" group="General">
                            <TunableList name="tests" class="TunableObjectModifyTestSet" display="Tests" muid="2E0AC73F8D1953AB" description="All least one subtest group (AKA one list item) must pass&#xA;within this list before the action associated with this&#xA;tuning will be run." Deprecated="False" filter="0" group="General">
                                <TunableList class="TunableList" muid="922A57D140AF28AF" description="A list of tests.  All of these must pass for the group to pass." Deprecated="False" filter="0" group="General">
                                    <TunableVariant type="None" class="TunableObjectModifyTestVariant" default="none" muid="92E0EEE6E170E5D8" description="A single tunable test." Deprecated="False" filter="0" group="General">
                                        <TunableTuple name="consumable_test" class="TunableConsumableTest" display="Consumable Test" muid="5A056DB1AAD93578" description="A test that checks information about consumables." Deprecated="False" filter="0" group="General">
                                            <TunableTuple name="bites_left" class="TunableTuple" display="Bites Left" muid="F135F0C114B417DC" description="A check that tests against the number of bites left before the&#xA;subject is completely consumed." Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="Operator" name="operator" class="TunableOperator" default="EQUAL" display="Operator" muid="323F4EDD51FFB7C7" static_entries="sims4-math.Operator" description="The operator to use for the comparison." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="int" name="value" class="Tunable" default="1" display="Value" muid="792AC883E3186BFC" description="The number of bites to test against." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <Tunable type="bool" name="is_consumable" class="Tunable" default="True" display="Is Consumable" muid="BFC589559F297EFD" description="If checked, the subject must be a consumable, if unchecked, the&#xA;subject must not be a consumable." Deprecated="False" filter="0" group="General" />
                                            <TunableEnum type="ParticipantType" name="subject" class="TunableEnumEntry" default="Object" display="Subject" muid="A1EA41A797F497CF" static_entries="interactions.ParticipantType" description="The subject of the test. This is the consumable object." Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                        <TunableTuple name="custom_name" class="TunableCustomNameTest" display="Custom Name" muid="F3FC76520C51C598" description="Require or prohibit an object from having a custom&#xA;name or description set." Deprecated="False" filter="0" group="General">
                                            <TunableVariant type="None" name="has_custom_description" class="OptionalTunable" default="disabled" display="Has Custom Description" muid="5F550657ED007710" description="If checked, the subject must have a custom description set. If unchecked, it cannot have a custom description set." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="E7B1CF917C6E0363" />
                                                <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="A549B6ACA4FF6311" description="If checked, the subject must have a custom description set. If unchecked, it cannot have a custom description set." Deprecated="False" filter="0" group="General" />
                                            </TunableVariant>
                                            <TunableVariant type="None" name="has_custom_name" class="OptionalTunable" default="disabled" display="Has Custom Name" muid="1178511D71F678FF" description="If checked, the subject must have a custom name set. If unchecked, it cannot have a custom name set." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="A14B8F6665C056E7" />
                                                <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="8A7528402E9F600C" description="If checked, the subject must have a custom name set. If unchecked, it cannot have a custom name set." Deprecated="False" filter="0" group="General" />
                                            </TunableVariant>
                                            <TunableEnum type="ParticipantType" name="participant" class="TunableEnumEntry" default="Object" display="Participant" muid="1F111BF33201F1D0" static_entries="interactions.ParticipantType" description="The subject who is the object of this test." Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                        <TunableTuple name="elapsed_time" class="TunableTimeElapsedZoneTest" display="Elapsed Time" muid="A226413CB6B08589" description="Test to make sure enough time has passed since the zone was last saved." Deprecated="False" filter="0" group="General">
                                            <Tunable type="float" name="minutes_passed" class="TunableSimMinute" default="720" display="Minutes Passed" muid="D836DF73358658C8" min="1" max="None" description="This test will pass when the minutes passed is greater than the&#xA;number minutes since last loading into zone." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                        <TunableTuple name="existence" class="TunableExistenceTest" display="Existence" muid="FC4901E4E7DE1824" description="A test to check whether the specified participant exists." Deprecated="False" filter="0" group="General">
                                            <Tunable type="bool" name="allow_hidden_sim_status" class="Tunable" default="False" display="Allow Hidden Sim Status" muid="AABF203338903B61" description="If checked then we will ignore hidden Sim status such that they will count as existing even though they&#xA;have been hidden.  Use this in conjunction with Require Instantiated in order to determine the Sim's actual&#xA;instantiated status. " Deprecated="False" filter="0" group="General" />
                                            <Tunable type="bool" name="exists" class="Tunable" default="True" display="Exists" muid="F1364D0C82A3FAA3" description="When checked, require the specified participant to exist. When&#xA;unchecked, require the specified participant to not exist." Deprecated="False" filter="0" group="General" />
                                            <TunableEnum type="ParticipantType" name="participant" class="TunableEnumEntry" default="TargetSim" display="Participant" muid="C86401F83EBB6C97" static_entries="interactions.ParticipantType" description="The participant for which to check existence." Deprecated="False" filter="0" group="General" />
                                            <Tunable type="bool" name="require_instantiatable" class="Tunable" default="True" display="Require Instantiatable" muid="8974D55BA3C67E7E" description="If checked, the specified participant must be instantiatable. This&#xA;is generally true for all Sims at LOD above MINIMUM." Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                        <TunableTuple name="game_option" class="TunableSimInfoGameplayOptionsTest" display="Game Option" muid="7D93C0D8DD8D65D1" description="Test whether or not a Sim has a specific gameplay option set." Deprecated="False" filter="0" group="General">
                                            <TunableEnum type="TestableGameOptions" name="gameplay_option" class="TunableEnumEntry" default="CIVIC_POLICY_NPC_VOTING_ENABLED" display="Gameplay Option" muid="FE1BA52E2ADF3C4C" static_entries="event_testing-game_option_tests.TestableGameOptions" description="The gameplay option to test. This test will pass if this option is&#xA;set." Deprecated="False" filter="0" group="General" />
                                            <Tunable type="bool" name="invert" class="Tunable" default="False" display="Invert" muid="EE7CA7536A3E9E8E" description="If enabled, requires the option to be unset for the test to pass." Deprecated="False" filter="0" group="General" />
                                            <TunableVariant type="None" name="tooltip" class="OptionalTunable" default="disabled" display="Tooltip" muid="FB5CF544D1B87368" description="Reason of failure." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="58C45EAB06AF93D1" />
                                                <Tunable type="int" name="enabled" class="TunableLocalizedString" default="0x0" display="Enabled" muid="34DB3193CA9CF183" description="Reason of failure." Deprecated="False" filter="0" group="General" />
                                            </TunableVariant>
                                        </TunableTuple>
                                        <TunableTuple name="inventory" class="TunableInventoryTest" display="Inventory" muid="3E092D39ED55AF1C" description="A test to check on the contents of either a sim inventory or&#xA;an object inventory." Deprecated="False" filter="0" group="General">
                                            <TunableVariant type="None" name="contents_check" class="TunableVariant" default="has_anything" display="Contents Check" muid="DC6411DA8E35B2E2" description="Checks to run on each object of the specified inventory" Deprecated="False" filter="0" group="General">
                                                <Tunable name="has_anything" class="TunableExistance" display="Has Anything" muid="1F3C285E0357193F" />
                                                <TunableTuple name="has_object_of_participant_type" class="TunableTuple" display="Has Object Of Participant Type" muid="6BE2CC78BC032AE6" description="Participant type we want to test if its in the selected&#xA;inventory." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="ParticipantType" name="participant" class="TunableEnumEntry" default="Object" display="Participant" muid="BBC5DE1E60EBB3CC" static_entries="interactions.ParticipantType" description="Which participant of the interaction do we want to validate&#xA;on the inventory. " Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableTuple name="has_object_with_def" class="TunableTuple" display="Has Object With Def" muid="2C6525C13314770F" Deprecated="False" filter="0" group="General">
                                                    <Tunable type="object" name="definition" class="TunableReference" display="Definition" muid="C8CBB4EFB397493F" description="The object definition to look for inside inventory." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                </TunableTuple>
                                                <TunableTuple name="has_object_with_states" class="BasicStateCheckFactory" display="Has Object With States" muid="E00430DA07E930A6" description="This option tests crafted item's tags against a list of possible&#xA;tags." Deprecated="False" filter="0" group="General">
                                                    <TunableVariant type="None" name="object_requirement" class="TunableVariant" default="any_object" display="Object Requirement" muid="FF5457050F0C9D4D" Deprecated="False" filter="0" group="General">
                                                        <Tunable name="any_object" class="TunableExistance" display="Any Object" muid="888C6A5E518700D6" />
                                                        <TunableTuple name="definition" class="TunableTuple" display="Definition" muid="2738B61940B66834" Deprecated="False" filter="0" group="General">
                                                            <Tunable type="object" name="definition" class="TunableReference" display="Definition" muid="5779ABB875BC221D" description="The object must have this definition." allow_none="False" Deprecated="False" filter="0" group="General" />
                                                        </TunableTuple>
                                                        <TunableTuple name="tag" class="TunableTuple" display="Tag" muid="251CEBF686CF826C" Deprecated="False" filter="0" group="General">
                                                            <TunableTuple name="tag" class="CraftTaggedItemFactory" display="Tag" muid="9C95ADB11BFB9E" description="The object must have this tag." Deprecated="False" filter="0" group="General">
                                                                <TunableList name="tag_set" class="TunableSet" display="Tag Set" muid="8D80986A5FACB8C" description="The tag of objects we want to test ownership of" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                    <TunableEnum type="Tag" class="TunableEnumEntry" default="INVALID" muid="6DA829CC046E8CCE" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="What tag to test for" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                                </TunableList>
                                                                <TunableEnum type="TagTestType" name="test_type" class="TunableEnumEntry" default="CONTAINS_ANY_TAG_IN_SET" display="Test Type" muid="95B7632FA8AF6C66" static_entries="objects-object_tests.TagTestType" description="How to test the tags in the tag set against the objects on the lot." Deprecated="False" filter="0" group="General" />
                                                            </TunableTuple>
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                    <TunableList name="state_set" class="TunableSet" display="State Set" muid="2A4F8D293088459D" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                        <Tunable type="object_state" class="TunableReference" muid="29BF8DE43CA6B717" description="What state to test for." allow_none="False" Deprecated="False" filter="0" group="General" />
                                                    </TunableList>
                                                    <TunableEnum type="StateTestType" name="test_type" class="TunableEnumEntry" default="CONTAINS_ANY_STATE_IN_SET" display="Test Type" muid="F3D93AEAC48A65E" static_entries="objects-object_tests.StateTestType" description="How to test the states in the state set against the objects in&#xA;the inventory." Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableTuple name="has_object_with_tag" class="CraftTaggedItemFactory" display="Has Object With Tag" muid="3A6BD2A562863B9F" description="This option tests crafted item's tags against a list of possible tags" Deprecated="False" filter="0" group="General">
                                                    <TunableList name="tag_set" class="TunableSet" display="Tag Set" muid="B44BF2F2C96EC8D" description="The tag of objects we want to test ownership of" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                        <TunableEnum type="Tag" class="TunableEnumEntry" default="INVALID" muid="42D1B1D859BBB99E" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="What tag to test for" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                    </TunableList>
                                                    <TunableEnum type="TagTestType" name="test_type" class="TunableEnumEntry" default="CONTAINS_ANY_TAG_IN_SET" display="Test Type" muid="9D9B64D4CCE3F52C" static_entries="objects-object_tests.TagTestType" description="How to test the tags in the tag set against the objects on the lot." Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                            </TunableVariant>
                                            <TunableVariant type="None" name="inventory_location" class="TunableVariant" default="participant_inventory" display="Inventory Location" muid="3418E4E12CF54484" description="Who owns the inventory. Either look in the inventory of a &#xA;participant or specify an object inventory type directly.&#xA;&#xA;If participant returns multiple inventory owners, the test will &#xA;pass only if ALL of those owners pass the inventory content test." Deprecated="False" filter="0" group="General">
                                                <TunableTuple name="hidden_inventory_objects" class="TunableTuple" display="Hidden Inventory Objects" muid="E352C14264FFF324" Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="InventoryType" name="inventory" class="TunableEnumEntry" default="UNDEFINED" display="Inventory" muid="B46511BB6C032D5E" dynamic_entries="objects-components-inventory_enums.InventoryType._elements" static_entries="objects-components-inventory_enums.InventoryType" description="Check in the hidden inventory for objects that can go into the&#xA;specified inventory type. EX: check that there are mailbox&#xA;objects in the hidden inventory" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableTuple name="object_inventory_type" class="TunableTuple" display="Object Inventory Type" muid="9C1285E305802A3" Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="InventoryType" name="inventory" class="TunableEnumEntry" default="UNDEFINED" display="Inventory" muid="E58A55908B98EC2A" dynamic_entries="objects-components-inventory_enums.InventoryType._elements" static_entries="objects-components-inventory_enums.InventoryType" description="Check the global Object inventory that has the specified type.&#xA;EX: check in the global fridge inventory that exists for all&#xA;fridges" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableTuple name="participant_inventory" class="TunableTuple" display="Participant Inventory" muid="8EF87CB4429EEF2E" Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="ParticipantType" name="inventory" class="TunableEnumEntry" default="Actor" display="Inventory" muid="A0F99BEE0A429F12" static_entries="interactions.ParticipantType" description="The owner of the inventory" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                            </TunableVariant>
                                            <TunableTuple name="required_count" class="TunableThreshold" display="Required Count" muid="F627C26E3CEF31DA" description="The inventory must have a tunable threshold of objects that&#xA;pass the contents check test.&#xA;&#xA;EX: test is object definition of type pizza. required count is enabled&#xA;and has a threshold of &gt;= 5. That means this test will pass if you&#xA;have 5 or more pizzas in your inventory. To check if any objects&#xA;exist, use required count &gt;= 1" Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="982BA5BD4899B918" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="int" name="value" class="Tunable" default="1" display="Value" muid="1F896164E6743AEA" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <TunableEnum type="TestHiddenInventories" name="test_hidden" class="TunableEnumEntry" default="ANY" display="Test Hidden" muid="EA715D8670365DF3" static_entries="objects-object_tests.InventoryTest.TestHiddenInventories" description="Optionally restrict to only hidden or non-hidden inventories." Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                        <TunableTuple name="location" class="TunableLocationTest" display="Location" muid="B1D3D011D67D276F" description="Tests for object locations.&#xA;Outside: Check if an object is on the inside or outside (has a roof over&#xA;its head)&#xA;Natural ground: Checks the floor tiles where the object is to see if it &#xA;qualifies as natural ground" Deprecated="False" filter="0" group="General">
                                            <TunableTuple name="location_tests" class="TunableTuple" display="Location Tests" muid="F70004EA61A9624F" Deprecated="False" filter="0" group="General">
                                                <TunableVariant type="None" name="has_terrain_tag" class="OptionalTunable" default="Don't_Test" display="Has Terrain Tag" muid="D539A22D1A36E9DD" description="If checked, will verify the subject of the test is currently on&#xA;the tuned terrain tag." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="58F83D7F62508021" />
                                                    <TunableTuple name="enabled" class="TunableTuple" display="Enabled" muid="BA97214B2AF5F1A5" description=",&#xA;A set of terrain tags required for this test to pass." Deprecated="False" filter="0" group="General">
                                                        <Tunable type="bool" name="negate" class="Tunable" default="False" display="Negate" muid="EC9549EBDC5E44DC" description="If checked, the test will be inverted. In other words,&#xA;the test will fail if at least one tag is detected at&#xA;this location." Deprecated="False" filter="0" group="General" />
                                                        <TunableList name="terrain_tags" class="TunableEnumSet" display="Terrain Tags" muid="5B13B311DE150C7B" description="A set of terrain tags. Only one of these tags needs to be&#xA;present at this location. Although it is not tunable, there&#xA;is a threshold weight underneath which a terrain tag will&#xA;not appear to be present." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                            <TunableEnum type="TerrainTag" class="TunableEnumEntry" default="INVALID" muid="51333EE58E86EEFE" static_entries="world-terrain_enums.TerrainTag" Deprecated="False" filter="0" group="General" />
                                                        </TunableList>
                                                        <Tunable type="bool" name="test_floor_tiles" class="Tunable" default="False" display="Test Floor Tiles" muid="8B967B681C1D9D57" description="If checked, floor tiles will be tested. Otherwise, &#xA;it'll only check the terrain and will ignore the &#xA;floor tiles on the terrain." Deprecated="False" filter="0" group="General" />
                                                    </TunableTuple>
                                                </TunableVariant>
                                                <TunableVariant type="None" name="in_common_area" class="OptionalTunable" default="Don't_Test" display="In Common Area" muid="54C7947758055FCB" description="If checked, will verify the subject is in the common area&#xA;of an apartment.  If unchecked will verify the subject is not." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="D84A1ECA8039B522" />
                                                    <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="9B4901BEE090BFE1" Deprecated="False" filter="0" group="General" />
                                                </TunableVariant>
                                                <TunableVariant type="None" name="is_fire_allowed" class="OptionalTunable" default="Don't_Test" display="Is Fire Allowed" muid="BE6464537EAD90C0" description="If checked, will verify if fire is possible at the subject's position. &#xA;If unchecked, will pass if fire is not possible.&#xA;If not enabled, doesn't care either way." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="82CC2D8755F83687" />
                                                    <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="D43BB4CE6EF7A83E" Deprecated="False" filter="0" group="General" />
                                                </TunableVariant>
                                                <TunableVariant type="None" name="is_in_slot" class="OptionalTunable" default="Don't_Test" display="Is In Slot" muid="BAF2965B34B26440" description="If enabled will test if the object is attacked/deattached to&#xA;any of possible tuned slots.&#xA;If you tune a slot type set the test will test if the object &#xA;is slotted or not slotted into into any of those types. " Deprecated="False" filter="0" group="General">
                                                    <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="FA51FBCFADDEA7DB" />
                                                    <TunableTuple name="enabled" class="TunableTuple" display="Enabled" muid="F269DEEE0E96D5DC" description="Test if an object is current slotted in any of a possible&#xA;list of slot types.&#xA;Empty slot type set is allowed for testing for slotted or&#xA;not slotted only." Deprecated="False" filter="0" group="General">
                                                        <TunableVariant type="None" name="slot_test_type" class="TunableVariant" default="any_slot" display="Slot Test Type" muid="6B292A84B54847B" description="Strategy to test the slots:&#xA;Any Slot - is the object in any slot&#xA;Surface Slot - is object is in a surface slot&#xA;Specific Slot - is the object in specific list of slots" Deprecated="False" filter="0" group="General">
                                                            <TunableTuple name="any_slot" class="TunableSlotTestType" display="Any Slot" muid="ABA80F33B1BCDE7C" description="Singleton factory for testing if object is slotted." Deprecated="False" filter="0" group="General">
                                                                <Tunable type="bool" name="require_slotted" class="Tunable" default="True" display="Require Slotted" muid="79137D5910AA45F4" description="If checked, return success if the object is slotted&#xA;If unchecked, test the absense of slotting." Deprecated="False" filter="0" group="General" />
                                                            </TunableTuple>
                                                            <TunableTuple name="specific_slot" class="TunableSpecificSlotTest" display="Specific Slot" muid="7DD7F238D54FA96E" description="Subclass of SlotTestType that can check against a specific&#xA;slot set." Deprecated="False" filter="0" group="General">
                                                                <Tunable type="bool" name="require_slotted" class="Tunable" default="True" display="Require Slotted" muid="5AFFDB1559A7ADF6" description="If checked, return success if the object is slotted&#xA;If unchecked, test the absense of slotting." Deprecated="False" filter="0" group="General" />
                                                                <Tunable type="slot_type_set" name="specific_slot_set" class="TunableReference" display="Specific Slot Set" muid="5081DA72D80580E7" description="Set of slots the object may be attached to." allow_none="False" Deprecated="False" filter="0" group="General" />
                                                            </TunableTuple>
                                                            <TunableTuple name="surface_slot" class="TunableSurfaceSlotTest" display="Surface Slot" muid="8B421145BA53C0A4" description="Subclass of SlotTestType that checks that a slot has&#xA;is_surface set to true." Deprecated="False" filter="0" group="General">
                                                                <Tunable type="bool" name="require_slotted" class="Tunable" default="True" display="Require Slotted" muid="CE084C3F33FB9A3D" description="If checked, return success if the object is slotted&#xA;If unchecked, test the absense of slotting." Deprecated="False" filter="0" group="General" />
                                                            </TunableTuple>
                                                        </TunableVariant>
                                                    </TunableTuple>
                                                </TunableVariant>
                                                <TunableVariant type="None" name="is_inside_building" class="OptionalTunable" default="Don't_Test" display="Is Inside Building" muid="C2FEA54C50789150" description="If checked, will verify if the subject of the test is inside a&#xA;building. This uses a client function that checks if the block&#xA;the sim is mostly enclosed by walls or if not, if the adjoining&#xA;blocks are themselves enclosed. This should be used when we&#xA;want to test if a subject is inside a normally constructed &#xA;building. If we simply want to test whether the subject is &#xA;covered / has a roof over them, use is_outside. See comment on&#xA;is_outside for more details. If unchecked, will negate this &#xA;test." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="6E917FBDED34B371" />
                                                    <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="8580B3D3184BE8C3" Deprecated="False" filter="0" group="General" />
                                                </TunableVariant>
                                                <TunableVariant type="None" name="is_natural_ground" class="OptionalTunable" default="Don't_Test" display="Is Natural Ground" muid="655FC617BD0B5932" description="If checked, will verify the subject of the test is on natural &#xA;ground (no floor tiles are under him).&#xA;Otherwise, will verify the subject of the test is not on &#xA;natural ground." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="1F22ED9F0FD22653" />
                                                    <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="B6BA80DB2E9B798B" Deprecated="False" filter="0" group="General" />
                                                </TunableVariant>
                                                <TunableVariant type="None" name="is_on_active_lot" class="OptionalTunable" default="Don't_Test" display="Is On Active Lot" muid="484313A7B25666E" description="If disabled the test will not be used.&#xA;If enabled and checked, the test will pass if the subject is&#xA;on the active lot. (their center is within the lot bounds)&#xA;If enabled and not checked, the test will pass if the subject is &#xA;outside of the active lot.&#xA;&#xA;For example, Ask To Leave is tuned with this enabled and checked&#xA;for the TargetSim. You can only ask someone to leave if they&#xA;are actually on the active lot, but not if they are wandering&#xA;around in the open streets." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="25B902B7D52A1EF" />
                                                    <TunableTuple name="Is_or_is_not_on_active_lot" class="TunableTuple" display="Is Or Is Not On Active Lot" muid="CAF0D027011D8CCD" Deprecated="False" filter="0" group="General">
                                                        <Tunable type="bool" name="include_spawn_point" class="Tunable" default="False" display="Include Spawn Point" muid="2B9C6C61F32A9BE9" description="If set to true, we will consider the lot's spawn point as part of the active lot." Deprecated="False" filter="0" group="General" />
                                                        <Tunable type="bool" name="is_or_is_not_on_active_lot" class="Tunable" default="True" display="Is Or Is Not On Active Lot" muid="CBDB775B1DECBA76" description="If checked then the test will pass if the subject is on&#xA;the active lot." Deprecated="False" filter="0" group="General" />
                                                        <TunableVariant type="None" name="tolerance" class="TunableVariant" default="explicit" display="Tolerance" muid="DB53A56B17C5993B" Deprecated="False" filter="0" group="General">
                                                            <Tunable type="int" name="explicit" class="Tunable" default="0" display="Explicit" muid="A95DFB626A8A7C85" description="The tolerance from the edge of the lot that the&#xA;location test will use in order to determine if the&#xA;test target is considered on lot or not." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                            <TunableTuple name="use_default_tolerance" class="UseDefaultOfflotToleranceFactory" display="Use Default Tolerance" muid="A02971B782C7E997" description="Use the default tuned global offlot tolerance tuned&#xA;in objects.components.statistic_component.Default Off Lot." Deprecated="False" filter="0" group="General" />
                                                        </TunableVariant>
                                                    </TunableTuple>
                                                </TunableVariant>
                                                <TunableVariant type="None" name="is_on_level" class="OptionalTunable" default="Don't_Test" display="Is On Level" muid="9A860A1846D4C74D" description="If enabled, we check the participant's current level against&#xA;the tuned threshold.  In the case of sims in pools, the effective&#xA;level will be that of the surface of the pool, not the bottom." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="E46390A2EB9136AF" />
                                                    <TunableTuple name="enabled" class="TunableThreshold" display="Enabled" muid="CEF0C2F923701819" description="Value/comparison pair used to define a Threshold." Deprecated="False" filter="0" group="General">
                                                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="BCB23F24C37D6CE2" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                        <Tunable type="int" name="value" class="Tunable" default="0" display="Value" muid="ABAC238EC724EFCC" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                    </TunableTuple>
                                                </TunableVariant>
                                                <TunableVariant type="None" name="is_outside" class="OptionalTunable" default="Don't_Test" display="Is Outside" muid="16824A8F932DD759" description="PLEASE BE AWARE. If checked, will verify if the subject of the&#xA;test does not have a roof over their head. If unchecked, will &#xA;test if the subject has a roof over their head. If the &#xA;intention is to determine if a subject is in/not in a building, &#xA;this test is deprecated in favor of is_inside_building. If you &#xA;would like to test if a subject is inside a building, but also &#xA;need to test if they have a roof over their head, please use &#xA;both options." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="61ACFD87D8E7E51D" />
                                                    <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="63F7665A4AA811AA" Deprecated="False" filter="0" group="General" />
                                                </TunableVariant>
                                                <TunableVariant type="None" name="is_venue_type" class="OptionalTunable" default="Don't_Test" display="Is Venue Type" muid="7CBFF78ED0E65241" description="If checked, will verify if the subject is at a venue of the&#xA;specified type." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="D563FBEE1415DB8C" />
                                                    <TunableTuple name="enabled" class="TunableTuple" display="Enabled" muid="7831A9D3622C19B7" description="Venue type required for this test to pass." Deprecated="False" filter="0" group="General">
                                                        <Tunable type="bool" name="negate" class="Tunable" default="False" display="Negate" muid="38A18B70ADF86958" description="If enabled, the test will return true if the subject&#xA;IS NOT at a venue of the specified type." Deprecated="False" filter="0" group="General" />
                                                        <Tunable type="bool" name="use_source_venue" class="Tunable" default="False" display="Use Source Venue" muid="AF2715A439649F13" description="If enabled, the test will test the source venue instead of the active&#xA;venue.  For example, the Community Lot instead of the active Marketplace.&#xA;Testing the active venue is the default." Deprecated="False" filter="0" group="General" />
                                                        <Tunable type="venue" name="venue_type" class="TunableReference" display="Venue Type" muid="63FD21A47BF32F96" description="Venue type to test against." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                    </TunableTuple>
                                                </TunableVariant>
                                                <TunableVariant type="None" name="valid_surface_types" class="OptionalTunable" default="Don't_Test" display="Valid Surface Types" muid="C0385D539D21B7E6" description="If enabled, we will test the surface type of the subject&#xA;against prohibited or required surface types." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="7F17AE662E7DBC37" />
                                                    <TunableTuple name="Test_Surface_Types" class="TunableWhiteBlackList" display="Test Surface Types" muid="98369098A0F91E6B" description="Required and Prohibited Surface Types. " Deprecated="False" filter="0" group="General">
                                                        <TunableVariant type="None" name="blacklist" class="OptionalTunable" default="nothing" display="Blacklist" muid="8BB2066C89647522" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is not in the blacklist. If no blacklist is&#xA;specified, no items are disallowed." Deprecated="False" filter="0" group="General">
                                                            <Tunable name="nothing" class="TunableExistance" display="Nothing" muid="2D84B52054CC624E" />
                                                            <TunableTuple name="specify" class="TunableBlacklist" display="Specify" muid="CC696E260238425D" description="A tunable blacklist." Deprecated="False" filter="0" group="General">
                                                                <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="81AFC39A8C006AB2" description="Blacklisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                    <TunableEnum type="SurfaceType" class="TunableEnumEntry" default="SURFACETYPE_WORLD" muid="C0CFCDC087ECCF5B" static_entries="routing.SurfaceType" description="Surface Type the object is placed on." Deprecated="False" filter="0" group="General" invalid_entries="SURFACETYPE_UNKNOWN" />
                                                                </TunableList>
                                                                <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="A1150F4FEDC0D426" description="Tunable option for how many items must be in the blacklist&#xA;for the blacklist to fail when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                    <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="5841E6AC7A5B4F0A" />
                                                                    <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="8526FF6A4D7BBD63" description="When testing a collection of items, the number of items in&#xA;that collection that are in the blacklist must pass this&#xA;threshold test for the blacklist to disallow them all." Deprecated="False" filter="0" group="General">
                                                                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="3F10FBB9669239C0" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                        <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="CD79A067A7E4E990" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                    </TunableTuple>
                                                                </TunableVariant>
                                                            </TunableTuple>
                                                        </TunableVariant>
                                                        <TunableVariant type="None" name="whitelist" class="OptionalTunable" default="everything" display="Whitelist" muid="58A87B86AE3F9C60" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is in the whitelist. If no whitelist is&#xA;specified, all items are allowed." Deprecated="False" filter="0" group="General">
                                                            <Tunable name="everything" class="TunableExistance" display="Everything" muid="9CC4F89FD540C65B" />
                                                            <TunableTuple name="specify" class="TunableWhitelist" display="Specify" muid="1C79FB0EFE8E3A8B" description="A tunable whitelist." Deprecated="False" filter="0" group="General">
                                                                <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="7E8578B2734FF99F" description="Tunable option for how many items must be in the whitelist&#xA;for the whitelist to pass when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                    <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="D858D8725BACF4EF" />
                                                                    <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="9D640342637A42D9" description="When testing a collection of items, the number of items in&#xA;that collection that are in the whitelist must pass this&#xA;threshold test for the whitelist to allow them all." Deprecated="False" filter="0" group="General">
                                                                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="D15B9F37C428458D" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                        <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="31D5EBDCA549730F" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                    </TunableTuple>
                                                                </TunableVariant>
                                                                <TunableList name="whitelist" class="TunableSet" display="Whitelist" muid="1B572A3E16603099" description="Whitelisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                    <TunableEnum type="SurfaceType" class="TunableEnumEntry" default="SURFACETYPE_WORLD" muid="ABDD7D403E8B2861" static_entries="routing.SurfaceType" description="Surface Type the object is placed on." Deprecated="False" filter="0" group="General" invalid_entries="SURFACETYPE_UNKNOWN" />
                                                                </TunableList>
                                                            </TunableTuple>
                                                        </TunableVariant>
                                                    </TunableTuple>
                                                </TunableVariant>
                                            </TunableTuple>
                                        </TunableTuple>
                                        <Tunable name="none" class="TunableExistance" display="None" muid="1F68C6641082F34D" />
                                        <TunableTuple name="object_definition" class="TunableObjectMatchesDefinitionOrTagTest" display="Object Definition" muid="3ED0E653BC7B3500" description="Check to see if the specified object matches either a static definition or a set of tags" Deprecated="False" filter="0" group="General">
                                            <TunableVariant type="None" name="item" class="TunableVariant" default="tagged_item" display="Item" muid="395C8B9D4CB83009" description="Whether to test for a specific item or item that has a set of tags" Deprecated="False" filter="0" group="General">
                                                <TunableTuple name="actual_item" class="CraftActualItemFactory" display="Actual Item" muid="40E9AFCC6A45EB5A" description="This option tests crafted item against a list of possible items" Deprecated="False" filter="0" group="General">
                                                    <TunableList name="items_to_check" class="TunableList" display="Items To Check" muid="D78CC12430340551" Deprecated="False" filter="0" group="General">
                                                        <Tunable type="object" class="TunableReference" muid="B2B5F0F8DE26B81A" description="Object that qualifies for this check." allow_none="False" Deprecated="False" filter="0" group="General" />
                                                    </TunableList>
                                                </TunableTuple>
                                                <TunableTuple name="tagged_item" class="CraftTaggedItemFactory" display="Tagged Item" muid="3BDF668564A6906A" description="This option tests crafted item's tags against a list of possible tags" Deprecated="False" filter="0" group="General">
                                                    <TunableList name="tag_set" class="TunableSet" display="Tag Set" muid="24F09676F1FBD1A4" description="The tag of objects we want to test ownership of" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                        <TunableEnum type="Tag" class="TunableEnumEntry" default="INVALID" muid="AD7CC1EEDFCA3A2F" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="What tag to test for" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                    </TunableList>
                                                    <TunableEnum type="TagTestType" name="test_type" class="TunableEnumEntry" default="CONTAINS_ANY_TAG_IN_SET" display="Test Type" muid="EBDFB91A1C1E0D4F" static_entries="objects-object_tests.TagTestType" description="How to test the tags in the tag set against the objects on the lot." Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                            </TunableVariant>
                                            <TunableVariant type="None" name="tooltip" class="OptionalTunable" default="disabled" display="Tooltip" muid="DAB6EC656274CC5C" description="Reason of failure." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="CB0DF40131A7B24D" />
                                                <Tunable type="int" name="enabled" class="TunableLocalizedString" default="0x0" display="Enabled" muid="900EA569F8C7E45" description="Reason of failure." Deprecated="False" filter="0" group="General" />
                                            </TunableVariant>
                                        </TunableTuple>
                                        <TunableTuple name="object_preference" class="TunableObjectScoringPreferenceTest" display="Object Preference" muid="91E921772E661061" description="A tunable factory that checks whether or not the target object of an affordance&#xA;is the Sim's preferred scoring object." Deprecated="False" filter="0" group="General">
                                            <TunableVariant type="None" name="any_sim" class="OptionalTunable" default="disabled" display="Any Sim" muid="A55438749CCC7838" description="If enabled, will return whether the object has any &quot;Use Only&quot; preference&#xA;set for the specified tag.  Will not be sim specific, and thus only&#xA;works for &quot;use only&quot; preference type.  Does NOT rely on interaction&#xA;to determine preference type.&#xA;&#xA;Value is the tag to test for." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="815B95E5E241ACED" />
                                                <TunableEnum type="ObjectPreferenceTag" name="enabled" class="TunableEnumEntry" default="INVALID" display="Enabled" muid="3B69ED67F0349002" dynamic_entries="autonomy-autonomy_preference.ObjectPreferenceTag._elements" static_entries="autonomy-autonomy_preference.ObjectPreferenceTag" description="Tag to determine which preference type to use." Deprecated="False" filter="0" group="General" invalid_entries="INVALID" />
                                            </TunableVariant>
                                            <Tunable type="bool" name="require" class="Tunable" default="True" display="Require" muid="951ECD352F518145" description="The Sim's preference is required to be True or required to be False." Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                        <TunableTuple name="season" class="TunableSeasonTest" display="Season" muid="DBD8438A11FF61D0" description="SeasonTest will test if the current simulation time falls within the&#xA;specified test conditions." Deprecated="False" filter="0" group="General">
                                            <Tunable type="bool" name="requires_seasons_pack" class="Tunable" default="True" display="Requires Seasons Pack" muid="106722A3E5DB3362" description="If checked, this test will require that the Seasons pack be &#xA;installed in order for the seasons test to pass.  If unchecked, &#xA;this test will automatically pass." Deprecated="False" filter="0" group="General" />
                                            <TunableList name="seasons" class="TunableEnumSet" display="Seasons" muid="A9CB960D0EEB617E" min="1" description="Season(s) that we must be in to pass the test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                <TunableEnum type="SeasonType" class="TunableEnumEntry" default="SUMMER" muid="3864E3E74F1DE5BC" static_entries="seasons-seasons_enums.SeasonType" Deprecated="False" filter="0" group="General" />
                                            </TunableList>
                                            <TunableVariant type="None" name="time_of_season" class="OptionalTunable" default="disabled" display="Time Of Season" muid="F90ABB759D2DC64B" description="Portion(s) of season(s) that we must be in to pass the test." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="24120530A0B5FA9B" />
                                                <TunableList name="enabled" class="TunableEnumSet" display="Enabled" muid="91209DFB20F34ADC" min="1" description="Portion(s) of season(s) that we must be in to pass the test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                    <TunableEnum type="SeasonSegment" class="TunableEnumEntry" default="EARLY" muid="F1AFE1FB63C74DE6" static_entries="seasons-seasons_enums.SeasonSegment" Deprecated="False" filter="0" group="General" />
                                                </TunableList>
                                            </TunableVariant>
                                        </TunableTuple>
                                        <TunableTuple name="state" class="TunableStateTest" display="State" muid="1591C6953EBABA76" description="Gate availability by object state.  By default, the test will use the&#xA;state's linked stat as a fallback in case the target doesn't have the&#xA;state involved." Deprecated="False" filter="0" group="General">
                                            <TunableVariant type="None" name="fallback_behavior" class="TunableVariant" default="always_fail" display="Fallback Behavior" muid="32778B29FEC446A3" description="What to do if the given object doesn't have the state in question." Deprecated="False" filter="0" group="General">
                                                <Tunable name="always_fail" class="TunableExistance" display="Always Fail" muid="DE04DA9481684B02" />
                                                <Tunable name="always_pass" class="TunableExistance" display="Always Pass" muid="10E8E7BD299706BB" />
                                            </TunableVariant>
                                            <TunableEnum type="Operator" name="operator" class="TunableOperator" default="EQUAL" display="Operator" muid="F1530CEE9DB53FAA" static_entries="sims4-math.Operator" description="The comparison to use." Deprecated="False" filter="0" group="General" />
                                            <Tunable type="object_state" name="value" class="TunableReference" display="Value" muid="5F4467C4B56DE137" description="The value to compare to." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="ObjectStateValue" />
                                        </TunableTuple>
                                        <TunableTuple name="statistic" class="TunableStatThresholdTest" display="Statistic" muid="8BC4F50FDB247C5C" description="A test that checks whether or not a statistic is at a certain threshold for&#xA;a given participant. It can also test whether or not the participant has the&#xA;statistic explicitly added on them." Deprecated="False" filter="0" group="General">
                                            <Tunable type="bool" name="must_have_stat" class="Tunable" default="False" display="Must Have Stat" muid="657FF04904BB5C8F" description="Setting this to True (checked) will ensure that this test only&#xA;passes if the tested Sim actually has the statistic referenced. If&#xA;left False (unchecked), this test will evaluate as if the Sim had&#xA;the statistic at the value of 0" Deprecated="False" filter="0" group="General" />
                                            <TunableVariant type="None" name="score_to_use" class="TunableVariant" default="user_value" display="Score To Use" muid="6B9D5A0C6D00361E" description="Depending on the choice, this decides what value to use for the &#xA;threshold comparison." Deprecated="False" filter="0" group="General">
                                                <TunableTuple name="points" class="Tunable_PointsValue" display="Points" muid="A8EEA2C74FEA2DDF" description="Use the raw points for the comparison in the test." Deprecated="False" filter="0" group="General" />
                                                <TunableTuple name="rank" class="Tunable_RankValue" display="Rank" muid="7F89F98F4B77FADD" description="Use the rank value for the comparison in the test." Deprecated="False" filter="0" group="General" />
                                                <TunableTuple name="user_value" class="Tunable_UserValue" display="User Value" muid="519DE718E7E3A876" description="Use the user value for the comparison in the test." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="bool" name="highest_level_reached_instead" class="Tunable" default="False" display="Highest Level Reached Instead" muid="3476E23D71EBF6A5" description="If checked this will test against the highest level reached. This&#xA;currently only works with Ranked Statistics. Other statistics do&#xA;not have a notion of highest level reached. If we are using&#xA;something that doesn't support highest level reached it will &#xA;test against the current level instead." Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                            </TunableVariant>
                                            <Tunable type="statistic" name="stat" class="TunableReference" display="Stat" muid="7EFC5C578B7EC4BB" description="The stat we are operating on." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                            <TunableVariant type="None" name="threshold" class="TunableVariant" default="value_threshold" display="Threshold" muid="3DD5BBF99ABCFB21" description="The value or state threshold to test against." Deprecated="False" filter="0" group="General">
                                                <TunableTuple name="state_value_threshold" class="TunableObjectStateValueThreshold" display="State Value Threshold" muid="CD2DA872D964CF36" description="Value/comparison pair used to define a Threshold." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="3D96FC2683224940" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="object_state" name="value" class="TunableReference" display="Value" muid="D2DA5A40FFA00D3" description="The state threshold for this test." allow_none="False" Deprecated="False" filter="0" group="General" restrict="ObjectStateValue" />
                                                </TunableTuple>
                                                <TunableTuple name="value_threshold" class="TunableThreshold" display="Value Threshold" muid="70216D33285E8B6F" description="The threshold to control availability based on the statistic's&#xA;value." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="76FDAF8449234687" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="6300B60CB278664D" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                            </TunableVariant>
                                            <TunableEnum type="ParticipantType" name="who" class="TunableEnumEntry" default="Actor" display="Who" muid="235B668013ED3A33" static_entries="interactions.ParticipantType" description="Who or what to apply this test to." Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                        <TunableTuple name="street_civic_policy_test" class="TunableStreetCivicPolicyTest" display="Street Civic Policy Test" muid="3D7A1A29933776FA" description="Test the state of the selected Street's Civic Policy Provider." Deprecated="False" filter="0" group="General">
                                            <TunableList name="civic_policy_tests" class="TunableList" display="Civic Policy Tests" muid="26D763E2738F471D" description="The tests we wish to run on the civic policies in question, run in&#xA;order.  AND operation, all must pass, first to fail stops tests." Deprecated="False" filter="0" group="General">
                                                <TunableVariant type="None" class="TunableVariant" default="voting_open" muid="EAD8DF9BC92940D" description="Individual tests run on Civic Policy Provider." Deprecated="False" filter="0" group="General">
                                                    <TunableTuple name="available" class="TunableBaseCivicPolicyTestAvailable" display="Available" muid="DFA02D1F583651CF" description="Test available policies. Available policies include everything tuned." Deprecated="False" filter="0" group="General">
                                                        <TunableTuple name="white_black_list" class="TunableWhiteBlackList" display="White Black List" muid="BE0D3C74DD56FFD0" description="The civic policies must pass the whitelist and blacklist&#xA;to pass the test." Deprecated="False" filter="0" group="General">
                                                            <TunableVariant type="None" name="blacklist" class="OptionalTunable" default="nothing" display="Blacklist" muid="5C7E15CC0F08081E" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is not in the blacklist. If no blacklist is&#xA;specified, no items are disallowed." Deprecated="False" filter="0" group="General">
                                                                <Tunable name="nothing" class="TunableExistance" display="Nothing" muid="EA064027657B6EC8" />
                                                                <TunableTuple name="specify" class="TunableBlacklist" display="Specify" muid="50C339DE96892D7" description="A tunable blacklist." Deprecated="False" filter="0" group="General">
                                                                    <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="9FB6595A1F62512D" description="Blacklisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                        <Tunable type="snippet" class="TunableReference" muid="D2951339C15C08A8" description="Allowed and disallowed civic policies." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="BaseCivicPolicy" />
                                                                    </TunableList>
                                                                    <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="1E11B41BDF9FC224" description="Tunable option for how many items must be in the blacklist&#xA;for the blacklist to fail when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                        <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="707421C2FE9BBADE" />
                                                                        <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="ECF0456E79022770" description="When testing a collection of items, the number of items in&#xA;that collection that are in the blacklist must pass this&#xA;threshold test for the blacklist to disallow them all." Deprecated="False" filter="0" group="General">
                                                                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="C85D91A4ECFB9482" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                            <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="C7C755692B750F37" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                        </TunableTuple>
                                                                    </TunableVariant>
                                                                </TunableTuple>
                                                            </TunableVariant>
                                                            <TunableVariant type="None" name="whitelist" class="OptionalTunable" default="everything" display="Whitelist" muid="9EF01EEA3DEBD917" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is in the whitelist. If no whitelist is&#xA;specified, all items are allowed." Deprecated="False" filter="0" group="General">
                                                                <Tunable name="everything" class="TunableExistance" display="Everything" muid="974FFC304878C0E3" />
                                                                <TunableTuple name="specify" class="TunableWhitelist" display="Specify" muid="27B780AC76152AD9" description="A tunable whitelist." Deprecated="False" filter="0" group="General">
                                                                    <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="A0634165E8FA1E49" description="Tunable option for how many items must be in the whitelist&#xA;for the whitelist to pass when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                        <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="11C544F4CEC55FFF" />
                                                                        <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="4CA9436F740D27FB" description="When testing a collection of items, the number of items in&#xA;that collection that are in the whitelist must pass this&#xA;threshold test for the whitelist to allow them all." Deprecated="False" filter="0" group="General">
                                                                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="9AC06A5C44B29B00" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                            <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="B77B5796AD7E39C4" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                        </TunableTuple>
                                                                    </TunableVariant>
                                                                    <TunableList name="whitelist" class="TunableSet" display="Whitelist" muid="6254F934D5962D68" description="Whitelisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                        <Tunable type="snippet" class="TunableReference" muid="E874E9441AD6317A" description="Allowed and disallowed civic policies." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="BaseCivicPolicy" />
                                                                    </TunableList>
                                                                </TunableTuple>
                                                            </TunableVariant>
                                                        </TunableTuple>
                                                    </TunableTuple>
                                                    <TunableTuple name="balloted" class="TunableBaseCivicPolicyTestBalloted" display="Balloted" muid="3FA832768572E892" description="Test balloted policies.  Policies being considered by the next/current vote are&#xA;balloted." Deprecated="False" filter="0" group="General">
                                                        <TunableTuple name="white_black_list" class="TunableWhiteBlackList" display="White Black List" muid="78F6E2225F173AC6" description="The civic policies must pass the whitelist and blacklist&#xA;to pass the test." Deprecated="False" filter="0" group="General">
                                                            <TunableVariant type="None" name="blacklist" class="OptionalTunable" default="nothing" display="Blacklist" muid="5B239C55D61D45B5" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is not in the blacklist. If no blacklist is&#xA;specified, no items are disallowed." Deprecated="False" filter="0" group="General">
                                                                <Tunable name="nothing" class="TunableExistance" display="Nothing" muid="DE32EDC303429308" />
                                                                <TunableTuple name="specify" class="TunableBlacklist" display="Specify" muid="D5F18BB030DCB393" description="A tunable blacklist." Deprecated="False" filter="0" group="General">
                                                                    <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="493B173DED9E9254" description="Blacklisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                        <Tunable type="snippet" class="TunableReference" muid="B67F99A04319ED95" description="Allowed and disallowed civic policies." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="BaseCivicPolicy" />
                                                                    </TunableList>
                                                                    <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="41683BA0D5F50A1" description="Tunable option for how many items must be in the blacklist&#xA;for the blacklist to fail when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                        <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="65ACB136D5B92170" />
                                                                        <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="545D668F958830EE" description="When testing a collection of items, the number of items in&#xA;that collection that are in the blacklist must pass this&#xA;threshold test for the blacklist to disallow them all." Deprecated="False" filter="0" group="General">
                                                                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="C3044E1C0E75B93" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                            <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="A1EEFF4779F5B49" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                        </TunableTuple>
                                                                    </TunableVariant>
                                                                </TunableTuple>
                                                            </TunableVariant>
                                                            <TunableVariant type="None" name="whitelist" class="OptionalTunable" default="everything" display="Whitelist" muid="60F994DB37E429BD" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is in the whitelist. If no whitelist is&#xA;specified, all items are allowed." Deprecated="False" filter="0" group="General">
                                                                <Tunable name="everything" class="TunableExistance" display="Everything" muid="C052C2D7D1F24D6D" />
                                                                <TunableTuple name="specify" class="TunableWhitelist" display="Specify" muid="47AA55258D228A96" description="A tunable whitelist." Deprecated="False" filter="0" group="General">
                                                                    <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="DAEA165254CB176" description="Tunable option for how many items must be in the whitelist&#xA;for the whitelist to pass when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                        <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="13F15D0A6FEFA4EC" />
                                                                        <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="8E015493D3E5B674" description="When testing a collection of items, the number of items in&#xA;that collection that are in the whitelist must pass this&#xA;threshold test for the whitelist to allow them all." Deprecated="False" filter="0" group="General">
                                                                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="2913DA6EEACEE6CF" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                            <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="9FBAB46C5A500DA9" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                        </TunableTuple>
                                                                    </TunableVariant>
                                                                    <TunableList name="whitelist" class="TunableSet" display="Whitelist" muid="A081886E93C567ED" description="Whitelisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                        <Tunable type="snippet" class="TunableReference" muid="3AC35BB35AE50152" description="Allowed and disallowed civic policies." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="BaseCivicPolicy" />
                                                                    </TunableList>
                                                                </TunableTuple>
                                                            </TunableVariant>
                                                        </TunableTuple>
                                                    </TunableTuple>
                                                    <TunableTuple name="dormant" class="TunableBaseCivicPolicyTestDormant" display="Dormant" muid="D777C5911975C06B" description="Test dormant policies. Dormant policies are not enacted and not balloted." Deprecated="False" filter="0" group="General">
                                                        <TunableTuple name="white_black_list" class="TunableWhiteBlackList" display="White Black List" muid="788602FF0846B376" description="The civic policies must pass the whitelist and blacklist&#xA;to pass the test." Deprecated="False" filter="0" group="General">
                                                            <TunableVariant type="None" name="blacklist" class="OptionalTunable" default="nothing" display="Blacklist" muid="BD0B3B5D945C9CFF" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is not in the blacklist. If no blacklist is&#xA;specified, no items are disallowed." Deprecated="False" filter="0" group="General">
                                                                <Tunable name="nothing" class="TunableExistance" display="Nothing" muid="64A1374FE910727C" />
                                                                <TunableTuple name="specify" class="TunableBlacklist" display="Specify" muid="54473756144B9D56" description="A tunable blacklist." Deprecated="False" filter="0" group="General">
                                                                    <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="E726753F85DD244" description="Blacklisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                        <Tunable type="snippet" class="TunableReference" muid="44F3BBDA17B1C743" description="Allowed and disallowed civic policies." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="BaseCivicPolicy" />
                                                                    </TunableList>
                                                                    <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="1560DAB1EFB9EB29" description="Tunable option for how many items must be in the blacklist&#xA;for the blacklist to fail when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                        <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="DC671D0D1656AA34" />
                                                                        <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="2EC1BC008D817A63" description="When testing a collection of items, the number of items in&#xA;that collection that are in the blacklist must pass this&#xA;threshold test for the blacklist to disallow them all." Deprecated="False" filter="0" group="General">
                                                                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="8C0394D57B785AD4" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                            <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="E801223CCCDE9C3E" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                        </TunableTuple>
                                                                    </TunableVariant>
                                                                </TunableTuple>
                                                            </TunableVariant>
                                                            <TunableVariant type="None" name="whitelist" class="OptionalTunable" default="everything" display="Whitelist" muid="2017766F07672DCB" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is in the whitelist. If no whitelist is&#xA;specified, all items are allowed." Deprecated="False" filter="0" group="General">
                                                                <Tunable name="everything" class="TunableExistance" display="Everything" muid="EA9D9C54B6268A7C" />
                                                                <TunableTuple name="specify" class="TunableWhitelist" display="Specify" muid="52E05DBE0635F235" description="A tunable whitelist." Deprecated="False" filter="0" group="General">
                                                                    <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="3AA0B7054E1F0AD9" description="Tunable option for how many items must be in the whitelist&#xA;for the whitelist to pass when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                        <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="DBDE103427F1AB5B" />
                                                                        <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="45CA2CD56BF2DE6A" description="When testing a collection of items, the number of items in&#xA;that collection that are in the whitelist must pass this&#xA;threshold test for the whitelist to allow them all." Deprecated="False" filter="0" group="General">
                                                                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="3FF45232C281009D" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                            <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="EEB59EBB4F613687" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                        </TunableTuple>
                                                                    </TunableVariant>
                                                                    <TunableList name="whitelist" class="TunableSet" display="Whitelist" muid="A17318F81D3A17FB" description="Whitelisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                        <Tunable type="snippet" class="TunableReference" muid="1D921FE3DC2E7334" description="Allowed and disallowed civic policies." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="BaseCivicPolicy" />
                                                                    </TunableList>
                                                                </TunableTuple>
                                                            </TunableVariant>
                                                        </TunableTuple>
                                                    </TunableTuple>
                                                    <TunableTuple name="enacted" class="TunableBaseCivicPolicyTestEnacted" display="Enacted" muid="2E6472F6FB5A3429" description="Test enacted policies." Deprecated="False" filter="0" group="General">
                                                        <TunableTuple name="white_black_list" class="TunableWhiteBlackList" display="White Black List" muid="B26001E67C9EBFBD" description="The civic policies must pass the whitelist and blacklist&#xA;to pass the test." Deprecated="False" filter="0" group="General">
                                                            <TunableVariant type="None" name="blacklist" class="OptionalTunable" default="nothing" display="Blacklist" muid="5B47841CE886FDB7" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is not in the blacklist. If no blacklist is&#xA;specified, no items are disallowed." Deprecated="False" filter="0" group="General">
                                                                <Tunable name="nothing" class="TunableExistance" display="Nothing" muid="FF7D226A9D820C3C" />
                                                                <TunableTuple name="specify" class="TunableBlacklist" display="Specify" muid="D085B865CEB4861A" description="A tunable blacklist." Deprecated="False" filter="0" group="General">
                                                                    <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="141F0A9DC996B230" description="Blacklisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                        <Tunable type="snippet" class="TunableReference" muid="A7D1FC8CF17708D" description="Allowed and disallowed civic policies." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="BaseCivicPolicy" />
                                                                    </TunableList>
                                                                    <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="964162E1478F2EB5" description="Tunable option for how many items must be in the blacklist&#xA;for the blacklist to fail when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                        <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="218BFFAC9F3F9710" />
                                                                        <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="9064C74C74293E03" description="When testing a collection of items, the number of items in&#xA;that collection that are in the blacklist must pass this&#xA;threshold test for the blacklist to disallow them all." Deprecated="False" filter="0" group="General">
                                                                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="D0F9DC45A1690216" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                            <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="82E582A167EAC593" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                        </TunableTuple>
                                                                    </TunableVariant>
                                                                </TunableTuple>
                                                            </TunableVariant>
                                                            <TunableVariant type="None" name="whitelist" class="OptionalTunable" default="everything" display="Whitelist" muid="D5F607FC03AA1A08" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is in the whitelist. If no whitelist is&#xA;specified, all items are allowed." Deprecated="False" filter="0" group="General">
                                                                <Tunable name="everything" class="TunableExistance" display="Everything" muid="174016383D302BCA" />
                                                                <TunableTuple name="specify" class="TunableWhitelist" display="Specify" muid="7736887DCF4EBBF" description="A tunable whitelist." Deprecated="False" filter="0" group="General">
                                                                    <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="E3868A33249745AE" description="Tunable option for how many items must be in the whitelist&#xA;for the whitelist to pass when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                        <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="FF98A9D1E494972" />
                                                                        <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="9CD9B79822CF4F04" description="When testing a collection of items, the number of items in&#xA;that collection that are in the whitelist must pass this&#xA;threshold test for the whitelist to allow them all." Deprecated="False" filter="0" group="General">
                                                                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="B6C6E815F355ACAB" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                            <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="C939F3BD977738D6" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                        </TunableTuple>
                                                                    </TunableVariant>
                                                                    <TunableList name="whitelist" class="TunableSet" display="Whitelist" muid="6D7A2071B12C931C" description="Whitelisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                        <Tunable type="snippet" class="TunableReference" muid="6146DCFC42F063D2" description="Allowed and disallowed civic policies." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="BaseCivicPolicy" />
                                                                    </TunableList>
                                                                </TunableTuple>
                                                            </TunableVariant>
                                                        </TunableTuple>
                                                    </TunableTuple>
                                                    <TunableTuple name="repealable" class="TunableBaseCivicPolicyTestRepealable" display="Repealable" muid="CFC229E1057E6B0C" description="Test up for repeal policies. Up for Repeal policies have been specifically marked&#xA;as such and will (if the vote/petition threshold is reached) be repealed&#xA;as part of closing the next vote." Deprecated="False" filter="0" group="General">
                                                        <TunableTuple name="white_black_list" class="TunableWhiteBlackList" display="White Black List" muid="C9304CF53CABF88D" description="The civic policies must pass the whitelist and blacklist&#xA;to pass the test." Deprecated="False" filter="0" group="General">
                                                            <TunableVariant type="None" name="blacklist" class="OptionalTunable" default="nothing" display="Blacklist" muid="E5D7336D834B4D39" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is not in the blacklist. If no blacklist is&#xA;specified, no items are disallowed." Deprecated="False" filter="0" group="General">
                                                                <Tunable name="nothing" class="TunableExistance" display="Nothing" muid="9324EE68078D0C77" />
                                                                <TunableTuple name="specify" class="TunableBlacklist" display="Specify" muid="F5C6938574C95C31" description="A tunable blacklist." Deprecated="False" filter="0" group="General">
                                                                    <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="16403C992FB8175A" description="Blacklisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                        <Tunable type="snippet" class="TunableReference" muid="5A034A3EB9746178" description="Allowed and disallowed civic policies." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="BaseCivicPolicy" />
                                                                    </TunableList>
                                                                    <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="48B36DA002EFF26F" description="Tunable option for how many items must be in the blacklist&#xA;for the blacklist to fail when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                        <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="9237CF084208F37A" />
                                                                        <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="64CB9427D4051195" description="When testing a collection of items, the number of items in&#xA;that collection that are in the blacklist must pass this&#xA;threshold test for the blacklist to disallow them all." Deprecated="False" filter="0" group="General">
                                                                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="469AD45A5596B53" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                            <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="4802904B7DA069B3" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                        </TunableTuple>
                                                                    </TunableVariant>
                                                                </TunableTuple>
                                                            </TunableVariant>
                                                            <TunableVariant type="None" name="whitelist" class="OptionalTunable" default="everything" display="Whitelist" muid="FDA57F599A68F4A0" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is in the whitelist. If no whitelist is&#xA;specified, all items are allowed." Deprecated="False" filter="0" group="General">
                                                                <Tunable name="everything" class="TunableExistance" display="Everything" muid="CE8585D3AE53AB21" />
                                                                <TunableTuple name="specify" class="TunableWhitelist" display="Specify" muid="CCB9F7885AF3BB3C" description="A tunable whitelist." Deprecated="False" filter="0" group="General">
                                                                    <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="9692FE934BD7AEBB" description="Tunable option for how many items must be in the whitelist&#xA;for the whitelist to pass when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                        <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="C1CEDFC95D3E474C" />
                                                                        <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="FB3B6061117B44E5" description="When testing a collection of items, the number of items in&#xA;that collection that are in the whitelist must pass this&#xA;threshold test for the whitelist to allow them all." Deprecated="False" filter="0" group="General">
                                                                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="148051E6C5B2CFFB" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                            <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="9CDE0153D502ED5C" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                        </TunableTuple>
                                                                    </TunableVariant>
                                                                    <TunableList name="whitelist" class="TunableSet" display="Whitelist" muid="33D18FA4A5B18E76" description="Whitelisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                        <Tunable type="snippet" class="TunableReference" muid="26B73E23E6C06D7E" description="Allowed and disallowed civic policies." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="BaseCivicPolicy" />
                                                                    </TunableList>
                                                                </TunableTuple>
                                                            </TunableVariant>
                                                        </TunableTuple>
                                                    </TunableTuple>
                                                    <TunableTuple name="voting_open" class="TunableBaseCivicPolicyTestVotingOpen" display="Voting Open" muid="3CA846EA2C7A63E6" description="If checked, will verify that voting is currently active." Deprecated="False" filter="0" group="General">
                                                        <Tunable type="bool" name="negate" class="Tunable" default="False" display="Negate" muid="19916A4594293F1C" description="If checked then this test will return True when not active." Deprecated="False" filter="0" group="General" />
                                                    </TunableTuple>
                                                    <TunableTuple name="voting_time_until_change" class="TunableBaseCivicPolicyTestVotingTimeUntilChange" display="Voting Time Until Change" muid="ED236AA751D9EE1F" description="If checked, will check the time remaining before the next voting open status change." Deprecated="False" filter="0" group="General">
                                                        <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="A567207080366399" description="The amount of time relative to the next voting state change to test." Deprecated="False" filter="0" group="General">
                                                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="95F93F96445CA4D2" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                            <TunableTuple name="value" class="TunableTimeSpan" display="Value" muid="49B84CDB3352A63B" description="Duration before the next change." Deprecated="False" filter="0" group="General">
                                                                <Tunable type="int" name="days" class="TunableRange" default="0" display="Days" muid="47EFEF61BEFFA0D5" min="0" max="None" description="Number of days" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                <Tunable type="int" name="hours" class="TunableRange" default="1" display="Hours" muid="FE1D5B947A506B39" min="0" max="23" description="Number of hours" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                <Tunable type="int" name="minutes" class="TunableRange" default="0" display="Minutes" muid="9CD12F3475E765B" min="0" max="59" description="Number of minutes" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                            </TunableTuple>
                                                        </TunableTuple>
                                                    </TunableTuple>
                                                </TunableVariant>
                                            </TunableList>
                                            <TunableVariant type="None" name="street" class="TunableVariant" default="literal" display="Street" muid="EFC608CF5B674943" description="Select what street to test." Deprecated="False" filter="0" group="General">
                                                <Tunable type="street" name="literal" class="TunableReference" display="Literal" muid="53C711B0E35D8CE" description="Identify a specific Street." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                <TunableTuple name="via_street_participant" class="TunableStreetParticipant" display="Via Street Participant" muid="9A933C9CA5B9B709" description="Get the street participant." Deprecated="False" filter="0" group="General" />
                                                <TunableVariant type="None" name="via_zone_source" class="TunableVariant" default="use_current_zone" display="Via Zone Source" muid="86D6C2B890F0A41C" description="Select the street to use by specifying a Zone Source." Deprecated="False" filter="0" group="General">
                                                    <TunableTuple name="use_current_zone" class="TunableActiveZone" display="Use Current Zone" muid="90156DD057C9F3B8" description="Get the active zone." Deprecated="False" filter="0" group="General" />
                                                    <TunableTuple name="use_participant_home_zone" class="TunableParticipantHomeZone" display="Use Participant Home Zone" muid="C8D982636CEC2AD" description="Get a participant's home zone. Can be None if they don't have one." Deprecated="False" filter="0" group="General">
                                                        <TunableEnum type="ParticipantTypeSingleSim" name="participant" class="TunableEnumEntry" default="Actor" display="Participant" muid="3F7D741DD4DBF7FA" static_entries="interactions.ParticipantTypeSingleSim" description="Test against the participant's home zone. Townies' home zone will&#xA;be None." Deprecated="False" filter="0" group="General" />
                                                    </TunableTuple>
                                                    <TunableTuple name="use_pick_info" class="TunablePickInfoZone" display="Use Pick Info" muid="59F901FF4EB3B24C" description="Get the zone of the lot the user clicked on." Deprecated="False" filter="0" group="General" />
                                                    <TunableTuple name="use_picked_zone_ids" class="TunablePickedZoneIds" display="Use Picked Zone Ids" muid="E2ABE4A48090939D" description="Get the zone from the interaction's picked_zone_ids participant. Usually&#xA;comes from a picker." Deprecated="False" filter="0" group="General" />
                                                </TunableVariant>
                                            </TunableVariant>
                                        </TunableTuple>
                                    </TunableVariant>
                                </TunableList>
                            </TunableList>
                            <Tunable type="int" name="weight" class="TunableRange" default="1" display="Weight" muid="53085562297D902D" min="1" max="None" description="Weight to use." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                        </TunableTuple>
                    </TunableList>
                </TunableTuple>
            </TunableList>
        </TunableTuple>

        <Tunable type="bool" name="full_time_npc" class="Tunable" default="False" display="Full Time Npc" muid="C7480DEFEE3A27C4" description="NPC should be considered a full time NPC.  This will make the &#xA;NPC situation have no timeout and the Sim will not leave." Deprecated="False" filter="0" group="General" />

        <Tunable type="float" name="request_offset" class="TunableSimMinute" default="10" display="Request Offset" muid="2F14DCB6742E393E" min="None" max="None" description="The minimum time between a service request and the Sim spawning on&#xA;the lot." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />

        <Tunable type="situation" name="situation" class="TunableReference" display="Situation" muid="4BF26FCDC6103928" description="The situation to start when the service has been requested." allow_none="False" Deprecated="False" filter="0" group="General" />

        <TunableTuple name="work_hours" class="TunableWeeklySchedule" display="Work Hours" muid="C401CA3E0FAE4A60" description="A class representing a tuned weekly schedule. This class can be used&#xA;to start alarms that will be called based on the tuning.&#xA;&#xA;min_alarm_time_span: if set, if timespan until next alarm has a &#xA;timespan &lt; min_alarm_time_span, timespan till alarm will be set to min_alarm_time_span&#xA;&#xA;extra_data: extra data to pass back each time the alarm is called&#xA;&#xA;start_callback will take in parameters:&#xA;scheduler, Tuple of type AlarmData, extra_data&#xA;&#xA;where scheduler is this instance of the scheduler&#xA;start_time is chosen start time, end time is chosen end time&#xA;entry is the entry that specified in the start_time, end_time in schedule_entries_tuning&#xA;extra_data is the data passed in when creating the scheduler" Deprecated="False" filter="0" group="General">
            <TunableList name="schedule_entries" class="TunableList" display="Schedule Entries" muid="6064E1138E6A563" description="A list of event schedules. Each event is a mapping of days of&#xA;the week to a start_time and duration." Deprecated="False" filter="0" group="General">
                <TunableTuple class="TunableScheduleEntry" muid="9B837154882CBA21" description="A schedule. Define availability for days of the week. For the set of&#xA;specified days, define an hour of the day and a duration, in hours.&#xA;Optionally, specified if the start time is random within the tuned window." Deprecated="False" filter="0" group="General">
                    <TunableTuple name="days_available" class="TunableAvailableDays" display="Days Available" muid="70E28695F50F261D" description="Which days of the week to include" Deprecated="False" filter="0" group="General">
                        <Tunable type="bool" name="0 SUNDAY" class="Tunable" default="False" display="0 Sunday" muid="B2B19CE68112299" Deprecated="False" filter="0" group="General" />
                        <Tunable type="bool" name="1 MONDAY" class="Tunable" default="False" display="1 Monday" muid="C7F8BCE80DEDCD26" Deprecated="False" filter="0" group="General" />
                        <Tunable type="bool" name="2 TUESDAY" class="Tunable" default="False" display="2 Tuesday" muid="ADBB781205E1FB1A" Deprecated="False" filter="0" group="General" />
                        <Tunable type="bool" name="3 WEDNESDAY" class="Tunable" default="False" display="3 Wednesday" muid="D9A971ECF8EBF3F4" Deprecated="False" filter="0" group="General" />
                        <Tunable type="bool" name="4 THURSDAY" class="Tunable" default="False" display="4 Thursday" muid="1882DCC0D931717C" Deprecated="False" filter="0" group="General" />
                        <Tunable type="bool" name="5 FRIDAY" class="Tunable" default="False" display="5 Friday" muid="5F19B7E9517775C2" Deprecated="False" filter="0" group="General" />
                        <Tunable type="bool" name="6 SATURDAY" class="Tunable" default="False" display="6 Saturday" muid="25CB2B94AB6D2D96" Deprecated="False" filter="0" group="General" />
                    </TunableTuple>
                    <Tunable type="float" name="duration" class="Tunable" default="1.0" display="Duration" muid="775528763AF51FBC" description="Duration of this work session in hours." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                    <Tunable type="bool" name="random_start" class="Tunable" default="False" display="Random Start" muid="B18655DF109D90B9" description="If checked, this schedule will have a random start time in the tuned&#xA;window each time." Deprecated="False" filter="0" group="General" />
                    <TunableEnum type="CareerShiftType" name="schedule_shift_type" class="TunableEnumEntry" default="ALL_DAY" display="Schedule Shift Type" muid="B8575271BA1EE523" static_entries="careers-career_enums.CareerShiftType" description="Shift Type for the schedule, this will be used for validations." Deprecated="False" filter="0" group="General" />
                    <TunableTuple name="start_time" class="TunableTimeOfDay" display="Start Time" muid="1A1FC5D3AC3A35E3" description="An Hour(24Hr) and Minute representing a time relative to the beginning of a day." Deprecated="False" filter="0" group="General">
                        <Tunable type="int" name="hour" class="TunableRange" default="9" display="Hour" muid="2A73D1F024EE6F5" min="0" max="23" description="Hour of the day" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                        <Tunable type="int" name="minute" class="TunableRange" default="0" display="Minute" muid="7BD3212CA568B151" min="0" max="59" description="Minute of Hour" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                    </TunableTuple>
                </TunableTuple>
            </TunableList>
        </TunableTuple>
    </Instance>

    <VersionHistory>
        <ActionList>
            <Action type="kRemove" old_muid="4673C9A9BBA8EA07" />
        </ActionList>
    </VersionHistory>
</TuningRoot>