<?xml version="1.0" encoding="iso-8859-1"?>

<TuningRoot>
    <Module name="venues.venue_service" muid="49B664D773A1B07F">
        <Class name="VenueService" muid="9485F5C26206D9FF">
            <Tunable type="float" name="ELAPSED_TIME_SINCE_LAST_VISIT_FOR_CLEANUP" class="TunableSimMinute" default="720" display="Elapsed Time Since Last Visit For Cleanup" muid="F55EF785ACE796C9" min="0" max="None" description="If more than this amount of sim minutes has elapsed since the lot was&#xA;last visited, the auto cleanup will happen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />

            <Tunable type="float" name="SPECIAL_EVENT_SCHEDULE_DELAY" class="TunableSimMinute" default="10.0" display="Special Event Schedule Delay" muid="B3FE92334B139C4" min="None" max="None" description="Number of real time seconds to wait after the loading screen before scheduling&#xA;special events." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />

            <TunableTuple name="VENUE_CLEANUP_ACTIONS" class="TunableModifyAllLotItems" display="Venue Cleanup Actions" muid="BF35E39A4BBECB71" description="Tune modifications to apply to all objects on a lot.&#xA;Can do state changes, destroy certain items, etc.&#xA;&#xA;EX: for auto cleaning, tune to have objects with Dirtiness state that&#xA;equals dirty to be set to the clean state and tune to have dirty dishes&#xA;and spoiled food to be deleted" Deprecated="False" filter="0" group="General">
                <TunableList name="modifications" class="TunableList" display="Modifications" muid="C326AF135EE6925D" description="A list of where the elements define how to modify objects on the&#xA;lot. Each entry is a triplet of an object modification action&#xA;(currently either destroy the object or set its state), a list of&#xA;tests to run on the object to determine if we should actually apply&#xA;the modification, and a priority in case some modifications should&#xA;take precedence over other ones when both of their tests pass.&#xA;&#xA;EX: test list: object's dirtiness state != dirtiness clean&#xA;action: set state to Dirtiness_clean&#xA;&#xA;So dirty objects will become clean" Deprecated="False" filter="0" group="General">
                    <TunableTuple class="TunableTuple" muid="674B5D47D4DEB952" Deprecated="False" filter="0" group="General">
                        <TunableVariant type="None" name="action" class="TunableVariant" default="none" display="Action" muid="A29811959F47117" Deprecated="False" filter="0" group="General">
                            <TunableTuple name="cleanup_vehicle" class="TunableTuple" display="Cleanup Vehicle" muid="1FCA8ECC4EDF80C9" description="Cleanup vehicles that are left around." Deprecated="False" filter="0" group="General" />
                            <TunableTuple name="deliver_bills" class="TunableTuple" display="Deliver Bills" muid="A7162D69EDD2B6D7" Deprecated="False" filter="0" group="General">
                                <TunableTuple name="action_value" class="TunableDeliverBillFakePerform" display="Action Value" muid="3639A51B790596D7" description="Let the bills manager know that a bill has been delivered and&#xA;trigger appropriate bill-specific functionality." Deprecated="False" filter="0" group="General" />
                            </TunableTuple>
                            <TunableTuple name="destroy_object" class="TunableTuple" display="Destroy Object" muid="3597B7294E21CEF7" Deprecated="False" filter="0" group="General" />
                            <TunableTuple name="inventory_transfer" class="TunableTuple" display="Inventory Transfer" muid="913F41A04EFE5055" Deprecated="False" filter="0" group="General">
                                <TunableTuple name="action_value" class="TunableInventoryTransferFakePerform" display="Action Value" muid="96D5C427802F6760" description="Transfer all objects with a specified inventory type from the&#xA;specified inventory to the inventory of a specified participant." Deprecated="False" filter="0" group="General">
                                    <TunableEnum type="InventoryType" name="recipient" class="TunableEnumEntry" default="UNDEFINED" display="Recipient" muid="7EEB3E70D19444A0" dynamic_entries="objects-components-inventory_enums.InventoryType._elements" static_entries="objects-components-inventory_enums.InventoryType" description="The inventory into which the objects will be transferred." Deprecated="False" filter="0" group="General" />
                                    <TunableEnum type="InventoryType" name="source" class="TunableEnumEntry" default="UNDEFINED" display="Source" muid="7CBAD91101FBA9B7" dynamic_entries="objects-components-inventory_enums.InventoryType._elements" static_entries="objects-components-inventory_enums.InventoryType" description="The inventory from which the objects will be transferred." Deprecated="False" filter="0" group="General" />
                                </TunableTuple>
                            </TunableTuple>
                            <TunableTuple name="loot" class="TunableTuple" display="Loot" muid="6574D11249FD2FC5" description="Apply loots to the object." Deprecated="False" filter="0" group="General">
                                <TunableList name="loot_actions" class="TunableSet" display="Loot Actions" muid="4D297B6470A64EC9" description="Loot(s) to apply." Deprecated="False" filter="0" group="General" unique_entries="true">
                                    <Tunable type="action" class="TunableReference" muid="4BCDCF9CE9636DE8" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                </TunableList>
                            </TunableTuple>
                            <Tunable name="none" class="TunableExistance" display="None" muid="3966F800A3C6D6A0" />
                            <TunableTuple name="set_on_fire" class="TunableTuple" display="Set On Fire" muid="2FA26823BFADE038" Deprecated="False" filter="0" group="General" />
                            <TunableTuple name="set_state" class="TunableTuple" display="Set State" muid="635F1F11F74C9CFF" Deprecated="False" filter="0" group="General">
                                <Tunable type="object_state" name="action_value" class="TunableReference" display="Action Value" muid="A61825536C6B4674" description="An object state to set the object to" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="ObjectStateValue" />
                            </TunableTuple>
                        </TunableVariant>
                        <Tunable type="float" name="chance" class="TunablePercent" default="100" display="Chance" muid="43A0F073EBF8C889" min="1" max="100" description="Chance this modification will occur." Deprecated="False" filter="0" group="General" />
                        <TunableList name="global_tests" class="TunableObjectModifyGlobalTestList" display="Global Tests" muid="3191E633DDD54695" description="Non object-related tests that gate this modification from occurring.  Use this for any global&#xA;tests that don't require the object, such as zone/location/time-elapsed tests.  These tests&#xA;will run only ONCE for this action, unlike 'Tests', which runs PER OBJECT. " Deprecated="False" filter="0" group="General">
                            <TunableVariant type="None" class="TunableObjectModifyGlobalTestVariant" default="none" muid="4E6DC19029309FF4" Deprecated="False" filter="0" group="General">
                                <TunableTuple name="elapsed_time" class="TunableTimeElapsedZoneTest" display="Elapsed Time" muid="AF717884D8C29D69" description="Test to make sure enough time has passed since the zone was last saved." Deprecated="False" filter="0" group="General">
                                    <Tunable type="float" name="minutes_passed" class="TunableSimMinute" default="720" display="Minutes Passed" muid="D0EEDBC2BA5A1FA4" min="1" max="None" description="This test will pass when the minutes passed is greater than the&#xA;number minutes since last loading into zone." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                </TunableTuple>
                                <Tunable name="none" class="TunableExistance" display="None" muid="4F14276D95FA29FD" />
                                <TunableTuple name="season" class="TunableSeasonTest" display="Season" muid="A322F367BA649B19" description="SeasonTest will test if the current simulation time falls within the&#xA;specified test conditions." Deprecated="False" filter="0" group="General">
                                    <Tunable type="bool" name="requires_seasons_pack" class="Tunable" default="True" display="Requires Seasons Pack" muid="F0BF8FFC2BF3942" description="If checked, this test will require that the Seasons pack be &#xA;installed in order for the seasons test to pass.  If unchecked, &#xA;this test will automatically pass." Deprecated="False" filter="0" group="General" />
                                    <TunableList name="seasons" class="TunableEnumSet" display="Seasons" muid="A9C53D6B8FE29017" min="1" description="Season(s) that we must be in to pass the test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                        <TunableEnum type="SeasonType" class="TunableEnumEntry" default="SUMMER" muid="E317339983BC93" static_entries="seasons-seasons_enums.SeasonType" Deprecated="False" filter="0" group="General" />
                                    </TunableList>
                                    <TunableVariant type="None" name="time_of_season" class="OptionalTunable" default="disabled" display="Time Of Season" muid="42DDFDE00DC4C1F8" description="Portion(s) of season(s) that we must be in to pass the test." Deprecated="False" filter="0" group="General">
                                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="4F86455FACB0D35E" />
                                        <TunableList name="enabled" class="TunableEnumSet" display="Enabled" muid="2C9D06767E063317" min="1" description="Portion(s) of season(s) that we must be in to pass the test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                            <TunableEnum type="SeasonSegment" class="TunableEnumEntry" default="EARLY" muid="E919F271EE1213D2" static_entries="seasons-seasons_enums.SeasonSegment" Deprecated="False" filter="0" group="General" />
                                        </TunableList>
                                    </TunableVariant>
                                </TunableTuple>
                                <TunableTuple name="zone" class="TunableZoneTest" display="Zone" muid="A830CE8AC5A08041" description="A tunable factory that tests properties of a particular zone." Deprecated="False" filter="0" group="General">
                                    <TunableVariant type="None" name="zone_source" class="TunableVariant" default="use_current_zone" display="Zone Source" muid="5DE539496A4CECA3" description="Which zone we want to test." Deprecated="False" filter="0" group="General">
                                        <TunableTuple name="use_current_zone" class="TunableActiveZone" display="Use Current Zone" muid="FE72974B3AE6C42A" description="Get the active zone." Deprecated="False" filter="0" group="General" />
                                        <TunableTuple name="use_participant_home_zone" class="TunableParticipantHomeZone" display="Use Participant Home Zone" muid="D6BFE0B2CFDACD77" description="Get a participant's home zone. Can be None if they don't have one." Deprecated="False" filter="0" group="General">
                                            <TunableEnum type="ParticipantTypeSingleSim" name="participant" class="TunableEnumEntry" default="Actor" display="Participant" muid="2278F23FDCD1B7DE" static_entries="interactions.ParticipantTypeSingleSim" description="Test against the participant's home zone. Townies' home zone will&#xA;be None." Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                        <TunableTuple name="use_pick_info" class="TunablePickInfoZone" display="Use Pick Info" muid="AB6A3A91A3EFF225" description="Get the zone of the lot the user clicked on." Deprecated="False" filter="0" group="General" />
                                        <TunableTuple name="use_picked_zone_ids" class="TunablePickedZoneIds" display="Use Picked Zone Ids" muid="A7EA716978D26BD8" description="Get the zone from the interaction's picked_zone_ids participant. Usually&#xA;comes from a picker." Deprecated="False" filter="0" group="General" />
                                    </TunableVariant>
                                    <TunableTuple name="zone_tests" class="TunableTuple" display="Zone Tests" muid="30504377C8717DD1" description="The tests we wish to run on the zone in question." Deprecated="False" filter="0" group="General">
                                        <TunableVariant type="None" name="business_tests" class="OptionalTunable" default="Don't_Test" display="Business Tests" muid="9FF9AA48031B703A" description="If enabled, test if the specified zone is a business or not." Deprecated="False" filter="0" group="General">
                                            <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="18FA9729132D3456" />
                                            <TunableVariant type="None" name="enabled" class="TunableVariant" default="is_business" display="Enabled" muid="C93121C1AF34B6F1" description="Test if the zone is a business, an open business, or a&#xA;closed business." Deprecated="False" filter="0" group="General">
                                                <TunableTuple name="is_business" class="Tunable_IsBusinessTest" display="Is Business" muid="4B3DEA8CF4CF0112" description="Test if the zone specified by the zone id is a business or not." Deprecated="False" filter="0" group="General" />
                                                <TunableTuple name="is_business_open" class="Tunable_IsBusinessOpenTest" display="Is Business Open" muid="FC992AD1E322FEEC" description="Test if the zone specified by the zone id is an open business." Deprecated="False" filter="0" group="General" />
                                            </TunableVariant>
                                        </TunableVariant>
                                        <TunableVariant type="None" name="is_apartment" class="OptionalTunable" default="Don't_Test" display="Is Apartment" muid="6D1698BF070559DD" description="If checked, test will pass if the zone is an apartment. If&#xA;unchecked, test passes if the zone is NOT an apartment. Useful&#xA; in aspiration tuning, to discriminate between property&#xA;types in tests of lot value. Allows &quot;Own a House worth X&quot; and&#xA;&quot;Own an Apartment worth X&quot;" Deprecated="False" filter="0" group="General">
                                            <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="77086BC54E3D0C68" />
                                            <TunableTuple name="Is_or_is_not_apartment_zone" class="TunableTuple" display="Is Or Is Not Apartment Zone" muid="21886E4A58822548" description="Test whether the zone is an apartment or not." Deprecated="False" filter="0" group="General">
                                                <Tunable type="bool" name="consider_penthouse_an_apartment" class="Tunable" default="True" display="Consider Penthouse An Apartment" muid="1C8A30674136B9A5" description="If enabled, we will consider penthouses to be&#xA;apartments when testing them against the apartment&#xA;check." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="bool" name="is_apartment" class="Tunable" default="True" display="Is Apartment" muid="5935D8B1BFC655AB" description="If checked, test will pass if the zone is an apartment.&#xA;If unchecked, test passes if the zone is NOT an&#xA;apartment." Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                        </TunableVariant>
                                        <TunableVariant type="None" name="is_penthouse" class="OptionalTunable" default="disabled" display="Is Penthouse" muid="D17340026A37794D" description="If enabled, test whether or not the current zone is a penthouse." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="39270E06E9FAC186" />
                                            <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="505080C2A756C179" description="If checked, the zone must be a penthouse. If unchecked, the&#xA;zone cannot be a penthouse." Deprecated="False" filter="0" group="General" />
                                        </TunableVariant>
                                        <Tunable type="bool" name="use_source_venue" class="Tunable" default="False" display="Use Source Venue" muid="3132ED5878AD6E0" description="If enabled, the test will test the source venue instead of the active&#xA;venue.  For example, the Community Lot instead of the active Marketplace.&#xA;Testing the active venue is the default." Deprecated="False" filter="0" group="General" />
                                        <TunableVariant type="None" name="venue_tier" class="OptionalTunable" default="disabled" display="Venue Tier" muid="2212895B8E6070F4" description="If checked, will verify that the zone's venue is at the tuned &#xA;tier. If &quot;no valid tier&quot; is selected, this test will be True&#xA;if either the current venue doesn't have tiers or if it does but&#xA;it doesn't currently meet any of their requirements." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="92D81B5986BB0AD2" />
                                            <TunableVariant type="None" name="enabled" class="TunableVariant" default="none" display="Enabled" muid="6791E3BC28FCAA9C" description="                    " Deprecated="False" filter="0" group="General">
                                                <Tunable name="no_valid_tier" class="TunableExistance" display="No Valid Tier" muid="E8FFC16577E8E61" />
                                                <Tunable name="none" class="TunableExistance" display="None" muid="BADB758AC6B8CE5D" />
                                                <Tunable type="int" name="tier_number" class="TunableRange" default="0" display="Tier Number" muid="523E78BB76127487" min="0" max="None" description="The index of the tier to test. This test will return&#xA;true if this tier is active and false otherwise. This&#xA;should be the index of the tier in the tier list and not&#xA;any player-facing index. For instance, if a tier list&#xA;had a single tier, that tier would be 0, and if a second&#xA;tier were added, that second tier would be 1." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            </TunableVariant>
                                        </TunableVariant>
                                        <TunableVariant type="None" name="venue_type" class="OptionalTunable" default="Don't_Test" display="Venue Type" muid="56D7B92FA56018C0" description="If checked, will verify the zone's venue type is allowed or&#xA;disallowed." Deprecated="False" filter="0" group="General">
                                            <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="9053CBDAB5F29B57" />
                                            <TunableTuple name="enabled" class="TunableWhiteBlackList" display="Enabled" muid="C8F5D72A4394D50A" description="The zone's venue type must pass the whitelist and blacklist&#xA;to pass the test." Deprecated="False" filter="0" group="General">
                                                <TunableVariant type="None" name="blacklist" class="OptionalTunable" default="nothing" display="Blacklist" muid="3068B006AF2EB890" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is not in the blacklist. If no blacklist is&#xA;specified, no items are disallowed." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="nothing" class="TunableExistance" display="Nothing" muid="4079ACDF544B396F" />
                                                    <TunableTuple name="specify" class="TunableBlacklist" display="Specify" muid="A86289EEBC77ADE9" description="A tunable blacklist." Deprecated="False" filter="0" group="General">
                                                        <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="1F791E0E72EC66CF" description="Blacklisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                            <Tunable type="venue" class="TunableReference" muid="A311FF564EA837A0" description="Allowed and disallowed venue types." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                        </TunableList>
                                                        <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="9DBED0FCCB36F213" description="Tunable option for how many items must be in the blacklist&#xA;for the blacklist to fail when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                            <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="E101B70803E9E86E" />
                                                            <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="8EC7E83525406AC8" description="When testing a collection of items, the number of items in&#xA;that collection that are in the blacklist must pass this&#xA;threshold test for the blacklist to disallow them all." Deprecated="False" filter="0" group="General">
                                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="DBBD9E8AAA20152A" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="AA1AD36BE4E4D692" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                            </TunableTuple>
                                                        </TunableVariant>
                                                    </TunableTuple>
                                                </TunableVariant>
                                                <TunableVariant type="None" name="whitelist" class="OptionalTunable" default="everything" display="Whitelist" muid="F1E09BF8F27A14E0" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is in the whitelist. If no whitelist is&#xA;specified, all items are allowed." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="everything" class="TunableExistance" display="Everything" muid="C65CBE2F8AB81BEA" />
                                                    <TunableTuple name="specify" class="TunableWhitelist" display="Specify" muid="F8B1A9505A865435" description="A tunable whitelist." Deprecated="False" filter="0" group="General">
                                                        <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="EC5FD06D313D0F61" description="Tunable option for how many items must be in the whitelist&#xA;for the whitelist to pass when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                            <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="6FC6116C10A51F4A" />
                                                            <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="E4607D487E763614" description="When testing a collection of items, the number of items in&#xA;that collection that are in the whitelist must pass this&#xA;threshold test for the whitelist to allow them all." Deprecated="False" filter="0" group="General">
                                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="870D4349C821F0BB" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="5379C628247B3E12" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                            </TunableTuple>
                                                        </TunableVariant>
                                                        <TunableList name="whitelist" class="TunableSet" display="Whitelist" muid="DFFE18C53188E403" description="Whitelisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                            <Tunable type="venue" class="TunableReference" muid="43CB8A2BD3BF2BC7" description="Allowed and disallowed venue types." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                        </TunableList>
                                                    </TunableTuple>
                                                </TunableVariant>
                                            </TunableTuple>
                                        </TunableVariant>
                                        <TunableVariant type="None" name="was_owner_household_changed" class="OptionalTunable" default="Don't_Test" display="Was Owner Household Changed" muid="48CDBFCB846B45B6" description="If enabled, test if the lot owner household for the specified zone &#xA;was changed between when the zone was saved and when it was loaded." Deprecated="False" filter="0" group="General">
                                            <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="F68A20037FA6F005" />
                                            <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="DA46673DE4DD4FE5" description="If checked,  test will pass if the zone's owner household was changed &#xA;between when the zone was saved and when it was loaded. &#xA;If unchecked, test will pass if the zone's owner household was NOT changed &#xA;between when the zone was saved and when it was loaded. " Deprecated="False" filter="0" group="General" />
                                        </TunableVariant>
                                        <TunableVariant type="None" name="world_tests" class="OptionalTunable" default="disabled" display="World Tests" muid="71F976B2214A6AA" description="If enabled, we test if specified zone is or is not in the specified world(s)" Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="33955DE7E57FECEA" />
                                            <TunableTuple name="enabled" class="TunableWhiteBlackList" display="Enabled" muid="5C82E0AD10935A53" description="Pass if zone is in one of the worlds in the whitelist,&#xA;or fail if it is any of the worlds in the blacklist." Deprecated="False" filter="0" group="General">
                                                <TunableVariant type="None" name="blacklist" class="OptionalTunable" default="nothing" display="Blacklist" muid="4DC38955B32219AB" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is not in the blacklist. If no blacklist is&#xA;specified, no items are disallowed." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="nothing" class="TunableExistance" display="Nothing" muid="7CE0C2AAEEFA8907" />
                                                    <TunableTuple name="specify" class="TunableBlacklist" display="Specify" muid="3FF0B9B43514235C" description="A tunable blacklist." Deprecated="False" filter="0" group="General">
                                                        <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="52E814D6D372C6B3" description="Blacklisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                            <Tunable type="worlddescription" class="TunableReference" muid="E7705AEC0F2EF306" description="World to check against." Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                        </TunableList>
                                                        <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="8DC4FC58616F6906" description="Tunable option for how many items must be in the blacklist&#xA;for the blacklist to fail when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                            <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="A45C40A162E7229E" />
                                                            <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="3D96B63A8250E830" description="When testing a collection of items, the number of items in&#xA;that collection that are in the blacklist must pass this&#xA;threshold test for the blacklist to disallow them all." Deprecated="False" filter="0" group="General">
                                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="F238839DBE666FF0" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="87BDDF3BA201F92F" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                            </TunableTuple>
                                                        </TunableVariant>
                                                    </TunableTuple>
                                                </TunableVariant>
                                                <TunableVariant type="None" name="whitelist" class="OptionalTunable" default="everything" display="Whitelist" muid="2C3BCD57E0A05485" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is in the whitelist. If no whitelist is&#xA;specified, all items are allowed." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="everything" class="TunableExistance" display="Everything" muid="DA396C625CA432EF" />
                                                    <TunableTuple name="specify" class="TunableWhitelist" display="Specify" muid="6A3A691590272E64" description="A tunable whitelist." Deprecated="False" filter="0" group="General">
                                                        <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="1B445A482D980FEB" description="Tunable option for how many items must be in the whitelist&#xA;for the whitelist to pass when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                            <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="AC64367D190041BE" />
                                                            <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="B557CA79B32C81AE" description="When testing a collection of items, the number of items in&#xA;that collection that are in the whitelist must pass this&#xA;threshold test for the whitelist to allow them all." Deprecated="False" filter="0" group="General">
                                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="7931FA374351106C" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="DD3B79EC8D682505" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                            </TunableTuple>
                                                        </TunableVariant>
                                                        <TunableList name="whitelist" class="TunableSet" display="Whitelist" muid="E95A10E31A0D901C" description="Whitelisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                            <Tunable type="worlddescription" class="TunableReference" muid="6020BDD1EEB45361" description="World to check against." Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                        </TunableList>
                                                    </TunableTuple>
                                                </TunableVariant>
                                            </TunableTuple>
                                        </TunableVariant>
                                        <TunableVariant type="None" name="zone_modifiers" class="OptionalTunable" default="Don't_Test" display="Zone Modifiers" muid="A5CDC3585D080C42" description="if enabled, we test the zone modifiers allowed or disallowed." Deprecated="False" filter="0" group="General">
                                            <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="7D896CF494A0DA3E" />
                                            <TunableTuple name="enabled" class="TunableWhiteBlackList" display="Enabled" muid="45E7EBF9A259A7FE" description="The zone's modifiers must pass this whitelist and blacklist for the&#xA;test to pass." Deprecated="False" filter="0" group="General">
                                                <TunableVariant type="None" name="blacklist" class="OptionalTunable" default="nothing" display="Blacklist" muid="631D74C302DA2ADC" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is not in the blacklist. If no blacklist is&#xA;specified, no items are disallowed." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="nothing" class="TunableExistance" display="Nothing" muid="8A68734B8069F0C7" />
                                                    <TunableTuple name="specify" class="TunableBlacklist" display="Specify" muid="E542CF70CD8C93EC" description="A tunable blacklist." Deprecated="False" filter="0" group="General">
                                                        <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="2F31ABB467782D84" description="Blacklisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                            <Tunable type="zone_modifier" class="TunableReference" muid="D531772FB2937C8B" description="Allowed and disallowed zone modifiers." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                        </TunableList>
                                                        <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="FB75CA4BABF5EB5B" description="Tunable option for how many items must be in the blacklist&#xA;for the blacklist to fail when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                            <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="9CC3562FCA93DAB0" />
                                                            <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="C96E9E7510967C2B" description="When testing a collection of items, the number of items in&#xA;that collection that are in the blacklist must pass this&#xA;threshold test for the blacklist to disallow them all." Deprecated="False" filter="0" group="General">
                                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="ADF5D831B4E1FE2D" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="7B6C631FFF4A7E56" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                            </TunableTuple>
                                                        </TunableVariant>
                                                    </TunableTuple>
                                                </TunableVariant>
                                                <TunableVariant type="None" name="whitelist" class="OptionalTunable" default="everything" display="Whitelist" muid="12FD3C07DA2E3BC8" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is in the whitelist. If no whitelist is&#xA;specified, all items are allowed." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="everything" class="TunableExistance" display="Everything" muid="806CC3025300D88D" />
                                                    <TunableTuple name="specify" class="TunableWhitelist" display="Specify" muid="EE5D7498E4242929" description="A tunable whitelist." Deprecated="False" filter="0" group="General">
                                                        <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="D4A53BEADE055DB4" description="Tunable option for how many items must be in the whitelist&#xA;for the whitelist to pass when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                            <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="3A15FBD9731583CB" />
                                                            <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="2553243CF3694268" description="When testing a collection of items, the number of items in&#xA;that collection that are in the whitelist must pass this&#xA;threshold test for the whitelist to allow them all." Deprecated="False" filter="0" group="General">
                                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="93F930F5CFC3C014" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="1790AF15424A1372" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                            </TunableTuple>
                                                        </TunableVariant>
                                                        <TunableList name="whitelist" class="TunableSet" display="Whitelist" muid="6C8926E21045E513" description="Whitelisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                            <Tunable type="zone_modifier" class="TunableReference" muid="FFA3EE8B6C95558A" description="Allowed and disallowed zone modifiers." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                        </TunableList>
                                                    </TunableTuple>
                                                </TunableVariant>
                                            </TunableTuple>
                                        </TunableVariant>
                                    </TunableTuple>
                                </TunableTuple>
                            </TunableVariant>
                        </TunableList>
                        <TunableList name="tests" class="TunableObjectModifyTestSet" display="Tests" muid="8452F091EB419CD6" description="All least one subtest group (AKA one list item) must pass&#xA;within this list before the action associated with this&#xA;tuning will be run." Deprecated="False" filter="0" group="General">
                            <TunableList class="TunableList" muid="4DD2ED511C526DFD" description="A list of tests.  All of these must pass for the group to pass." Deprecated="False" filter="0" group="General">
                                <TunableVariant type="None" class="TunableObjectModifyTestVariant" default="none" muid="24FBD1101F2B538E" description="A single tunable test." Deprecated="False" filter="0" group="General">
                                    <TunableTuple name="consumable_test" class="TunableConsumableTest" display="Consumable Test" muid="9DC750A38142888E" description="A test that checks information about consumables." Deprecated="False" filter="0" group="General">
                                        <TunableTuple name="bites_left" class="TunableTuple" display="Bites Left" muid="A883214BB6A544D7" description="A check that tests against the number of bites left before the&#xA;subject is completely consumed." Deprecated="False" filter="0" group="General">
                                            <TunableEnum type="Operator" name="operator" class="TunableOperator" default="EQUAL" display="Operator" muid="7A55A7CE381C0D6A" static_entries="sims4-math.Operator" description="The operator to use for the comparison." Deprecated="False" filter="0" group="General" />
                                            <Tunable type="int" name="value" class="Tunable" default="1" display="Value" muid="2D7AAF3AF0310393" description="The number of bites to test against." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                        <Tunable type="bool" name="is_consumable" class="Tunable" default="True" display="Is Consumable" muid="C98D04FF2521DE55" description="If checked, the subject must be a consumable, if unchecked, the&#xA;subject must not be a consumable." Deprecated="False" filter="0" group="General" />
                                        <TunableEnum type="ParticipantType" name="subject" class="TunableEnumEntry" default="Object" display="Subject" muid="5C7328385A6D6B5B" static_entries="interactions.ParticipantType" description="The subject of the test. This is the consumable object." Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                    <TunableTuple name="custom_name" class="TunableCustomNameTest" display="Custom Name" muid="1E89D1FCBA63E528" description="Require or prohibit an object from having a custom&#xA;name or description set." Deprecated="False" filter="0" group="General">
                                        <TunableVariant type="None" name="has_custom_description" class="OptionalTunable" default="disabled" display="Has Custom Description" muid="E12C0820609B6EF7" description="If checked, the subject must have a custom description set. If unchecked, it cannot have a custom description set." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="E600C99F7DD2E4B6" />
                                            <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="5A4ED3DA42B5395B" description="If checked, the subject must have a custom description set. If unchecked, it cannot have a custom description set." Deprecated="False" filter="0" group="General" />
                                        </TunableVariant>
                                        <TunableVariant type="None" name="has_custom_name" class="OptionalTunable" default="disabled" display="Has Custom Name" muid="FDCEEE2C94C786A5" description="If checked, the subject must have a custom name set. If unchecked, it cannot have a custom name set." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="C03E6372AE929C71" />
                                            <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="4D7548354CEA65D4" description="If checked, the subject must have a custom name set. If unchecked, it cannot have a custom name set." Deprecated="False" filter="0" group="General" />
                                        </TunableVariant>
                                        <TunableEnum type="ParticipantType" name="participant" class="TunableEnumEntry" default="Object" display="Participant" muid="20FAD18A9ED67C92" static_entries="interactions.ParticipantType" description="The subject who is the object of this test." Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                    <TunableTuple name="elapsed_time" class="TunableTimeElapsedZoneTest" display="Elapsed Time" muid="9989041301474667" description="Test to make sure enough time has passed since the zone was last saved." Deprecated="False" filter="0" group="General">
                                        <Tunable type="float" name="minutes_passed" class="TunableSimMinute" default="720" display="Minutes Passed" muid="B8BC174D56E0CE10" min="1" max="None" description="This test will pass when the minutes passed is greater than the&#xA;number minutes since last loading into zone." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                    <TunableTuple name="existence" class="TunableExistenceTest" display="Existence" muid="EBA51BE67591B142" description="A test to check whether the specified participant exists." Deprecated="False" filter="0" group="General">
                                        <Tunable type="bool" name="allow_hidden_sim_status" class="Tunable" default="False" display="Allow Hidden Sim Status" muid="C45340D5B54C79D6" description="If checked then we will ignore hidden Sim status such that they will count as existing even though they&#xA;have been hidden.  Use this in conjunction with Require Instantiated in order to determine the Sim's actual&#xA;instantiated status. " Deprecated="False" filter="0" group="General" />
                                        <Tunable type="bool" name="exists" class="Tunable" default="True" display="Exists" muid="D4CD883E6FCE1E58" description="When checked, require the specified participant to exist. When&#xA;unchecked, require the specified participant to not exist." Deprecated="False" filter="0" group="General" />
                                        <TunableEnum type="ParticipantType" name="participant" class="TunableEnumEntry" default="TargetSim" display="Participant" muid="27C7735AAB967A07" static_entries="interactions.ParticipantType" description="The participant for which to check existence." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="bool" name="require_instantiatable" class="Tunable" default="True" display="Require Instantiatable" muid="75294F3F376882D2" description="If checked, the specified participant must be instantiatable. This&#xA;is generally true for all Sims at LOD above MINIMUM." Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                    <TunableTuple name="game_option" class="TunableSimInfoGameplayOptionsTest" display="Game Option" muid="BE29896BE1961E9D" description="Test whether or not a Sim has a specific gameplay option set." Deprecated="False" filter="0" group="General">
                                        <TunableEnum type="TestableGameOptions" name="gameplay_option" class="TunableEnumEntry" default="CIVIC_POLICY_NPC_VOTING_ENABLED" display="Gameplay Option" muid="436D4DDEA61CFACD" static_entries="event_testing-game_option_tests.TestableGameOptions" description="The gameplay option to test. This test will pass if this option is&#xA;set." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="bool" name="invert" class="Tunable" default="False" display="Invert" muid="64EDB0111F1671EE" description="If enabled, requires the option to be unset for the test to pass." Deprecated="False" filter="0" group="General" />
                                        <TunableVariant type="None" name="tooltip" class="OptionalTunable" default="disabled" display="Tooltip" muid="635040BCE9DEA9BA" description="Reason of failure." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="7BB7DD3EE029A92D" />
                                            <Tunable type="int" name="enabled" class="TunableLocalizedString" default="0x0" display="Enabled" muid="4723BB44F8216A70" description="Reason of failure." Deprecated="False" filter="0" group="General" />
                                        </TunableVariant>
                                    </TunableTuple>
                                    <TunableTuple name="inventory" class="TunableInventoryTest" display="Inventory" muid="8B5AB84A5D932F6F" description="A test to check on the contents of either a sim inventory or&#xA;an object inventory." Deprecated="False" filter="0" group="General">
                                        <TunableVariant type="None" name="contents_check" class="TunableVariant" default="has_anything" display="Contents Check" muid="4F75FCD0EC52A8A5" description="Checks to run on each object of the specified inventory" Deprecated="False" filter="0" group="General">
                                            <Tunable name="has_anything" class="TunableExistance" display="Has Anything" muid="332FBC04A98BEAE1" />
                                            <TunableTuple name="has_object_of_participant_type" class="TunableTuple" display="Has Object Of Participant Type" muid="27E9419E94836A7D" description="Participant type we want to test if its in the selected&#xA;inventory." Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="ParticipantType" name="participant" class="TunableEnumEntry" default="Object" display="Participant" muid="BABCC66C9E396503" static_entries="interactions.ParticipantType" description="Which participant of the interaction do we want to validate&#xA;on the inventory. " Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <TunableTuple name="has_object_with_def" class="TunableTuple" display="Has Object With Def" muid="DDA570A2727DB4C9" Deprecated="False" filter="0" group="General">
                                                <Tunable type="object" name="definition" class="TunableReference" display="Definition" muid="2A384CF6D09D2AE8" description="The object definition to look for inside inventory." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                            </TunableTuple>
                                            <TunableTuple name="has_object_with_states" class="BasicStateCheckFactory" display="Has Object With States" muid="677BEA78B0C03DA1" description="This option tests crafted item's tags against a list of possible&#xA;tags." Deprecated="False" filter="0" group="General">
                                                <TunableVariant type="None" name="object_requirement" class="TunableVariant" default="any_object" display="Object Requirement" muid="9A6DFBC5D2D2618F" Deprecated="False" filter="0" group="General">
                                                    <Tunable name="any_object" class="TunableExistance" display="Any Object" muid="20A5C57DD062EB11" />
                                                    <TunableTuple name="definition" class="TunableTuple" display="Definition" muid="5D2BF3EDEF6A8866" Deprecated="False" filter="0" group="General">
                                                        <Tunable type="object" name="definition" class="TunableReference" display="Definition" muid="BF76CDDEDC5EFFDA" description="The object must have this definition." allow_none="False" Deprecated="False" filter="0" group="General" />
                                                    </TunableTuple>
                                                    <TunableTuple name="tag" class="TunableTuple" display="Tag" muid="384CD9A3502C6A0E" Deprecated="False" filter="0" group="General">
                                                        <TunableTuple name="tag" class="CraftTaggedItemFactory" display="Tag" muid="CF305B2D25B5A8AA" description="The object must have this tag." Deprecated="False" filter="0" group="General">
                                                            <TunableList name="tag_set" class="TunableSet" display="Tag Set" muid="2C30842D1DB83605" description="The tag of objects we want to test ownership of" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                <TunableEnum type="Tag" class="TunableEnumEntry" default="INVALID" muid="59431AA4B6695C3E" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="What tag to test for" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                            </TunableList>
                                                            <TunableEnum type="TagTestType" name="test_type" class="TunableEnumEntry" default="CONTAINS_ANY_TAG_IN_SET" display="Test Type" muid="F92716FEC1A28135" static_entries="objects-object_tests.TagTestType" description="How to test the tags in the tag set against the objects on the lot." Deprecated="False" filter="0" group="General" />
                                                        </TunableTuple>
                                                    </TunableTuple>
                                                </TunableVariant>
                                                <TunableList name="state_set" class="TunableSet" display="State Set" muid="F326A65F359E6823" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                    <Tunable type="object_state" class="TunableReference" muid="D8D5648372630A60" description="What state to test for." allow_none="False" Deprecated="False" filter="0" group="General" />
                                                </TunableList>
                                                <TunableEnum type="StateTestType" name="test_type" class="TunableEnumEntry" default="CONTAINS_ANY_STATE_IN_SET" display="Test Type" muid="583693478C40968C" static_entries="objects-object_tests.StateTestType" description="How to test the states in the state set against the objects in&#xA;the inventory." Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <TunableTuple name="has_object_with_tag" class="CraftTaggedItemFactory" display="Has Object With Tag" muid="F8F4162DBB700B18" description="This option tests crafted item's tags against a list of possible tags" Deprecated="False" filter="0" group="General">
                                                <TunableList name="tag_set" class="TunableSet" display="Tag Set" muid="2E6725C9FBB482E8" description="The tag of objects we want to test ownership of" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                    <TunableEnum type="Tag" class="TunableEnumEntry" default="INVALID" muid="1300AFF996FEAE40" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="What tag to test for" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                </TunableList>
                                                <TunableEnum type="TagTestType" name="test_type" class="TunableEnumEntry" default="CONTAINS_ANY_TAG_IN_SET" display="Test Type" muid="8F364C96FC59D0EE" static_entries="objects-object_tests.TagTestType" description="How to test the tags in the tag set against the objects on the lot." Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                        </TunableVariant>
                                        <TunableVariant type="None" name="inventory_location" class="TunableVariant" default="participant_inventory" display="Inventory Location" muid="E7F1BCE9C3F03D5D" description="Who owns the inventory. Either look in the inventory of a &#xA;participant or specify an object inventory type directly.&#xA;&#xA;If participant returns multiple inventory owners, the test will &#xA;pass only if ALL of those owners pass the inventory content test." Deprecated="False" filter="0" group="General">
                                            <TunableTuple name="hidden_inventory_objects" class="TunableTuple" display="Hidden Inventory Objects" muid="931880888AA5771E" Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="InventoryType" name="inventory" class="TunableEnumEntry" default="UNDEFINED" display="Inventory" muid="3C76FF2613F9C4BA" dynamic_entries="objects-components-inventory_enums.InventoryType._elements" static_entries="objects-components-inventory_enums.InventoryType" description="Check in the hidden inventory for objects that can go into the&#xA;specified inventory type. EX: check that there are mailbox&#xA;objects in the hidden inventory" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <TunableTuple name="object_inventory_type" class="TunableTuple" display="Object Inventory Type" muid="CF22F0EB3E5C0020" Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="InventoryType" name="inventory" class="TunableEnumEntry" default="UNDEFINED" display="Inventory" muid="BCA005BC58AF7B82" dynamic_entries="objects-components-inventory_enums.InventoryType._elements" static_entries="objects-components-inventory_enums.InventoryType" description="Check the global Object inventory that has the specified type.&#xA;EX: check in the global fridge inventory that exists for all&#xA;fridges" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <TunableTuple name="participant_inventory" class="TunableTuple" display="Participant Inventory" muid="48AD3EDA4BB94AF7" Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="ParticipantType" name="inventory" class="TunableEnumEntry" default="Actor" display="Inventory" muid="1F702F64F8EBD724" static_entries="interactions.ParticipantType" description="The owner of the inventory" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                        </TunableVariant>
                                        <TunableTuple name="required_count" class="TunableThreshold" display="Required Count" muid="EA5DE23B273B2DFD" description="The inventory must have a tunable threshold of objects that&#xA;pass the contents check test.&#xA;&#xA;EX: test is object definition of type pizza. required count is enabled&#xA;and has a threshold of &gt;= 5. That means this test will pass if you&#xA;have 5 or more pizzas in your inventory. To check if any objects&#xA;exist, use required count &gt;= 1" Deprecated="False" filter="0" group="General">
                                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="2184E8FE6339CDB4" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                            <Tunable type="int" name="value" class="Tunable" default="1" display="Value" muid="6ACF88F09895E074" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                        <TunableEnum type="TestHiddenInventories" name="test_hidden" class="TunableEnumEntry" default="ANY" display="Test Hidden" muid="10507D1D8E626043" static_entries="objects-object_tests.InventoryTest.TestHiddenInventories" description="Optionally restrict to only hidden or non-hidden inventories." Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                    <TunableTuple name="location" class="TunableLocationTest" display="Location" muid="73D5950CF8B71A94" description="Tests for object locations.&#xA;Outside: Check if an object is on the inside or outside (has a roof over&#xA;its head)&#xA;Natural ground: Checks the floor tiles where the object is to see if it &#xA;qualifies as natural ground" Deprecated="False" filter="0" group="General">
                                        <TunableTuple name="location_tests" class="TunableTuple" display="Location Tests" muid="A6513CDCACE3D227" Deprecated="False" filter="0" group="General">
                                            <TunableVariant type="None" name="has_terrain_tag" class="OptionalTunable" default="Don't_Test" display="Has Terrain Tag" muid="739A9AF90F6B3CDF" description="If checked, will verify the subject of the test is currently on&#xA;the tuned terrain tag." Deprecated="False" filter="0" group="General">
                                                <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="F929642F287C42AE" />
                                                <TunableTuple name="enabled" class="TunableTuple" display="Enabled" muid="5F30E373FA614640" description=",&#xA;A set of terrain tags required for this test to pass." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="bool" name="negate" class="Tunable" default="False" display="Negate" muid="F3BA387207F9B964" description="If checked, the test will be inverted. In other words,&#xA;the test will fail if at least one tag is detected at&#xA;this location." Deprecated="False" filter="0" group="General" />
                                                    <TunableList name="terrain_tags" class="TunableEnumSet" display="Terrain Tags" muid="40AC2E91AF3690AD" description="A set of terrain tags. Only one of these tags needs to be&#xA;present at this location. Although it is not tunable, there&#xA;is a threshold weight underneath which a terrain tag will&#xA;not appear to be present." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                        <TunableEnum type="TerrainTag" class="TunableEnumEntry" default="INVALID" muid="CCDE5831E605270D" static_entries="world-terrain_enums.TerrainTag" Deprecated="False" filter="0" group="General" />
                                                    </TunableList>
                                                    <Tunable type="bool" name="test_floor_tiles" class="Tunable" default="False" display="Test Floor Tiles" muid="E3FE360BD3C8C9DF" description="If checked, floor tiles will be tested. Otherwise, &#xA;it'll only check the terrain and will ignore the &#xA;floor tiles on the terrain." Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                            </TunableVariant>
                                            <TunableVariant type="None" name="in_common_area" class="OptionalTunable" default="Don't_Test" display="In Common Area" muid="A260B0D21151F836" description="If checked, will verify the subject is in the common area&#xA;of an apartment.  If unchecked will verify the subject is not." Deprecated="False" filter="0" group="General">
                                                <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="177ED832247A1B55" />
                                                <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="7BE752E99966F5FF" Deprecated="False" filter="0" group="General" />
                                            </TunableVariant>
                                            <TunableVariant type="None" name="is_fire_allowed" class="OptionalTunable" default="Don't_Test" display="Is Fire Allowed" muid="CF1AFEE373D7CAD7" description="If checked, will verify if fire is possible at the subject's position. &#xA;If unchecked, will pass if fire is not possible.&#xA;If not enabled, doesn't care either way." Deprecated="False" filter="0" group="General">
                                                <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="61ACD5595B95CF95" />
                                                <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="4D622DE07D9476BA" Deprecated="False" filter="0" group="General" />
                                            </TunableVariant>
                                            <TunableVariant type="None" name="is_in_slot" class="OptionalTunable" default="Don't_Test" display="Is In Slot" muid="284BEFBC6E014F4D" description="If enabled will test if the object is attacked/deattached to&#xA;any of possible tuned slots.&#xA;If you tune a slot type set the test will test if the object &#xA;is slotted or not slotted into into any of those types. " Deprecated="False" filter="0" group="General">
                                                <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="E1D91C76372B5E80" />
                                                <TunableTuple name="enabled" class="TunableTuple" display="Enabled" muid="8A4E75BE96C5C090" description="Test if an object is current slotted in any of a possible&#xA;list of slot types.&#xA;Empty slot type set is allowed for testing for slotted or&#xA;not slotted only." Deprecated="False" filter="0" group="General">
                                                    <TunableVariant type="None" name="slot_test_type" class="TunableVariant" default="any_slot" display="Slot Test Type" muid="BB0EA937BB7F824F" description="Strategy to test the slots:&#xA;Any Slot - is the object in any slot&#xA;Surface Slot - is object is in a surface slot&#xA;Specific Slot - is the object in specific list of slots" Deprecated="False" filter="0" group="General">
                                                        <TunableTuple name="any_slot" class="TunableSlotTestType" display="Any Slot" muid="1D908AA8CFE358EE" description="Singleton factory for testing if object is slotted." Deprecated="False" filter="0" group="General">
                                                            <Tunable type="bool" name="require_slotted" class="Tunable" default="True" display="Require Slotted" muid="BCFC3511199C3882" description="If checked, return success if the object is slotted&#xA;If unchecked, test the absense of slotting." Deprecated="False" filter="0" group="General" />
                                                        </TunableTuple>
                                                        <TunableTuple name="specific_slot" class="TunableSpecificSlotTest" display="Specific Slot" muid="3B4CD81AC102D2CD" description="Subclass of SlotTestType that can check against a specific&#xA;slot set." Deprecated="False" filter="0" group="General">
                                                            <Tunable type="bool" name="require_slotted" class="Tunable" default="True" display="Require Slotted" muid="FEE870C4BB1B5E50" description="If checked, return success if the object is slotted&#xA;If unchecked, test the absense of slotting." Deprecated="False" filter="0" group="General" />
                                                            <Tunable type="slot_type_set" name="specific_slot_set" class="TunableReference" display="Specific Slot Set" muid="61C336EE7FE13FC4" description="Set of slots the object may be attached to." allow_none="False" Deprecated="False" filter="0" group="General" />
                                                        </TunableTuple>
                                                        <TunableTuple name="surface_slot" class="TunableSurfaceSlotTest" display="Surface Slot" muid="936BD67517538B18" description="Subclass of SlotTestType that checks that a slot has&#xA;is_surface set to true." Deprecated="False" filter="0" group="General">
                                                            <Tunable type="bool" name="require_slotted" class="Tunable" default="True" display="Require Slotted" muid="95C7E2DD5B041140" description="If checked, return success if the object is slotted&#xA;If unchecked, test the absense of slotting." Deprecated="False" filter="0" group="General" />
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                </TunableTuple>
                                            </TunableVariant>
                                            <TunableVariant type="None" name="is_inside_building" class="OptionalTunable" default="Don't_Test" display="Is Inside Building" muid="8E234D52368E3F0A" description="If checked, will verify if the subject of the test is inside a&#xA;building. This uses a client function that checks if the block&#xA;the sim is mostly enclosed by walls or if not, if the adjoining&#xA;blocks are themselves enclosed. This should be used when we&#xA;want to test if a subject is inside a normally constructed &#xA;building. If we simply want to test whether the subject is &#xA;covered / has a roof over them, use is_outside. See comment on&#xA;is_outside for more details. If unchecked, will negate this &#xA;test." Deprecated="False" filter="0" group="General">
                                                <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="4A689F9519953A11" />
                                                <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="6A27061D2CF2E0CB" Deprecated="False" filter="0" group="General" />
                                            </TunableVariant>
                                            <TunableVariant type="None" name="is_natural_ground" class="OptionalTunable" default="Don't_Test" display="Is Natural Ground" muid="D081F46C1B04D658" description="If checked, will verify the subject of the test is on natural &#xA;ground (no floor tiles are under him).&#xA;Otherwise, will verify the subject of the test is not on &#xA;natural ground." Deprecated="False" filter="0" group="General">
                                                <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="8D85F44E69C6BEB2" />
                                                <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="DB2D7235C0AC8F98" Deprecated="False" filter="0" group="General" />
                                            </TunableVariant>
                                            <TunableVariant type="None" name="is_on_active_lot" class="OptionalTunable" default="Don't_Test" display="Is On Active Lot" muid="54787CFCC0677758" description="If disabled the test will not be used.&#xA;If enabled and checked, the test will pass if the subject is&#xA;on the active lot. (their center is within the lot bounds)&#xA;If enabled and not checked, the test will pass if the subject is &#xA;outside of the active lot.&#xA;&#xA;For example, Ask To Leave is tuned with this enabled and checked&#xA;for the TargetSim. You can only ask someone to leave if they&#xA;are actually on the active lot, but not if they are wandering&#xA;around in the open streets." Deprecated="False" filter="0" group="General">
                                                <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="BCC7C57357128EAF" />
                                                <TunableTuple name="Is_or_is_not_on_active_lot" class="TunableTuple" display="Is Or Is Not On Active Lot" muid="8A8928CA15927BE4" Deprecated="False" filter="0" group="General">
                                                    <Tunable type="bool" name="include_spawn_point" class="Tunable" default="False" display="Include Spawn Point" muid="6977B93B080AB06B" description="If set to true, we will consider the lot's spawn point as part of the active lot." Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="bool" name="is_or_is_not_on_active_lot" class="Tunable" default="True" display="Is Or Is Not On Active Lot" muid="EAC6AE10DE243FAA" description="If checked then the test will pass if the subject is on&#xA;the active lot." Deprecated="False" filter="0" group="General" />
                                                    <TunableVariant type="None" name="tolerance" class="TunableVariant" default="explicit" display="Tolerance" muid="E825CC3560CDAE9F" Deprecated="False" filter="0" group="General">
                                                        <Tunable type="int" name="explicit" class="Tunable" default="0" display="Explicit" muid="A6D800A7C66CDBAC" description="The tolerance from the edge of the lot that the&#xA;location test will use in order to determine if the&#xA;test target is considered on lot or not." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                        <TunableTuple name="use_default_tolerance" class="UseDefaultOfflotToleranceFactory" display="Use Default Tolerance" muid="95F5F8184C4A98D7" description="Use the default tuned global offlot tolerance tuned&#xA;in objects.components.statistic_component.Default Off Lot." Deprecated="False" filter="0" group="General" />
                                                    </TunableVariant>
                                                </TunableTuple>
                                            </TunableVariant>
                                            <TunableVariant type="None" name="is_on_level" class="OptionalTunable" default="Don't_Test" display="Is On Level" muid="EE657470205642A2" description="If enabled, we check the participant's current level against&#xA;the tuned threshold.  In the case of sims in pools, the effective&#xA;level will be that of the surface of the pool, not the bottom." Deprecated="False" filter="0" group="General">
                                                <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="5F96FE2586243EDB" />
                                                <TunableTuple name="enabled" class="TunableThreshold" display="Enabled" muid="E067A086A9A9666C" description="Value/comparison pair used to define a Threshold." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="4E1C9AF7909A5A1F" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="int" name="value" class="Tunable" default="0" display="Value" muid="D127555462E4ABF1" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                            </TunableVariant>
                                            <TunableVariant type="None" name="is_outside" class="OptionalTunable" default="Don't_Test" display="Is Outside" muid="5BC112EEA94970BE" description="PLEASE BE AWARE. If checked, will verify if the subject of the&#xA;test does not have a roof over their head. If unchecked, will &#xA;test if the subject has a roof over their head. If the &#xA;intention is to determine if a subject is in/not in a building, &#xA;this test is deprecated in favor of is_inside_building. If you &#xA;would like to test if a subject is inside a building, but also &#xA;need to test if they have a roof over their head, please use &#xA;both options." Deprecated="False" filter="0" group="General">
                                                <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="D437892D87861074" />
                                                <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="13139FBCA480DCAF" Deprecated="False" filter="0" group="General" />
                                            </TunableVariant>
                                            <TunableVariant type="None" name="is_venue_type" class="OptionalTunable" default="Don't_Test" display="Is Venue Type" muid="91B10F4853454F43" description="If checked, will verify if the subject is at a venue of the&#xA;specified type." Deprecated="False" filter="0" group="General">
                                                <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="E0C32304FDBE79F9" />
                                                <TunableTuple name="enabled" class="TunableTuple" display="Enabled" muid="1F350DF981F0E6EA" description="Venue type required for this test to pass." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="bool" name="negate" class="Tunable" default="False" display="Negate" muid="B873031DC454C74C" description="If enabled, the test will return true if the subject&#xA;IS NOT at a venue of the specified type." Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="bool" name="use_source_venue" class="Tunable" default="False" display="Use Source Venue" muid="C439218EAC9A57D9" description="If enabled, the test will test the source venue instead of the active&#xA;venue.  For example, the Community Lot instead of the active Marketplace.&#xA;Testing the active venue is the default." Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="venue" name="venue_type" class="TunableReference" display="Venue Type" muid="63C9729D1415101E" description="Venue type to test against." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                </TunableTuple>
                                            </TunableVariant>
                                            <TunableVariant type="None" name="valid_surface_types" class="OptionalTunable" default="Don't_Test" display="Valid Surface Types" muid="CCA59E729A62D4CF" description="If enabled, we will test the surface type of the subject&#xA;against prohibited or required surface types." Deprecated="False" filter="0" group="General">
                                                <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="284EB8492C8FFF9F" />
                                                <TunableTuple name="Test_Surface_Types" class="TunableWhiteBlackList" display="Test Surface Types" muid="88EEA06D77AA6206" description="Required and Prohibited Surface Types. " Deprecated="False" filter="0" group="General">
                                                    <TunableVariant type="None" name="blacklist" class="OptionalTunable" default="nothing" display="Blacklist" muid="BA0C23B38378395B" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is not in the blacklist. If no blacklist is&#xA;specified, no items are disallowed." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="nothing" class="TunableExistance" display="Nothing" muid="33F590C0D3A0F979" />
                                                        <TunableTuple name="specify" class="TunableBlacklist" display="Specify" muid="A555E6B071F6B4B5" description="A tunable blacklist." Deprecated="False" filter="0" group="General">
                                                            <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="CDE6E772CD327771" description="Blacklisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                <TunableEnum type="SurfaceType" class="TunableEnumEntry" default="SURFACETYPE_WORLD" muid="7750DA5AAFBB0A88" static_entries="routing.SurfaceType" description="Surface Type the object is placed on." Deprecated="False" filter="0" group="General" invalid_entries="SURFACETYPE_UNKNOWN" />
                                                            </TunableList>
                                                            <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="7F3AC58B505FCBCC" description="Tunable option for how many items must be in the blacklist&#xA;for the blacklist to fail when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="53DF20873E1FBAF5" />
                                                                <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="87B290C3B0424ECB" description="When testing a collection of items, the number of items in&#xA;that collection that are in the blacklist must pass this&#xA;threshold test for the blacklist to disallow them all." Deprecated="False" filter="0" group="General">
                                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="C220AFDD61F7D49" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                    <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="C57AA3BAF5A30C64" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                </TunableTuple>
                                                            </TunableVariant>
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                    <TunableVariant type="None" name="whitelist" class="OptionalTunable" default="everything" display="Whitelist" muid="C28BF2AE6A490024" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is in the whitelist. If no whitelist is&#xA;specified, all items are allowed." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="everything" class="TunableExistance" display="Everything" muid="A2C0AFF808F6160B" />
                                                        <TunableTuple name="specify" class="TunableWhitelist" display="Specify" muid="ED72B720C8102CB7" description="A tunable whitelist." Deprecated="False" filter="0" group="General">
                                                            <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="68DF4F23F2C4639C" description="Tunable option for how many items must be in the whitelist&#xA;for the whitelist to pass when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="1E1169DC824CA12B" />
                                                                <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="85C31EA6749025FF" description="When testing a collection of items, the number of items in&#xA;that collection that are in the whitelist must pass this&#xA;threshold test for the whitelist to allow them all." Deprecated="False" filter="0" group="General">
                                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="3FAA67B61EC2E4AC" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                    <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="944A685ED4DDB9AD" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                </TunableTuple>
                                                            </TunableVariant>
                                                            <TunableList name="whitelist" class="TunableSet" display="Whitelist" muid="BF2637D8F2B207DF" description="Whitelisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                <TunableEnum type="SurfaceType" class="TunableEnumEntry" default="SURFACETYPE_WORLD" muid="9F5E6DB30EE360D5" static_entries="routing.SurfaceType" description="Surface Type the object is placed on." Deprecated="False" filter="0" group="General" invalid_entries="SURFACETYPE_UNKNOWN" />
                                                            </TunableList>
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                </TunableTuple>
                                            </TunableVariant>
                                        </TunableTuple>
                                    </TunableTuple>
                                    <Tunable name="none" class="TunableExistance" display="None" muid="644300BFB922ED1" />
                                    <TunableTuple name="object_definition" class="TunableObjectMatchesDefinitionOrTagTest" display="Object Definition" muid="901F9C9C02DFC6C8" description="Check to see if the specified object matches either a static definition or a set of tags" Deprecated="False" filter="0" group="General">
                                        <TunableVariant type="None" name="item" class="TunableVariant" default="tagged_item" display="Item" muid="37D20933FAFDFFA" description="Whether to test for a specific item or item that has a set of tags" Deprecated="False" filter="0" group="General">
                                            <TunableTuple name="actual_item" class="CraftActualItemFactory" display="Actual Item" muid="D6497FC562DFED67" description="This option tests crafted item against a list of possible items" Deprecated="False" filter="0" group="General">
                                                <TunableList name="items_to_check" class="TunableList" display="Items To Check" muid="4159C79366FBAB47" Deprecated="False" filter="0" group="General">
                                                    <Tunable type="object" class="TunableReference" muid="3CD6F83B1D18B6" description="Object that qualifies for this check." allow_none="False" Deprecated="False" filter="0" group="General" />
                                                </TunableList>
                                            </TunableTuple>
                                            <TunableTuple name="tagged_item" class="CraftTaggedItemFactory" display="Tagged Item" muid="2C3930E15E74835A" description="This option tests crafted item's tags against a list of possible tags" Deprecated="False" filter="0" group="General">
                                                <TunableList name="tag_set" class="TunableSet" display="Tag Set" muid="F70F7DFB0592FFA0" description="The tag of objects we want to test ownership of" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                    <TunableEnum type="Tag" class="TunableEnumEntry" default="INVALID" muid="BA0C056EFEDA53D0" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="What tag to test for" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                </TunableList>
                                                <TunableEnum type="TagTestType" name="test_type" class="TunableEnumEntry" default="CONTAINS_ANY_TAG_IN_SET" display="Test Type" muid="7D424A0CB39C8725" static_entries="objects-object_tests.TagTestType" description="How to test the tags in the tag set against the objects on the lot." Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                        </TunableVariant>
                                        <TunableVariant type="None" name="tooltip" class="OptionalTunable" default="disabled" display="Tooltip" muid="548322CE54AB83C" description="Reason of failure." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="36525208006C94DC" />
                                            <Tunable type="int" name="enabled" class="TunableLocalizedString" default="0x0" display="Enabled" muid="7083FA4036EDF6F2" description="Reason of failure." Deprecated="False" filter="0" group="General" />
                                        </TunableVariant>
                                    </TunableTuple>
                                    <TunableTuple name="object_preference" class="TunableObjectScoringPreferenceTest" display="Object Preference" muid="722EDACEF9725C5A" description="A tunable factory that checks whether or not the target object of an affordance&#xA;is the Sim's preferred scoring object." Deprecated="False" filter="0" group="General">
                                        <TunableVariant type="None" name="any_sim" class="OptionalTunable" default="disabled" display="Any Sim" muid="69CA49B8FF23D599" description="If enabled, will return whether the object has any &quot;Use Only&quot; preference&#xA;set for the specified tag.  Will not be sim specific, and thus only&#xA;works for &quot;use only&quot; preference type.  Does NOT rely on interaction&#xA;to determine preference type.&#xA;&#xA;Value is the tag to test for." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="4C2F6C6BFDE09466" />
                                            <TunableEnum type="ObjectPreferenceTag" name="enabled" class="TunableEnumEntry" default="INVALID" display="Enabled" muid="BA1E0EC6061FB77E" dynamic_entries="autonomy-autonomy_preference.ObjectPreferenceTag._elements" static_entries="autonomy-autonomy_preference.ObjectPreferenceTag" description="Tag to determine which preference type to use." Deprecated="False" filter="0" group="General" invalid_entries="INVALID" />
                                        </TunableVariant>
                                        <Tunable type="bool" name="require" class="Tunable" default="True" display="Require" muid="19B13C0DC1266DB8" description="The Sim's preference is required to be True or required to be False." Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                    <TunableTuple name="season" class="TunableSeasonTest" display="Season" muid="42F8A50311B39957" description="SeasonTest will test if the current simulation time falls within the&#xA;specified test conditions." Deprecated="False" filter="0" group="General">
                                        <Tunable type="bool" name="requires_seasons_pack" class="Tunable" default="True" display="Requires Seasons Pack" muid="39080AC422D6664B" description="If checked, this test will require that the Seasons pack be &#xA;installed in order for the seasons test to pass.  If unchecked, &#xA;this test will automatically pass." Deprecated="False" filter="0" group="General" />
                                        <TunableList name="seasons" class="TunableEnumSet" display="Seasons" muid="13DA84CFD2741337" min="1" description="Season(s) that we must be in to pass the test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                            <TunableEnum type="SeasonType" class="TunableEnumEntry" default="SUMMER" muid="A25D725CF2A3CEC6" static_entries="seasons-seasons_enums.SeasonType" Deprecated="False" filter="0" group="General" />
                                        </TunableList>
                                        <TunableVariant type="None" name="time_of_season" class="OptionalTunable" default="disabled" display="Time Of Season" muid="25FFF4FA4A98D0F9" description="Portion(s) of season(s) that we must be in to pass the test." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="F00C050896E5CAF1" />
                                            <TunableList name="enabled" class="TunableEnumSet" display="Enabled" muid="CC2BE5B0AB1D025F" min="1" description="Portion(s) of season(s) that we must be in to pass the test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                <TunableEnum type="SeasonSegment" class="TunableEnumEntry" default="EARLY" muid="1B706706B6965B8D" static_entries="seasons-seasons_enums.SeasonSegment" Deprecated="False" filter="0" group="General" />
                                            </TunableList>
                                        </TunableVariant>
                                    </TunableTuple>
                                    <TunableTuple name="state" class="TunableStateTest" display="State" muid="90389CE356B40C82" description="Gate availability by object state.  By default, the test will use the&#xA;state's linked stat as a fallback in case the target doesn't have the&#xA;state involved." Deprecated="False" filter="0" group="General">
                                        <TunableVariant type="None" name="fallback_behavior" class="TunableVariant" default="always_fail" display="Fallback Behavior" muid="44F52B47CF1C223B" description="What to do if the given object doesn't have the state in question." Deprecated="False" filter="0" group="General">
                                            <Tunable name="always_fail" class="TunableExistance" display="Always Fail" muid="EE795E01859A2903" />
                                            <Tunable name="always_pass" class="TunableExistance" display="Always Pass" muid="8DA9215090FA445C" />
                                        </TunableVariant>
                                        <TunableEnum type="Operator" name="operator" class="TunableOperator" default="EQUAL" display="Operator" muid="E9B3F02903D4E6BF" static_entries="sims4-math.Operator" description="The comparison to use." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="object_state" name="value" class="TunableReference" display="Value" muid="41BE9765526CD69" description="The value to compare to." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="ObjectStateValue" />
                                    </TunableTuple>
                                    <TunableTuple name="statistic" class="TunableStatThresholdTest" display="Statistic" muid="8D69744DB53AF9E" description="A test that checks whether or not a statistic is at a certain threshold for&#xA;a given participant. It can also test whether or not the participant has the&#xA;statistic explicitly added on them." Deprecated="False" filter="0" group="General">
                                        <Tunable type="bool" name="must_have_stat" class="Tunable" default="False" display="Must Have Stat" muid="1ADAC535DF825285" description="Setting this to True (checked) will ensure that this test only&#xA;passes if the tested Sim actually has the statistic referenced. If&#xA;left False (unchecked), this test will evaluate as if the Sim had&#xA;the statistic at the value of 0" Deprecated="False" filter="0" group="General" />
                                        <TunableVariant type="None" name="score_to_use" class="TunableVariant" default="user_value" display="Score To Use" muid="4D6F5D35035C1764" description="Depending on the choice, this decides what value to use for the &#xA;threshold comparison." Deprecated="False" filter="0" group="General">
                                            <TunableTuple name="points" class="Tunable_PointsValue" display="Points" muid="E82250435246BE60" description="Use the raw points for the comparison in the test." Deprecated="False" filter="0" group="General" />
                                            <TunableTuple name="rank" class="Tunable_RankValue" display="Rank" muid="8C59AC20C17D035B" description="Use the rank value for the comparison in the test." Deprecated="False" filter="0" group="General" />
                                            <TunableTuple name="user_value" class="Tunable_UserValue" display="User Value" muid="B3E10270AA045256" description="Use the user value for the comparison in the test." Deprecated="False" filter="0" group="General">
                                                <Tunable type="bool" name="highest_level_reached_instead" class="Tunable" default="False" display="Highest Level Reached Instead" muid="F30AAB127D7CBB36" description="If checked this will test against the highest level reached. This&#xA;currently only works with Ranked Statistics. Other statistics do&#xA;not have a notion of highest level reached. If we are using&#xA;something that doesn't support highest level reached it will &#xA;test against the current level instead." Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                        </TunableVariant>
                                        <Tunable type="statistic" name="stat" class="TunableReference" display="Stat" muid="20FA9A53300AB089" description="The stat we are operating on." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                        <TunableVariant type="None" name="threshold" class="TunableVariant" default="value_threshold" display="Threshold" muid="44301D7C8DCD6CAF" description="The value or state threshold to test against." Deprecated="False" filter="0" group="General">
                                            <TunableTuple name="state_value_threshold" class="TunableObjectStateValueThreshold" display="State Value Threshold" muid="40269C7A9C586115" description="Value/comparison pair used to define a Threshold." Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="E7F9D0BF765AA61D" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="object_state" name="value" class="TunableReference" display="Value" muid="B8CC17DA58D5483C" description="The state threshold for this test." allow_none="False" Deprecated="False" filter="0" group="General" restrict="ObjectStateValue" />
                                            </TunableTuple>
                                            <TunableTuple name="value_threshold" class="TunableThreshold" display="Value Threshold" muid="EC064E266AA46198" description="The threshold to control availability based on the statistic's&#xA;value." Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="6FA08A117B81BF0D" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="5840E6FE4AF2382D" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                        </TunableVariant>
                                        <TunableEnum type="ParticipantType" name="who" class="TunableEnumEntry" default="Actor" display="Who" muid="BE79B0E1EB24B6B1" static_entries="interactions.ParticipantType" description="Who or what to apply this test to." Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                    <TunableTuple name="street_civic_policy_test" class="TunableStreetCivicPolicyTest" display="Street Civic Policy Test" muid="894B7F38660F9D1" description="Test the state of the selected Street's Civic Policy Provider." Deprecated="False" filter="0" group="General">
                                        <TunableList name="civic_policy_tests" class="TunableList" display="Civic Policy Tests" muid="278A2F24CFACEB98" description="The tests we wish to run on the civic policies in question, run in&#xA;order.  AND operation, all must pass, first to fail stops tests." Deprecated="False" filter="0" group="General">
                                            <TunableVariant type="None" class="TunableVariant" default="voting_open" muid="2CBCBA5BF9239AD5" description="Individual tests run on Civic Policy Provider." Deprecated="False" filter="0" group="General">
                                                <TunableTuple name="available" class="TunableBaseCivicPolicyTestAvailable" display="Available" muid="CB694A8F3A67CC86" description="Test available policies. Available policies include everything tuned." Deprecated="False" filter="0" group="General">
                                                    <TunableTuple name="white_black_list" class="TunableWhiteBlackList" display="White Black List" muid="9AB031014D9839FC" description="The civic policies must pass the whitelist and blacklist&#xA;to pass the test." Deprecated="False" filter="0" group="General">
                                                        <TunableVariant type="None" name="blacklist" class="OptionalTunable" default="nothing" display="Blacklist" muid="C0294FF7A5EC2B6F" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is not in the blacklist. If no blacklist is&#xA;specified, no items are disallowed." Deprecated="False" filter="0" group="General">
                                                            <Tunable name="nothing" class="TunableExistance" display="Nothing" muid="2C2C59320CCF7C4F" />
                                                            <TunableTuple name="specify" class="TunableBlacklist" display="Specify" muid="1B243A0081D9CA0" description="A tunable blacklist." Deprecated="False" filter="0" group="General">
                                                                <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="D703D166EF11E559" description="Blacklisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                    <Tunable type="snippet" class="TunableReference" muid="9AE250CE6B9EC144" description="Allowed and disallowed civic policies." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="BaseCivicPolicy" />
                                                                </TunableList>
                                                                <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="D7E563C5BD2432D8" description="Tunable option for how many items must be in the blacklist&#xA;for the blacklist to fail when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                    <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="9E3B11AE16A3AE9B" />
                                                                    <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="ECC55CB85C708F1" description="When testing a collection of items, the number of items in&#xA;that collection that are in the blacklist must pass this&#xA;threshold test for the blacklist to disallow them all." Deprecated="False" filter="0" group="General">
                                                                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="6782ED913A5A4A04" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                        <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="97E3383FF600511" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                    </TunableTuple>
                                                                </TunableVariant>
                                                            </TunableTuple>
                                                        </TunableVariant>
                                                        <TunableVariant type="None" name="whitelist" class="OptionalTunable" default="everything" display="Whitelist" muid="EE10D353B5E129B1" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is in the whitelist. If no whitelist is&#xA;specified, all items are allowed." Deprecated="False" filter="0" group="General">
                                                            <Tunable name="everything" class="TunableExistance" display="Everything" muid="53C12F766BF71ABB" />
                                                            <TunableTuple name="specify" class="TunableWhitelist" display="Specify" muid="F106CAD3CABD76F0" description="A tunable whitelist." Deprecated="False" filter="0" group="General">
                                                                <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="66018315C8C0313E" description="Tunable option for how many items must be in the whitelist&#xA;for the whitelist to pass when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                    <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="3879C53C30D24B9B" />
                                                                    <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="E81448F8261BF255" description="When testing a collection of items, the number of items in&#xA;that collection that are in the whitelist must pass this&#xA;threshold test for the whitelist to allow them all." Deprecated="False" filter="0" group="General">
                                                                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="34A978C39993E56A" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                        <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="F0088D7BF38015D0" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                    </TunableTuple>
                                                                </TunableVariant>
                                                                <TunableList name="whitelist" class="TunableSet" display="Whitelist" muid="6DB20CB9267FA81D" description="Whitelisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                    <Tunable type="snippet" class="TunableReference" muid="48F4145920E4452E" description="Allowed and disallowed civic policies." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="BaseCivicPolicy" />
                                                                </TunableList>
                                                            </TunableTuple>
                                                        </TunableVariant>
                                                    </TunableTuple>
                                                </TunableTuple>
                                                <TunableTuple name="balloted" class="TunableBaseCivicPolicyTestBalloted" display="Balloted" muid="2FE6D4C3B8281763" description="Test balloted policies.  Policies being considered by the next/current vote are&#xA;balloted." Deprecated="False" filter="0" group="General">
                                                    <TunableTuple name="white_black_list" class="TunableWhiteBlackList" display="White Black List" muid="A59168F26A99691E" description="The civic policies must pass the whitelist and blacklist&#xA;to pass the test." Deprecated="False" filter="0" group="General">
                                                        <TunableVariant type="None" name="blacklist" class="OptionalTunable" default="nothing" display="Blacklist" muid="5E5049C356B66BDB" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is not in the blacklist. If no blacklist is&#xA;specified, no items are disallowed." Deprecated="False" filter="0" group="General">
                                                            <Tunable name="nothing" class="TunableExistance" display="Nothing" muid="F16B3D8F2A7C5EB1" />
                                                            <TunableTuple name="specify" class="TunableBlacklist" display="Specify" muid="EA987E36D460570F" description="A tunable blacklist." Deprecated="False" filter="0" group="General">
                                                                <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="8C7DCF1098F32525" description="Blacklisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                    <Tunable type="snippet" class="TunableReference" muid="8958E3ACA154179C" description="Allowed and disallowed civic policies." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="BaseCivicPolicy" />
                                                                </TunableList>
                                                                <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="5AB5308ADEEB14F2" description="Tunable option for how many items must be in the blacklist&#xA;for the blacklist to fail when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                    <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="AEEE7408C8364FB4" />
                                                                    <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="EEB5E1EB9DD5961A" description="When testing a collection of items, the number of items in&#xA;that collection that are in the blacklist must pass this&#xA;threshold test for the blacklist to disallow them all." Deprecated="False" filter="0" group="General">
                                                                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="42BC51EF894ADA5D" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                        <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="3716CD928B9833A0" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                    </TunableTuple>
                                                                </TunableVariant>
                                                            </TunableTuple>
                                                        </TunableVariant>
                                                        <TunableVariant type="None" name="whitelist" class="OptionalTunable" default="everything" display="Whitelist" muid="6999DB20F07FACE2" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is in the whitelist. If no whitelist is&#xA;specified, all items are allowed." Deprecated="False" filter="0" group="General">
                                                            <Tunable name="everything" class="TunableExistance" display="Everything" muid="C448632267E2B45A" />
                                                            <TunableTuple name="specify" class="TunableWhitelist" display="Specify" muid="1FD94A576F36AF9B" description="A tunable whitelist." Deprecated="False" filter="0" group="General">
                                                                <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="9766FDDA1D6839B8" description="Tunable option for how many items must be in the whitelist&#xA;for the whitelist to pass when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                    <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="DC6027FA0CFFBA7" />
                                                                    <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="954822520C0BFCC0" description="When testing a collection of items, the number of items in&#xA;that collection that are in the whitelist must pass this&#xA;threshold test for the whitelist to allow them all." Deprecated="False" filter="0" group="General">
                                                                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="17271073D37C4972" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                        <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="9536D6758BB72C83" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                    </TunableTuple>
                                                                </TunableVariant>
                                                                <TunableList name="whitelist" class="TunableSet" display="Whitelist" muid="F9020E255D371325" description="Whitelisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                    <Tunable type="snippet" class="TunableReference" muid="EEF005E00A31BF96" description="Allowed and disallowed civic policies." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="BaseCivicPolicy" />
                                                                </TunableList>
                                                            </TunableTuple>
                                                        </TunableVariant>
                                                    </TunableTuple>
                                                </TunableTuple>
                                                <TunableTuple name="dormant" class="TunableBaseCivicPolicyTestDormant" display="Dormant" muid="215CA8D6D1E0883A" description="Test dormant policies. Dormant policies are not enacted and not balloted." Deprecated="False" filter="0" group="General">
                                                    <TunableTuple name="white_black_list" class="TunableWhiteBlackList" display="White Black List" muid="11BF9FF73F6F098" description="The civic policies must pass the whitelist and blacklist&#xA;to pass the test." Deprecated="False" filter="0" group="General">
                                                        <TunableVariant type="None" name="blacklist" class="OptionalTunable" default="nothing" display="Blacklist" muid="F728A5EF9427F6CD" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is not in the blacklist. If no blacklist is&#xA;specified, no items are disallowed." Deprecated="False" filter="0" group="General">
                                                            <Tunable name="nothing" class="TunableExistance" display="Nothing" muid="6B50C679EFF66225" />
                                                            <TunableTuple name="specify" class="TunableBlacklist" display="Specify" muid="F8AC25AE4C5F54B1" description="A tunable blacklist." Deprecated="False" filter="0" group="General">
                                                                <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="E42226CBEB0B7213" description="Blacklisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                    <Tunable type="snippet" class="TunableReference" muid="619FF96F8B8D4EB7" description="Allowed and disallowed civic policies." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="BaseCivicPolicy" />
                                                                </TunableList>
                                                                <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="107895561704AB2E" description="Tunable option for how many items must be in the blacklist&#xA;for the blacklist to fail when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                    <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="C66D001D95F2A374" />
                                                                    <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="996EBFCF8C155CD2" description="When testing a collection of items, the number of items in&#xA;that collection that are in the blacklist must pass this&#xA;threshold test for the blacklist to disallow them all." Deprecated="False" filter="0" group="General">
                                                                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="4DBCAFDFAEC99AC8" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                        <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="A03FA4A2698FB2F1" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                    </TunableTuple>
                                                                </TunableVariant>
                                                            </TunableTuple>
                                                        </TunableVariant>
                                                        <TunableVariant type="None" name="whitelist" class="OptionalTunable" default="everything" display="Whitelist" muid="10CD5C6277A61B07" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is in the whitelist. If no whitelist is&#xA;specified, all items are allowed." Deprecated="False" filter="0" group="General">
                                                            <Tunable name="everything" class="TunableExistance" display="Everything" muid="4ED112016685873B" />
                                                            <TunableTuple name="specify" class="TunableWhitelist" display="Specify" muid="C1757BA562DE5F04" description="A tunable whitelist." Deprecated="False" filter="0" group="General">
                                                                <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="AE7A6289E910D3DB" description="Tunable option for how many items must be in the whitelist&#xA;for the whitelist to pass when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                    <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="7E6DC2B8D0B5B253" />
                                                                    <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="D7CCB292C18BCBF9" description="When testing a collection of items, the number of items in&#xA;that collection that are in the whitelist must pass this&#xA;threshold test for the whitelist to allow them all." Deprecated="False" filter="0" group="General">
                                                                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="ADF1EB7E1E051230" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                        <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="BCD69578F44B1B3F" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                    </TunableTuple>
                                                                </TunableVariant>
                                                                <TunableList name="whitelist" class="TunableSet" display="Whitelist" muid="234A51602D852349" description="Whitelisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                    <Tunable type="snippet" class="TunableReference" muid="A8D51B4B6583B452" description="Allowed and disallowed civic policies." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="BaseCivicPolicy" />
                                                                </TunableList>
                                                            </TunableTuple>
                                                        </TunableVariant>
                                                    </TunableTuple>
                                                </TunableTuple>
                                                <TunableTuple name="enacted" class="TunableBaseCivicPolicyTestEnacted" display="Enacted" muid="6B87BE77CD3D4CD9" description="Test enacted policies." Deprecated="False" filter="0" group="General">
                                                    <TunableTuple name="white_black_list" class="TunableWhiteBlackList" display="White Black List" muid="80C84C1155AC050A" description="The civic policies must pass the whitelist and blacklist&#xA;to pass the test." Deprecated="False" filter="0" group="General">
                                                        <TunableVariant type="None" name="blacklist" class="OptionalTunable" default="nothing" display="Blacklist" muid="2F0B796A934F6D99" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is not in the blacklist. If no blacklist is&#xA;specified, no items are disallowed." Deprecated="False" filter="0" group="General">
                                                            <Tunable name="nothing" class="TunableExistance" display="Nothing" muid="735DC7E5C996E69E" />
                                                            <TunableTuple name="specify" class="TunableBlacklist" display="Specify" muid="7F34F54BF00D373D" description="A tunable blacklist." Deprecated="False" filter="0" group="General">
                                                                <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="51C333577B486165" description="Blacklisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                    <Tunable type="snippet" class="TunableReference" muid="633B5732DE9375A4" description="Allowed and disallowed civic policies." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="BaseCivicPolicy" />
                                                                </TunableList>
                                                                <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="3F1833A210C6A1FE" description="Tunable option for how many items must be in the blacklist&#xA;for the blacklist to fail when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                    <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="1ECEA3C2E3D645A3" />
                                                                    <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="E65AFADA90190186" description="When testing a collection of items, the number of items in&#xA;that collection that are in the blacklist must pass this&#xA;threshold test for the blacklist to disallow them all." Deprecated="False" filter="0" group="General">
                                                                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="F6053968A3D24971" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                        <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="F66C34041422C842" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                    </TunableTuple>
                                                                </TunableVariant>
                                                            </TunableTuple>
                                                        </TunableVariant>
                                                        <TunableVariant type="None" name="whitelist" class="OptionalTunable" default="everything" display="Whitelist" muid="DF700BFEAEAB7FD9" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is in the whitelist. If no whitelist is&#xA;specified, all items are allowed." Deprecated="False" filter="0" group="General">
                                                            <Tunable name="everything" class="TunableExistance" display="Everything" muid="E0A6AA5FF3F04A61" />
                                                            <TunableTuple name="specify" class="TunableWhitelist" display="Specify" muid="9701F03003CA1144" description="A tunable whitelist." Deprecated="False" filter="0" group="General">
                                                                <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="EBBD66531C734E1" description="Tunable option for how many items must be in the whitelist&#xA;for the whitelist to pass when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                    <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="3BF1B1A8D8B34124" />
                                                                    <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="3C9180B771BC23EE" description="When testing a collection of items, the number of items in&#xA;that collection that are in the whitelist must pass this&#xA;threshold test for the whitelist to allow them all." Deprecated="False" filter="0" group="General">
                                                                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="18802D7669867F22" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                        <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="D69562EA4A466FAF" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                    </TunableTuple>
                                                                </TunableVariant>
                                                                <TunableList name="whitelist" class="TunableSet" display="Whitelist" muid="C3B97A10FE39FD24" description="Whitelisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                    <Tunable type="snippet" class="TunableReference" muid="BDCEB2235FB3E985" description="Allowed and disallowed civic policies." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="BaseCivicPolicy" />
                                                                </TunableList>
                                                            </TunableTuple>
                                                        </TunableVariant>
                                                    </TunableTuple>
                                                </TunableTuple>
                                                <TunableTuple name="repealable" class="TunableBaseCivicPolicyTestRepealable" display="Repealable" muid="9E8771ECC46FB9AF" description="Test up for repeal policies. Up for Repeal policies have been specifically marked&#xA;as such and will (if the vote/petition threshold is reached) be repealed&#xA;as part of closing the next vote." Deprecated="False" filter="0" group="General">
                                                    <TunableTuple name="white_black_list" class="TunableWhiteBlackList" display="White Black List" muid="47F40C9A661C5A00" description="The civic policies must pass the whitelist and blacklist&#xA;to pass the test." Deprecated="False" filter="0" group="General">
                                                        <TunableVariant type="None" name="blacklist" class="OptionalTunable" default="nothing" display="Blacklist" muid="8038EA62D833BA52" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is not in the blacklist. If no blacklist is&#xA;specified, no items are disallowed." Deprecated="False" filter="0" group="General">
                                                            <Tunable name="nothing" class="TunableExistance" display="Nothing" muid="9CF81AA49066AB39" />
                                                            <TunableTuple name="specify" class="TunableBlacklist" display="Specify" muid="67868BC1A749064E" description="A tunable blacklist." Deprecated="False" filter="0" group="General">
                                                                <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="4FCC172919E7B8E7" description="Blacklisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                    <Tunable type="snippet" class="TunableReference" muid="73FE435B71DC55AF" description="Allowed and disallowed civic policies." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="BaseCivicPolicy" />
                                                                </TunableList>
                                                                <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="A2F7E10801C44AFD" description="Tunable option for how many items must be in the blacklist&#xA;for the blacklist to fail when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                    <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="6474796162462CED" />
                                                                    <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="63A75A725400AD29" description="When testing a collection of items, the number of items in&#xA;that collection that are in the blacklist must pass this&#xA;threshold test for the blacklist to disallow them all." Deprecated="False" filter="0" group="General">
                                                                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="8AD60832CC33D4D6" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                        <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="6FDA1B7BCE1E42F6" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                    </TunableTuple>
                                                                </TunableVariant>
                                                            </TunableTuple>
                                                        </TunableVariant>
                                                        <TunableVariant type="None" name="whitelist" class="OptionalTunable" default="everything" display="Whitelist" muid="75A6001D1C7C1AAA" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is in the whitelist. If no whitelist is&#xA;specified, all items are allowed." Deprecated="False" filter="0" group="General">
                                                            <Tunable name="everything" class="TunableExistance" display="Everything" muid="7C4043BF690912F3" />
                                                            <TunableTuple name="specify" class="TunableWhitelist" display="Specify" muid="120771E4AE710C3D" description="A tunable whitelist." Deprecated="False" filter="0" group="General">
                                                                <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="84F0BBBB327A1FB4" description="Tunable option for how many items must be in the whitelist&#xA;for the whitelist to pass when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                    <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="C313643CCF648D56" />
                                                                    <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="E6C31DD78947899D" description="When testing a collection of items, the number of items in&#xA;that collection that are in the whitelist must pass this&#xA;threshold test for the whitelist to allow them all." Deprecated="False" filter="0" group="General">
                                                                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="4444A60997C4CF91" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                        <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="A07FBCFD708F636A" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                    </TunableTuple>
                                                                </TunableVariant>
                                                                <TunableList name="whitelist" class="TunableSet" display="Whitelist" muid="263095C19182E4B2" description="Whitelisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                    <Tunable type="snippet" class="TunableReference" muid="85F40507CB0D3A3A" description="Allowed and disallowed civic policies." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="BaseCivicPolicy" />
                                                                </TunableList>
                                                            </TunableTuple>
                                                        </TunableVariant>
                                                    </TunableTuple>
                                                </TunableTuple>
                                                <TunableTuple name="voting_open" class="TunableBaseCivicPolicyTestVotingOpen" display="Voting Open" muid="8866B808382515A" description="If checked, will verify that voting is currently active." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="bool" name="negate" class="Tunable" default="False" display="Negate" muid="F2DA19B22D44C97D" description="If checked then this test will return True when not active." Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableTuple name="voting_time_until_change" class="TunableBaseCivicPolicyTestVotingTimeUntilChange" display="Voting Time Until Change" muid="7A51C5A4851C6AE3" description="If checked, will check the time remaining before the next voting open status change." Deprecated="False" filter="0" group="General">
                                                    <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="3C3DAD38111E6471" description="The amount of time relative to the next voting state change to test." Deprecated="False" filter="0" group="General">
                                                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="BD708DFA831EF0A6" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                        <TunableTuple name="value" class="TunableTimeSpan" display="Value" muid="995121492ADCE5BD" description="Duration before the next change." Deprecated="False" filter="0" group="General">
                                                            <Tunable type="int" name="days" class="TunableRange" default="0" display="Days" muid="633FD401A9BD9C37" min="0" max="None" description="Number of days" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                            <Tunable type="int" name="hours" class="TunableRange" default="1" display="Hours" muid="E1DFF273B570F69D" min="0" max="23" description="Number of hours" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                            <Tunable type="int" name="minutes" class="TunableRange" default="0" display="Minutes" muid="246E13C7AC57368A" min="0" max="59" description="Number of minutes" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                        </TunableTuple>
                                                    </TunableTuple>
                                                </TunableTuple>
                                            </TunableVariant>
                                        </TunableList>
                                        <TunableVariant type="None" name="street" class="TunableVariant" default="literal" display="Street" muid="49CE4687CB927E0C" description="Select what street to test." Deprecated="False" filter="0" group="General">
                                            <Tunable type="street" name="literal" class="TunableReference" display="Literal" muid="EA3DF1B753C62238" description="Identify a specific Street." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                            <TunableTuple name="via_street_participant" class="TunableStreetParticipant" display="Via Street Participant" muid="A77CF73381F75110" description="Get the street participant." Deprecated="False" filter="0" group="General" />
                                            <TunableVariant type="None" name="via_zone_source" class="TunableVariant" default="use_current_zone" display="Via Zone Source" muid="3D2DB98F7EBD330A" description="Select the street to use by specifying a Zone Source." Deprecated="False" filter="0" group="General">
                                                <TunableTuple name="use_current_zone" class="TunableActiveZone" display="Use Current Zone" muid="A0CDDE96B7FFD363" description="Get the active zone." Deprecated="False" filter="0" group="General" />
                                                <TunableTuple name="use_participant_home_zone" class="TunableParticipantHomeZone" display="Use Participant Home Zone" muid="52225D417964CFB6" description="Get a participant's home zone. Can be None if they don't have one." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="ParticipantTypeSingleSim" name="participant" class="TunableEnumEntry" default="Actor" display="Participant" muid="F1FB95E7BD06EE2E" static_entries="interactions.ParticipantTypeSingleSim" description="Test against the participant's home zone. Townies' home zone will&#xA;be None." Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableTuple name="use_pick_info" class="TunablePickInfoZone" display="Use Pick Info" muid="8B9E57C292802988" description="Get the zone of the lot the user clicked on." Deprecated="False" filter="0" group="General" />
                                                <TunableTuple name="use_picked_zone_ids" class="TunablePickedZoneIds" display="Use Picked Zone Ids" muid="9BB7CA3B0D05FBA1" description="Get the zone from the interaction's picked_zone_ids participant. Usually&#xA;comes from a picker." Deprecated="False" filter="0" group="General" />
                                            </TunableVariant>
                                        </TunableVariant>
                                    </TunableTuple>
                                </TunableVariant>
                            </TunableList>
                        </TunableList>
                        <TunableList name="weighted_tests" class="TunableList" display="Weighted Tests" muid="E023648C2B807AFB" description="Weighted tests for the individual object. One is chosen &#xA;based on weight, and all objects are run against that chosen&#xA;test set." Deprecated="False" filter="0" group="General">
                            <TunableTuple class="TunableTuple" muid="FFB53F3B8B49B93B" Deprecated="False" filter="0" group="General">
                                <TunableList name="tests" class="TunableObjectModifyTestSet" display="Tests" muid="6953808D1B332DB6" description="All least one subtest group (AKA one list item) must pass&#xA;within this list before the action associated with this&#xA;tuning will be run." Deprecated="False" filter="0" group="General">
                                    <TunableList class="TunableList" muid="F5B107BEB03958B5" description="A list of tests.  All of these must pass for the group to pass." Deprecated="False" filter="0" group="General">
                                        <TunableVariant type="None" class="TunableObjectModifyTestVariant" default="none" muid="4E852A97A439B364" description="A single tunable test." Deprecated="False" filter="0" group="General">
                                            <TunableTuple name="consumable_test" class="TunableConsumableTest" display="Consumable Test" muid="7C7DD2747AF16689" description="A test that checks information about consumables." Deprecated="False" filter="0" group="General">
                                                <TunableTuple name="bites_left" class="TunableTuple" display="Bites Left" muid="A47CD855D10FB4E1" description="A check that tests against the number of bites left before the&#xA;subject is completely consumed." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="Operator" name="operator" class="TunableOperator" default="EQUAL" display="Operator" muid="B49228D037C4AD33" static_entries="sims4-math.Operator" description="The operator to use for the comparison." Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="int" name="value" class="Tunable" default="1" display="Value" muid="509B4C614B52129C" description="The number of bites to test against." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <Tunable type="bool" name="is_consumable" class="Tunable" default="True" display="Is Consumable" muid="BEFA8411564B0A13" description="If checked, the subject must be a consumable, if unchecked, the&#xA;subject must not be a consumable." Deprecated="False" filter="0" group="General" />
                                                <TunableEnum type="ParticipantType" name="subject" class="TunableEnumEntry" default="Object" display="Subject" muid="F635B4E618C0B3DD" static_entries="interactions.ParticipantType" description="The subject of the test. This is the consumable object." Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <TunableTuple name="custom_name" class="TunableCustomNameTest" display="Custom Name" muid="C8ABC569BD59BD10" description="Require or prohibit an object from having a custom&#xA;name or description set." Deprecated="False" filter="0" group="General">
                                                <TunableVariant type="None" name="has_custom_description" class="OptionalTunable" default="disabled" display="Has Custom Description" muid="B14FE4A0378711D5" description="If checked, the subject must have a custom description set. If unchecked, it cannot have a custom description set." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="AFDDEBA03C22BA34" />
                                                    <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="C9D0CDA0DACC4E56" description="If checked, the subject must have a custom description set. If unchecked, it cannot have a custom description set." Deprecated="False" filter="0" group="General" />
                                                </TunableVariant>
                                                <TunableVariant type="None" name="has_custom_name" class="OptionalTunable" default="disabled" display="Has Custom Name" muid="938203B3858270B5" description="If checked, the subject must have a custom name set. If unchecked, it cannot have a custom name set." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="775ACB9D3642949C" />
                                                    <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="89395DC41650767B" description="If checked, the subject must have a custom name set. If unchecked, it cannot have a custom name set." Deprecated="False" filter="0" group="General" />
                                                </TunableVariant>
                                                <TunableEnum type="ParticipantType" name="participant" class="TunableEnumEntry" default="Object" display="Participant" muid="1C272C71FBF4F842" static_entries="interactions.ParticipantType" description="The subject who is the object of this test." Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <TunableTuple name="elapsed_time" class="TunableTimeElapsedZoneTest" display="Elapsed Time" muid="8437F2C776A7C48A" description="Test to make sure enough time has passed since the zone was last saved." Deprecated="False" filter="0" group="General">
                                                <Tunable type="float" name="minutes_passed" class="TunableSimMinute" default="720" display="Minutes Passed" muid="76AC9673739E67E3" min="1" max="None" description="This test will pass when the minutes passed is greater than the&#xA;number minutes since last loading into zone." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <TunableTuple name="existence" class="TunableExistenceTest" display="Existence" muid="FC8FA0ABEC7B6C2D" description="A test to check whether the specified participant exists." Deprecated="False" filter="0" group="General">
                                                <Tunable type="bool" name="allow_hidden_sim_status" class="Tunable" default="False" display="Allow Hidden Sim Status" muid="833AAF814972C34C" description="If checked then we will ignore hidden Sim status such that they will count as existing even though they&#xA;have been hidden.  Use this in conjunction with Require Instantiated in order to determine the Sim's actual&#xA;instantiated status. " Deprecated="False" filter="0" group="General" />
                                                <Tunable type="bool" name="exists" class="Tunable" default="True" display="Exists" muid="9FDA30710E94ABA5" description="When checked, require the specified participant to exist. When&#xA;unchecked, require the specified participant to not exist." Deprecated="False" filter="0" group="General" />
                                                <TunableEnum type="ParticipantType" name="participant" class="TunableEnumEntry" default="TargetSim" display="Participant" muid="8AE5E9C637131E75" static_entries="interactions.ParticipantType" description="The participant for which to check existence." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="bool" name="require_instantiatable" class="Tunable" default="True" display="Require Instantiatable" muid="3C3FDA88E4E2CA2D" description="If checked, the specified participant must be instantiatable. This&#xA;is generally true for all Sims at LOD above MINIMUM." Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <TunableTuple name="game_option" class="TunableSimInfoGameplayOptionsTest" display="Game Option" muid="2C7133720DA537FF" description="Test whether or not a Sim has a specific gameplay option set." Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="TestableGameOptions" name="gameplay_option" class="TunableEnumEntry" default="CIVIC_POLICY_NPC_VOTING_ENABLED" display="Gameplay Option" muid="21F57EE778F947CB" static_entries="event_testing-game_option_tests.TestableGameOptions" description="The gameplay option to test. This test will pass if this option is&#xA;set." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="bool" name="invert" class="Tunable" default="False" display="Invert" muid="85E2D310D712E5F6" description="If enabled, requires the option to be unset for the test to pass." Deprecated="False" filter="0" group="General" />
                                                <TunableVariant type="None" name="tooltip" class="OptionalTunable" default="disabled" display="Tooltip" muid="646B6E886EA77CB8" description="Reason of failure." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="538ADD933B438A86" />
                                                    <Tunable type="int" name="enabled" class="TunableLocalizedString" default="0x0" display="Enabled" muid="D1A84DF7BB237595" description="Reason of failure." Deprecated="False" filter="0" group="General" />
                                                </TunableVariant>
                                            </TunableTuple>
                                            <TunableTuple name="inventory" class="TunableInventoryTest" display="Inventory" muid="6FFF80EF16157EFB" description="A test to check on the contents of either a sim inventory or&#xA;an object inventory." Deprecated="False" filter="0" group="General">
                                                <TunableVariant type="None" name="contents_check" class="TunableVariant" default="has_anything" display="Contents Check" muid="877A20A5A3AEAB38" description="Checks to run on each object of the specified inventory" Deprecated="False" filter="0" group="General">
                                                    <Tunable name="has_anything" class="TunableExistance" display="Has Anything" muid="20ACCFE9146F6AE7" />
                                                    <TunableTuple name="has_object_of_participant_type" class="TunableTuple" display="Has Object Of Participant Type" muid="977611C6C44DBA27" description="Participant type we want to test if its in the selected&#xA;inventory." Deprecated="False" filter="0" group="General">
                                                        <TunableEnum type="ParticipantType" name="participant" class="TunableEnumEntry" default="Object" display="Participant" muid="F2C8B8F1E3260E9C" static_entries="interactions.ParticipantType" description="Which participant of the interaction do we want to validate&#xA;on the inventory. " Deprecated="False" filter="0" group="General" />
                                                    </TunableTuple>
                                                    <TunableTuple name="has_object_with_def" class="TunableTuple" display="Has Object With Def" muid="F5A53A8421A54D25" Deprecated="False" filter="0" group="General">
                                                        <Tunable type="object" name="definition" class="TunableReference" display="Definition" muid="34F82D19E389CB59" description="The object definition to look for inside inventory." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                    </TunableTuple>
                                                    <TunableTuple name="has_object_with_states" class="BasicStateCheckFactory" display="Has Object With States" muid="7DF1201D559790E9" description="This option tests crafted item's tags against a list of possible&#xA;tags." Deprecated="False" filter="0" group="General">
                                                        <TunableVariant type="None" name="object_requirement" class="TunableVariant" default="any_object" display="Object Requirement" muid="1115D6C3A186FDE5" Deprecated="False" filter="0" group="General">
                                                            <Tunable name="any_object" class="TunableExistance" display="Any Object" muid="821C03E0B4F1DCC" />
                                                            <TunableTuple name="definition" class="TunableTuple" display="Definition" muid="241E88926A178A9D" Deprecated="False" filter="0" group="General">
                                                                <Tunable type="object" name="definition" class="TunableReference" display="Definition" muid="8DBD18E2DAAEB9F2" description="The object must have this definition." allow_none="False" Deprecated="False" filter="0" group="General" />
                                                            </TunableTuple>
                                                            <TunableTuple name="tag" class="TunableTuple" display="Tag" muid="CE4A7552C5A1C5D2" Deprecated="False" filter="0" group="General">
                                                                <TunableTuple name="tag" class="CraftTaggedItemFactory" display="Tag" muid="3830E1C12E67A13D" description="The object must have this tag." Deprecated="False" filter="0" group="General">
                                                                    <TunableList name="tag_set" class="TunableSet" display="Tag Set" muid="A0F4D6E6CEA425D4" description="The tag of objects we want to test ownership of" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                        <TunableEnum type="Tag" class="TunableEnumEntry" default="INVALID" muid="3BB30D3FDE423E12" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="What tag to test for" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                                    </TunableList>
                                                                    <TunableEnum type="TagTestType" name="test_type" class="TunableEnumEntry" default="CONTAINS_ANY_TAG_IN_SET" display="Test Type" muid="C5F98FE81FF53090" static_entries="objects-object_tests.TagTestType" description="How to test the tags in the tag set against the objects on the lot." Deprecated="False" filter="0" group="General" />
                                                                </TunableTuple>
                                                            </TunableTuple>
                                                        </TunableVariant>
                                                        <TunableList name="state_set" class="TunableSet" display="State Set" muid="66A0CBCDD2E7D448" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                            <Tunable type="object_state" class="TunableReference" muid="99E7F7A1995D75A1" description="What state to test for." allow_none="False" Deprecated="False" filter="0" group="General" />
                                                        </TunableList>
                                                        <TunableEnum type="StateTestType" name="test_type" class="TunableEnumEntry" default="CONTAINS_ANY_STATE_IN_SET" display="Test Type" muid="B4BF21779A2F5AD1" static_entries="objects-object_tests.StateTestType" description="How to test the states in the state set against the objects in&#xA;the inventory." Deprecated="False" filter="0" group="General" />
                                                    </TunableTuple>
                                                    <TunableTuple name="has_object_with_tag" class="CraftTaggedItemFactory" display="Has Object With Tag" muid="954FF80B6DD41BD6" description="This option tests crafted item's tags against a list of possible tags" Deprecated="False" filter="0" group="General">
                                                        <TunableList name="tag_set" class="TunableSet" display="Tag Set" muid="8BEEEF56C8F4DA49" description="The tag of objects we want to test ownership of" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                            <TunableEnum type="Tag" class="TunableEnumEntry" default="INVALID" muid="1BB8B030CD1DFE27" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="What tag to test for" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                        </TunableList>
                                                        <TunableEnum type="TagTestType" name="test_type" class="TunableEnumEntry" default="CONTAINS_ANY_TAG_IN_SET" display="Test Type" muid="D62D684B3A48723D" static_entries="objects-object_tests.TagTestType" description="How to test the tags in the tag set against the objects on the lot." Deprecated="False" filter="0" group="General" />
                                                    </TunableTuple>
                                                </TunableVariant>
                                                <TunableVariant type="None" name="inventory_location" class="TunableVariant" default="participant_inventory" display="Inventory Location" muid="188AB7217AC77AE1" description="Who owns the inventory. Either look in the inventory of a &#xA;participant or specify an object inventory type directly.&#xA;&#xA;If participant returns multiple inventory owners, the test will &#xA;pass only if ALL of those owners pass the inventory content test." Deprecated="False" filter="0" group="General">
                                                    <TunableTuple name="hidden_inventory_objects" class="TunableTuple" display="Hidden Inventory Objects" muid="87D2E6931DAEC831" Deprecated="False" filter="0" group="General">
                                                        <TunableEnum type="InventoryType" name="inventory" class="TunableEnumEntry" default="UNDEFINED" display="Inventory" muid="F86370D39D94E4DA" dynamic_entries="objects-components-inventory_enums.InventoryType._elements" static_entries="objects-components-inventory_enums.InventoryType" description="Check in the hidden inventory for objects that can go into the&#xA;specified inventory type. EX: check that there are mailbox&#xA;objects in the hidden inventory" Deprecated="False" filter="0" group="General" />
                                                    </TunableTuple>
                                                    <TunableTuple name="object_inventory_type" class="TunableTuple" display="Object Inventory Type" muid="B96F00AE30E2B25B" Deprecated="False" filter="0" group="General">
                                                        <TunableEnum type="InventoryType" name="inventory" class="TunableEnumEntry" default="UNDEFINED" display="Inventory" muid="FA7729AD424B9386" dynamic_entries="objects-components-inventory_enums.InventoryType._elements" static_entries="objects-components-inventory_enums.InventoryType" description="Check the global Object inventory that has the specified type.&#xA;EX: check in the global fridge inventory that exists for all&#xA;fridges" Deprecated="False" filter="0" group="General" />
                                                    </TunableTuple>
                                                    <TunableTuple name="participant_inventory" class="TunableTuple" display="Participant Inventory" muid="20C38583297021BE" Deprecated="False" filter="0" group="General">
                                                        <TunableEnum type="ParticipantType" name="inventory" class="TunableEnumEntry" default="Actor" display="Inventory" muid="5391E2F3A9369019" static_entries="interactions.ParticipantType" description="The owner of the inventory" Deprecated="False" filter="0" group="General" />
                                                    </TunableTuple>
                                                </TunableVariant>
                                                <TunableTuple name="required_count" class="TunableThreshold" display="Required Count" muid="70E50CF8E93450E7" description="The inventory must have a tunable threshold of objects that&#xA;pass the contents check test.&#xA;&#xA;EX: test is object definition of type pizza. required count is enabled&#xA;and has a threshold of &gt;= 5. That means this test will pass if you&#xA;have 5 or more pizzas in your inventory. To check if any objects&#xA;exist, use required count &gt;= 1" Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="D2136C015AD9B3" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="int" name="value" class="Tunable" default="1" display="Value" muid="FD5447FB6879544" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableEnum type="TestHiddenInventories" name="test_hidden" class="TunableEnumEntry" default="ANY" display="Test Hidden" muid="65BBB223BD6E2F4C" static_entries="objects-object_tests.InventoryTest.TestHiddenInventories" description="Optionally restrict to only hidden or non-hidden inventories." Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <TunableTuple name="location" class="TunableLocationTest" display="Location" muid="BAAAAD169D59514F" description="Tests for object locations.&#xA;Outside: Check if an object is on the inside or outside (has a roof over&#xA;its head)&#xA;Natural ground: Checks the floor tiles where the object is to see if it &#xA;qualifies as natural ground" Deprecated="False" filter="0" group="General">
                                                <TunableTuple name="location_tests" class="TunableTuple" display="Location Tests" muid="B5064B70C2A0E351" Deprecated="False" filter="0" group="General">
                                                    <TunableVariant type="None" name="has_terrain_tag" class="OptionalTunable" default="Don't_Test" display="Has Terrain Tag" muid="14304F24C0ABA3D0" description="If checked, will verify the subject of the test is currently on&#xA;the tuned terrain tag." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="49A61B8697417AF4" />
                                                        <TunableTuple name="enabled" class="TunableTuple" display="Enabled" muid="4BB2797361FAAD93" description=",&#xA;A set of terrain tags required for this test to pass." Deprecated="False" filter="0" group="General">
                                                            <Tunable type="bool" name="negate" class="Tunable" default="False" display="Negate" muid="B16CB3BE96A176EA" description="If checked, the test will be inverted. In other words,&#xA;the test will fail if at least one tag is detected at&#xA;this location." Deprecated="False" filter="0" group="General" />
                                                            <TunableList name="terrain_tags" class="TunableEnumSet" display="Terrain Tags" muid="FEEB8FAB372BB6E6" description="A set of terrain tags. Only one of these tags needs to be&#xA;present at this location. Although it is not tunable, there&#xA;is a threshold weight underneath which a terrain tag will&#xA;not appear to be present." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                <TunableEnum type="TerrainTag" class="TunableEnumEntry" default="INVALID" muid="EA503F7F932520E4" static_entries="world-terrain_enums.TerrainTag" Deprecated="False" filter="0" group="General" />
                                                            </TunableList>
                                                            <Tunable type="bool" name="test_floor_tiles" class="Tunable" default="False" display="Test Floor Tiles" muid="F5A3506DC435C823" description="If checked, floor tiles will be tested. Otherwise, &#xA;it'll only check the terrain and will ignore the &#xA;floor tiles on the terrain." Deprecated="False" filter="0" group="General" />
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                    <TunableVariant type="None" name="in_common_area" class="OptionalTunable" default="Don't_Test" display="In Common Area" muid="B9ABF3EFCE4F61F4" description="If checked, will verify the subject is in the common area&#xA;of an apartment.  If unchecked will verify the subject is not." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="1D20FDD9030013ED" />
                                                        <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="33863872A7447C2A" Deprecated="False" filter="0" group="General" />
                                                    </TunableVariant>
                                                    <TunableVariant type="None" name="is_fire_allowed" class="OptionalTunable" default="Don't_Test" display="Is Fire Allowed" muid="CC9AB073CFB99A43" description="If checked, will verify if fire is possible at the subject's position. &#xA;If unchecked, will pass if fire is not possible.&#xA;If not enabled, doesn't care either way." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="4A828CDE2EAF71BA" />
                                                        <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="4E6EC86B5C325997" Deprecated="False" filter="0" group="General" />
                                                    </TunableVariant>
                                                    <TunableVariant type="None" name="is_in_slot" class="OptionalTunable" default="Don't_Test" display="Is In Slot" muid="2172FF47942D8AB8" description="If enabled will test if the object is attacked/deattached to&#xA;any of possible tuned slots.&#xA;If you tune a slot type set the test will test if the object &#xA;is slotted or not slotted into into any of those types. " Deprecated="False" filter="0" group="General">
                                                        <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="F5DA3A55E31D03ED" />
                                                        <TunableTuple name="enabled" class="TunableTuple" display="Enabled" muid="959416266449C51B" description="Test if an object is current slotted in any of a possible&#xA;list of slot types.&#xA;Empty slot type set is allowed for testing for slotted or&#xA;not slotted only." Deprecated="False" filter="0" group="General">
                                                            <TunableVariant type="None" name="slot_test_type" class="TunableVariant" default="any_slot" display="Slot Test Type" muid="1A779091E1E795C7" description="Strategy to test the slots:&#xA;Any Slot - is the object in any slot&#xA;Surface Slot - is object is in a surface slot&#xA;Specific Slot - is the object in specific list of slots" Deprecated="False" filter="0" group="General">
                                                                <TunableTuple name="any_slot" class="TunableSlotTestType" display="Any Slot" muid="8FC0798448BFB375" description="Singleton factory for testing if object is slotted." Deprecated="False" filter="0" group="General">
                                                                    <Tunable type="bool" name="require_slotted" class="Tunable" default="True" display="Require Slotted" muid="464D3D35B5914423" description="If checked, return success if the object is slotted&#xA;If unchecked, test the absense of slotting." Deprecated="False" filter="0" group="General" />
                                                                </TunableTuple>
                                                                <TunableTuple name="specific_slot" class="TunableSpecificSlotTest" display="Specific Slot" muid="98A7F714D906EF21" description="Subclass of SlotTestType that can check against a specific&#xA;slot set." Deprecated="False" filter="0" group="General">
                                                                    <Tunable type="bool" name="require_slotted" class="Tunable" default="True" display="Require Slotted" muid="F8A90EF6AA3B09B" description="If checked, return success if the object is slotted&#xA;If unchecked, test the absense of slotting." Deprecated="False" filter="0" group="General" />
                                                                    <Tunable type="slot_type_set" name="specific_slot_set" class="TunableReference" display="Specific Slot Set" muid="BE568DC8FBE581E" description="Set of slots the object may be attached to." allow_none="False" Deprecated="False" filter="0" group="General" />
                                                                </TunableTuple>
                                                                <TunableTuple name="surface_slot" class="TunableSurfaceSlotTest" display="Surface Slot" muid="2FF298EAB4968D76" description="Subclass of SlotTestType that checks that a slot has&#xA;is_surface set to true." Deprecated="False" filter="0" group="General">
                                                                    <Tunable type="bool" name="require_slotted" class="Tunable" default="True" display="Require Slotted" muid="F381C0643BE83BBD" description="If checked, return success if the object is slotted&#xA;If unchecked, test the absense of slotting." Deprecated="False" filter="0" group="General" />
                                                                </TunableTuple>
                                                            </TunableVariant>
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                    <TunableVariant type="None" name="is_inside_building" class="OptionalTunable" default="Don't_Test" display="Is Inside Building" muid="D53A19505F3C1B2A" description="If checked, will verify if the subject of the test is inside a&#xA;building. This uses a client function that checks if the block&#xA;the sim is mostly enclosed by walls or if not, if the adjoining&#xA;blocks are themselves enclosed. This should be used when we&#xA;want to test if a subject is inside a normally constructed &#xA;building. If we simply want to test whether the subject is &#xA;covered / has a roof over them, use is_outside. See comment on&#xA;is_outside for more details. If unchecked, will negate this &#xA;test." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="C0EB94C262AD511C" />
                                                        <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="6940AE45F61FEB4A" Deprecated="False" filter="0" group="General" />
                                                    </TunableVariant>
                                                    <TunableVariant type="None" name="is_natural_ground" class="OptionalTunable" default="Don't_Test" display="Is Natural Ground" muid="B2D8D027AABDD76B" description="If checked, will verify the subject of the test is on natural &#xA;ground (no floor tiles are under him).&#xA;Otherwise, will verify the subject of the test is not on &#xA;natural ground." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="EA05C35AE4F1136" />
                                                        <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="F76B4670EA547EC4" Deprecated="False" filter="0" group="General" />
                                                    </TunableVariant>
                                                    <TunableVariant type="None" name="is_on_active_lot" class="OptionalTunable" default="Don't_Test" display="Is On Active Lot" muid="B9DEA364F23EBB3E" description="If disabled the test will not be used.&#xA;If enabled and checked, the test will pass if the subject is&#xA;on the active lot. (their center is within the lot bounds)&#xA;If enabled and not checked, the test will pass if the subject is &#xA;outside of the active lot.&#xA;&#xA;For example, Ask To Leave is tuned with this enabled and checked&#xA;for the TargetSim. You can only ask someone to leave if they&#xA;are actually on the active lot, but not if they are wandering&#xA;around in the open streets." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="30E89F80678BA123" />
                                                        <TunableTuple name="Is_or_is_not_on_active_lot" class="TunableTuple" display="Is Or Is Not On Active Lot" muid="58338A1A45B8E3E7" Deprecated="False" filter="0" group="General">
                                                            <Tunable type="bool" name="include_spawn_point" class="Tunable" default="False" display="Include Spawn Point" muid="E5FE18E897123D53" description="If set to true, we will consider the lot's spawn point as part of the active lot." Deprecated="False" filter="0" group="General" />
                                                            <Tunable type="bool" name="is_or_is_not_on_active_lot" class="Tunable" default="True" display="Is Or Is Not On Active Lot" muid="F4DC2A5BCE26B6FA" description="If checked then the test will pass if the subject is on&#xA;the active lot." Deprecated="False" filter="0" group="General" />
                                                            <TunableVariant type="None" name="tolerance" class="TunableVariant" default="explicit" display="Tolerance" muid="76AB58B73A93ACD6" Deprecated="False" filter="0" group="General">
                                                                <Tunable type="int" name="explicit" class="Tunable" default="0" display="Explicit" muid="B101CDEA980B27EB" description="The tolerance from the edge of the lot that the&#xA;location test will use in order to determine if the&#xA;test target is considered on lot or not." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                <TunableTuple name="use_default_tolerance" class="UseDefaultOfflotToleranceFactory" display="Use Default Tolerance" muid="127857C7A1FC8AEF" description="Use the default tuned global offlot tolerance tuned&#xA;in objects.components.statistic_component.Default Off Lot." Deprecated="False" filter="0" group="General" />
                                                            </TunableVariant>
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                    <TunableVariant type="None" name="is_on_level" class="OptionalTunable" default="Don't_Test" display="Is On Level" muid="B01856E2416E519B" description="If enabled, we check the participant's current level against&#xA;the tuned threshold.  In the case of sims in pools, the effective&#xA;level will be that of the surface of the pool, not the bottom." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="228DE8CD3E383898" />
                                                        <TunableTuple name="enabled" class="TunableThreshold" display="Enabled" muid="AFE6F00BFB905230" description="Value/comparison pair used to define a Threshold." Deprecated="False" filter="0" group="General">
                                                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="EC88F4BE12E66B29" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                            <Tunable type="int" name="value" class="Tunable" default="0" display="Value" muid="50CE1D707164D26F" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                    <TunableVariant type="None" name="is_outside" class="OptionalTunable" default="Don't_Test" display="Is Outside" muid="C95C7D1E16E4EF81" description="PLEASE BE AWARE. If checked, will verify if the subject of the&#xA;test does not have a roof over their head. If unchecked, will &#xA;test if the subject has a roof over their head. If the &#xA;intention is to determine if a subject is in/not in a building, &#xA;this test is deprecated in favor of is_inside_building. If you &#xA;would like to test if a subject is inside a building, but also &#xA;need to test if they have a roof over their head, please use &#xA;both options." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="FBEEF6D3F4730E77" />
                                                        <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="30AB85BEF448319B" Deprecated="False" filter="0" group="General" />
                                                    </TunableVariant>
                                                    <TunableVariant type="None" name="is_venue_type" class="OptionalTunable" default="Don't_Test" display="Is Venue Type" muid="A3B1B43E1A402527" description="If checked, will verify if the subject is at a venue of the&#xA;specified type." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="9818D051E8ED98D6" />
                                                        <TunableTuple name="enabled" class="TunableTuple" display="Enabled" muid="CAC028C55A747E4A" description="Venue type required for this test to pass." Deprecated="False" filter="0" group="General">
                                                            <Tunable type="bool" name="negate" class="Tunable" default="False" display="Negate" muid="AFF25CBEDB7BE316" description="If enabled, the test will return true if the subject&#xA;IS NOT at a venue of the specified type." Deprecated="False" filter="0" group="General" />
                                                            <Tunable type="bool" name="use_source_venue" class="Tunable" default="False" display="Use Source Venue" muid="6726CE0F7F96C8BC" description="If enabled, the test will test the source venue instead of the active&#xA;venue.  For example, the Community Lot instead of the active Marketplace.&#xA;Testing the active venue is the default." Deprecated="False" filter="0" group="General" />
                                                            <Tunable type="venue" name="venue_type" class="TunableReference" display="Venue Type" muid="43F42B223B7348ED" description="Venue type to test against." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                    <TunableVariant type="None" name="valid_surface_types" class="OptionalTunable" default="Don't_Test" display="Valid Surface Types" muid="1EFA4BA62C4AE381" description="If enabled, we will test the surface type of the subject&#xA;against prohibited or required surface types." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="ACAEB21B4AA43224" />
                                                        <TunableTuple name="Test_Surface_Types" class="TunableWhiteBlackList" display="Test Surface Types" muid="FA1DF60AAFB983F3" description="Required and Prohibited Surface Types. " Deprecated="False" filter="0" group="General">
                                                            <TunableVariant type="None" name="blacklist" class="OptionalTunable" default="nothing" display="Blacklist" muid="AF5A1761F0978029" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is not in the blacklist. If no blacklist is&#xA;specified, no items are disallowed." Deprecated="False" filter="0" group="General">
                                                                <Tunable name="nothing" class="TunableExistance" display="Nothing" muid="B702674721D70471" />
                                                                <TunableTuple name="specify" class="TunableBlacklist" display="Specify" muid="23D6C137235DEAA3" description="A tunable blacklist." Deprecated="False" filter="0" group="General">
                                                                    <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="BF47B2CB58D2FD1C" description="Blacklisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                        <TunableEnum type="SurfaceType" class="TunableEnumEntry" default="SURFACETYPE_WORLD" muid="1D62BA39BEFE7A35" static_entries="routing.SurfaceType" description="Surface Type the object is placed on." Deprecated="False" filter="0" group="General" invalid_entries="SURFACETYPE_UNKNOWN" />
                                                                    </TunableList>
                                                                    <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="282DEF3FFE90EFCE" description="Tunable option for how many items must be in the blacklist&#xA;for the blacklist to fail when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                        <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="11051F9967EDA72D" />
                                                                        <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="16B074796EF8F2EF" description="When testing a collection of items, the number of items in&#xA;that collection that are in the blacklist must pass this&#xA;threshold test for the blacklist to disallow them all." Deprecated="False" filter="0" group="General">
                                                                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="4FAFACE07A11FFD1" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                            <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="C39B75099E2D5F43" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                        </TunableTuple>
                                                                    </TunableVariant>
                                                                </TunableTuple>
                                                            </TunableVariant>
                                                            <TunableVariant type="None" name="whitelist" class="OptionalTunable" default="everything" display="Whitelist" muid="70F631DCFFBCBA8D" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is in the whitelist. If no whitelist is&#xA;specified, all items are allowed." Deprecated="False" filter="0" group="General">
                                                                <Tunable name="everything" class="TunableExistance" display="Everything" muid="39A8B0009CDD1CCF" />
                                                                <TunableTuple name="specify" class="TunableWhitelist" display="Specify" muid="33E3EE5D22F8AD13" description="A tunable whitelist." Deprecated="False" filter="0" group="General">
                                                                    <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="BF45C3A2B8B670A9" description="Tunable option for how many items must be in the whitelist&#xA;for the whitelist to pass when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                        <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="EA85354E8A9E9D9" />
                                                                        <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="AA44B7A99D638F86" description="When testing a collection of items, the number of items in&#xA;that collection that are in the whitelist must pass this&#xA;threshold test for the whitelist to allow them all." Deprecated="False" filter="0" group="General">
                                                                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="B0FBB6DD08D09D8D" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                            <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="A363BE224E67DB29" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                        </TunableTuple>
                                                                    </TunableVariant>
                                                                    <TunableList name="whitelist" class="TunableSet" display="Whitelist" muid="766888B70A0F2746" description="Whitelisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                        <TunableEnum type="SurfaceType" class="TunableEnumEntry" default="SURFACETYPE_WORLD" muid="952267382C11D10B" static_entries="routing.SurfaceType" description="Surface Type the object is placed on." Deprecated="False" filter="0" group="General" invalid_entries="SURFACETYPE_UNKNOWN" />
                                                                    </TunableList>
                                                                </TunableTuple>
                                                            </TunableVariant>
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                </TunableTuple>
                                            </TunableTuple>
                                            <Tunable name="none" class="TunableExistance" display="None" muid="EA018594E73F3BC0" />
                                            <TunableTuple name="object_definition" class="TunableObjectMatchesDefinitionOrTagTest" display="Object Definition" muid="F238FC411DE66FF1" description="Check to see if the specified object matches either a static definition or a set of tags" Deprecated="False" filter="0" group="General">
                                                <TunableVariant type="None" name="item" class="TunableVariant" default="tagged_item" display="Item" muid="E95236FD8D187DBB" description="Whether to test for a specific item or item that has a set of tags" Deprecated="False" filter="0" group="General">
                                                    <TunableTuple name="actual_item" class="CraftActualItemFactory" display="Actual Item" muid="E415ABEFF0863BA" description="This option tests crafted item against a list of possible items" Deprecated="False" filter="0" group="General">
                                                        <TunableList name="items_to_check" class="TunableList" display="Items To Check" muid="F63843AD01AF34CE" Deprecated="False" filter="0" group="General">
                                                            <Tunable type="object" class="TunableReference" muid="4645498BACCF36C" description="Object that qualifies for this check." allow_none="False" Deprecated="False" filter="0" group="General" />
                                                        </TunableList>
                                                    </TunableTuple>
                                                    <TunableTuple name="tagged_item" class="CraftTaggedItemFactory" display="Tagged Item" muid="675CED57D1CAE313" description="This option tests crafted item's tags against a list of possible tags" Deprecated="False" filter="0" group="General">
                                                        <TunableList name="tag_set" class="TunableSet" display="Tag Set" muid="896DAAB71D3BC862" description="The tag of objects we want to test ownership of" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                            <TunableEnum type="Tag" class="TunableEnumEntry" default="INVALID" muid="30A3B0180F839060" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="What tag to test for" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                        </TunableList>
                                                        <TunableEnum type="TagTestType" name="test_type" class="TunableEnumEntry" default="CONTAINS_ANY_TAG_IN_SET" display="Test Type" muid="D9F90056BEE836B9" static_entries="objects-object_tests.TagTestType" description="How to test the tags in the tag set against the objects on the lot." Deprecated="False" filter="0" group="General" />
                                                    </TunableTuple>
                                                </TunableVariant>
                                                <TunableVariant type="None" name="tooltip" class="OptionalTunable" default="disabled" display="Tooltip" muid="85BBDF0C4B5A7D2E" description="Reason of failure." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="5D2042EFDBBCAE9E" />
                                                    <Tunable type="int" name="enabled" class="TunableLocalizedString" default="0x0" display="Enabled" muid="C8F8F3A2477589B2" description="Reason of failure." Deprecated="False" filter="0" group="General" />
                                                </TunableVariant>
                                            </TunableTuple>
                                            <TunableTuple name="object_preference" class="TunableObjectScoringPreferenceTest" display="Object Preference" muid="AD6E688C707A0B0F" description="A tunable factory that checks whether or not the target object of an affordance&#xA;is the Sim's preferred scoring object." Deprecated="False" filter="0" group="General">
                                                <TunableVariant type="None" name="any_sim" class="OptionalTunable" default="disabled" display="Any Sim" muid="A5ACC60DFD766EFF" description="If enabled, will return whether the object has any &quot;Use Only&quot; preference&#xA;set for the specified tag.  Will not be sim specific, and thus only&#xA;works for &quot;use only&quot; preference type.  Does NOT rely on interaction&#xA;to determine preference type.&#xA;&#xA;Value is the tag to test for." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="5DA71FB5D135F6F3" />
                                                    <TunableEnum type="ObjectPreferenceTag" name="enabled" class="TunableEnumEntry" default="INVALID" display="Enabled" muid="12190542CAEF8725" dynamic_entries="autonomy-autonomy_preference.ObjectPreferenceTag._elements" static_entries="autonomy-autonomy_preference.ObjectPreferenceTag" description="Tag to determine which preference type to use." Deprecated="False" filter="0" group="General" invalid_entries="INVALID" />
                                                </TunableVariant>
                                                <Tunable type="bool" name="require" class="Tunable" default="True" display="Require" muid="7D4C0F04FBC6BBF3" description="The Sim's preference is required to be True or required to be False." Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <TunableTuple name="season" class="TunableSeasonTest" display="Season" muid="DE6D1B3F3252C2CA" description="SeasonTest will test if the current simulation time falls within the&#xA;specified test conditions." Deprecated="False" filter="0" group="General">
                                                <Tunable type="bool" name="requires_seasons_pack" class="Tunable" default="True" display="Requires Seasons Pack" muid="9D5468FD723F5FCC" description="If checked, this test will require that the Seasons pack be &#xA;installed in order for the seasons test to pass.  If unchecked, &#xA;this test will automatically pass." Deprecated="False" filter="0" group="General" />
                                                <TunableList name="seasons" class="TunableEnumSet" display="Seasons" muid="A2CC6BAE03EFCDE0" min="1" description="Season(s) that we must be in to pass the test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                    <TunableEnum type="SeasonType" class="TunableEnumEntry" default="SUMMER" muid="EA52BEDE703176DE" static_entries="seasons-seasons_enums.SeasonType" Deprecated="False" filter="0" group="General" />
                                                </TunableList>
                                                <TunableVariant type="None" name="time_of_season" class="OptionalTunable" default="disabled" display="Time Of Season" muid="65AA3B2A14802687" description="Portion(s) of season(s) that we must be in to pass the test." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="B17EB4F8ABE84863" />
                                                    <TunableList name="enabled" class="TunableEnumSet" display="Enabled" muid="D656CBB4BED19F2A" min="1" description="Portion(s) of season(s) that we must be in to pass the test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                        <TunableEnum type="SeasonSegment" class="TunableEnumEntry" default="EARLY" muid="6FF04E2E508B1355" static_entries="seasons-seasons_enums.SeasonSegment" Deprecated="False" filter="0" group="General" />
                                                    </TunableList>
                                                </TunableVariant>
                                            </TunableTuple>
                                            <TunableTuple name="state" class="TunableStateTest" display="State" muid="B8E3263C56762766" description="Gate availability by object state.  By default, the test will use the&#xA;state's linked stat as a fallback in case the target doesn't have the&#xA;state involved." Deprecated="False" filter="0" group="General">
                                                <TunableVariant type="None" name="fallback_behavior" class="TunableVariant" default="always_fail" display="Fallback Behavior" muid="6085652EA815E695" description="What to do if the given object doesn't have the state in question." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="always_fail" class="TunableExistance" display="Always Fail" muid="2C13C0C90222FDA3" />
                                                    <Tunable name="always_pass" class="TunableExistance" display="Always Pass" muid="FB742DFF20D73AEB" />
                                                </TunableVariant>
                                                <TunableEnum type="Operator" name="operator" class="TunableOperator" default="EQUAL" display="Operator" muid="C8EBABCFAD62AF79" static_entries="sims4-math.Operator" description="The comparison to use." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="object_state" name="value" class="TunableReference" display="Value" muid="9F22CF6EFE44C838" description="The value to compare to." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="ObjectStateValue" />
                                            </TunableTuple>
                                            <TunableTuple name="statistic" class="TunableStatThresholdTest" display="Statistic" muid="47268A12699BEF6A" description="A test that checks whether or not a statistic is at a certain threshold for&#xA;a given participant. It can also test whether or not the participant has the&#xA;statistic explicitly added on them." Deprecated="False" filter="0" group="General">
                                                <Tunable type="bool" name="must_have_stat" class="Tunable" default="False" display="Must Have Stat" muid="DBF354709A0A6B51" description="Setting this to True (checked) will ensure that this test only&#xA;passes if the tested Sim actually has the statistic referenced. If&#xA;left False (unchecked), this test will evaluate as if the Sim had&#xA;the statistic at the value of 0" Deprecated="False" filter="0" group="General" />
                                                <TunableVariant type="None" name="score_to_use" class="TunableVariant" default="user_value" display="Score To Use" muid="B9D429AB1DB54FBE" description="Depending on the choice, this decides what value to use for the &#xA;threshold comparison." Deprecated="False" filter="0" group="General">
                                                    <TunableTuple name="points" class="Tunable_PointsValue" display="Points" muid="1BF2D8FE4DC68DA9" description="Use the raw points for the comparison in the test." Deprecated="False" filter="0" group="General" />
                                                    <TunableTuple name="rank" class="Tunable_RankValue" display="Rank" muid="B35DC7D7B42F122A" description="Use the rank value for the comparison in the test." Deprecated="False" filter="0" group="General" />
                                                    <TunableTuple name="user_value" class="Tunable_UserValue" display="User Value" muid="F21AC7665968012" description="Use the user value for the comparison in the test." Deprecated="False" filter="0" group="General">
                                                        <Tunable type="bool" name="highest_level_reached_instead" class="Tunable" default="False" display="Highest Level Reached Instead" muid="C8ABA5A8679FB5C8" description="If checked this will test against the highest level reached. This&#xA;currently only works with Ranked Statistics. Other statistics do&#xA;not have a notion of highest level reached. If we are using&#xA;something that doesn't support highest level reached it will &#xA;test against the current level instead." Deprecated="False" filter="0" group="General" />
                                                    </TunableTuple>
                                                </TunableVariant>
                                                <Tunable type="statistic" name="stat" class="TunableReference" display="Stat" muid="3F52E01CB931B23" description="The stat we are operating on." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                <TunableVariant type="None" name="threshold" class="TunableVariant" default="value_threshold" display="Threshold" muid="55751E8BA812264" description="The value or state threshold to test against." Deprecated="False" filter="0" group="General">
                                                    <TunableTuple name="state_value_threshold" class="TunableObjectStateValueThreshold" display="State Value Threshold" muid="2B4DC908944D09E9" description="Value/comparison pair used to define a Threshold." Deprecated="False" filter="0" group="General">
                                                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="651DD52B59D757DA" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                        <Tunable type="object_state" name="value" class="TunableReference" display="Value" muid="8DC736A1296BA2E8" description="The state threshold for this test." allow_none="False" Deprecated="False" filter="0" group="General" restrict="ObjectStateValue" />
                                                    </TunableTuple>
                                                    <TunableTuple name="value_threshold" class="TunableThreshold" display="Value Threshold" muid="882C877208E1502B" description="The threshold to control availability based on the statistic's&#xA;value." Deprecated="False" filter="0" group="General">
                                                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="4D500A87E9C3DBEA" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                        <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="F93A9FECC635434F" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                    </TunableTuple>
                                                </TunableVariant>
                                                <TunableEnum type="ParticipantType" name="who" class="TunableEnumEntry" default="Actor" display="Who" muid="79C1383E4169899" static_entries="interactions.ParticipantType" description="Who or what to apply this test to." Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <TunableTuple name="street_civic_policy_test" class="TunableStreetCivicPolicyTest" display="Street Civic Policy Test" muid="861855F1F7D44F2A" description="Test the state of the selected Street's Civic Policy Provider." Deprecated="False" filter="0" group="General">
                                                <TunableList name="civic_policy_tests" class="TunableList" display="Civic Policy Tests" muid="B7B74C998972D2EE" description="The tests we wish to run on the civic policies in question, run in&#xA;order.  AND operation, all must pass, first to fail stops tests." Deprecated="False" filter="0" group="General">
                                                    <TunableVariant type="None" class="TunableVariant" default="voting_open" muid="E7805E0ED4A523FD" description="Individual tests run on Civic Policy Provider." Deprecated="False" filter="0" group="General">
                                                        <TunableTuple name="available" class="TunableBaseCivicPolicyTestAvailable" display="Available" muid="45666354D0A296DF" description="Test available policies. Available policies include everything tuned." Deprecated="False" filter="0" group="General">
                                                            <TunableTuple name="white_black_list" class="TunableWhiteBlackList" display="White Black List" muid="5C3FEEFAC43111E0" description="The civic policies must pass the whitelist and blacklist&#xA;to pass the test." Deprecated="False" filter="0" group="General">
                                                                <TunableVariant type="None" name="blacklist" class="OptionalTunable" default="nothing" display="Blacklist" muid="19C929D83799F21B" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is not in the blacklist. If no blacklist is&#xA;specified, no items are disallowed." Deprecated="False" filter="0" group="General">
                                                                    <Tunable name="nothing" class="TunableExistance" display="Nothing" muid="FF13B3981D54ED73" />
                                                                    <TunableTuple name="specify" class="TunableBlacklist" display="Specify" muid="B451300008928950" description="A tunable blacklist." Deprecated="False" filter="0" group="General">
                                                                        <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="8913873F7F54DBA0" description="Blacklisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                            <Tunable type="snippet" class="TunableReference" muid="FC63C5E9CEEC9578" description="Allowed and disallowed civic policies." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="BaseCivicPolicy" />
                                                                        </TunableList>
                                                                        <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="9E32BE9704001605" description="Tunable option for how many items must be in the blacklist&#xA;for the blacklist to fail when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                            <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="9090E8B734A045" />
                                                                            <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="1D5E6B007345A719" description="When testing a collection of items, the number of items in&#xA;that collection that are in the blacklist must pass this&#xA;threshold test for the blacklist to disallow them all." Deprecated="False" filter="0" group="General">
                                                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="29B34E320B3CEDA0" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                                <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="6863C4ABDED18DC2" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                            </TunableTuple>
                                                                        </TunableVariant>
                                                                    </TunableTuple>
                                                                </TunableVariant>
                                                                <TunableVariant type="None" name="whitelist" class="OptionalTunable" default="everything" display="Whitelist" muid="11373349947E1830" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is in the whitelist. If no whitelist is&#xA;specified, all items are allowed." Deprecated="False" filter="0" group="General">
                                                                    <Tunable name="everything" class="TunableExistance" display="Everything" muid="510A1851E16CA7DD" />
                                                                    <TunableTuple name="specify" class="TunableWhitelist" display="Specify" muid="6D40398E48710104" description="A tunable whitelist." Deprecated="False" filter="0" group="General">
                                                                        <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="F10AD4E7FA53439B" description="Tunable option for how many items must be in the whitelist&#xA;for the whitelist to pass when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                            <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="FDC3C0C03EF890C1" />
                                                                            <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="D8593CD34430F144" description="When testing a collection of items, the number of items in&#xA;that collection that are in the whitelist must pass this&#xA;threshold test for the whitelist to allow them all." Deprecated="False" filter="0" group="General">
                                                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="76354B8F11093552" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                                <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="A1F26EE6ABFAEAF9" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                            </TunableTuple>
                                                                        </TunableVariant>
                                                                        <TunableList name="whitelist" class="TunableSet" display="Whitelist" muid="9B52802DD4DC512F" description="Whitelisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                            <Tunable type="snippet" class="TunableReference" muid="1E416DC53C5FEE05" description="Allowed and disallowed civic policies." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="BaseCivicPolicy" />
                                                                        </TunableList>
                                                                    </TunableTuple>
                                                                </TunableVariant>
                                                            </TunableTuple>
                                                        </TunableTuple>
                                                        <TunableTuple name="balloted" class="TunableBaseCivicPolicyTestBalloted" display="Balloted" muid="B15E9337B948685A" description="Test balloted policies.  Policies being considered by the next/current vote are&#xA;balloted." Deprecated="False" filter="0" group="General">
                                                            <TunableTuple name="white_black_list" class="TunableWhiteBlackList" display="White Black List" muid="1A72825621CD8A7E" description="The civic policies must pass the whitelist and blacklist&#xA;to pass the test." Deprecated="False" filter="0" group="General">
                                                                <TunableVariant type="None" name="blacklist" class="OptionalTunable" default="nothing" display="Blacklist" muid="16A1AFEF0E5F27C5" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is not in the blacklist. If no blacklist is&#xA;specified, no items are disallowed." Deprecated="False" filter="0" group="General">
                                                                    <Tunable name="nothing" class="TunableExistance" display="Nothing" muid="DD5671EE8CEC49A8" />
                                                                    <TunableTuple name="specify" class="TunableBlacklist" display="Specify" muid="43B1C35546DE292A" description="A tunable blacklist." Deprecated="False" filter="0" group="General">
                                                                        <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="FA4B5FEFEEFE4993" description="Blacklisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                            <Tunable type="snippet" class="TunableReference" muid="7930095C3B0065BE" description="Allowed and disallowed civic policies." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="BaseCivicPolicy" />
                                                                        </TunableList>
                                                                        <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="28877000E7CB2476" description="Tunable option for how many items must be in the blacklist&#xA;for the blacklist to fail when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                            <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="179C6E48D3D917C" />
                                                                            <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="2C19DBE2680E7D65" description="When testing a collection of items, the number of items in&#xA;that collection that are in the blacklist must pass this&#xA;threshold test for the blacklist to disallow them all." Deprecated="False" filter="0" group="General">
                                                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="500E312139B04D17" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                                <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="A4D39150B435177D" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                            </TunableTuple>
                                                                        </TunableVariant>
                                                                    </TunableTuple>
                                                                </TunableVariant>
                                                                <TunableVariant type="None" name="whitelist" class="OptionalTunable" default="everything" display="Whitelist" muid="83AE5C2C2C9E2D1E" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is in the whitelist. If no whitelist is&#xA;specified, all items are allowed." Deprecated="False" filter="0" group="General">
                                                                    <Tunable name="everything" class="TunableExistance" display="Everything" muid="9135A5624B8885B1" />
                                                                    <TunableTuple name="specify" class="TunableWhitelist" display="Specify" muid="D1A0F94C0562F92C" description="A tunable whitelist." Deprecated="False" filter="0" group="General">
                                                                        <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="E8411BEF15B93FED" description="Tunable option for how many items must be in the whitelist&#xA;for the whitelist to pass when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                            <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="BA1DCFCA5CFEAB5E" />
                                                                            <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="6435BC494657B5" description="When testing a collection of items, the number of items in&#xA;that collection that are in the whitelist must pass this&#xA;threshold test for the whitelist to allow them all." Deprecated="False" filter="0" group="General">
                                                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="74142331E5460418" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                                <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="4BED57F268700088" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                            </TunableTuple>
                                                                        </TunableVariant>
                                                                        <TunableList name="whitelist" class="TunableSet" display="Whitelist" muid="8E95D9F22E064F9B" description="Whitelisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                            <Tunable type="snippet" class="TunableReference" muid="A94B15C56250DCF4" description="Allowed and disallowed civic policies." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="BaseCivicPolicy" />
                                                                        </TunableList>
                                                                    </TunableTuple>
                                                                </TunableVariant>
                                                            </TunableTuple>
                                                        </TunableTuple>
                                                        <TunableTuple name="dormant" class="TunableBaseCivicPolicyTestDormant" display="Dormant" muid="88343257B31859B5" description="Test dormant policies. Dormant policies are not enacted and not balloted." Deprecated="False" filter="0" group="General">
                                                            <TunableTuple name="white_black_list" class="TunableWhiteBlackList" display="White Black List" muid="4E47E6A3C910BF2C" description="The civic policies must pass the whitelist and blacklist&#xA;to pass the test." Deprecated="False" filter="0" group="General">
                                                                <TunableVariant type="None" name="blacklist" class="OptionalTunable" default="nothing" display="Blacklist" muid="A72D6BAB61824F3D" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is not in the blacklist. If no blacklist is&#xA;specified, no items are disallowed." Deprecated="False" filter="0" group="General">
                                                                    <Tunable name="nothing" class="TunableExistance" display="Nothing" muid="678EF39ABABAE3E6" />
                                                                    <TunableTuple name="specify" class="TunableBlacklist" display="Specify" muid="3E2D7E686F10B5FE" description="A tunable blacklist." Deprecated="False" filter="0" group="General">
                                                                        <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="3AA17D1C06C5FD3F" description="Blacklisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                            <Tunable type="snippet" class="TunableReference" muid="5A00DCF73A7F2E4D" description="Allowed and disallowed civic policies." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="BaseCivicPolicy" />
                                                                        </TunableList>
                                                                        <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="A314E63063A4A3E6" description="Tunable option for how many items must be in the blacklist&#xA;for the blacklist to fail when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                            <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="FDB06BC25309A1A4" />
                                                                            <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="90391C2797B0272F" description="When testing a collection of items, the number of items in&#xA;that collection that are in the blacklist must pass this&#xA;threshold test for the blacklist to disallow them all." Deprecated="False" filter="0" group="General">
                                                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="8D76304F613EB285" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                                <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="EC5B26113CB796A6" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                            </TunableTuple>
                                                                        </TunableVariant>
                                                                    </TunableTuple>
                                                                </TunableVariant>
                                                                <TunableVariant type="None" name="whitelist" class="OptionalTunable" default="everything" display="Whitelist" muid="4285659300EB9034" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is in the whitelist. If no whitelist is&#xA;specified, all items are allowed." Deprecated="False" filter="0" group="General">
                                                                    <Tunable name="everything" class="TunableExistance" display="Everything" muid="C586B994ADF85599" />
                                                                    <TunableTuple name="specify" class="TunableWhitelist" display="Specify" muid="78FDC064B2878BE6" description="A tunable whitelist." Deprecated="False" filter="0" group="General">
                                                                        <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="1D48CE03E3DF0682" description="Tunable option for how many items must be in the whitelist&#xA;for the whitelist to pass when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                            <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="97BFD634419EDE19" />
                                                                            <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="D6660CFFB3AC86CB" description="When testing a collection of items, the number of items in&#xA;that collection that are in the whitelist must pass this&#xA;threshold test for the whitelist to allow them all." Deprecated="False" filter="0" group="General">
                                                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="F82AD3D3EB4A9BB" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                                <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="5D769BC22F397E21" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                            </TunableTuple>
                                                                        </TunableVariant>
                                                                        <TunableList name="whitelist" class="TunableSet" display="Whitelist" muid="FC8EBEB3544EA489" description="Whitelisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                            <Tunable type="snippet" class="TunableReference" muid="12FEDCABD3CD0BC3" description="Allowed and disallowed civic policies." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="BaseCivicPolicy" />
                                                                        </TunableList>
                                                                    </TunableTuple>
                                                                </TunableVariant>
                                                            </TunableTuple>
                                                        </TunableTuple>
                                                        <TunableTuple name="enacted" class="TunableBaseCivicPolicyTestEnacted" display="Enacted" muid="CED18364EA588127" description="Test enacted policies." Deprecated="False" filter="0" group="General">
                                                            <TunableTuple name="white_black_list" class="TunableWhiteBlackList" display="White Black List" muid="47AA70F67BA3EAF9" description="The civic policies must pass the whitelist and blacklist&#xA;to pass the test." Deprecated="False" filter="0" group="General">
                                                                <TunableVariant type="None" name="blacklist" class="OptionalTunable" default="nothing" display="Blacklist" muid="EFFA0FAAF51A851F" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is not in the blacklist. If no blacklist is&#xA;specified, no items are disallowed." Deprecated="False" filter="0" group="General">
                                                                    <Tunable name="nothing" class="TunableExistance" display="Nothing" muid="357DE2C28D28BF8" />
                                                                    <TunableTuple name="specify" class="TunableBlacklist" display="Specify" muid="1B9C75D1BFECF52B" description="A tunable blacklist." Deprecated="False" filter="0" group="General">
                                                                        <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="11B2022D54BFC0FD" description="Blacklisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                            <Tunable type="snippet" class="TunableReference" muid="3D165F7BA41123A9" description="Allowed and disallowed civic policies." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="BaseCivicPolicy" />
                                                                        </TunableList>
                                                                        <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="B78E5F32690D1366" description="Tunable option for how many items must be in the blacklist&#xA;for the blacklist to fail when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                            <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="64DAE3DAAC07BE6" />
                                                                            <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="EBDFAAB51125BD29" description="When testing a collection of items, the number of items in&#xA;that collection that are in the blacklist must pass this&#xA;threshold test for the blacklist to disallow them all." Deprecated="False" filter="0" group="General">
                                                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="7C7CE214CB8164F9" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                                <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="2C5AAB0040171835" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                            </TunableTuple>
                                                                        </TunableVariant>
                                                                    </TunableTuple>
                                                                </TunableVariant>
                                                                <TunableVariant type="None" name="whitelist" class="OptionalTunable" default="everything" display="Whitelist" muid="38BD33D09313EC4F" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is in the whitelist. If no whitelist is&#xA;specified, all items are allowed." Deprecated="False" filter="0" group="General">
                                                                    <Tunable name="everything" class="TunableExistance" display="Everything" muid="AED430BFC62B815A" />
                                                                    <TunableTuple name="specify" class="TunableWhitelist" display="Specify" muid="3EB04F6A245C0AE1" description="A tunable whitelist." Deprecated="False" filter="0" group="General">
                                                                        <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="CF285B39975361AE" description="Tunable option for how many items must be in the whitelist&#xA;for the whitelist to pass when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                            <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="94797D414432D30A" />
                                                                            <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="6E8AA3836F77EE34" description="When testing a collection of items, the number of items in&#xA;that collection that are in the whitelist must pass this&#xA;threshold test for the whitelist to allow them all." Deprecated="False" filter="0" group="General">
                                                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="F75C6DCFBB831FA6" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                                <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="80C15BBD71812B5A" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                            </TunableTuple>
                                                                        </TunableVariant>
                                                                        <TunableList name="whitelist" class="TunableSet" display="Whitelist" muid="B9FCD96ED4B1C6F9" description="Whitelisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                            <Tunable type="snippet" class="TunableReference" muid="6A5A2FA8D30DE272" description="Allowed and disallowed civic policies." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="BaseCivicPolicy" />
                                                                        </TunableList>
                                                                    </TunableTuple>
                                                                </TunableVariant>
                                                            </TunableTuple>
                                                        </TunableTuple>
                                                        <TunableTuple name="repealable" class="TunableBaseCivicPolicyTestRepealable" display="Repealable" muid="BE34E1C5034A114D" description="Test up for repeal policies. Up for Repeal policies have been specifically marked&#xA;as such and will (if the vote/petition threshold is reached) be repealed&#xA;as part of closing the next vote." Deprecated="False" filter="0" group="General">
                                                            <TunableTuple name="white_black_list" class="TunableWhiteBlackList" display="White Black List" muid="941C515A25FA0DD0" description="The civic policies must pass the whitelist and blacklist&#xA;to pass the test." Deprecated="False" filter="0" group="General">
                                                                <TunableVariant type="None" name="blacklist" class="OptionalTunable" default="nothing" display="Blacklist" muid="DE0998545FAE8ECC" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is not in the blacklist. If no blacklist is&#xA;specified, no items are disallowed." Deprecated="False" filter="0" group="General">
                                                                    <Tunable name="nothing" class="TunableExistance" display="Nothing" muid="F53BA6F13F2F8B52" />
                                                                    <TunableTuple name="specify" class="TunableBlacklist" display="Specify" muid="A63AC5E7B1590140" description="A tunable blacklist." Deprecated="False" filter="0" group="General">
                                                                        <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="B11801E9B2B48A74" description="Blacklisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                            <Tunable type="snippet" class="TunableReference" muid="D301B71252A21D2E" description="Allowed and disallowed civic policies." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="BaseCivicPolicy" />
                                                                        </TunableList>
                                                                        <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="A92A77143B314C2D" description="Tunable option for how many items must be in the blacklist&#xA;for the blacklist to fail when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                            <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="852C0151C240B367" />
                                                                            <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="1715CF47ECA8F026" description="When testing a collection of items, the number of items in&#xA;that collection that are in the blacklist must pass this&#xA;threshold test for the blacklist to disallow them all." Deprecated="False" filter="0" group="General">
                                                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="AA0F0931211CDACE" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                                <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="32943E24943838AD" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                            </TunableTuple>
                                                                        </TunableVariant>
                                                                    </TunableTuple>
                                                                </TunableVariant>
                                                                <TunableVariant type="None" name="whitelist" class="OptionalTunable" default="everything" display="Whitelist" muid="39FADECEEDB8462" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is in the whitelist. If no whitelist is&#xA;specified, all items are allowed." Deprecated="False" filter="0" group="General">
                                                                    <Tunable name="everything" class="TunableExistance" display="Everything" muid="C8F3A24A4B5A579F" />
                                                                    <TunableTuple name="specify" class="TunableWhitelist" display="Specify" muid="41754F0C2874E9BB" description="A tunable whitelist." Deprecated="False" filter="0" group="General">
                                                                        <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="ABE95823890A2BCA" description="Tunable option for how many items must be in the whitelist&#xA;for the whitelist to pass when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                            <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="8345B184F81C2B63" />
                                                                            <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="AD98FA8487E7AF56" description="When testing a collection of items, the number of items in&#xA;that collection that are in the whitelist must pass this&#xA;threshold test for the whitelist to allow them all." Deprecated="False" filter="0" group="General">
                                                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="C9B5804768F809FD" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                                <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="E4DF936E6F63A7A9" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                            </TunableTuple>
                                                                        </TunableVariant>
                                                                        <TunableList name="whitelist" class="TunableSet" display="Whitelist" muid="11C5A5489B14422A" description="Whitelisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                            <Tunable type="snippet" class="TunableReference" muid="EC5FE2815E7BCFD2" description="Allowed and disallowed civic policies." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="BaseCivicPolicy" />
                                                                        </TunableList>
                                                                    </TunableTuple>
                                                                </TunableVariant>
                                                            </TunableTuple>
                                                        </TunableTuple>
                                                        <TunableTuple name="voting_open" class="TunableBaseCivicPolicyTestVotingOpen" display="Voting Open" muid="2119A6707574C49A" description="If checked, will verify that voting is currently active." Deprecated="False" filter="0" group="General">
                                                            <Tunable type="bool" name="negate" class="Tunable" default="False" display="Negate" muid="32B0634CE935EF82" description="If checked then this test will return True when not active." Deprecated="False" filter="0" group="General" />
                                                        </TunableTuple>
                                                        <TunableTuple name="voting_time_until_change" class="TunableBaseCivicPolicyTestVotingTimeUntilChange" display="Voting Time Until Change" muid="BCD2EABFDBF9E52" description="If checked, will check the time remaining before the next voting open status change." Deprecated="False" filter="0" group="General">
                                                            <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="8FAEBF98C0FBDBEC" description="The amount of time relative to the next voting state change to test." Deprecated="False" filter="0" group="General">
                                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="A5F6C5990E7E2B9B" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                <TunableTuple name="value" class="TunableTimeSpan" display="Value" muid="3A6058544979E630" description="Duration before the next change." Deprecated="False" filter="0" group="General">
                                                                    <Tunable type="int" name="days" class="TunableRange" default="0" display="Days" muid="1918452563AC0F8E" min="0" max="None" description="Number of days" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                    <Tunable type="int" name="hours" class="TunableRange" default="1" display="Hours" muid="13E70D0F0F4608C4" min="0" max="23" description="Number of hours" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                    <Tunable type="int" name="minutes" class="TunableRange" default="0" display="Minutes" muid="6F0738D319CE429E" min="0" max="59" description="Number of minutes" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                </TunableTuple>
                                                            </TunableTuple>
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                </TunableList>
                                                <TunableVariant type="None" name="street" class="TunableVariant" default="literal" display="Street" muid="28F302DE1C7D9B72" description="Select what street to test." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="street" name="literal" class="TunableReference" display="Literal" muid="5C2FED7230AD8BAB" description="Identify a specific Street." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                    <TunableTuple name="via_street_participant" class="TunableStreetParticipant" display="Via Street Participant" muid="1FD323AC76941F5A" description="Get the street participant." Deprecated="False" filter="0" group="General" />
                                                    <TunableVariant type="None" name="via_zone_source" class="TunableVariant" default="use_current_zone" display="Via Zone Source" muid="F00B3B940EA0BA52" description="Select the street to use by specifying a Zone Source." Deprecated="False" filter="0" group="General">
                                                        <TunableTuple name="use_current_zone" class="TunableActiveZone" display="Use Current Zone" muid="8EBC6CAB36BD1E24" description="Get the active zone." Deprecated="False" filter="0" group="General" />
                                                        <TunableTuple name="use_participant_home_zone" class="TunableParticipantHomeZone" display="Use Participant Home Zone" muid="2ACA1A60806F2FA8" description="Get a participant's home zone. Can be None if they don't have one." Deprecated="False" filter="0" group="General">
                                                            <TunableEnum type="ParticipantTypeSingleSim" name="participant" class="TunableEnumEntry" default="Actor" display="Participant" muid="AE9EF248F22B8D86" static_entries="interactions.ParticipantTypeSingleSim" description="Test against the participant's home zone. Townies' home zone will&#xA;be None." Deprecated="False" filter="0" group="General" />
                                                        </TunableTuple>
                                                        <TunableTuple name="use_pick_info" class="TunablePickInfoZone" display="Use Pick Info" muid="B426687A2CF3389A" description="Get the zone of the lot the user clicked on." Deprecated="False" filter="0" group="General" />
                                                        <TunableTuple name="use_picked_zone_ids" class="TunablePickedZoneIds" display="Use Picked Zone Ids" muid="7E19989BCBDD59C6" description="Get the zone from the interaction's picked_zone_ids participant. Usually&#xA;comes from a picker." Deprecated="False" filter="0" group="General" />
                                                    </TunableVariant>
                                                </TunableVariant>
                                            </TunableTuple>
                                        </TunableVariant>
                                    </TunableList>
                                </TunableList>
                                <Tunable type="int" name="weight" class="TunableRange" default="1" display="Weight" muid="D36D2EF560FCBC29" min="1" max="None" description="Weight to use." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                            </TunableTuple>
                        </TunableList>
                    </TunableTuple>
                </TunableList>
            </TunableTuple>
        </Class>
    </Module>

    <VersionHistory>
        <ActionList>
            <Action type="kRemove" old_muid="BF571FC82272E11C" />
        </ActionList>
    </VersionHistory>
</TuningRoot>