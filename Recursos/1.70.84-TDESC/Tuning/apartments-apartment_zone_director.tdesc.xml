<?xml version="1.0" encoding="iso-8859-1"?>

<TuningRoot>
    <Module name="apartments.apartment_zone_director" muid="DD01388C4FE4CCDF">
        <Class name="ApartmentZoneDirectorMixin" muid="A93835E8D768B58">
            <TunableTuple name="COMMON_AREA_CLEANUP" class="TunableTuple" display="Common Area Cleanup" muid="B669299C526D19B" description="Tuning to clear out objects from the common area to prevent trash&#xA;and what not from accumulating." Deprecated="False" filter="0" group="General">
                <TunableTuple name="actions" class="TunableModifyAllLotItems" display="Actions" muid="48202A8B11193920" description="Modifications to make to objects on the common area of apartments." Deprecated="False" filter="0" group="General">
                    <TunableList name="modifications" class="TunableList" display="Modifications" muid="1C50F7F65E896668" description="A list of where the elements define how to modify objects on the&#xA;lot. Each entry is a triplet of an object modification action&#xA;(currently either destroy the object or set its state), a list of&#xA;tests to run on the object to determine if we should actually apply&#xA;the modification, and a priority in case some modifications should&#xA;take precedence over other ones when both of their tests pass.&#xA;&#xA;EX: test list: object's dirtiness state != dirtiness clean&#xA;action: set state to Dirtiness_clean&#xA;&#xA;So dirty objects will become clean" Deprecated="False" filter="0" group="General">
                        <TunableTuple class="TunableTuple" muid="9FC8EC37D75815AB" Deprecated="False" filter="0" group="General">
                            <TunableVariant type="None" name="action" class="TunableVariant" default="none" display="Action" muid="B10CDDBD2ABD8502" Deprecated="False" filter="0" group="General">
                                <TunableTuple name="cleanup_vehicle" class="TunableTuple" display="Cleanup Vehicle" muid="BA76DFF42C13751B" description="Cleanup vehicles that are left around." Deprecated="False" filter="0" group="General" />
                                <TunableTuple name="deliver_bills" class="TunableTuple" display="Deliver Bills" muid="119F85C688572DD1" Deprecated="False" filter="0" group="General">
                                    <TunableTuple name="action_value" class="TunableDeliverBillFakePerform" display="Action Value" muid="83B06EC13F40C9C4" description="Let the bills manager know that a bill has been delivered and&#xA;trigger appropriate bill-specific functionality." Deprecated="False" filter="0" group="General" />
                                </TunableTuple>
                                <TunableTuple name="destroy_object" class="TunableTuple" display="Destroy Object" muid="909BCBFAE33857DA" Deprecated="False" filter="0" group="General" />
                                <TunableTuple name="inventory_transfer" class="TunableTuple" display="Inventory Transfer" muid="DE66EF3E8086329F" Deprecated="False" filter="0" group="General">
                                    <TunableTuple name="action_value" class="TunableInventoryTransferFakePerform" display="Action Value" muid="D03ED81E8B66D9A5" description="Transfer all objects with a specified inventory type from the&#xA;specified inventory to the inventory of a specified participant." Deprecated="False" filter="0" group="General">
                                        <TunableEnum type="InventoryType" name="recipient" class="TunableEnumEntry" default="UNDEFINED" display="Recipient" muid="1F923A2F263972A5" dynamic_entries="objects-components-inventory_enums.InventoryType._elements" static_entries="objects-components-inventory_enums.InventoryType" description="The inventory into which the objects will be transferred." Deprecated="False" filter="0" group="General" />
                                        <TunableEnum type="InventoryType" name="source" class="TunableEnumEntry" default="UNDEFINED" display="Source" muid="427AA523B771FDB1" dynamic_entries="objects-components-inventory_enums.InventoryType._elements" static_entries="objects-components-inventory_enums.InventoryType" description="The inventory from which the objects will be transferred." Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                </TunableTuple>
                                <TunableTuple name="loot" class="TunableTuple" display="Loot" muid="999D20256F445B" description="Apply loots to the object." Deprecated="False" filter="0" group="General">
                                    <TunableList name="loot_actions" class="TunableSet" display="Loot Actions" muid="543811E50FF415DA" description="Loot(s) to apply." Deprecated="False" filter="0" group="General" unique_entries="true">
                                        <Tunable type="action" class="TunableReference" muid="DE3B81EA533FEE" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                    </TunableList>
                                </TunableTuple>
                                <Tunable name="none" class="TunableExistance" display="None" muid="92FFC4B17889FB2B" />
                                <TunableTuple name="set_on_fire" class="TunableTuple" display="Set On Fire" muid="3EF10BB0EAFF0CAC" Deprecated="False" filter="0" group="General" />
                                <TunableTuple name="set_state" class="TunableTuple" display="Set State" muid="51EF2074AFD03B2E" Deprecated="False" filter="0" group="General">
                                    <Tunable type="object_state" name="action_value" class="TunableReference" display="Action Value" muid="D6698C70D4FC0F49" description="An object state to set the object to" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="ObjectStateValue" />
                                </TunableTuple>
                            </TunableVariant>
                            <Tunable type="float" name="chance" class="TunablePercent" default="100" display="Chance" muid="C72817EDA0A184B7" min="1" max="100" description="Chance this modification will occur." Deprecated="False" filter="0" group="General" />
                            <TunableList name="global_tests" class="TunableObjectModifyGlobalTestList" display="Global Tests" muid="C02797DFCA6E733B" description="Non object-related tests that gate this modification from occurring.  Use this for any global&#xA;tests that don't require the object, such as zone/location/time-elapsed tests.  These tests&#xA;will run only ONCE for this action, unlike 'Tests', which runs PER OBJECT. " Deprecated="False" filter="0" group="General">
                                <TunableVariant type="None" class="TunableObjectModifyGlobalTestVariant" default="none" muid="337D751F4DA620F2" Deprecated="False" filter="0" group="General">
                                    <TunableTuple name="elapsed_time" class="TunableTimeElapsedZoneTest" display="Elapsed Time" muid="A4B32F4FE1FB4B97" description="Test to make sure enough time has passed since the zone was last saved." Deprecated="False" filter="0" group="General">
                                        <Tunable type="float" name="minutes_passed" class="TunableSimMinute" default="720" display="Minutes Passed" muid="2E5D2FB1CC015AB5" min="1" max="None" description="This test will pass when the minutes passed is greater than the&#xA;number minutes since last loading into zone." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                    <Tunable name="none" class="TunableExistance" display="None" muid="C1223BD9DA071D3" />
                                    <TunableTuple name="season" class="TunableSeasonTest" display="Season" muid="38846E80B1B48D2F" description="SeasonTest will test if the current simulation time falls within the&#xA;specified test conditions." Deprecated="False" filter="0" group="General">
                                        <Tunable type="bool" name="requires_seasons_pack" class="Tunable" default="True" display="Requires Seasons Pack" muid="CDD34655540A8D1" description="If checked, this test will require that the Seasons pack be &#xA;installed in order for the seasons test to pass.  If unchecked, &#xA;this test will automatically pass." Deprecated="False" filter="0" group="General" />
                                        <TunableList name="seasons" class="TunableEnumSet" display="Seasons" muid="2FBC497C52088C31" min="1" description="Season(s) that we must be in to pass the test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                            <TunableEnum type="SeasonType" class="TunableEnumEntry" default="SUMMER" muid="46B399530F595AF2" static_entries="seasons-seasons_enums.SeasonType" Deprecated="False" filter="0" group="General" />
                                        </TunableList>
                                        <TunableVariant type="None" name="time_of_season" class="OptionalTunable" default="disabled" display="Time Of Season" muid="9323A9B6A157DB5D" description="Portion(s) of season(s) that we must be in to pass the test." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="B46EB1570E45BFBF" />
                                            <TunableList name="enabled" class="TunableEnumSet" display="Enabled" muid="6BB79032580AA0" min="1" description="Portion(s) of season(s) that we must be in to pass the test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                <TunableEnum type="SeasonSegment" class="TunableEnumEntry" default="EARLY" muid="A991DCB3754A094C" static_entries="seasons-seasons_enums.SeasonSegment" Deprecated="False" filter="0" group="General" />
                                            </TunableList>
                                        </TunableVariant>
                                    </TunableTuple>
                                    <TunableTuple name="zone" class="TunableZoneTest" display="Zone" muid="D9361E46B3243582" description="A tunable factory that tests properties of a particular zone." Deprecated="False" filter="0" group="General">
                                        <TunableVariant type="None" name="zone_source" class="TunableVariant" default="use_current_zone" display="Zone Source" muid="78B769714540FE30" description="Which zone we want to test." Deprecated="False" filter="0" group="General">
                                            <TunableTuple name="use_current_zone" class="TunableActiveZone" display="Use Current Zone" muid="6C30927D44CFBC25" description="Get the active zone." Deprecated="False" filter="0" group="General" />
                                            <TunableTuple name="use_participant_home_zone" class="TunableParticipantHomeZone" display="Use Participant Home Zone" muid="3C19947E22C72F30" description="Get a participant's home zone. Can be None if they don't have one." Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="ParticipantTypeSingleSim" name="participant" class="TunableEnumEntry" default="Actor" display="Participant" muid="BF2BC2A8C5E9B0CB" static_entries="interactions.ParticipantTypeSingleSim" description="Test against the participant's home zone. Townies' home zone will&#xA;be None." Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <TunableTuple name="use_pick_info" class="TunablePickInfoZone" display="Use Pick Info" muid="EC3D129E83E99A89" description="Get the zone of the lot the user clicked on." Deprecated="False" filter="0" group="General" />
                                            <TunableTuple name="use_picked_zone_ids" class="TunablePickedZoneIds" display="Use Picked Zone Ids" muid="C2873CB3963E0C99" description="Get the zone from the interaction's picked_zone_ids participant. Usually&#xA;comes from a picker." Deprecated="False" filter="0" group="General" />
                                        </TunableVariant>
                                        <TunableTuple name="zone_tests" class="TunableTuple" display="Zone Tests" muid="FD17ADFD42B0AC53" description="The tests we wish to run on the zone in question." Deprecated="False" filter="0" group="General">
                                            <TunableVariant type="None" name="business_tests" class="OptionalTunable" default="Don't_Test" display="Business Tests" muid="58B28AE0186EC265" description="If enabled, test if the specified zone is a business or not." Deprecated="False" filter="0" group="General">
                                                <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="B47EA92F4B91D733" />
                                                <TunableVariant type="None" name="enabled" class="TunableVariant" default="is_business" display="Enabled" muid="5E45C647F5992948" description="Test if the zone is a business, an open business, or a&#xA;closed business." Deprecated="False" filter="0" group="General">
                                                    <TunableTuple name="is_business" class="Tunable_IsBusinessTest" display="Is Business" muid="4449933599C5B08E" description="Test if the zone specified by the zone id is a business or not." Deprecated="False" filter="0" group="General" />
                                                    <TunableTuple name="is_business_open" class="Tunable_IsBusinessOpenTest" display="Is Business Open" muid="616DDB651F332F2" description="Test if the zone specified by the zone id is an open business." Deprecated="False" filter="0" group="General" />
                                                </TunableVariant>
                                            </TunableVariant>
                                            <TunableVariant type="None" name="is_apartment" class="OptionalTunable" default="Don't_Test" display="Is Apartment" muid="81C741364E9B7DC0" description="If checked, test will pass if the zone is an apartment. If&#xA;unchecked, test passes if the zone is NOT an apartment. Useful&#xA; in aspiration tuning, to discriminate between property&#xA;types in tests of lot value. Allows &quot;Own a House worth X&quot; and&#xA;&quot;Own an Apartment worth X&quot;" Deprecated="False" filter="0" group="General">
                                                <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="440AC7C14D3499FF" />
                                                <TunableTuple name="Is_or_is_not_apartment_zone" class="TunableTuple" display="Is Or Is Not Apartment Zone" muid="76B129A22FC1A3CE" description="Test whether the zone is an apartment or not." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="bool" name="consider_penthouse_an_apartment" class="Tunable" default="True" display="Consider Penthouse An Apartment" muid="BFDB08F8FBD5E5C9" description="If enabled, we will consider penthouses to be&#xA;apartments when testing them against the apartment&#xA;check." Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="bool" name="is_apartment" class="Tunable" default="True" display="Is Apartment" muid="7F4D4B30E26AF98E" description="If checked, test will pass if the zone is an apartment.&#xA;If unchecked, test passes if the zone is NOT an&#xA;apartment." Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                            </TunableVariant>
                                            <TunableVariant type="None" name="is_penthouse" class="OptionalTunable" default="disabled" display="Is Penthouse" muid="4F8E310E0EEB7772" description="If enabled, test whether or not the current zone is a penthouse." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="4D8F550B3DB66D3F" />
                                                <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="226845F04CEBF9B9" description="If checked, the zone must be a penthouse. If unchecked, the&#xA;zone cannot be a penthouse." Deprecated="False" filter="0" group="General" />
                                            </TunableVariant>
                                            <Tunable type="bool" name="use_source_venue" class="Tunable" default="False" display="Use Source Venue" muid="B6EE2F6C53AFFB0D" description="If enabled, the test will test the source venue instead of the active&#xA;venue.  For example, the Community Lot instead of the active Marketplace.&#xA;Testing the active venue is the default." Deprecated="False" filter="0" group="General" />
                                            <TunableVariant type="None" name="venue_tier" class="OptionalTunable" default="disabled" display="Venue Tier" muid="C46BDFFF0B23108F" description="If checked, will verify that the zone's venue is at the tuned &#xA;tier. If &quot;no valid tier&quot; is selected, this test will be True&#xA;if either the current venue doesn't have tiers or if it does but&#xA;it doesn't currently meet any of their requirements." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="2375298CF859B978" />
                                                <TunableVariant type="None" name="enabled" class="TunableVariant" default="none" display="Enabled" muid="24BB8B2313A14C42" description="                    " Deprecated="False" filter="0" group="General">
                                                    <Tunable name="no_valid_tier" class="TunableExistance" display="No Valid Tier" muid="E5069CC55612A634" />
                                                    <Tunable name="none" class="TunableExistance" display="None" muid="DAAD9BF659576B13" />
                                                    <Tunable type="int" name="tier_number" class="TunableRange" default="0" display="Tier Number" muid="6D157BB056D4CCC5" min="0" max="None" description="The index of the tier to test. This test will return&#xA;true if this tier is active and false otherwise. This&#xA;should be the index of the tier in the tier list and not&#xA;any player-facing index. For instance, if a tier list&#xA;had a single tier, that tier would be 0, and if a second&#xA;tier were added, that second tier would be 1." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                </TunableVariant>
                                            </TunableVariant>
                                            <TunableVariant type="None" name="venue_type" class="OptionalTunable" default="Don't_Test" display="Venue Type" muid="77EE38A679C5581A" description="If checked, will verify the zone's venue type is allowed or&#xA;disallowed." Deprecated="False" filter="0" group="General">
                                                <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="532A5E4622636973" />
                                                <TunableTuple name="enabled" class="TunableWhiteBlackList" display="Enabled" muid="E2F7A3106A7FDB4B" description="The zone's venue type must pass the whitelist and blacklist&#xA;to pass the test." Deprecated="False" filter="0" group="General">
                                                    <TunableVariant type="None" name="blacklist" class="OptionalTunable" default="nothing" display="Blacklist" muid="C42F5D9656B8C6DB" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is not in the blacklist. If no blacklist is&#xA;specified, no items are disallowed." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="nothing" class="TunableExistance" display="Nothing" muid="2A442E8409F647E4" />
                                                        <TunableTuple name="specify" class="TunableBlacklist" display="Specify" muid="2F1748C076C5AD9C" description="A tunable blacklist." Deprecated="False" filter="0" group="General">
                                                            <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="7D7FB741EE099FD1" description="Blacklisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                <Tunable type="venue" class="TunableReference" muid="4B45B63682D6F16" description="Allowed and disallowed venue types." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                            </TunableList>
                                                            <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="765F3BE93114FD89" description="Tunable option for how many items must be in the blacklist&#xA;for the blacklist to fail when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="D99F25648A0E2E99" />
                                                                <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="566F619229B3925B" description="When testing a collection of items, the number of items in&#xA;that collection that are in the blacklist must pass this&#xA;threshold test for the blacklist to disallow them all." Deprecated="False" filter="0" group="General">
                                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="C3FD253FDD6276AF" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                    <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="AB982D831790A404" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                </TunableTuple>
                                                            </TunableVariant>
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                    <TunableVariant type="None" name="whitelist" class="OptionalTunable" default="everything" display="Whitelist" muid="BED963102D3CF8DF" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is in the whitelist. If no whitelist is&#xA;specified, all items are allowed." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="everything" class="TunableExistance" display="Everything" muid="951C4BBEFECA41C3" />
                                                        <TunableTuple name="specify" class="TunableWhitelist" display="Specify" muid="75941EA7B06801B1" description="A tunable whitelist." Deprecated="False" filter="0" group="General">
                                                            <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="69BA794C75C1F201" description="Tunable option for how many items must be in the whitelist&#xA;for the whitelist to pass when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="5FA55A216782D708" />
                                                                <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="92C42DA9B22BEFD" description="When testing a collection of items, the number of items in&#xA;that collection that are in the whitelist must pass this&#xA;threshold test for the whitelist to allow them all." Deprecated="False" filter="0" group="General">
                                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="1C0A4EF6EC332CAC" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                    <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="C12637E590F6A023" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                </TunableTuple>
                                                            </TunableVariant>
                                                            <TunableList name="whitelist" class="TunableSet" display="Whitelist" muid="1B2B4DB02ACDF2B7" description="Whitelisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                <Tunable type="venue" class="TunableReference" muid="AF094FBEA192CC4" description="Allowed and disallowed venue types." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                            </TunableList>
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                </TunableTuple>
                                            </TunableVariant>
                                            <TunableVariant type="None" name="was_owner_household_changed" class="OptionalTunable" default="Don't_Test" display="Was Owner Household Changed" muid="2A40DF0A53443693" description="If enabled, test if the lot owner household for the specified zone &#xA;was changed between when the zone was saved and when it was loaded." Deprecated="False" filter="0" group="General">
                                                <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="EA6297A92F6E0FC" />
                                                <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="5B70B70122A76DF8" description="If checked,  test will pass if the zone's owner household was changed &#xA;between when the zone was saved and when it was loaded. &#xA;If unchecked, test will pass if the zone's owner household was NOT changed &#xA;between when the zone was saved and when it was loaded. " Deprecated="False" filter="0" group="General" />
                                            </TunableVariant>
                                            <TunableVariant type="None" name="world_tests" class="OptionalTunable" default="disabled" display="World Tests" muid="36854CEE7CE06EC" description="If enabled, we test if specified zone is or is not in the specified world(s)" Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="CCDFA20121780754" />
                                                <TunableTuple name="enabled" class="TunableWhiteBlackList" display="Enabled" muid="8B2993430433C643" description="Pass if zone is in one of the worlds in the whitelist,&#xA;or fail if it is any of the worlds in the blacklist." Deprecated="False" filter="0" group="General">
                                                    <TunableVariant type="None" name="blacklist" class="OptionalTunable" default="nothing" display="Blacklist" muid="AD97623F0A5EBBA5" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is not in the blacklist. If no blacklist is&#xA;specified, no items are disallowed." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="nothing" class="TunableExistance" display="Nothing" muid="2C9424A138745224" />
                                                        <TunableTuple name="specify" class="TunableBlacklist" display="Specify" muid="4CFC957C6CD56BB2" description="A tunable blacklist." Deprecated="False" filter="0" group="General">
                                                            <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="A934E714CBE6E649" description="Blacklisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                <Tunable type="worlddescription" class="TunableReference" muid="12D7EBF3CB97A310" description="World to check against." Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                            </TunableList>
                                                            <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="8367B7B1A8D0EC28" description="Tunable option for how many items must be in the blacklist&#xA;for the blacklist to fail when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="8B3FB07142469244" />
                                                                <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="9DE9F4EAFB52A51F" description="When testing a collection of items, the number of items in&#xA;that collection that are in the blacklist must pass this&#xA;threshold test for the blacklist to disallow them all." Deprecated="False" filter="0" group="General">
                                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="AC19080B429C070B" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                    <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="9DA26036F7A64F" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                </TunableTuple>
                                                            </TunableVariant>
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                    <TunableVariant type="None" name="whitelist" class="OptionalTunable" default="everything" display="Whitelist" muid="BB174725B9163038" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is in the whitelist. If no whitelist is&#xA;specified, all items are allowed." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="everything" class="TunableExistance" display="Everything" muid="203A674AC00BA73" />
                                                        <TunableTuple name="specify" class="TunableWhitelist" display="Specify" muid="2CCD5D66E36C028F" description="A tunable whitelist." Deprecated="False" filter="0" group="General">
                                                            <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="60F4849309308F2C" description="Tunable option for how many items must be in the whitelist&#xA;for the whitelist to pass when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="93BC74858D06E351" />
                                                                <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="AB498FB2EFE3055F" description="When testing a collection of items, the number of items in&#xA;that collection that are in the whitelist must pass this&#xA;threshold test for the whitelist to allow them all." Deprecated="False" filter="0" group="General">
                                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="F3D4E234E2B65FBD" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                    <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="5046ED2AE2CAC413" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                </TunableTuple>
                                                            </TunableVariant>
                                                            <TunableList name="whitelist" class="TunableSet" display="Whitelist" muid="BD91C357A8036414" description="Whitelisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                <Tunable type="worlddescription" class="TunableReference" muid="65E9F9CED6994764" description="World to check against." Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                            </TunableList>
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                </TunableTuple>
                                            </TunableVariant>
                                            <TunableVariant type="None" name="zone_modifiers" class="OptionalTunable" default="Don't_Test" display="Zone Modifiers" muid="F1A4E307B2BE515B" description="if enabled, we test the zone modifiers allowed or disallowed." Deprecated="False" filter="0" group="General">
                                                <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="9CB2290EE6D8A6AD" />
                                                <TunableTuple name="enabled" class="TunableWhiteBlackList" display="Enabled" muid="9456CE203FCE2A56" description="The zone's modifiers must pass this whitelist and blacklist for the&#xA;test to pass." Deprecated="False" filter="0" group="General">
                                                    <TunableVariant type="None" name="blacklist" class="OptionalTunable" default="nothing" display="Blacklist" muid="AC5591A6C517AC1D" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is not in the blacklist. If no blacklist is&#xA;specified, no items are disallowed." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="nothing" class="TunableExistance" display="Nothing" muid="1FEA532A0526DD1F" />
                                                        <TunableTuple name="specify" class="TunableBlacklist" display="Specify" muid="6AE10A2521CB34FD" description="A tunable blacklist." Deprecated="False" filter="0" group="General">
                                                            <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="F392DA5820BA0D3D" description="Blacklisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                <Tunable type="zone_modifier" class="TunableReference" muid="ED21069AD7F138F" description="Allowed and disallowed zone modifiers." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                            </TunableList>
                                                            <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="2DB2B8DC8A6497E8" description="Tunable option for how many items must be in the blacklist&#xA;for the blacklist to fail when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="7657507AC91356D0" />
                                                                <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="D4A392BD0E220D1E" description="When testing a collection of items, the number of items in&#xA;that collection that are in the blacklist must pass this&#xA;threshold test for the blacklist to disallow them all." Deprecated="False" filter="0" group="General">
                                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="80948B6234F76D59" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                    <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="B05B41888D37E8A8" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                </TunableTuple>
                                                            </TunableVariant>
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                    <TunableVariant type="None" name="whitelist" class="OptionalTunable" default="everything" display="Whitelist" muid="2256EE05D0F2C33A" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is in the whitelist. If no whitelist is&#xA;specified, all items are allowed." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="everything" class="TunableExistance" display="Everything" muid="15A9C0E268B99008" />
                                                        <TunableTuple name="specify" class="TunableWhitelist" display="Specify" muid="A7305D2822361FE" description="A tunable whitelist." Deprecated="False" filter="0" group="General">
                                                            <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="79099A90817F3ABC" description="Tunable option for how many items must be in the whitelist&#xA;for the whitelist to pass when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="8D00A667C7D28CE6" />
                                                                <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="FB85F0CDDFAD511B" description="When testing a collection of items, the number of items in&#xA;that collection that are in the whitelist must pass this&#xA;threshold test for the whitelist to allow them all." Deprecated="False" filter="0" group="General">
                                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="724D2A146AA13DE3" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                    <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="73877C5191A0974A" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                </TunableTuple>
                                                            </TunableVariant>
                                                            <TunableList name="whitelist" class="TunableSet" display="Whitelist" muid="1E57394909FD6A35" description="Whitelisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                <Tunable type="zone_modifier" class="TunableReference" muid="9B123EC93F0B23CD" description="Allowed and disallowed zone modifiers." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                            </TunableList>
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                </TunableTuple>
                                            </TunableVariant>
                                        </TunableTuple>
                                    </TunableTuple>
                                </TunableVariant>
                            </TunableList>
                            <TunableList name="tests" class="TunableObjectModifyTestSet" display="Tests" muid="A407F158B10A60B0" description="All least one subtest group (AKA one list item) must pass&#xA;within this list before the action associated with this&#xA;tuning will be run." Deprecated="False" filter="0" group="General">
                                <TunableList class="TunableList" muid="5D73FDF91D7D6C1D" description="A list of tests.  All of these must pass for the group to pass." Deprecated="False" filter="0" group="General">
                                    <TunableVariant type="None" class="TunableObjectModifyTestVariant" default="none" muid="8D386F7D04BA03C8" description="A single tunable test." Deprecated="False" filter="0" group="General">
                                        <TunableTuple name="consumable_test" class="TunableConsumableTest" display="Consumable Test" muid="CC37C46B91A33FA1" description="A test that checks information about consumables." Deprecated="False" filter="0" group="General">
                                            <TunableTuple name="bites_left" class="TunableTuple" display="Bites Left" muid="6B046396E04D11CF" description="A check that tests against the number of bites left before the&#xA;subject is completely consumed." Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="Operator" name="operator" class="TunableOperator" default="EQUAL" display="Operator" muid="F2422C884FB47241" static_entries="sims4-math.Operator" description="The operator to use for the comparison." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="int" name="value" class="Tunable" default="1" display="Value" muid="5CC17931F9C9ADF3" description="The number of bites to test against." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <Tunable type="bool" name="is_consumable" class="Tunable" default="True" display="Is Consumable" muid="1900495233CFCB8C" description="If checked, the subject must be a consumable, if unchecked, the&#xA;subject must not be a consumable." Deprecated="False" filter="0" group="General" />
                                            <TunableEnum type="ParticipantType" name="subject" class="TunableEnumEntry" default="Object" display="Subject" muid="CBA066729188D636" static_entries="interactions.ParticipantType" description="The subject of the test. This is the consumable object." Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                        <TunableTuple name="custom_name" class="TunableCustomNameTest" display="Custom Name" muid="7F036F7BCED72796" description="Require or prohibit an object from having a custom&#xA;name or description set." Deprecated="False" filter="0" group="General">
                                            <TunableVariant type="None" name="has_custom_description" class="OptionalTunable" default="disabled" display="Has Custom Description" muid="386D52593FA0F3F0" description="If checked, the subject must have a custom description set. If unchecked, it cannot have a custom description set." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="DE923736E6E2A26B" />
                                                <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="42893FEF44C8AC16" description="If checked, the subject must have a custom description set. If unchecked, it cannot have a custom description set." Deprecated="False" filter="0" group="General" />
                                            </TunableVariant>
                                            <TunableVariant type="None" name="has_custom_name" class="OptionalTunable" default="disabled" display="Has Custom Name" muid="BC468C0FABB9037E" description="If checked, the subject must have a custom name set. If unchecked, it cannot have a custom name set." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="7D0FC3A574378B8E" />
                                                <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="B77C2D06FF49354D" description="If checked, the subject must have a custom name set. If unchecked, it cannot have a custom name set." Deprecated="False" filter="0" group="General" />
                                            </TunableVariant>
                                            <TunableEnum type="ParticipantType" name="participant" class="TunableEnumEntry" default="Object" display="Participant" muid="36CD7D61123C9AF0" static_entries="interactions.ParticipantType" description="The subject who is the object of this test." Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                        <TunableTuple name="elapsed_time" class="TunableTimeElapsedZoneTest" display="Elapsed Time" muid="15A91F3E4E1F31DB" description="Test to make sure enough time has passed since the zone was last saved." Deprecated="False" filter="0" group="General">
                                            <Tunable type="float" name="minutes_passed" class="TunableSimMinute" default="720" display="Minutes Passed" muid="AA4A962B0E09C8C" min="1" max="None" description="This test will pass when the minutes passed is greater than the&#xA;number minutes since last loading into zone." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                        <TunableTuple name="existence" class="TunableExistenceTest" display="Existence" muid="24CD6F0CD189D590" description="A test to check whether the specified participant exists." Deprecated="False" filter="0" group="General">
                                            <Tunable type="bool" name="allow_hidden_sim_status" class="Tunable" default="False" display="Allow Hidden Sim Status" muid="2D375654B4A295B4" description="If checked then we will ignore hidden Sim status such that they will count as existing even though they&#xA;have been hidden.  Use this in conjunction with Require Instantiated in order to determine the Sim's actual&#xA;instantiated status. " Deprecated="False" filter="0" group="General" />
                                            <Tunable type="bool" name="exists" class="Tunable" default="True" display="Exists" muid="881F17EE9657A822" description="When checked, require the specified participant to exist. When&#xA;unchecked, require the specified participant to not exist." Deprecated="False" filter="0" group="General" />
                                            <TunableEnum type="ParticipantType" name="participant" class="TunableEnumEntry" default="TargetSim" display="Participant" muid="61E7E6435B9DE390" static_entries="interactions.ParticipantType" description="The participant for which to check existence." Deprecated="False" filter="0" group="General" />
                                            <Tunable type="bool" name="require_instantiatable" class="Tunable" default="True" display="Require Instantiatable" muid="10EF8EE101B25188" description="If checked, the specified participant must be instantiatable. This&#xA;is generally true for all Sims at LOD above MINIMUM." Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                        <TunableTuple name="game_option" class="TunableSimInfoGameplayOptionsTest" display="Game Option" muid="71EC8D63F69A21AE" description="Test whether or not a Sim has a specific gameplay option set." Deprecated="False" filter="0" group="General">
                                            <TunableEnum type="TestableGameOptions" name="gameplay_option" class="TunableEnumEntry" default="CIVIC_POLICY_NPC_VOTING_ENABLED" display="Gameplay Option" muid="BBA1A113A14C9971" static_entries="event_testing-game_option_tests.TestableGameOptions" description="The gameplay option to test. This test will pass if this option is&#xA;set." Deprecated="False" filter="0" group="General" />
                                            <Tunable type="bool" name="invert" class="Tunable" default="False" display="Invert" muid="5F1070E99AA682E6" description="If enabled, requires the option to be unset for the test to pass." Deprecated="False" filter="0" group="General" />
                                            <TunableVariant type="None" name="tooltip" class="OptionalTunable" default="disabled" display="Tooltip" muid="A8B2E0AC8480DEE9" description="Reason of failure." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="B56B557BFBFD44EB" />
                                                <Tunable type="int" name="enabled" class="TunableLocalizedString" default="0x0" display="Enabled" muid="5A743A9459A56C0" description="Reason of failure." Deprecated="False" filter="0" group="General" />
                                            </TunableVariant>
                                        </TunableTuple>
                                        <TunableTuple name="inventory" class="TunableInventoryTest" display="Inventory" muid="E4F9D6BF27FDCA0C" description="A test to check on the contents of either a sim inventory or&#xA;an object inventory." Deprecated="False" filter="0" group="General">
                                            <TunableVariant type="None" name="contents_check" class="TunableVariant" default="has_anything" display="Contents Check" muid="645B8CFFE0ED0A93" description="Checks to run on each object of the specified inventory" Deprecated="False" filter="0" group="General">
                                                <Tunable name="has_anything" class="TunableExistance" display="Has Anything" muid="44B402160D8A8AF2" />
                                                <TunableTuple name="has_object_of_participant_type" class="TunableTuple" display="Has Object Of Participant Type" muid="6DCEB8967A483808" description="Participant type we want to test if its in the selected&#xA;inventory." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="ParticipantType" name="participant" class="TunableEnumEntry" default="Object" display="Participant" muid="97AA9113C8D9A3E7" static_entries="interactions.ParticipantType" description="Which participant of the interaction do we want to validate&#xA;on the inventory. " Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableTuple name="has_object_with_def" class="TunableTuple" display="Has Object With Def" muid="C71931E21546AE08" Deprecated="False" filter="0" group="General">
                                                    <Tunable type="object" name="definition" class="TunableReference" display="Definition" muid="A42742543CC520EC" description="The object definition to look for inside inventory." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                </TunableTuple>
                                                <TunableTuple name="has_object_with_states" class="BasicStateCheckFactory" display="Has Object With States" muid="1743C12BEE1E0700" description="This option tests crafted item's tags against a list of possible&#xA;tags." Deprecated="False" filter="0" group="General">
                                                    <TunableVariant type="None" name="object_requirement" class="TunableVariant" default="any_object" display="Object Requirement" muid="B59F2907C6674F1B" Deprecated="False" filter="0" group="General">
                                                        <Tunable name="any_object" class="TunableExistance" display="Any Object" muid="FCD29A05566C62C6" />
                                                        <TunableTuple name="definition" class="TunableTuple" display="Definition" muid="9A0C610E497B24B6" Deprecated="False" filter="0" group="General">
                                                            <Tunable type="object" name="definition" class="TunableReference" display="Definition" muid="57B1E96355C41BCA" description="The object must have this definition." allow_none="False" Deprecated="False" filter="0" group="General" />
                                                        </TunableTuple>
                                                        <TunableTuple name="tag" class="TunableTuple" display="Tag" muid="C305393221504B90" Deprecated="False" filter="0" group="General">
                                                            <TunableTuple name="tag" class="CraftTaggedItemFactory" display="Tag" muid="7CBD53273035DA66" description="The object must have this tag." Deprecated="False" filter="0" group="General">
                                                                <TunableList name="tag_set" class="TunableSet" display="Tag Set" muid="C8B15F5C34CAA9E6" description="The tag of objects we want to test ownership of" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                    <TunableEnum type="Tag" class="TunableEnumEntry" default="INVALID" muid="3579D0F6F2C0B460" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="What tag to test for" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                                </TunableList>
                                                                <TunableEnum type="TagTestType" name="test_type" class="TunableEnumEntry" default="CONTAINS_ANY_TAG_IN_SET" display="Test Type" muid="D986ABC8755E49CE" static_entries="objects-object_tests.TagTestType" description="How to test the tags in the tag set against the objects on the lot." Deprecated="False" filter="0" group="General" />
                                                            </TunableTuple>
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                    <TunableList name="state_set" class="TunableSet" display="State Set" muid="E6EEBAA7A516472C" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                        <Tunable type="object_state" class="TunableReference" muid="651869F232624ECB" description="What state to test for." allow_none="False" Deprecated="False" filter="0" group="General" />
                                                    </TunableList>
                                                    <TunableEnum type="StateTestType" name="test_type" class="TunableEnumEntry" default="CONTAINS_ANY_STATE_IN_SET" display="Test Type" muid="FF1FA83D65137289" static_entries="objects-object_tests.StateTestType" description="How to test the states in the state set against the objects in&#xA;the inventory." Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableTuple name="has_object_with_tag" class="CraftTaggedItemFactory" display="Has Object With Tag" muid="31AC51DC3A766B46" description="This option tests crafted item's tags against a list of possible tags" Deprecated="False" filter="0" group="General">
                                                    <TunableList name="tag_set" class="TunableSet" display="Tag Set" muid="55B617CAE49A4691" description="The tag of objects we want to test ownership of" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                        <TunableEnum type="Tag" class="TunableEnumEntry" default="INVALID" muid="F23AE734F70AC1D7" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="What tag to test for" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                    </TunableList>
                                                    <TunableEnum type="TagTestType" name="test_type" class="TunableEnumEntry" default="CONTAINS_ANY_TAG_IN_SET" display="Test Type" muid="F88ED9415290584B" static_entries="objects-object_tests.TagTestType" description="How to test the tags in the tag set against the objects on the lot." Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                            </TunableVariant>
                                            <TunableVariant type="None" name="inventory_location" class="TunableVariant" default="participant_inventory" display="Inventory Location" muid="4DCE7C0AEC354CF0" description="Who owns the inventory. Either look in the inventory of a &#xA;participant or specify an object inventory type directly.&#xA;&#xA;If participant returns multiple inventory owners, the test will &#xA;pass only if ALL of those owners pass the inventory content test." Deprecated="False" filter="0" group="General">
                                                <TunableTuple name="hidden_inventory_objects" class="TunableTuple" display="Hidden Inventory Objects" muid="C7969918AEC5861A" Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="InventoryType" name="inventory" class="TunableEnumEntry" default="UNDEFINED" display="Inventory" muid="29449A5A6B8FAD19" dynamic_entries="objects-components-inventory_enums.InventoryType._elements" static_entries="objects-components-inventory_enums.InventoryType" description="Check in the hidden inventory for objects that can go into the&#xA;specified inventory type. EX: check that there are mailbox&#xA;objects in the hidden inventory" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableTuple name="object_inventory_type" class="TunableTuple" display="Object Inventory Type" muid="F9337661287C78C2" Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="InventoryType" name="inventory" class="TunableEnumEntry" default="UNDEFINED" display="Inventory" muid="D0104185B8F89FF2" dynamic_entries="objects-components-inventory_enums.InventoryType._elements" static_entries="objects-components-inventory_enums.InventoryType" description="Check the global Object inventory that has the specified type.&#xA;EX: check in the global fridge inventory that exists for all&#xA;fridges" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableTuple name="participant_inventory" class="TunableTuple" display="Participant Inventory" muid="4332C2D4389D8741" Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="ParticipantType" name="inventory" class="TunableEnumEntry" default="Actor" display="Inventory" muid="C3F4687D92808178" static_entries="interactions.ParticipantType" description="The owner of the inventory" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                            </TunableVariant>
                                            <TunableTuple name="required_count" class="TunableThreshold" display="Required Count" muid="7BD1A2FC2CCE70FE" description="The inventory must have a tunable threshold of objects that&#xA;pass the contents check test.&#xA;&#xA;EX: test is object definition of type pizza. required count is enabled&#xA;and has a threshold of &gt;= 5. That means this test will pass if you&#xA;have 5 or more pizzas in your inventory. To check if any objects&#xA;exist, use required count &gt;= 1" Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="CCDCD9C055ED315D" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="int" name="value" class="Tunable" default="1" display="Value" muid="F5B58F999DEE70AD" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <TunableEnum type="TestHiddenInventories" name="test_hidden" class="TunableEnumEntry" default="ANY" display="Test Hidden" muid="A9C7F0BDB83EF93D" static_entries="objects-object_tests.InventoryTest.TestHiddenInventories" description="Optionally restrict to only hidden or non-hidden inventories." Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                        <TunableTuple name="location" class="TunableLocationTest" display="Location" muid="B8B8E8B8C44762D0" description="Tests for object locations.&#xA;Outside: Check if an object is on the inside or outside (has a roof over&#xA;its head)&#xA;Natural ground: Checks the floor tiles where the object is to see if it &#xA;qualifies as natural ground" Deprecated="False" filter="0" group="General">
                                            <TunableTuple name="location_tests" class="TunableTuple" display="Location Tests" muid="A41F7FC51EAE1FB8" Deprecated="False" filter="0" group="General">
                                                <TunableVariant type="None" name="has_terrain_tag" class="OptionalTunable" default="Don't_Test" display="Has Terrain Tag" muid="390F20E2B5D973CA" description="If checked, will verify the subject of the test is currently on&#xA;the tuned terrain tag." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="CB1B3B6DC4FF35B5" />
                                                    <TunableTuple name="enabled" class="TunableTuple" display="Enabled" muid="81C2A57090EC202C" description=",&#xA;A set of terrain tags required for this test to pass." Deprecated="False" filter="0" group="General">
                                                        <Tunable type="bool" name="negate" class="Tunable" default="False" display="Negate" muid="7C2FADBD4BE6B74" description="If checked, the test will be inverted. In other words,&#xA;the test will fail if at least one tag is detected at&#xA;this location." Deprecated="False" filter="0" group="General" />
                                                        <TunableList name="terrain_tags" class="TunableEnumSet" display="Terrain Tags" muid="3F791D8611C624B0" description="A set of terrain tags. Only one of these tags needs to be&#xA;present at this location. Although it is not tunable, there&#xA;is a threshold weight underneath which a terrain tag will&#xA;not appear to be present." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                            <TunableEnum type="TerrainTag" class="TunableEnumEntry" default="INVALID" muid="2C30CD0C69918725" static_entries="world-terrain_enums.TerrainTag" Deprecated="False" filter="0" group="General" />
                                                        </TunableList>
                                                        <Tunable type="bool" name="test_floor_tiles" class="Tunable" default="False" display="Test Floor Tiles" muid="ADF7783F8780710B" description="If checked, floor tiles will be tested. Otherwise, &#xA;it'll only check the terrain and will ignore the &#xA;floor tiles on the terrain." Deprecated="False" filter="0" group="General" />
                                                    </TunableTuple>
                                                </TunableVariant>
                                                <TunableVariant type="None" name="in_common_area" class="OptionalTunable" default="Don't_Test" display="In Common Area" muid="160D244FCF30CB77" description="If checked, will verify the subject is in the common area&#xA;of an apartment.  If unchecked will verify the subject is not." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="5F71B3BF31123258" />
                                                    <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="5652955E47E08455" Deprecated="False" filter="0" group="General" />
                                                </TunableVariant>
                                                <TunableVariant type="None" name="is_fire_allowed" class="OptionalTunable" default="Don't_Test" display="Is Fire Allowed" muid="DB2AA54EC72B0939" description="If checked, will verify if fire is possible at the subject's position. &#xA;If unchecked, will pass if fire is not possible.&#xA;If not enabled, doesn't care either way." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="51004543BC842ACB" />
                                                    <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="16C67D65A139594F" Deprecated="False" filter="0" group="General" />
                                                </TunableVariant>
                                                <TunableVariant type="None" name="is_in_slot" class="OptionalTunable" default="Don't_Test" display="Is In Slot" muid="94B90162B6840B43" description="If enabled will test if the object is attacked/deattached to&#xA;any of possible tuned slots.&#xA;If you tune a slot type set the test will test if the object &#xA;is slotted or not slotted into into any of those types. " Deprecated="False" filter="0" group="General">
                                                    <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="FAA12E930BA3803C" />
                                                    <TunableTuple name="enabled" class="TunableTuple" display="Enabled" muid="B7BDFCF2F6D69659" description="Test if an object is current slotted in any of a possible&#xA;list of slot types.&#xA;Empty slot type set is allowed for testing for slotted or&#xA;not slotted only." Deprecated="False" filter="0" group="General">
                                                        <TunableVariant type="None" name="slot_test_type" class="TunableVariant" default="any_slot" display="Slot Test Type" muid="2C5E34850EE1DDA6" description="Strategy to test the slots:&#xA;Any Slot - is the object in any slot&#xA;Surface Slot - is object is in a surface slot&#xA;Specific Slot - is the object in specific list of slots" Deprecated="False" filter="0" group="General">
                                                            <TunableTuple name="any_slot" class="TunableSlotTestType" display="Any Slot" muid="906DA0F5EC6E73C0" description="Singleton factory for testing if object is slotted." Deprecated="False" filter="0" group="General">
                                                                <Tunable type="bool" name="require_slotted" class="Tunable" default="True" display="Require Slotted" muid="CF3040014845749F" description="If checked, return success if the object is slotted&#xA;If unchecked, test the absense of slotting." Deprecated="False" filter="0" group="General" />
                                                            </TunableTuple>
                                                            <TunableTuple name="specific_slot" class="TunableSpecificSlotTest" display="Specific Slot" muid="168A7E749A97747D" description="Subclass of SlotTestType that can check against a specific&#xA;slot set." Deprecated="False" filter="0" group="General">
                                                                <Tunable type="bool" name="require_slotted" class="Tunable" default="True" display="Require Slotted" muid="428C2CB903D217F9" description="If checked, return success if the object is slotted&#xA;If unchecked, test the absense of slotting." Deprecated="False" filter="0" group="General" />
                                                                <Tunable type="slot_type_set" name="specific_slot_set" class="TunableReference" display="Specific Slot Set" muid="4D93511035511AAE" description="Set of slots the object may be attached to." allow_none="False" Deprecated="False" filter="0" group="General" />
                                                            </TunableTuple>
                                                            <TunableTuple name="surface_slot" class="TunableSurfaceSlotTest" display="Surface Slot" muid="D874455AD55B7FFF" description="Subclass of SlotTestType that checks that a slot has&#xA;is_surface set to true." Deprecated="False" filter="0" group="General">
                                                                <Tunable type="bool" name="require_slotted" class="Tunable" default="True" display="Require Slotted" muid="5961CFEEB6E75E5F" description="If checked, return success if the object is slotted&#xA;If unchecked, test the absense of slotting." Deprecated="False" filter="0" group="General" />
                                                            </TunableTuple>
                                                        </TunableVariant>
                                                    </TunableTuple>
                                                </TunableVariant>
                                                <TunableVariant type="None" name="is_inside_building" class="OptionalTunable" default="Don't_Test" display="Is Inside Building" muid="638F7A73806C9005" description="If checked, will verify if the subject of the test is inside a&#xA;building. This uses a client function that checks if the block&#xA;the sim is mostly enclosed by walls or if not, if the adjoining&#xA;blocks are themselves enclosed. This should be used when we&#xA;want to test if a subject is inside a normally constructed &#xA;building. If we simply want to test whether the subject is &#xA;covered / has a roof over them, use is_outside. See comment on&#xA;is_outside for more details. If unchecked, will negate this &#xA;test." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="78D1C30A17365A79" />
                                                    <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="9988CD31A6BB837F" Deprecated="False" filter="0" group="General" />
                                                </TunableVariant>
                                                <TunableVariant type="None" name="is_natural_ground" class="OptionalTunable" default="Don't_Test" display="Is Natural Ground" muid="D96CA163EB79C2AD" description="If checked, will verify the subject of the test is on natural &#xA;ground (no floor tiles are under him).&#xA;Otherwise, will verify the subject of the test is not on &#xA;natural ground." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="1BB5DA83DFEB9B72" />
                                                    <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="98E127BABB088DB3" Deprecated="False" filter="0" group="General" />
                                                </TunableVariant>
                                                <TunableVariant type="None" name="is_on_active_lot" class="OptionalTunable" default="Don't_Test" display="Is On Active Lot" muid="48814FFC8E4FBA53" description="If disabled the test will not be used.&#xA;If enabled and checked, the test will pass if the subject is&#xA;on the active lot. (their center is within the lot bounds)&#xA;If enabled and not checked, the test will pass if the subject is &#xA;outside of the active lot.&#xA;&#xA;For example, Ask To Leave is tuned with this enabled and checked&#xA;for the TargetSim. You can only ask someone to leave if they&#xA;are actually on the active lot, but not if they are wandering&#xA;around in the open streets." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="D46D23ED4914EA7" />
                                                    <TunableTuple name="Is_or_is_not_on_active_lot" class="TunableTuple" display="Is Or Is Not On Active Lot" muid="A34AE06FBC1DE323" Deprecated="False" filter="0" group="General">
                                                        <Tunable type="bool" name="include_spawn_point" class="Tunable" default="False" display="Include Spawn Point" muid="6DB6F937A63DCBEC" description="If set to true, we will consider the lot's spawn point as part of the active lot." Deprecated="False" filter="0" group="General" />
                                                        <Tunable type="bool" name="is_or_is_not_on_active_lot" class="Tunable" default="True" display="Is Or Is Not On Active Lot" muid="A36CB8DE1CD144B8" description="If checked then the test will pass if the subject is on&#xA;the active lot." Deprecated="False" filter="0" group="General" />
                                                        <TunableVariant type="None" name="tolerance" class="TunableVariant" default="explicit" display="Tolerance" muid="5290B19D27F6BBC6" Deprecated="False" filter="0" group="General">
                                                            <Tunable type="int" name="explicit" class="Tunable" default="0" display="Explicit" muid="1ED5576A72A6A520" description="The tolerance from the edge of the lot that the&#xA;location test will use in order to determine if the&#xA;test target is considered on lot or not." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                            <TunableTuple name="use_default_tolerance" class="UseDefaultOfflotToleranceFactory" display="Use Default Tolerance" muid="B0FF75E60D10289A" description="Use the default tuned global offlot tolerance tuned&#xA;in objects.components.statistic_component.Default Off Lot." Deprecated="False" filter="0" group="General" />
                                                        </TunableVariant>
                                                    </TunableTuple>
                                                </TunableVariant>
                                                <TunableVariant type="None" name="is_on_level" class="OptionalTunable" default="Don't_Test" display="Is On Level" muid="73DE845E364831E6" description="If enabled, we check the participant's current level against&#xA;the tuned threshold.  In the case of sims in pools, the effective&#xA;level will be that of the surface of the pool, not the bottom." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="B420CAAB98C1470D" />
                                                    <TunableTuple name="enabled" class="TunableThreshold" display="Enabled" muid="C6E8A2D088B41968" description="Value/comparison pair used to define a Threshold." Deprecated="False" filter="0" group="General">
                                                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="29D4B5BE4B9B2CCD" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                        <Tunable type="int" name="value" class="Tunable" default="0" display="Value" muid="23F1812B46401AFF" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                    </TunableTuple>
                                                </TunableVariant>
                                                <TunableVariant type="None" name="is_outside" class="OptionalTunable" default="Don't_Test" display="Is Outside" muid="D2731E9B4AC0646C" description="PLEASE BE AWARE. If checked, will verify if the subject of the&#xA;test does not have a roof over their head. If unchecked, will &#xA;test if the subject has a roof over their head. If the &#xA;intention is to determine if a subject is in/not in a building, &#xA;this test is deprecated in favor of is_inside_building. If you &#xA;would like to test if a subject is inside a building, but also &#xA;need to test if they have a roof over their head, please use &#xA;both options." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="118D4966EE541D57" />
                                                    <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="F759EE982196535F" Deprecated="False" filter="0" group="General" />
                                                </TunableVariant>
                                                <TunableVariant type="None" name="is_venue_type" class="OptionalTunable" default="Don't_Test" display="Is Venue Type" muid="677873BEF4173C57" description="If checked, will verify if the subject is at a venue of the&#xA;specified type." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="A475ABC6D248C271" />
                                                    <TunableTuple name="enabled" class="TunableTuple" display="Enabled" muid="5C6DF8F8A7BB292" description="Venue type required for this test to pass." Deprecated="False" filter="0" group="General">
                                                        <Tunable type="bool" name="negate" class="Tunable" default="False" display="Negate" muid="34E42B9A95B5AA7D" description="If enabled, the test will return true if the subject&#xA;IS NOT at a venue of the specified type." Deprecated="False" filter="0" group="General" />
                                                        <Tunable type="bool" name="use_source_venue" class="Tunable" default="False" display="Use Source Venue" muid="E6798A5DE3844A70" description="If enabled, the test will test the source venue instead of the active&#xA;venue.  For example, the Community Lot instead of the active Marketplace.&#xA;Testing the active venue is the default." Deprecated="False" filter="0" group="General" />
                                                        <Tunable type="venue" name="venue_type" class="TunableReference" display="Venue Type" muid="D6DD56E5484E3568" description="Venue type to test against." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                    </TunableTuple>
                                                </TunableVariant>
                                                <TunableVariant type="None" name="valid_surface_types" class="OptionalTunable" default="Don't_Test" display="Valid Surface Types" muid="451E899C06D2B561" description="If enabled, we will test the surface type of the subject&#xA;against prohibited or required surface types." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="B181508C30C13400" />
                                                    <TunableTuple name="Test_Surface_Types" class="TunableWhiteBlackList" display="Test Surface Types" muid="BCF6D3F358233209" description="Required and Prohibited Surface Types. " Deprecated="False" filter="0" group="General">
                                                        <TunableVariant type="None" name="blacklist" class="OptionalTunable" default="nothing" display="Blacklist" muid="538236EB62E9BA70" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is not in the blacklist. If no blacklist is&#xA;specified, no items are disallowed." Deprecated="False" filter="0" group="General">
                                                            <Tunable name="nothing" class="TunableExistance" display="Nothing" muid="A494B0F79057BDDA" />
                                                            <TunableTuple name="specify" class="TunableBlacklist" display="Specify" muid="CD78C78772DC53B9" description="A tunable blacklist." Deprecated="False" filter="0" group="General">
                                                                <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="E3992C69D948B724" description="Blacklisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                    <TunableEnum type="SurfaceType" class="TunableEnumEntry" default="SURFACETYPE_WORLD" muid="18428C1AD81BF271" static_entries="routing.SurfaceType" description="Surface Type the object is placed on." Deprecated="False" filter="0" group="General" invalid_entries="SURFACETYPE_UNKNOWN" />
                                                                </TunableList>
                                                                <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="484B1348F461A929" description="Tunable option for how many items must be in the blacklist&#xA;for the blacklist to fail when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                    <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="CA335B9A459655C4" />
                                                                    <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="D44420AD0F31A2F1" description="When testing a collection of items, the number of items in&#xA;that collection that are in the blacklist must pass this&#xA;threshold test for the blacklist to disallow them all." Deprecated="False" filter="0" group="General">
                                                                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="9A8BA0772B9E817B" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                        <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="29D318E0EFFD658A" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                    </TunableTuple>
                                                                </TunableVariant>
                                                            </TunableTuple>
                                                        </TunableVariant>
                                                        <TunableVariant type="None" name="whitelist" class="OptionalTunable" default="everything" display="Whitelist" muid="D9C005AA9D72E431" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is in the whitelist. If no whitelist is&#xA;specified, all items are allowed." Deprecated="False" filter="0" group="General">
                                                            <Tunable name="everything" class="TunableExistance" display="Everything" muid="64D73C3159AE6849" />
                                                            <TunableTuple name="specify" class="TunableWhitelist" display="Specify" muid="566F9AA74F116CD2" description="A tunable whitelist." Deprecated="False" filter="0" group="General">
                                                                <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="BDD34BA4319B1EEE" description="Tunable option for how many items must be in the whitelist&#xA;for the whitelist to pass when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                    <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="4630D1238653D1BA" />
                                                                    <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="F21AB9BB709C0556" description="When testing a collection of items, the number of items in&#xA;that collection that are in the whitelist must pass this&#xA;threshold test for the whitelist to allow them all." Deprecated="False" filter="0" group="General">
                                                                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="926E3C0D4ADB269F" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                        <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="9ED7A4F6F793831D" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                    </TunableTuple>
                                                                </TunableVariant>
                                                                <TunableList name="whitelist" class="TunableSet" display="Whitelist" muid="311DAB1A282A0E4F" description="Whitelisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                    <TunableEnum type="SurfaceType" class="TunableEnumEntry" default="SURFACETYPE_WORLD" muid="D8353262BE7A0ABA" static_entries="routing.SurfaceType" description="Surface Type the object is placed on." Deprecated="False" filter="0" group="General" invalid_entries="SURFACETYPE_UNKNOWN" />
                                                                </TunableList>
                                                            </TunableTuple>
                                                        </TunableVariant>
                                                    </TunableTuple>
                                                </TunableVariant>
                                            </TunableTuple>
                                        </TunableTuple>
                                        <Tunable name="none" class="TunableExistance" display="None" muid="B3B0ED22784E35A4" />
                                        <TunableTuple name="object_definition" class="TunableObjectMatchesDefinitionOrTagTest" display="Object Definition" muid="50D4AE37552FB8E1" description="Check to see if the specified object matches either a static definition or a set of tags" Deprecated="False" filter="0" group="General">
                                            <TunableVariant type="None" name="item" class="TunableVariant" default="tagged_item" display="Item" muid="25C02B38D5AD038C" description="Whether to test for a specific item or item that has a set of tags" Deprecated="False" filter="0" group="General">
                                                <TunableTuple name="actual_item" class="CraftActualItemFactory" display="Actual Item" muid="21B7286CF4F32AE0" description="This option tests crafted item against a list of possible items" Deprecated="False" filter="0" group="General">
                                                    <TunableList name="items_to_check" class="TunableList" display="Items To Check" muid="F1722AE9A541F490" Deprecated="False" filter="0" group="General">
                                                        <Tunable type="object" class="TunableReference" muid="A20DBE5D1159C608" description="Object that qualifies for this check." allow_none="False" Deprecated="False" filter="0" group="General" />
                                                    </TunableList>
                                                </TunableTuple>
                                                <TunableTuple name="tagged_item" class="CraftTaggedItemFactory" display="Tagged Item" muid="430F2771C83906D0" description="This option tests crafted item's tags against a list of possible tags" Deprecated="False" filter="0" group="General">
                                                    <TunableList name="tag_set" class="TunableSet" display="Tag Set" muid="979442066D9A6282" description="The tag of objects we want to test ownership of" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                        <TunableEnum type="Tag" class="TunableEnumEntry" default="INVALID" muid="211D481A9B54F3A4" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="What tag to test for" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                    </TunableList>
                                                    <TunableEnum type="TagTestType" name="test_type" class="TunableEnumEntry" default="CONTAINS_ANY_TAG_IN_SET" display="Test Type" muid="208056B5EC31D9A" static_entries="objects-object_tests.TagTestType" description="How to test the tags in the tag set against the objects on the lot." Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                            </TunableVariant>
                                            <TunableVariant type="None" name="tooltip" class="OptionalTunable" default="disabled" display="Tooltip" muid="79E3936EF8C36A45" description="Reason of failure." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="D3562DCC878A162" />
                                                <Tunable type="int" name="enabled" class="TunableLocalizedString" default="0x0" display="Enabled" muid="C1AFC1418B59E5DD" description="Reason of failure." Deprecated="False" filter="0" group="General" />
                                            </TunableVariant>
                                        </TunableTuple>
                                        <TunableTuple name="object_preference" class="TunableObjectScoringPreferenceTest" display="Object Preference" muid="B3234E99A3496F26" description="A tunable factory that checks whether or not the target object of an affordance&#xA;is the Sim's preferred scoring object." Deprecated="False" filter="0" group="General">
                                            <TunableVariant type="None" name="any_sim" class="OptionalTunable" default="disabled" display="Any Sim" muid="EE9C0540E59369E0" description="If enabled, will return whether the object has any &quot;Use Only&quot; preference&#xA;set for the specified tag.  Will not be sim specific, and thus only&#xA;works for &quot;use only&quot; preference type.  Does NOT rely on interaction&#xA;to determine preference type.&#xA;&#xA;Value is the tag to test for." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="5D7B82EBA7FDF363" />
                                                <TunableEnum type="ObjectPreferenceTag" name="enabled" class="TunableEnumEntry" default="INVALID" display="Enabled" muid="43155D135CAA636E" dynamic_entries="autonomy-autonomy_preference.ObjectPreferenceTag._elements" static_entries="autonomy-autonomy_preference.ObjectPreferenceTag" description="Tag to determine which preference type to use." Deprecated="False" filter="0" group="General" invalid_entries="INVALID" />
                                            </TunableVariant>
                                            <Tunable type="bool" name="require" class="Tunable" default="True" display="Require" muid="C5D62664BD0D5F07" description="The Sim's preference is required to be True or required to be False." Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                        <TunableTuple name="season" class="TunableSeasonTest" display="Season" muid="B3D1799C95BAB4CD" description="SeasonTest will test if the current simulation time falls within the&#xA;specified test conditions." Deprecated="False" filter="0" group="General">
                                            <Tunable type="bool" name="requires_seasons_pack" class="Tunable" default="True" display="Requires Seasons Pack" muid="17338B1A88E7C9E2" description="If checked, this test will require that the Seasons pack be &#xA;installed in order for the seasons test to pass.  If unchecked, &#xA;this test will automatically pass." Deprecated="False" filter="0" group="General" />
                                            <TunableList name="seasons" class="TunableEnumSet" display="Seasons" muid="9E05D7265488E609" min="1" description="Season(s) that we must be in to pass the test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                <TunableEnum type="SeasonType" class="TunableEnumEntry" default="SUMMER" muid="5469BDA25A1A3AA9" static_entries="seasons-seasons_enums.SeasonType" Deprecated="False" filter="0" group="General" />
                                            </TunableList>
                                            <TunableVariant type="None" name="time_of_season" class="OptionalTunable" default="disabled" display="Time Of Season" muid="B953C698DE049C0C" description="Portion(s) of season(s) that we must be in to pass the test." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="2570A36E0EA33F85" />
                                                <TunableList name="enabled" class="TunableEnumSet" display="Enabled" muid="BBEDF79AD0CF9A67" min="1" description="Portion(s) of season(s) that we must be in to pass the test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                    <TunableEnum type="SeasonSegment" class="TunableEnumEntry" default="EARLY" muid="A1EFDC2B7079BCFE" static_entries="seasons-seasons_enums.SeasonSegment" Deprecated="False" filter="0" group="General" />
                                                </TunableList>
                                            </TunableVariant>
                                        </TunableTuple>
                                        <TunableTuple name="state" class="TunableStateTest" display="State" muid="81C0222FE6365502" description="Gate availability by object state.  By default, the test will use the&#xA;state's linked stat as a fallback in case the target doesn't have the&#xA;state involved." Deprecated="False" filter="0" group="General">
                                            <TunableVariant type="None" name="fallback_behavior" class="TunableVariant" default="always_fail" display="Fallback Behavior" muid="78E5726571A86DB" description="What to do if the given object doesn't have the state in question." Deprecated="False" filter="0" group="General">
                                                <Tunable name="always_fail" class="TunableExistance" display="Always Fail" muid="DDEECB9DB6274249" />
                                                <Tunable name="always_pass" class="TunableExistance" display="Always Pass" muid="1D109877E4CD4361" />
                                            </TunableVariant>
                                            <TunableEnum type="Operator" name="operator" class="TunableOperator" default="EQUAL" display="Operator" muid="A8B3F9A0D6021201" static_entries="sims4-math.Operator" description="The comparison to use." Deprecated="False" filter="0" group="General" />
                                            <Tunable type="object_state" name="value" class="TunableReference" display="Value" muid="C46774A6D6FE339B" description="The value to compare to." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="ObjectStateValue" />
                                        </TunableTuple>
                                        <TunableTuple name="statistic" class="TunableStatThresholdTest" display="Statistic" muid="67799056293094B4" description="A test that checks whether or not a statistic is at a certain threshold for&#xA;a given participant. It can also test whether or not the participant has the&#xA;statistic explicitly added on them." Deprecated="False" filter="0" group="General">
                                            <Tunable type="bool" name="must_have_stat" class="Tunable" default="False" display="Must Have Stat" muid="BF2A1F6CFF6DDB4A" description="Setting this to True (checked) will ensure that this test only&#xA;passes if the tested Sim actually has the statistic referenced. If&#xA;left False (unchecked), this test will evaluate as if the Sim had&#xA;the statistic at the value of 0" Deprecated="False" filter="0" group="General" />
                                            <TunableVariant type="None" name="score_to_use" class="TunableVariant" default="user_value" display="Score To Use" muid="A3EB70C03C71F78B" description="Depending on the choice, this decides what value to use for the &#xA;threshold comparison." Deprecated="False" filter="0" group="General">
                                                <TunableTuple name="points" class="Tunable_PointsValue" display="Points" muid="CCDDA4DC68B02314" description="Use the raw points for the comparison in the test." Deprecated="False" filter="0" group="General" />
                                                <TunableTuple name="rank" class="Tunable_RankValue" display="Rank" muid="4D0FBA954F9EC9D" description="Use the rank value for the comparison in the test." Deprecated="False" filter="0" group="General" />
                                                <TunableTuple name="user_value" class="Tunable_UserValue" display="User Value" muid="D7FAAABC66A69E8B" description="Use the user value for the comparison in the test." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="bool" name="highest_level_reached_instead" class="Tunable" default="False" display="Highest Level Reached Instead" muid="83448DDC92BD0D15" description="If checked this will test against the highest level reached. This&#xA;currently only works with Ranked Statistics. Other statistics do&#xA;not have a notion of highest level reached. If we are using&#xA;something that doesn't support highest level reached it will &#xA;test against the current level instead." Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                            </TunableVariant>
                                            <Tunable type="statistic" name="stat" class="TunableReference" display="Stat" muid="EB4C41A5D5F1BE1D" description="The stat we are operating on." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                            <TunableVariant type="None" name="threshold" class="TunableVariant" default="value_threshold" display="Threshold" muid="956D586F252FD657" description="The value or state threshold to test against." Deprecated="False" filter="0" group="General">
                                                <TunableTuple name="state_value_threshold" class="TunableObjectStateValueThreshold" display="State Value Threshold" muid="409F0B9C53B520F1" description="Value/comparison pair used to define a Threshold." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="8040206AE45C79F" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="object_state" name="value" class="TunableReference" display="Value" muid="199D97BE941CE0C8" description="The state threshold for this test." allow_none="False" Deprecated="False" filter="0" group="General" restrict="ObjectStateValue" />
                                                </TunableTuple>
                                                <TunableTuple name="value_threshold" class="TunableThreshold" display="Value Threshold" muid="997F922910F89C70" description="The threshold to control availability based on the statistic's&#xA;value." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="56B21195BEAEFEF3" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="9B757E8F044CB97F" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                            </TunableVariant>
                                            <TunableEnum type="ParticipantType" name="who" class="TunableEnumEntry" default="Actor" display="Who" muid="9C18B5331CBDA0F6" static_entries="interactions.ParticipantType" description="Who or what to apply this test to." Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                        <TunableTuple name="street_civic_policy_test" class="TunableStreetCivicPolicyTest" display="Street Civic Policy Test" muid="420C241DC1238EE3" description="Test the state of the selected Street's Civic Policy Provider." Deprecated="False" filter="0" group="General">
                                            <TunableList name="civic_policy_tests" class="TunableList" display="Civic Policy Tests" muid="3B0963F26046672" description="The tests we wish to run on the civic policies in question, run in&#xA;order.  AND operation, all must pass, first to fail stops tests." Deprecated="False" filter="0" group="General">
                                                <TunableVariant type="None" class="TunableVariant" default="voting_open" muid="EB9C0F938C017E26" description="Individual tests run on Civic Policy Provider." Deprecated="False" filter="0" group="General">
                                                    <TunableTuple name="available" class="TunableBaseCivicPolicyTestAvailable" display="Available" muid="13945D1689053082" description="Test available policies. Available policies include everything tuned." Deprecated="False" filter="0" group="General">
                                                        <TunableTuple name="white_black_list" class="TunableWhiteBlackList" display="White Black List" muid="9F5334EB0FCDCE4C" description="The civic policies must pass the whitelist and blacklist&#xA;to pass the test." Deprecated="False" filter="0" group="General">
                                                            <TunableVariant type="None" name="blacklist" class="OptionalTunable" default="nothing" display="Blacklist" muid="5A65BFFE1CFC7D9E" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is not in the blacklist. If no blacklist is&#xA;specified, no items are disallowed." Deprecated="False" filter="0" group="General">
                                                                <Tunable name="nothing" class="TunableExistance" display="Nothing" muid="9BA4EA027E073372" />
                                                                <TunableTuple name="specify" class="TunableBlacklist" display="Specify" muid="264F407282852960" description="A tunable blacklist." Deprecated="False" filter="0" group="General">
                                                                    <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="5B51CE1F82A41761" description="Blacklisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                        <Tunable type="snippet" class="TunableReference" muid="8ADDDD9BE81034D1" description="Allowed and disallowed civic policies." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="BaseCivicPolicy" />
                                                                    </TunableList>
                                                                    <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="229A7959A259E7BB" description="Tunable option for how many items must be in the blacklist&#xA;for the blacklist to fail when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                        <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="744CF1D3F69FD73E" />
                                                                        <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="C56F1F7CF11B375E" description="When testing a collection of items, the number of items in&#xA;that collection that are in the blacklist must pass this&#xA;threshold test for the blacklist to disallow them all." Deprecated="False" filter="0" group="General">
                                                                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="2159784284C552DE" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                            <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="FACFAE98B8A0633E" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                        </TunableTuple>
                                                                    </TunableVariant>
                                                                </TunableTuple>
                                                            </TunableVariant>
                                                            <TunableVariant type="None" name="whitelist" class="OptionalTunable" default="everything" display="Whitelist" muid="DA7E4F0C4F6187B6" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is in the whitelist. If no whitelist is&#xA;specified, all items are allowed." Deprecated="False" filter="0" group="General">
                                                                <Tunable name="everything" class="TunableExistance" display="Everything" muid="2A74232CFB09B5FC" />
                                                                <TunableTuple name="specify" class="TunableWhitelist" display="Specify" muid="2F90F20ABEC88361" description="A tunable whitelist." Deprecated="False" filter="0" group="General">
                                                                    <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="408B07B85DD3B414" description="Tunable option for how many items must be in the whitelist&#xA;for the whitelist to pass when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                        <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="7594045C10EE1DF9" />
                                                                        <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="CDA9012035F015A5" description="When testing a collection of items, the number of items in&#xA;that collection that are in the whitelist must pass this&#xA;threshold test for the whitelist to allow them all." Deprecated="False" filter="0" group="General">
                                                                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="28B312E67B9EC387" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                            <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="977BAAD7165469FE" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                        </TunableTuple>
                                                                    </TunableVariant>
                                                                    <TunableList name="whitelist" class="TunableSet" display="Whitelist" muid="1B92A049C38E47E5" description="Whitelisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                        <Tunable type="snippet" class="TunableReference" muid="E156559538B7E3DD" description="Allowed and disallowed civic policies." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="BaseCivicPolicy" />
                                                                    </TunableList>
                                                                </TunableTuple>
                                                            </TunableVariant>
                                                        </TunableTuple>
                                                    </TunableTuple>
                                                    <TunableTuple name="balloted" class="TunableBaseCivicPolicyTestBalloted" display="Balloted" muid="FA037A6FFDB55FAE" description="Test balloted policies.  Policies being considered by the next/current vote are&#xA;balloted." Deprecated="False" filter="0" group="General">
                                                        <TunableTuple name="white_black_list" class="TunableWhiteBlackList" display="White Black List" muid="5FF27F195C288D01" description="The civic policies must pass the whitelist and blacklist&#xA;to pass the test." Deprecated="False" filter="0" group="General">
                                                            <TunableVariant type="None" name="blacklist" class="OptionalTunable" default="nothing" display="Blacklist" muid="AFFB372275F1B333" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is not in the blacklist. If no blacklist is&#xA;specified, no items are disallowed." Deprecated="False" filter="0" group="General">
                                                                <Tunable name="nothing" class="TunableExistance" display="Nothing" muid="C131DADCE79AA2EC" />
                                                                <TunableTuple name="specify" class="TunableBlacklist" display="Specify" muid="2252291282CCD160" description="A tunable blacklist." Deprecated="False" filter="0" group="General">
                                                                    <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="E5ED54C7ECFA21AF" description="Blacklisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                        <Tunable type="snippet" class="TunableReference" muid="3D986DDD2288476D" description="Allowed and disallowed civic policies." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="BaseCivicPolicy" />
                                                                    </TunableList>
                                                                    <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="FEC9B7159358D59C" description="Tunable option for how many items must be in the blacklist&#xA;for the blacklist to fail when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                        <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="F85A4BEB06EE4FA4" />
                                                                        <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="A34421187DB4F6C" description="When testing a collection of items, the number of items in&#xA;that collection that are in the blacklist must pass this&#xA;threshold test for the blacklist to disallow them all." Deprecated="False" filter="0" group="General">
                                                                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="190488DCAF5C6A13" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                            <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="FD8589DC0A521691" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                        </TunableTuple>
                                                                    </TunableVariant>
                                                                </TunableTuple>
                                                            </TunableVariant>
                                                            <TunableVariant type="None" name="whitelist" class="OptionalTunable" default="everything" display="Whitelist" muid="96A5EA50A5933568" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is in the whitelist. If no whitelist is&#xA;specified, all items are allowed." Deprecated="False" filter="0" group="General">
                                                                <Tunable name="everything" class="TunableExistance" display="Everything" muid="47991704D51F48AE" />
                                                                <TunableTuple name="specify" class="TunableWhitelist" display="Specify" muid="789D67759D21C259" description="A tunable whitelist." Deprecated="False" filter="0" group="General">
                                                                    <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="9B95A4A127AE1697" description="Tunable option for how many items must be in the whitelist&#xA;for the whitelist to pass when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                        <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="D6CA1BF8A3BAFBAE" />
                                                                        <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="B80AE8F428A2A620" description="When testing a collection of items, the number of items in&#xA;that collection that are in the whitelist must pass this&#xA;threshold test for the whitelist to allow them all." Deprecated="False" filter="0" group="General">
                                                                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="D8295A7940C12F37" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                            <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="E612234B9E1123D0" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                        </TunableTuple>
                                                                    </TunableVariant>
                                                                    <TunableList name="whitelist" class="TunableSet" display="Whitelist" muid="DAE1BFA2868D7570" description="Whitelisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                        <Tunable type="snippet" class="TunableReference" muid="1D206D9262DA5ED3" description="Allowed and disallowed civic policies." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="BaseCivicPolicy" />
                                                                    </TunableList>
                                                                </TunableTuple>
                                                            </TunableVariant>
                                                        </TunableTuple>
                                                    </TunableTuple>
                                                    <TunableTuple name="dormant" class="TunableBaseCivicPolicyTestDormant" display="Dormant" muid="59D871C6CA30ECA" description="Test dormant policies. Dormant policies are not enacted and not balloted." Deprecated="False" filter="0" group="General">
                                                        <TunableTuple name="white_black_list" class="TunableWhiteBlackList" display="White Black List" muid="89850F63F8E20051" description="The civic policies must pass the whitelist and blacklist&#xA;to pass the test." Deprecated="False" filter="0" group="General">
                                                            <TunableVariant type="None" name="blacklist" class="OptionalTunable" default="nothing" display="Blacklist" muid="55317955234AC727" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is not in the blacklist. If no blacklist is&#xA;specified, no items are disallowed." Deprecated="False" filter="0" group="General">
                                                                <Tunable name="nothing" class="TunableExistance" display="Nothing" muid="1E8EF9B1CC986364" />
                                                                <TunableTuple name="specify" class="TunableBlacklist" display="Specify" muid="AD80ED0D32969DA0" description="A tunable blacklist." Deprecated="False" filter="0" group="General">
                                                                    <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="F838E14CBC2F2C1E" description="Blacklisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                        <Tunable type="snippet" class="TunableReference" muid="945532ABA3BA5859" description="Allowed and disallowed civic policies." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="BaseCivicPolicy" />
                                                                    </TunableList>
                                                                    <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="8251F155EADAFDCD" description="Tunable option for how many items must be in the blacklist&#xA;for the blacklist to fail when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                        <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="59F0B1A860528B24" />
                                                                        <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="3F30247B5E632CE6" description="When testing a collection of items, the number of items in&#xA;that collection that are in the blacklist must pass this&#xA;threshold test for the blacklist to disallow them all." Deprecated="False" filter="0" group="General">
                                                                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="FDFA3D7C885DBFE7" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                            <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="CA47A55E15228A48" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                        </TunableTuple>
                                                                    </TunableVariant>
                                                                </TunableTuple>
                                                            </TunableVariant>
                                                            <TunableVariant type="None" name="whitelist" class="OptionalTunable" default="everything" display="Whitelist" muid="7A8879D604C59669" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is in the whitelist. If no whitelist is&#xA;specified, all items are allowed." Deprecated="False" filter="0" group="General">
                                                                <Tunable name="everything" class="TunableExistance" display="Everything" muid="E8B076B68319D572" />
                                                                <TunableTuple name="specify" class="TunableWhitelist" display="Specify" muid="B7A1B4FD6D6948A1" description="A tunable whitelist." Deprecated="False" filter="0" group="General">
                                                                    <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="F5049F8F112ED042" description="Tunable option for how many items must be in the whitelist&#xA;for the whitelist to pass when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                        <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="620C1A5C02723024" />
                                                                        <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="38232F336AEAFB55" description="When testing a collection of items, the number of items in&#xA;that collection that are in the whitelist must pass this&#xA;threshold test for the whitelist to allow them all." Deprecated="False" filter="0" group="General">
                                                                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="F0092C5596582965" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                            <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="B4D367E6F4B9A3AA" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                        </TunableTuple>
                                                                    </TunableVariant>
                                                                    <TunableList name="whitelist" class="TunableSet" display="Whitelist" muid="A6AD7890E760AE2A" description="Whitelisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                        <Tunable type="snippet" class="TunableReference" muid="52147185D7902437" description="Allowed and disallowed civic policies." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="BaseCivicPolicy" />
                                                                    </TunableList>
                                                                </TunableTuple>
                                                            </TunableVariant>
                                                        </TunableTuple>
                                                    </TunableTuple>
                                                    <TunableTuple name="enacted" class="TunableBaseCivicPolicyTestEnacted" display="Enacted" muid="13C7516849E3B396" description="Test enacted policies." Deprecated="False" filter="0" group="General">
                                                        <TunableTuple name="white_black_list" class="TunableWhiteBlackList" display="White Black List" muid="7D0E9139B6F6B1B" description="The civic policies must pass the whitelist and blacklist&#xA;to pass the test." Deprecated="False" filter="0" group="General">
                                                            <TunableVariant type="None" name="blacklist" class="OptionalTunable" default="nothing" display="Blacklist" muid="8C9CD4D1FDBE123F" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is not in the blacklist. If no blacklist is&#xA;specified, no items are disallowed." Deprecated="False" filter="0" group="General">
                                                                <Tunable name="nothing" class="TunableExistance" display="Nothing" muid="46D6FC38598AD5BB" />
                                                                <TunableTuple name="specify" class="TunableBlacklist" display="Specify" muid="4539EE2C007EAA43" description="A tunable blacklist." Deprecated="False" filter="0" group="General">
                                                                    <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="FDD52D25F188ABB" description="Blacklisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                        <Tunable type="snippet" class="TunableReference" muid="87D7EFBBC294B4A3" description="Allowed and disallowed civic policies." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="BaseCivicPolicy" />
                                                                    </TunableList>
                                                                    <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="F743A6EB3FD87451" description="Tunable option for how many items must be in the blacklist&#xA;for the blacklist to fail when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                        <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="E609E1BD11664444" />
                                                                        <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="F298A1ED3CA5A7C6" description="When testing a collection of items, the number of items in&#xA;that collection that are in the blacklist must pass this&#xA;threshold test for the blacklist to disallow them all." Deprecated="False" filter="0" group="General">
                                                                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="AB7409D40E525817" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                            <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="CD4B4A7C150F8D2F" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                        </TunableTuple>
                                                                    </TunableVariant>
                                                                </TunableTuple>
                                                            </TunableVariant>
                                                            <TunableVariant type="None" name="whitelist" class="OptionalTunable" default="everything" display="Whitelist" muid="3F1298D86824AC90" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is in the whitelist. If no whitelist is&#xA;specified, all items are allowed." Deprecated="False" filter="0" group="General">
                                                                <Tunable name="everything" class="TunableExistance" display="Everything" muid="499E248DB320E852" />
                                                                <TunableTuple name="specify" class="TunableWhitelist" display="Specify" muid="CEF7BA1518BF7C58" description="A tunable whitelist." Deprecated="False" filter="0" group="General">
                                                                    <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="435E93124D7AED65" description="Tunable option for how many items must be in the whitelist&#xA;for the whitelist to pass when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                        <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="BCAC90DF677DD7E7" />
                                                                        <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="2ECB98C403D67666" description="When testing a collection of items, the number of items in&#xA;that collection that are in the whitelist must pass this&#xA;threshold test for the whitelist to allow them all." Deprecated="False" filter="0" group="General">
                                                                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="2F3E16506DC46E17" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                            <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="A1E56EF0EE5A0073" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                        </TunableTuple>
                                                                    </TunableVariant>
                                                                    <TunableList name="whitelist" class="TunableSet" display="Whitelist" muid="C5F0AAFFD8CF1512" description="Whitelisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                        <Tunable type="snippet" class="TunableReference" muid="ABC3D3403C7CCD25" description="Allowed and disallowed civic policies." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="BaseCivicPolicy" />
                                                                    </TunableList>
                                                                </TunableTuple>
                                                            </TunableVariant>
                                                        </TunableTuple>
                                                    </TunableTuple>
                                                    <TunableTuple name="repealable" class="TunableBaseCivicPolicyTestRepealable" display="Repealable" muid="B3C968EDD4AD29A1" description="Test up for repeal policies. Up for Repeal policies have been specifically marked&#xA;as such and will (if the vote/petition threshold is reached) be repealed&#xA;as part of closing the next vote." Deprecated="False" filter="0" group="General">
                                                        <TunableTuple name="white_black_list" class="TunableWhiteBlackList" display="White Black List" muid="D217A4B5282A878E" description="The civic policies must pass the whitelist and blacklist&#xA;to pass the test." Deprecated="False" filter="0" group="General">
                                                            <TunableVariant type="None" name="blacklist" class="OptionalTunable" default="nothing" display="Blacklist" muid="65889BB52106268C" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is not in the blacklist. If no blacklist is&#xA;specified, no items are disallowed." Deprecated="False" filter="0" group="General">
                                                                <Tunable name="nothing" class="TunableExistance" display="Nothing" muid="9EED711E03A9D9FB" />
                                                                <TunableTuple name="specify" class="TunableBlacklist" display="Specify" muid="70C2CEE2F7300525" description="A tunable blacklist." Deprecated="False" filter="0" group="General">
                                                                    <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="F2CBE27B6598A58E" description="Blacklisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                        <Tunable type="snippet" class="TunableReference" muid="42BFF9C4DC594C41" description="Allowed and disallowed civic policies." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="BaseCivicPolicy" />
                                                                    </TunableList>
                                                                    <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="8046347CBCFF9B2B" description="Tunable option for how many items must be in the blacklist&#xA;for the blacklist to fail when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                        <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="A8EEE599F8628C3E" />
                                                                        <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="9EA69CB132B8EC96" description="When testing a collection of items, the number of items in&#xA;that collection that are in the blacklist must pass this&#xA;threshold test for the blacklist to disallow them all." Deprecated="False" filter="0" group="General">
                                                                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="26408EE02FF08AFF" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                            <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="B696E950AF98F115" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                        </TunableTuple>
                                                                    </TunableVariant>
                                                                </TunableTuple>
                                                            </TunableVariant>
                                                            <TunableVariant type="None" name="whitelist" class="OptionalTunable" default="everything" display="Whitelist" muid="26A8DB3714D033C0" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is in the whitelist. If no whitelist is&#xA;specified, all items are allowed." Deprecated="False" filter="0" group="General">
                                                                <Tunable name="everything" class="TunableExistance" display="Everything" muid="317D7267ADB4D956" />
                                                                <TunableTuple name="specify" class="TunableWhitelist" display="Specify" muid="E39833CB8BDB3353" description="A tunable whitelist." Deprecated="False" filter="0" group="General">
                                                                    <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="B6E9BF16032F7331" description="Tunable option for how many items must be in the whitelist&#xA;for the whitelist to pass when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                        <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="131A9BC2E0AD58DA" />
                                                                        <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="6D658E132B575C03" description="When testing a collection of items, the number of items in&#xA;that collection that are in the whitelist must pass this&#xA;threshold test for the whitelist to allow them all." Deprecated="False" filter="0" group="General">
                                                                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="23A37849AD20C38" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                            <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="5F2C468C800D6271" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                        </TunableTuple>
                                                                    </TunableVariant>
                                                                    <TunableList name="whitelist" class="TunableSet" display="Whitelist" muid="1058FE5930F1595" description="Whitelisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                        <Tunable type="snippet" class="TunableReference" muid="35ED7AAAAB89B984" description="Allowed and disallowed civic policies." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="BaseCivicPolicy" />
                                                                    </TunableList>
                                                                </TunableTuple>
                                                            </TunableVariant>
                                                        </TunableTuple>
                                                    </TunableTuple>
                                                    <TunableTuple name="voting_open" class="TunableBaseCivicPolicyTestVotingOpen" display="Voting Open" muid="93F96313E16F82A7" description="If checked, will verify that voting is currently active." Deprecated="False" filter="0" group="General">
                                                        <Tunable type="bool" name="negate" class="Tunable" default="False" display="Negate" muid="F36E55752E57EC10" description="If checked then this test will return True when not active." Deprecated="False" filter="0" group="General" />
                                                    </TunableTuple>
                                                    <TunableTuple name="voting_time_until_change" class="TunableBaseCivicPolicyTestVotingTimeUntilChange" display="Voting Time Until Change" muid="E5F80FF8ACF84856" description="If checked, will check the time remaining before the next voting open status change." Deprecated="False" filter="0" group="General">
                                                        <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="AD31A9C4C6FF0EB7" description="The amount of time relative to the next voting state change to test." Deprecated="False" filter="0" group="General">
                                                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="8C0229C9135C6117" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                            <TunableTuple name="value" class="TunableTimeSpan" display="Value" muid="416AA317A71D744D" description="Duration before the next change." Deprecated="False" filter="0" group="General">
                                                                <Tunable type="int" name="days" class="TunableRange" default="0" display="Days" muid="FB9B50ECD1DAC7CB" min="0" max="None" description="Number of days" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                <Tunable type="int" name="hours" class="TunableRange" default="1" display="Hours" muid="9498B1CBBD4C1F47" min="0" max="23" description="Number of hours" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                <Tunable type="int" name="minutes" class="TunableRange" default="0" display="Minutes" muid="1EF3004BBB1DD4CE" min="0" max="59" description="Number of minutes" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                            </TunableTuple>
                                                        </TunableTuple>
                                                    </TunableTuple>
                                                </TunableVariant>
                                            </TunableList>
                                            <TunableVariant type="None" name="street" class="TunableVariant" default="literal" display="Street" muid="B8F1D6BEAD4CDC49" description="Select what street to test." Deprecated="False" filter="0" group="General">
                                                <Tunable type="street" name="literal" class="TunableReference" display="Literal" muid="CA51357C090D61A4" description="Identify a specific Street." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                <TunableTuple name="via_street_participant" class="TunableStreetParticipant" display="Via Street Participant" muid="B5173180B00DC09B" description="Get the street participant." Deprecated="False" filter="0" group="General" />
                                                <TunableVariant type="None" name="via_zone_source" class="TunableVariant" default="use_current_zone" display="Via Zone Source" muid="1C8F50A77C274952" description="Select the street to use by specifying a Zone Source." Deprecated="False" filter="0" group="General">
                                                    <TunableTuple name="use_current_zone" class="TunableActiveZone" display="Use Current Zone" muid="794EF070B4036DB6" description="Get the active zone." Deprecated="False" filter="0" group="General" />
                                                    <TunableTuple name="use_participant_home_zone" class="TunableParticipantHomeZone" display="Use Participant Home Zone" muid="CA20680998B1E5B5" description="Get a participant's home zone. Can be None if they don't have one." Deprecated="False" filter="0" group="General">
                                                        <TunableEnum type="ParticipantTypeSingleSim" name="participant" class="TunableEnumEntry" default="Actor" display="Participant" muid="491BD277DE97D5FA" static_entries="interactions.ParticipantTypeSingleSim" description="Test against the participant's home zone. Townies' home zone will&#xA;be None." Deprecated="False" filter="0" group="General" />
                                                    </TunableTuple>
                                                    <TunableTuple name="use_pick_info" class="TunablePickInfoZone" display="Use Pick Info" muid="185529E8137B10B7" description="Get the zone of the lot the user clicked on." Deprecated="False" filter="0" group="General" />
                                                    <TunableTuple name="use_picked_zone_ids" class="TunablePickedZoneIds" display="Use Picked Zone Ids" muid="4B8387DDEA6CE4E5" description="Get the zone from the interaction's picked_zone_ids participant. Usually&#xA;comes from a picker." Deprecated="False" filter="0" group="General" />
                                                </TunableVariant>
                                            </TunableVariant>
                                        </TunableTuple>
                                    </TunableVariant>
                                </TunableList>
                            </TunableList>
                            <TunableList name="weighted_tests" class="TunableList" display="Weighted Tests" muid="445EBE3360F1FBDD" description="Weighted tests for the individual object. One is chosen &#xA;based on weight, and all objects are run against that chosen&#xA;test set." Deprecated="False" filter="0" group="General">
                                <TunableTuple class="TunableTuple" muid="84F5D60066C4668A" Deprecated="False" filter="0" group="General">
                                    <TunableList name="tests" class="TunableObjectModifyTestSet" display="Tests" muid="1C57707BBFFF2C03" description="All least one subtest group (AKA one list item) must pass&#xA;within this list before the action associated with this&#xA;tuning will be run." Deprecated="False" filter="0" group="General">
                                        <TunableList class="TunableList" muid="81A44D3C38CD7BD5" description="A list of tests.  All of these must pass for the group to pass." Deprecated="False" filter="0" group="General">
                                            <TunableVariant type="None" class="TunableObjectModifyTestVariant" default="none" muid="AF7100BFA7F74E5B" description="A single tunable test." Deprecated="False" filter="0" group="General">
                                                <TunableTuple name="consumable_test" class="TunableConsumableTest" display="Consumable Test" muid="71BAD741DF48B74A" description="A test that checks information about consumables." Deprecated="False" filter="0" group="General">
                                                    <TunableTuple name="bites_left" class="TunableTuple" display="Bites Left" muid="1136A586D2C3BB3F" description="A check that tests against the number of bites left before the&#xA;subject is completely consumed." Deprecated="False" filter="0" group="General">
                                                        <TunableEnum type="Operator" name="operator" class="TunableOperator" default="EQUAL" display="Operator" muid="E266E0747F595B8B" static_entries="sims4-math.Operator" description="The operator to use for the comparison." Deprecated="False" filter="0" group="General" />
                                                        <Tunable type="int" name="value" class="Tunable" default="1" display="Value" muid="E15B95D0E24EAE60" description="The number of bites to test against." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                    </TunableTuple>
                                                    <Tunable type="bool" name="is_consumable" class="Tunable" default="True" display="Is Consumable" muid="D9627377A6FA7F6C" description="If checked, the subject must be a consumable, if unchecked, the&#xA;subject must not be a consumable." Deprecated="False" filter="0" group="General" />
                                                    <TunableEnum type="ParticipantType" name="subject" class="TunableEnumEntry" default="Object" display="Subject" muid="1AB1B3B21403E9F5" static_entries="interactions.ParticipantType" description="The subject of the test. This is the consumable object." Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableTuple name="custom_name" class="TunableCustomNameTest" display="Custom Name" muid="602F62113EFFA762" description="Require or prohibit an object from having a custom&#xA;name or description set." Deprecated="False" filter="0" group="General">
                                                    <TunableVariant type="None" name="has_custom_description" class="OptionalTunable" default="disabled" display="Has Custom Description" muid="EDECADC341716BF2" description="If checked, the subject must have a custom description set. If unchecked, it cannot have a custom description set." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="48C356D721446433" />
                                                        <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="DA2DD9EC8A130BD5" description="If checked, the subject must have a custom description set. If unchecked, it cannot have a custom description set." Deprecated="False" filter="0" group="General" />
                                                    </TunableVariant>
                                                    <TunableVariant type="None" name="has_custom_name" class="OptionalTunable" default="disabled" display="Has Custom Name" muid="28CD4159EC87828" description="If checked, the subject must have a custom name set. If unchecked, it cannot have a custom name set." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="EC4DB8CC270F0770" />
                                                        <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="744EED4473844268" description="If checked, the subject must have a custom name set. If unchecked, it cannot have a custom name set." Deprecated="False" filter="0" group="General" />
                                                    </TunableVariant>
                                                    <TunableEnum type="ParticipantType" name="participant" class="TunableEnumEntry" default="Object" display="Participant" muid="73638B1EE9D2B6CE" static_entries="interactions.ParticipantType" description="The subject who is the object of this test." Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableTuple name="elapsed_time" class="TunableTimeElapsedZoneTest" display="Elapsed Time" muid="276FB7F8CF2956A1" description="Test to make sure enough time has passed since the zone was last saved." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="float" name="minutes_passed" class="TunableSimMinute" default="720" display="Minutes Passed" muid="F54890A47250CA58" min="1" max="None" description="This test will pass when the minutes passed is greater than the&#xA;number minutes since last loading into zone." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableTuple name="existence" class="TunableExistenceTest" display="Existence" muid="E7A748087B533BA" description="A test to check whether the specified participant exists." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="bool" name="allow_hidden_sim_status" class="Tunable" default="False" display="Allow Hidden Sim Status" muid="DA976D434F2A4555" description="If checked then we will ignore hidden Sim status such that they will count as existing even though they&#xA;have been hidden.  Use this in conjunction with Require Instantiated in order to determine the Sim's actual&#xA;instantiated status. " Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="bool" name="exists" class="Tunable" default="True" display="Exists" muid="4381F2E7F6AB670F" description="When checked, require the specified participant to exist. When&#xA;unchecked, require the specified participant to not exist." Deprecated="False" filter="0" group="General" />
                                                    <TunableEnum type="ParticipantType" name="participant" class="TunableEnumEntry" default="TargetSim" display="Participant" muid="70A313FBD5F512B6" static_entries="interactions.ParticipantType" description="The participant for which to check existence." Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="bool" name="require_instantiatable" class="Tunable" default="True" display="Require Instantiatable" muid="E71EB3D4C0324B84" description="If checked, the specified participant must be instantiatable. This&#xA;is generally true for all Sims at LOD above MINIMUM." Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableTuple name="game_option" class="TunableSimInfoGameplayOptionsTest" display="Game Option" muid="58877A40E5D00494" description="Test whether or not a Sim has a specific gameplay option set." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="TestableGameOptions" name="gameplay_option" class="TunableEnumEntry" default="CIVIC_POLICY_NPC_VOTING_ENABLED" display="Gameplay Option" muid="D240BB71052C826" static_entries="event_testing-game_option_tests.TestableGameOptions" description="The gameplay option to test. This test will pass if this option is&#xA;set." Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="bool" name="invert" class="Tunable" default="False" display="Invert" muid="A54175928BF3D1A" description="If enabled, requires the option to be unset for the test to pass." Deprecated="False" filter="0" group="General" />
                                                    <TunableVariant type="None" name="tooltip" class="OptionalTunable" default="disabled" display="Tooltip" muid="F20CB5CF23118EB6" description="Reason of failure." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="F12C1A278D758E8E" />
                                                        <Tunable type="int" name="enabled" class="TunableLocalizedString" default="0x0" display="Enabled" muid="F3A6E29F63B86790" description="Reason of failure." Deprecated="False" filter="0" group="General" />
                                                    </TunableVariant>
                                                </TunableTuple>
                                                <TunableTuple name="inventory" class="TunableInventoryTest" display="Inventory" muid="722E1C1E74E4D3D4" description="A test to check on the contents of either a sim inventory or&#xA;an object inventory." Deprecated="False" filter="0" group="General">
                                                    <TunableVariant type="None" name="contents_check" class="TunableVariant" default="has_anything" display="Contents Check" muid="CBF603989138C727" description="Checks to run on each object of the specified inventory" Deprecated="False" filter="0" group="General">
                                                        <Tunable name="has_anything" class="TunableExistance" display="Has Anything" muid="BD8689BA4ED0F8BA" />
                                                        <TunableTuple name="has_object_of_participant_type" class="TunableTuple" display="Has Object Of Participant Type" muid="125A5ABDAF65FB6B" description="Participant type we want to test if its in the selected&#xA;inventory." Deprecated="False" filter="0" group="General">
                                                            <TunableEnum type="ParticipantType" name="participant" class="TunableEnumEntry" default="Object" display="Participant" muid="483310949830194D" static_entries="interactions.ParticipantType" description="Which participant of the interaction do we want to validate&#xA;on the inventory. " Deprecated="False" filter="0" group="General" />
                                                        </TunableTuple>
                                                        <TunableTuple name="has_object_with_def" class="TunableTuple" display="Has Object With Def" muid="163022776419598C" Deprecated="False" filter="0" group="General">
                                                            <Tunable type="object" name="definition" class="TunableReference" display="Definition" muid="3D935BF7AA80366E" description="The object definition to look for inside inventory." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                        </TunableTuple>
                                                        <TunableTuple name="has_object_with_states" class="BasicStateCheckFactory" display="Has Object With States" muid="6DABD32B83257A9" description="This option tests crafted item's tags against a list of possible&#xA;tags." Deprecated="False" filter="0" group="General">
                                                            <TunableVariant type="None" name="object_requirement" class="TunableVariant" default="any_object" display="Object Requirement" muid="26AED4D86321503D" Deprecated="False" filter="0" group="General">
                                                                <Tunable name="any_object" class="TunableExistance" display="Any Object" muid="8283045F4AFABF70" />
                                                                <TunableTuple name="definition" class="TunableTuple" display="Definition" muid="2E4B2AB496207758" Deprecated="False" filter="0" group="General">
                                                                    <Tunable type="object" name="definition" class="TunableReference" display="Definition" muid="1F6A0247B8C3DE7A" description="The object must have this definition." allow_none="False" Deprecated="False" filter="0" group="General" />
                                                                </TunableTuple>
                                                                <TunableTuple name="tag" class="TunableTuple" display="Tag" muid="75E07872DA7B8AE6" Deprecated="False" filter="0" group="General">
                                                                    <TunableTuple name="tag" class="CraftTaggedItemFactory" display="Tag" muid="AEF1AF6A56C5D7CF" description="The object must have this tag." Deprecated="False" filter="0" group="General">
                                                                        <TunableList name="tag_set" class="TunableSet" display="Tag Set" muid="AE51A5DBBD847E33" description="The tag of objects we want to test ownership of" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                            <TunableEnum type="Tag" class="TunableEnumEntry" default="INVALID" muid="9122FD65ABBCC24A" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="What tag to test for" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                                        </TunableList>
                                                                        <TunableEnum type="TagTestType" name="test_type" class="TunableEnumEntry" default="CONTAINS_ANY_TAG_IN_SET" display="Test Type" muid="E0CA316B50DCE8E3" static_entries="objects-object_tests.TagTestType" description="How to test the tags in the tag set against the objects on the lot." Deprecated="False" filter="0" group="General" />
                                                                    </TunableTuple>
                                                                </TunableTuple>
                                                            </TunableVariant>
                                                            <TunableList name="state_set" class="TunableSet" display="State Set" muid="242E60086010EF83" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                <Tunable type="object_state" class="TunableReference" muid="B1488220E9109B2E" description="What state to test for." allow_none="False" Deprecated="False" filter="0" group="General" />
                                                            </TunableList>
                                                            <TunableEnum type="StateTestType" name="test_type" class="TunableEnumEntry" default="CONTAINS_ANY_STATE_IN_SET" display="Test Type" muid="3B640A40AAA70E21" static_entries="objects-object_tests.StateTestType" description="How to test the states in the state set against the objects in&#xA;the inventory." Deprecated="False" filter="0" group="General" />
                                                        </TunableTuple>
                                                        <TunableTuple name="has_object_with_tag" class="CraftTaggedItemFactory" display="Has Object With Tag" muid="980252927A26B6D0" description="This option tests crafted item's tags against a list of possible tags" Deprecated="False" filter="0" group="General">
                                                            <TunableList name="tag_set" class="TunableSet" display="Tag Set" muid="1BC88DB93BA4FCBE" description="The tag of objects we want to test ownership of" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                <TunableEnum type="Tag" class="TunableEnumEntry" default="INVALID" muid="16EBF3821699DE18" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="What tag to test for" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                            </TunableList>
                                                            <TunableEnum type="TagTestType" name="test_type" class="TunableEnumEntry" default="CONTAINS_ANY_TAG_IN_SET" display="Test Type" muid="747F8DCFE248FC35" static_entries="objects-object_tests.TagTestType" description="How to test the tags in the tag set against the objects on the lot." Deprecated="False" filter="0" group="General" />
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                    <TunableVariant type="None" name="inventory_location" class="TunableVariant" default="participant_inventory" display="Inventory Location" muid="2951B7D85F4570DB" description="Who owns the inventory. Either look in the inventory of a &#xA;participant or specify an object inventory type directly.&#xA;&#xA;If participant returns multiple inventory owners, the test will &#xA;pass only if ALL of those owners pass the inventory content test." Deprecated="False" filter="0" group="General">
                                                        <TunableTuple name="hidden_inventory_objects" class="TunableTuple" display="Hidden Inventory Objects" muid="D24256957BF9AB39" Deprecated="False" filter="0" group="General">
                                                            <TunableEnum type="InventoryType" name="inventory" class="TunableEnumEntry" default="UNDEFINED" display="Inventory" muid="D588BE0D5205B94B" dynamic_entries="objects-components-inventory_enums.InventoryType._elements" static_entries="objects-components-inventory_enums.InventoryType" description="Check in the hidden inventory for objects that can go into the&#xA;specified inventory type. EX: check that there are mailbox&#xA;objects in the hidden inventory" Deprecated="False" filter="0" group="General" />
                                                        </TunableTuple>
                                                        <TunableTuple name="object_inventory_type" class="TunableTuple" display="Object Inventory Type" muid="6C3B29F63B229E60" Deprecated="False" filter="0" group="General">
                                                            <TunableEnum type="InventoryType" name="inventory" class="TunableEnumEntry" default="UNDEFINED" display="Inventory" muid="58B64B4711614A3F" dynamic_entries="objects-components-inventory_enums.InventoryType._elements" static_entries="objects-components-inventory_enums.InventoryType" description="Check the global Object inventory that has the specified type.&#xA;EX: check in the global fridge inventory that exists for all&#xA;fridges" Deprecated="False" filter="0" group="General" />
                                                        </TunableTuple>
                                                        <TunableTuple name="participant_inventory" class="TunableTuple" display="Participant Inventory" muid="65F8036CA19C4532" Deprecated="False" filter="0" group="General">
                                                            <TunableEnum type="ParticipantType" name="inventory" class="TunableEnumEntry" default="Actor" display="Inventory" muid="ED068024EF934B0E" static_entries="interactions.ParticipantType" description="The owner of the inventory" Deprecated="False" filter="0" group="General" />
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                    <TunableTuple name="required_count" class="TunableThreshold" display="Required Count" muid="61922B997CEE4A86" description="The inventory must have a tunable threshold of objects that&#xA;pass the contents check test.&#xA;&#xA;EX: test is object definition of type pizza. required count is enabled&#xA;and has a threshold of &gt;= 5. That means this test will pass if you&#xA;have 5 or more pizzas in your inventory. To check if any objects&#xA;exist, use required count &gt;= 1" Deprecated="False" filter="0" group="General">
                                                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="36B47220E6B34C3D" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                        <Tunable type="int" name="value" class="Tunable" default="1" display="Value" muid="4EEC6C8900A2CB6F" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                    </TunableTuple>
                                                    <TunableEnum type="TestHiddenInventories" name="test_hidden" class="TunableEnumEntry" default="ANY" display="Test Hidden" muid="998283229F51AB67" static_entries="objects-object_tests.InventoryTest.TestHiddenInventories" description="Optionally restrict to only hidden or non-hidden inventories." Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableTuple name="location" class="TunableLocationTest" display="Location" muid="59E7E2D474DCC54D" description="Tests for object locations.&#xA;Outside: Check if an object is on the inside or outside (has a roof over&#xA;its head)&#xA;Natural ground: Checks the floor tiles where the object is to see if it &#xA;qualifies as natural ground" Deprecated="False" filter="0" group="General">
                                                    <TunableTuple name="location_tests" class="TunableTuple" display="Location Tests" muid="25C39E38270FE29A" Deprecated="False" filter="0" group="General">
                                                        <TunableVariant type="None" name="has_terrain_tag" class="OptionalTunable" default="Don't_Test" display="Has Terrain Tag" muid="D2C1D7A3D923715D" description="If checked, will verify the subject of the test is currently on&#xA;the tuned terrain tag." Deprecated="False" filter="0" group="General">
                                                            <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="B264FC444CCE746" />
                                                            <TunableTuple name="enabled" class="TunableTuple" display="Enabled" muid="5F6E7BF3AEE6FD50" description=",&#xA;A set of terrain tags required for this test to pass." Deprecated="False" filter="0" group="General">
                                                                <Tunable type="bool" name="negate" class="Tunable" default="False" display="Negate" muid="897BF3744630FA85" description="If checked, the test will be inverted. In other words,&#xA;the test will fail if at least one tag is detected at&#xA;this location." Deprecated="False" filter="0" group="General" />
                                                                <TunableList name="terrain_tags" class="TunableEnumSet" display="Terrain Tags" muid="7229CA1B9A05F211" description="A set of terrain tags. Only one of these tags needs to be&#xA;present at this location. Although it is not tunable, there&#xA;is a threshold weight underneath which a terrain tag will&#xA;not appear to be present." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                    <TunableEnum type="TerrainTag" class="TunableEnumEntry" default="INVALID" muid="A05EC6924F3B59E5" static_entries="world-terrain_enums.TerrainTag" Deprecated="False" filter="0" group="General" />
                                                                </TunableList>
                                                                <Tunable type="bool" name="test_floor_tiles" class="Tunable" default="False" display="Test Floor Tiles" muid="2F3EFC63246E4A23" description="If checked, floor tiles will be tested. Otherwise, &#xA;it'll only check the terrain and will ignore the &#xA;floor tiles on the terrain." Deprecated="False" filter="0" group="General" />
                                                            </TunableTuple>
                                                        </TunableVariant>
                                                        <TunableVariant type="None" name="in_common_area" class="OptionalTunable" default="Don't_Test" display="In Common Area" muid="7F5AFE7F3C5A6988" description="If checked, will verify the subject is in the common area&#xA;of an apartment.  If unchecked will verify the subject is not." Deprecated="False" filter="0" group="General">
                                                            <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="2088E408502F07AA" />
                                                            <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="79086B59F8089BFA" Deprecated="False" filter="0" group="General" />
                                                        </TunableVariant>
                                                        <TunableVariant type="None" name="is_fire_allowed" class="OptionalTunable" default="Don't_Test" display="Is Fire Allowed" muid="C12936F101BA711A" description="If checked, will verify if fire is possible at the subject's position. &#xA;If unchecked, will pass if fire is not possible.&#xA;If not enabled, doesn't care either way." Deprecated="False" filter="0" group="General">
                                                            <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="AF0049131B3B0C33" />
                                                            <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="34F805A49D7BEE65" Deprecated="False" filter="0" group="General" />
                                                        </TunableVariant>
                                                        <TunableVariant type="None" name="is_in_slot" class="OptionalTunable" default="Don't_Test" display="Is In Slot" muid="D42D77D5CE1E9E96" description="If enabled will test if the object is attacked/deattached to&#xA;any of possible tuned slots.&#xA;If you tune a slot type set the test will test if the object &#xA;is slotted or not slotted into into any of those types. " Deprecated="False" filter="0" group="General">
                                                            <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="8254990B7D7A5C91" />
                                                            <TunableTuple name="enabled" class="TunableTuple" display="Enabled" muid="9F815BC5762DE22" description="Test if an object is current slotted in any of a possible&#xA;list of slot types.&#xA;Empty slot type set is allowed for testing for slotted or&#xA;not slotted only." Deprecated="False" filter="0" group="General">
                                                                <TunableVariant type="None" name="slot_test_type" class="TunableVariant" default="any_slot" display="Slot Test Type" muid="1BC9165D665CADE0" description="Strategy to test the slots:&#xA;Any Slot - is the object in any slot&#xA;Surface Slot - is object is in a surface slot&#xA;Specific Slot - is the object in specific list of slots" Deprecated="False" filter="0" group="General">
                                                                    <TunableTuple name="any_slot" class="TunableSlotTestType" display="Any Slot" muid="592B933369CBE643" description="Singleton factory for testing if object is slotted." Deprecated="False" filter="0" group="General">
                                                                        <Tunable type="bool" name="require_slotted" class="Tunable" default="True" display="Require Slotted" muid="3BBD4DE311394988" description="If checked, return success if the object is slotted&#xA;If unchecked, test the absense of slotting." Deprecated="False" filter="0" group="General" />
                                                                    </TunableTuple>
                                                                    <TunableTuple name="specific_slot" class="TunableSpecificSlotTest" display="Specific Slot" muid="4853CA8CBF7EE0D9" description="Subclass of SlotTestType that can check against a specific&#xA;slot set." Deprecated="False" filter="0" group="General">
                                                                        <Tunable type="bool" name="require_slotted" class="Tunable" default="True" display="Require Slotted" muid="506B858D700A228D" description="If checked, return success if the object is slotted&#xA;If unchecked, test the absense of slotting." Deprecated="False" filter="0" group="General" />
                                                                        <Tunable type="slot_type_set" name="specific_slot_set" class="TunableReference" display="Specific Slot Set" muid="C051CF5917E984C0" description="Set of slots the object may be attached to." allow_none="False" Deprecated="False" filter="0" group="General" />
                                                                    </TunableTuple>
                                                                    <TunableTuple name="surface_slot" class="TunableSurfaceSlotTest" display="Surface Slot" muid="6F791B18D477298" description="Subclass of SlotTestType that checks that a slot has&#xA;is_surface set to true." Deprecated="False" filter="0" group="General">
                                                                        <Tunable type="bool" name="require_slotted" class="Tunable" default="True" display="Require Slotted" muid="7FC6CE3A4F22192B" description="If checked, return success if the object is slotted&#xA;If unchecked, test the absense of slotting." Deprecated="False" filter="0" group="General" />
                                                                    </TunableTuple>
                                                                </TunableVariant>
                                                            </TunableTuple>
                                                        </TunableVariant>
                                                        <TunableVariant type="None" name="is_inside_building" class="OptionalTunable" default="Don't_Test" display="Is Inside Building" muid="81BB64E968FD4384" description="If checked, will verify if the subject of the test is inside a&#xA;building. This uses a client function that checks if the block&#xA;the sim is mostly enclosed by walls or if not, if the adjoining&#xA;blocks are themselves enclosed. This should be used when we&#xA;want to test if a subject is inside a normally constructed &#xA;building. If we simply want to test whether the subject is &#xA;covered / has a roof over them, use is_outside. See comment on&#xA;is_outside for more details. If unchecked, will negate this &#xA;test." Deprecated="False" filter="0" group="General">
                                                            <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="EB1E72A76F38E136" />
                                                            <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="4A92783B03B2C178" Deprecated="False" filter="0" group="General" />
                                                        </TunableVariant>
                                                        <TunableVariant type="None" name="is_natural_ground" class="OptionalTunable" default="Don't_Test" display="Is Natural Ground" muid="9E7769E109D2B166" description="If checked, will verify the subject of the test is on natural &#xA;ground (no floor tiles are under him).&#xA;Otherwise, will verify the subject of the test is not on &#xA;natural ground." Deprecated="False" filter="0" group="General">
                                                            <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="B047B7BF0772A0B9" />
                                                            <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="EE738EAE995F268A" Deprecated="False" filter="0" group="General" />
                                                        </TunableVariant>
                                                        <TunableVariant type="None" name="is_on_active_lot" class="OptionalTunable" default="Don't_Test" display="Is On Active Lot" muid="244022F16A2DFAC5" description="If disabled the test will not be used.&#xA;If enabled and checked, the test will pass if the subject is&#xA;on the active lot. (their center is within the lot bounds)&#xA;If enabled and not checked, the test will pass if the subject is &#xA;outside of the active lot.&#xA;&#xA;For example, Ask To Leave is tuned with this enabled and checked&#xA;for the TargetSim. You can only ask someone to leave if they&#xA;are actually on the active lot, but not if they are wandering&#xA;around in the open streets." Deprecated="False" filter="0" group="General">
                                                            <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="89BE5CB972ECC256" />
                                                            <TunableTuple name="Is_or_is_not_on_active_lot" class="TunableTuple" display="Is Or Is Not On Active Lot" muid="F69FDDDE3E5C33CA" Deprecated="False" filter="0" group="General">
                                                                <Tunable type="bool" name="include_spawn_point" class="Tunable" default="False" display="Include Spawn Point" muid="3DAC793CFF393D7" description="If set to true, we will consider the lot's spawn point as part of the active lot." Deprecated="False" filter="0" group="General" />
                                                                <Tunable type="bool" name="is_or_is_not_on_active_lot" class="Tunable" default="True" display="Is Or Is Not On Active Lot" muid="83166CC0AB53A51B" description="If checked then the test will pass if the subject is on&#xA;the active lot." Deprecated="False" filter="0" group="General" />
                                                                <TunableVariant type="None" name="tolerance" class="TunableVariant" default="explicit" display="Tolerance" muid="BF8F0C1F7D856A1E" Deprecated="False" filter="0" group="General">
                                                                    <Tunable type="int" name="explicit" class="Tunable" default="0" display="Explicit" muid="85BC559A87011728" description="The tolerance from the edge of the lot that the&#xA;location test will use in order to determine if the&#xA;test target is considered on lot or not." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                    <TunableTuple name="use_default_tolerance" class="UseDefaultOfflotToleranceFactory" display="Use Default Tolerance" muid="F6523944D0948569" description="Use the default tuned global offlot tolerance tuned&#xA;in objects.components.statistic_component.Default Off Lot." Deprecated="False" filter="0" group="General" />
                                                                </TunableVariant>
                                                            </TunableTuple>
                                                        </TunableVariant>
                                                        <TunableVariant type="None" name="is_on_level" class="OptionalTunable" default="Don't_Test" display="Is On Level" muid="7B074C44E19CE2F6" description="If enabled, we check the participant's current level against&#xA;the tuned threshold.  In the case of sims in pools, the effective&#xA;level will be that of the surface of the pool, not the bottom." Deprecated="False" filter="0" group="General">
                                                            <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="5E2DA6CA6E824219" />
                                                            <TunableTuple name="enabled" class="TunableThreshold" display="Enabled" muid="B774F9E6A8D07D9E" description="Value/comparison pair used to define a Threshold." Deprecated="False" filter="0" group="General">
                                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="A796FB851DE7C616" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                <Tunable type="int" name="value" class="Tunable" default="0" display="Value" muid="90BD9CEDEBD508E1" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                            </TunableTuple>
                                                        </TunableVariant>
                                                        <TunableVariant type="None" name="is_outside" class="OptionalTunable" default="Don't_Test" display="Is Outside" muid="68DC9F038EDB3F0B" description="PLEASE BE AWARE. If checked, will verify if the subject of the&#xA;test does not have a roof over their head. If unchecked, will &#xA;test if the subject has a roof over their head. If the &#xA;intention is to determine if a subject is in/not in a building, &#xA;this test is deprecated in favor of is_inside_building. If you &#xA;would like to test if a subject is inside a building, but also &#xA;need to test if they have a roof over their head, please use &#xA;both options." Deprecated="False" filter="0" group="General">
                                                            <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="D1BED66796A9FEE5" />
                                                            <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="5504C61D30E216B1" Deprecated="False" filter="0" group="General" />
                                                        </TunableVariant>
                                                        <TunableVariant type="None" name="is_venue_type" class="OptionalTunable" default="Don't_Test" display="Is Venue Type" muid="9506121EA33B8125" description="If checked, will verify if the subject is at a venue of the&#xA;specified type." Deprecated="False" filter="0" group="General">
                                                            <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="303DA423FE05FCF5" />
                                                            <TunableTuple name="enabled" class="TunableTuple" display="Enabled" muid="A7B51953B3053EE6" description="Venue type required for this test to pass." Deprecated="False" filter="0" group="General">
                                                                <Tunable type="bool" name="negate" class="Tunable" default="False" display="Negate" muid="12A44CD43BEAC207" description="If enabled, the test will return true if the subject&#xA;IS NOT at a venue of the specified type." Deprecated="False" filter="0" group="General" />
                                                                <Tunable type="bool" name="use_source_venue" class="Tunable" default="False" display="Use Source Venue" muid="A88D3524FFD8E991" description="If enabled, the test will test the source venue instead of the active&#xA;venue.  For example, the Community Lot instead of the active Marketplace.&#xA;Testing the active venue is the default." Deprecated="False" filter="0" group="General" />
                                                                <Tunable type="venue" name="venue_type" class="TunableReference" display="Venue Type" muid="233149B09014C6E8" description="Venue type to test against." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                            </TunableTuple>
                                                        </TunableVariant>
                                                        <TunableVariant type="None" name="valid_surface_types" class="OptionalTunable" default="Don't_Test" display="Valid Surface Types" muid="67862CF3CDF399AC" description="If enabled, we will test the surface type of the subject&#xA;against prohibited or required surface types." Deprecated="False" filter="0" group="General">
                                                            <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="8DE7474C5085C047" />
                                                            <TunableTuple name="Test_Surface_Types" class="TunableWhiteBlackList" display="Test Surface Types" muid="1C1A3A9ADE62CCB6" description="Required and Prohibited Surface Types. " Deprecated="False" filter="0" group="General">
                                                                <TunableVariant type="None" name="blacklist" class="OptionalTunable" default="nothing" display="Blacklist" muid="5D4A4BA7191EE38A" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is not in the blacklist. If no blacklist is&#xA;specified, no items are disallowed." Deprecated="False" filter="0" group="General">
                                                                    <Tunable name="nothing" class="TunableExistance" display="Nothing" muid="544C5BAF5B3231D4" />
                                                                    <TunableTuple name="specify" class="TunableBlacklist" display="Specify" muid="18B246C4EE4A1B4B" description="A tunable blacklist." Deprecated="False" filter="0" group="General">
                                                                        <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="CAEB00D7CB6D8D2E" description="Blacklisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                            <TunableEnum type="SurfaceType" class="TunableEnumEntry" default="SURFACETYPE_WORLD" muid="5448AF3A666A736C" static_entries="routing.SurfaceType" description="Surface Type the object is placed on." Deprecated="False" filter="0" group="General" invalid_entries="SURFACETYPE_UNKNOWN" />
                                                                        </TunableList>
                                                                        <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="F2DCEE681C1AECBA" description="Tunable option for how many items must be in the blacklist&#xA;for the blacklist to fail when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                            <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="CBDC708522705422" />
                                                                            <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="7F553FEA6CD1F78A" description="When testing a collection of items, the number of items in&#xA;that collection that are in the blacklist must pass this&#xA;threshold test for the blacklist to disallow them all." Deprecated="False" filter="0" group="General">
                                                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="54E0C93A87615571" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                                <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="E2AB6AADB0745872" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                            </TunableTuple>
                                                                        </TunableVariant>
                                                                    </TunableTuple>
                                                                </TunableVariant>
                                                                <TunableVariant type="None" name="whitelist" class="OptionalTunable" default="everything" display="Whitelist" muid="23C3E17651C10F56" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is in the whitelist. If no whitelist is&#xA;specified, all items are allowed." Deprecated="False" filter="0" group="General">
                                                                    <Tunable name="everything" class="TunableExistance" display="Everything" muid="CCD571814D76759D" />
                                                                    <TunableTuple name="specify" class="TunableWhitelist" display="Specify" muid="E832444C236AA265" description="A tunable whitelist." Deprecated="False" filter="0" group="General">
                                                                        <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="B09B0958C8ACDE4E" description="Tunable option for how many items must be in the whitelist&#xA;for the whitelist to pass when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                            <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="5580ADE5B22D3097" />
                                                                            <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="E2BC94693B629939" description="When testing a collection of items, the number of items in&#xA;that collection that are in the whitelist must pass this&#xA;threshold test for the whitelist to allow them all." Deprecated="False" filter="0" group="General">
                                                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="15D962C2D8D556BE" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                                <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="C2BDAA88D532205F" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                            </TunableTuple>
                                                                        </TunableVariant>
                                                                        <TunableList name="whitelist" class="TunableSet" display="Whitelist" muid="68D8A5C23585A958" description="Whitelisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                            <TunableEnum type="SurfaceType" class="TunableEnumEntry" default="SURFACETYPE_WORLD" muid="261F849AC89608E3" static_entries="routing.SurfaceType" description="Surface Type the object is placed on." Deprecated="False" filter="0" group="General" invalid_entries="SURFACETYPE_UNKNOWN" />
                                                                        </TunableList>
                                                                    </TunableTuple>
                                                                </TunableVariant>
                                                            </TunableTuple>
                                                        </TunableVariant>
                                                    </TunableTuple>
                                                </TunableTuple>
                                                <Tunable name="none" class="TunableExistance" display="None" muid="553DA8029D2D0789" />
                                                <TunableTuple name="object_definition" class="TunableObjectMatchesDefinitionOrTagTest" display="Object Definition" muid="96688867036FE7B7" description="Check to see if the specified object matches either a static definition or a set of tags" Deprecated="False" filter="0" group="General">
                                                    <TunableVariant type="None" name="item" class="TunableVariant" default="tagged_item" display="Item" muid="C3C699B1BDE997D0" description="Whether to test for a specific item or item that has a set of tags" Deprecated="False" filter="0" group="General">
                                                        <TunableTuple name="actual_item" class="CraftActualItemFactory" display="Actual Item" muid="4E46676C4C9A8256" description="This option tests crafted item against a list of possible items" Deprecated="False" filter="0" group="General">
                                                            <TunableList name="items_to_check" class="TunableList" display="Items To Check" muid="F43038AA6979E427" Deprecated="False" filter="0" group="General">
                                                                <Tunable type="object" class="TunableReference" muid="6D3045DBB878F77E" description="Object that qualifies for this check." allow_none="False" Deprecated="False" filter="0" group="General" />
                                                            </TunableList>
                                                        </TunableTuple>
                                                        <TunableTuple name="tagged_item" class="CraftTaggedItemFactory" display="Tagged Item" muid="A898D22C2FD1B1C" description="This option tests crafted item's tags against a list of possible tags" Deprecated="False" filter="0" group="General">
                                                            <TunableList name="tag_set" class="TunableSet" display="Tag Set" muid="EF8DE7EEF6A83F43" description="The tag of objects we want to test ownership of" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                <TunableEnum type="Tag" class="TunableEnumEntry" default="INVALID" muid="7C67AD3083DA0CD9" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="What tag to test for" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                            </TunableList>
                                                            <TunableEnum type="TagTestType" name="test_type" class="TunableEnumEntry" default="CONTAINS_ANY_TAG_IN_SET" display="Test Type" muid="8CF02CD480CAB316" static_entries="objects-object_tests.TagTestType" description="How to test the tags in the tag set against the objects on the lot." Deprecated="False" filter="0" group="General" />
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                    <TunableVariant type="None" name="tooltip" class="OptionalTunable" default="disabled" display="Tooltip" muid="EF928E965A29B614" description="Reason of failure." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="6E77CC907A2A79F8" />
                                                        <Tunable type="int" name="enabled" class="TunableLocalizedString" default="0x0" display="Enabled" muid="978078CC42F61CB" description="Reason of failure." Deprecated="False" filter="0" group="General" />
                                                    </TunableVariant>
                                                </TunableTuple>
                                                <TunableTuple name="object_preference" class="TunableObjectScoringPreferenceTest" display="Object Preference" muid="99498D79261E042" description="A tunable factory that checks whether or not the target object of an affordance&#xA;is the Sim's preferred scoring object." Deprecated="False" filter="0" group="General">
                                                    <TunableVariant type="None" name="any_sim" class="OptionalTunable" default="disabled" display="Any Sim" muid="D8834D655A0A3DFD" description="If enabled, will return whether the object has any &quot;Use Only&quot; preference&#xA;set for the specified tag.  Will not be sim specific, and thus only&#xA;works for &quot;use only&quot; preference type.  Does NOT rely on interaction&#xA;to determine preference type.&#xA;&#xA;Value is the tag to test for." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="8287B1B79D6AA1A0" />
                                                        <TunableEnum type="ObjectPreferenceTag" name="enabled" class="TunableEnumEntry" default="INVALID" display="Enabled" muid="3D8B36FF32B9BE76" dynamic_entries="autonomy-autonomy_preference.ObjectPreferenceTag._elements" static_entries="autonomy-autonomy_preference.ObjectPreferenceTag" description="Tag to determine which preference type to use." Deprecated="False" filter="0" group="General" invalid_entries="INVALID" />
                                                    </TunableVariant>
                                                    <Tunable type="bool" name="require" class="Tunable" default="True" display="Require" muid="A3CF1D283A464083" description="The Sim's preference is required to be True or required to be False." Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableTuple name="season" class="TunableSeasonTest" display="Season" muid="669B77EA8EC6A2C0" description="SeasonTest will test if the current simulation time falls within the&#xA;specified test conditions." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="bool" name="requires_seasons_pack" class="Tunable" default="True" display="Requires Seasons Pack" muid="A0104748EAE40791" description="If checked, this test will require that the Seasons pack be &#xA;installed in order for the seasons test to pass.  If unchecked, &#xA;this test will automatically pass." Deprecated="False" filter="0" group="General" />
                                                    <TunableList name="seasons" class="TunableEnumSet" display="Seasons" muid="CE9F83E564B9E21F" min="1" description="Season(s) that we must be in to pass the test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                        <TunableEnum type="SeasonType" class="TunableEnumEntry" default="SUMMER" muid="5358AC9241FC7491" static_entries="seasons-seasons_enums.SeasonType" Deprecated="False" filter="0" group="General" />
                                                    </TunableList>
                                                    <TunableVariant type="None" name="time_of_season" class="OptionalTunable" default="disabled" display="Time Of Season" muid="75E39C979C1C9E16" description="Portion(s) of season(s) that we must be in to pass the test." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="708EBA7590C162F8" />
                                                        <TunableList name="enabled" class="TunableEnumSet" display="Enabled" muid="D0C7483034629363" min="1" description="Portion(s) of season(s) that we must be in to pass the test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                            <TunableEnum type="SeasonSegment" class="TunableEnumEntry" default="EARLY" muid="7F04B30AF177F897" static_entries="seasons-seasons_enums.SeasonSegment" Deprecated="False" filter="0" group="General" />
                                                        </TunableList>
                                                    </TunableVariant>
                                                </TunableTuple>
                                                <TunableTuple name="state" class="TunableStateTest" display="State" muid="424E3A734F8FC1B" description="Gate availability by object state.  By default, the test will use the&#xA;state's linked stat as a fallback in case the target doesn't have the&#xA;state involved." Deprecated="False" filter="0" group="General">
                                                    <TunableVariant type="None" name="fallback_behavior" class="TunableVariant" default="always_fail" display="Fallback Behavior" muid="5A0F952546DF100F" description="What to do if the given object doesn't have the state in question." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="always_fail" class="TunableExistance" display="Always Fail" muid="4C5B6381AABF4B03" />
                                                        <Tunable name="always_pass" class="TunableExistance" display="Always Pass" muid="ACF552AEC09D6323" />
                                                    </TunableVariant>
                                                    <TunableEnum type="Operator" name="operator" class="TunableOperator" default="EQUAL" display="Operator" muid="70D7A466F0E58099" static_entries="sims4-math.Operator" description="The comparison to use." Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="object_state" name="value" class="TunableReference" display="Value" muid="C2B4B36CDC4433" description="The value to compare to." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="ObjectStateValue" />
                                                </TunableTuple>
                                                <TunableTuple name="statistic" class="TunableStatThresholdTest" display="Statistic" muid="CDD78E17D4161892" description="A test that checks whether or not a statistic is at a certain threshold for&#xA;a given participant. It can also test whether or not the participant has the&#xA;statistic explicitly added on them." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="bool" name="must_have_stat" class="Tunable" default="False" display="Must Have Stat" muid="8DC0B39C83E98F54" description="Setting this to True (checked) will ensure that this test only&#xA;passes if the tested Sim actually has the statistic referenced. If&#xA;left False (unchecked), this test will evaluate as if the Sim had&#xA;the statistic at the value of 0" Deprecated="False" filter="0" group="General" />
                                                    <TunableVariant type="None" name="score_to_use" class="TunableVariant" default="user_value" display="Score To Use" muid="80CE19ABFDCB5A14" description="Depending on the choice, this decides what value to use for the &#xA;threshold comparison." Deprecated="False" filter="0" group="General">
                                                        <TunableTuple name="points" class="Tunable_PointsValue" display="Points" muid="82D08BF918613BFD" description="Use the raw points for the comparison in the test." Deprecated="False" filter="0" group="General" />
                                                        <TunableTuple name="rank" class="Tunable_RankValue" display="Rank" muid="5328EAC44D96A496" description="Use the rank value for the comparison in the test." Deprecated="False" filter="0" group="General" />
                                                        <TunableTuple name="user_value" class="Tunable_UserValue" display="User Value" muid="36F9AD0568A9AE77" description="Use the user value for the comparison in the test." Deprecated="False" filter="0" group="General">
                                                            <Tunable type="bool" name="highest_level_reached_instead" class="Tunable" default="False" display="Highest Level Reached Instead" muid="A72097FD17E3953B" description="If checked this will test against the highest level reached. This&#xA;currently only works with Ranked Statistics. Other statistics do&#xA;not have a notion of highest level reached. If we are using&#xA;something that doesn't support highest level reached it will &#xA;test against the current level instead." Deprecated="False" filter="0" group="General" />
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                    <Tunable type="statistic" name="stat" class="TunableReference" display="Stat" muid="7C7E9944B92A8DB" description="The stat we are operating on." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                    <TunableVariant type="None" name="threshold" class="TunableVariant" default="value_threshold" display="Threshold" muid="B5CF3E7A71700448" description="The value or state threshold to test against." Deprecated="False" filter="0" group="General">
                                                        <TunableTuple name="state_value_threshold" class="TunableObjectStateValueThreshold" display="State Value Threshold" muid="75E850A2FF52BF7" description="Value/comparison pair used to define a Threshold." Deprecated="False" filter="0" group="General">
                                                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="D597AAA4F5A08DAF" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                            <Tunable type="object_state" name="value" class="TunableReference" display="Value" muid="59E9D064B4E57FED" description="The state threshold for this test." allow_none="False" Deprecated="False" filter="0" group="General" restrict="ObjectStateValue" />
                                                        </TunableTuple>
                                                        <TunableTuple name="value_threshold" class="TunableThreshold" display="Value Threshold" muid="F9FD492B38E0462A" description="The threshold to control availability based on the statistic's&#xA;value." Deprecated="False" filter="0" group="General">
                                                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="DF8D4059AD5900F6" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                            <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="E0F48E4FC2A3356A" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                    <TunableEnum type="ParticipantType" name="who" class="TunableEnumEntry" default="Actor" display="Who" muid="C00A8578CBDE2CF1" static_entries="interactions.ParticipantType" description="Who or what to apply this test to." Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableTuple name="street_civic_policy_test" class="TunableStreetCivicPolicyTest" display="Street Civic Policy Test" muid="C4F1B7778E86788B" description="Test the state of the selected Street's Civic Policy Provider." Deprecated="False" filter="0" group="General">
                                                    <TunableList name="civic_policy_tests" class="TunableList" display="Civic Policy Tests" muid="2D83CBB86C66591A" description="The tests we wish to run on the civic policies in question, run in&#xA;order.  AND operation, all must pass, first to fail stops tests." Deprecated="False" filter="0" group="General">
                                                        <TunableVariant type="None" class="TunableVariant" default="voting_open" muid="75BDB7FFB9707A4F" description="Individual tests run on Civic Policy Provider." Deprecated="False" filter="0" group="General">
                                                            <TunableTuple name="available" class="TunableBaseCivicPolicyTestAvailable" display="Available" muid="34794D197381E212" description="Test available policies. Available policies include everything tuned." Deprecated="False" filter="0" group="General">
                                                                <TunableTuple name="white_black_list" class="TunableWhiteBlackList" display="White Black List" muid="14BED0513A78AFB1" description="The civic policies must pass the whitelist and blacklist&#xA;to pass the test." Deprecated="False" filter="0" group="General">
                                                                    <TunableVariant type="None" name="blacklist" class="OptionalTunable" default="nothing" display="Blacklist" muid="2B7F4617DBB75194" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is not in the blacklist. If no blacklist is&#xA;specified, no items are disallowed." Deprecated="False" filter="0" group="General">
                                                                        <Tunable name="nothing" class="TunableExistance" display="Nothing" muid="F60FAA4EBA8F62F2" />
                                                                        <TunableTuple name="specify" class="TunableBlacklist" display="Specify" muid="EB42B7984F96B71B" description="A tunable blacklist." Deprecated="False" filter="0" group="General">
                                                                            <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="82DD0B4E715B310C" description="Blacklisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                                <Tunable type="snippet" class="TunableReference" muid="CD1365326976709D" description="Allowed and disallowed civic policies." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="BaseCivicPolicy" />
                                                                            </TunableList>
                                                                            <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="694F03FD30D0561B" description="Tunable option for how many items must be in the blacklist&#xA;for the blacklist to fail when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                                <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="575A5C1494632E57" />
                                                                                <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="B3C69244053EC229" description="When testing a collection of items, the number of items in&#xA;that collection that are in the blacklist must pass this&#xA;threshold test for the blacklist to disallow them all." Deprecated="False" filter="0" group="General">
                                                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="B385EBE8CB4CF2C7" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                                    <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="ACACAE51CBA6C224" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                                </TunableTuple>
                                                                            </TunableVariant>
                                                                        </TunableTuple>
                                                                    </TunableVariant>
                                                                    <TunableVariant type="None" name="whitelist" class="OptionalTunable" default="everything" display="Whitelist" muid="F3A3E8B3E471007F" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is in the whitelist. If no whitelist is&#xA;specified, all items are allowed." Deprecated="False" filter="0" group="General">
                                                                        <Tunable name="everything" class="TunableExistance" display="Everything" muid="735924D1CE1E5F1A" />
                                                                        <TunableTuple name="specify" class="TunableWhitelist" display="Specify" muid="A53477366EA9EDC6" description="A tunable whitelist." Deprecated="False" filter="0" group="General">
                                                                            <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="41B376EADBCCA3B4" description="Tunable option for how many items must be in the whitelist&#xA;for the whitelist to pass when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                                <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="E68512429C3E2310" />
                                                                                <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="4C2640E0C02B5D36" description="When testing a collection of items, the number of items in&#xA;that collection that are in the whitelist must pass this&#xA;threshold test for the whitelist to allow them all." Deprecated="False" filter="0" group="General">
                                                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="BCCEF54F459C06ED" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                                    <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="E66B578B23A5E256" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                                </TunableTuple>
                                                                            </TunableVariant>
                                                                            <TunableList name="whitelist" class="TunableSet" display="Whitelist" muid="A8AE0EE134B0E248" description="Whitelisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                                <Tunable type="snippet" class="TunableReference" muid="F9CD757B030E8443" description="Allowed and disallowed civic policies." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="BaseCivicPolicy" />
                                                                            </TunableList>
                                                                        </TunableTuple>
                                                                    </TunableVariant>
                                                                </TunableTuple>
                                                            </TunableTuple>
                                                            <TunableTuple name="balloted" class="TunableBaseCivicPolicyTestBalloted" display="Balloted" muid="1E81290D1A34D1EF" description="Test balloted policies.  Policies being considered by the next/current vote are&#xA;balloted." Deprecated="False" filter="0" group="General">
                                                                <TunableTuple name="white_black_list" class="TunableWhiteBlackList" display="White Black List" muid="C62F4D865CCFAC93" description="The civic policies must pass the whitelist and blacklist&#xA;to pass the test." Deprecated="False" filter="0" group="General">
                                                                    <TunableVariant type="None" name="blacklist" class="OptionalTunable" default="nothing" display="Blacklist" muid="57032B57F1646C22" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is not in the blacklist. If no blacklist is&#xA;specified, no items are disallowed." Deprecated="False" filter="0" group="General">
                                                                        <Tunable name="nothing" class="TunableExistance" display="Nothing" muid="D4A93B0CD7EBCBF0" />
                                                                        <TunableTuple name="specify" class="TunableBlacklist" display="Specify" muid="F5A800EF37818BCB" description="A tunable blacklist." Deprecated="False" filter="0" group="General">
                                                                            <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="3264FC39719A2A2F" description="Blacklisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                                <Tunable type="snippet" class="TunableReference" muid="945587CE20E8BF9A" description="Allowed and disallowed civic policies." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="BaseCivicPolicy" />
                                                                            </TunableList>
                                                                            <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="561FCF5E3801757B" description="Tunable option for how many items must be in the blacklist&#xA;for the blacklist to fail when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                                <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="993A8AE42FDDC4AB" />
                                                                                <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="4681B109D9D330D1" description="When testing a collection of items, the number of items in&#xA;that collection that are in the blacklist must pass this&#xA;threshold test for the blacklist to disallow them all." Deprecated="False" filter="0" group="General">
                                                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="FA6E615F0A8F7121" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                                    <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="FBAEC0743422A0D0" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                                </TunableTuple>
                                                                            </TunableVariant>
                                                                        </TunableTuple>
                                                                    </TunableVariant>
                                                                    <TunableVariant type="None" name="whitelist" class="OptionalTunable" default="everything" display="Whitelist" muid="FA90B41DA09207D5" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is in the whitelist. If no whitelist is&#xA;specified, all items are allowed." Deprecated="False" filter="0" group="General">
                                                                        <Tunable name="everything" class="TunableExistance" display="Everything" muid="E4C42CAC42EAF7C9" />
                                                                        <TunableTuple name="specify" class="TunableWhitelist" display="Specify" muid="4CA5DF77AB3EE385" description="A tunable whitelist." Deprecated="False" filter="0" group="General">
                                                                            <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="33A772859E0142B" description="Tunable option for how many items must be in the whitelist&#xA;for the whitelist to pass when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                                <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="E72FAD0C59E700D" />
                                                                                <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="F5C5CB4B16A2A913" description="When testing a collection of items, the number of items in&#xA;that collection that are in the whitelist must pass this&#xA;threshold test for the whitelist to allow them all." Deprecated="False" filter="0" group="General">
                                                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="735015CC1CA9AE75" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                                    <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="7E1A43A96AF6D73C" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                                </TunableTuple>
                                                                            </TunableVariant>
                                                                            <TunableList name="whitelist" class="TunableSet" display="Whitelist" muid="23D8EBF979FF7DCC" description="Whitelisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                                <Tunable type="snippet" class="TunableReference" muid="9BB9980024A19A9B" description="Allowed and disallowed civic policies." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="BaseCivicPolicy" />
                                                                            </TunableList>
                                                                        </TunableTuple>
                                                                    </TunableVariant>
                                                                </TunableTuple>
                                                            </TunableTuple>
                                                            <TunableTuple name="dormant" class="TunableBaseCivicPolicyTestDormant" display="Dormant" muid="F79547EE75F867BD" description="Test dormant policies. Dormant policies are not enacted and not balloted." Deprecated="False" filter="0" group="General">
                                                                <TunableTuple name="white_black_list" class="TunableWhiteBlackList" display="White Black List" muid="CA967170DA95EABF" description="The civic policies must pass the whitelist and blacklist&#xA;to pass the test." Deprecated="False" filter="0" group="General">
                                                                    <TunableVariant type="None" name="blacklist" class="OptionalTunable" default="nothing" display="Blacklist" muid="280F4A1C102CDD88" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is not in the blacklist. If no blacklist is&#xA;specified, no items are disallowed." Deprecated="False" filter="0" group="General">
                                                                        <Tunable name="nothing" class="TunableExistance" display="Nothing" muid="79CEB725A25FEE61" />
                                                                        <TunableTuple name="specify" class="TunableBlacklist" display="Specify" muid="F49499B6B84E1A1E" description="A tunable blacklist." Deprecated="False" filter="0" group="General">
                                                                            <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="6074F23C46346CD" description="Blacklisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                                <Tunable type="snippet" class="TunableReference" muid="D0D5E3F3B0E30DFC" description="Allowed and disallowed civic policies." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="BaseCivicPolicy" />
                                                                            </TunableList>
                                                                            <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="A57FAA365547CEA5" description="Tunable option for how many items must be in the blacklist&#xA;for the blacklist to fail when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                                <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="9839EA51F2A59D30" />
                                                                                <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="8B24C5A49A0C50F4" description="When testing a collection of items, the number of items in&#xA;that collection that are in the blacklist must pass this&#xA;threshold test for the blacklist to disallow them all." Deprecated="False" filter="0" group="General">
                                                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="C88735E8CEDA18E7" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                                    <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="E4B2D4D7C40C382B" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                                </TunableTuple>
                                                                            </TunableVariant>
                                                                        </TunableTuple>
                                                                    </TunableVariant>
                                                                    <TunableVariant type="None" name="whitelist" class="OptionalTunable" default="everything" display="Whitelist" muid="50F0EC6B92E799F7" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is in the whitelist. If no whitelist is&#xA;specified, all items are allowed." Deprecated="False" filter="0" group="General">
                                                                        <Tunable name="everything" class="TunableExistance" display="Everything" muid="5D94A4FEA3D82A53" />
                                                                        <TunableTuple name="specify" class="TunableWhitelist" display="Specify" muid="C5E278313186F54A" description="A tunable whitelist." Deprecated="False" filter="0" group="General">
                                                                            <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="F504C705776A9040" description="Tunable option for how many items must be in the whitelist&#xA;for the whitelist to pass when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                                <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="C05B6C4B9DE5BD35" />
                                                                                <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="6F6A45ED83FE77A6" description="When testing a collection of items, the number of items in&#xA;that collection that are in the whitelist must pass this&#xA;threshold test for the whitelist to allow them all." Deprecated="False" filter="0" group="General">
                                                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="A8C65741BDE30A0D" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                                    <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="CF1517841A3CF04E" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                                </TunableTuple>
                                                                            </TunableVariant>
                                                                            <TunableList name="whitelist" class="TunableSet" display="Whitelist" muid="1AF4E1E1B6698726" description="Whitelisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                                <Tunable type="snippet" class="TunableReference" muid="31886F721A77D8B0" description="Allowed and disallowed civic policies." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="BaseCivicPolicy" />
                                                                            </TunableList>
                                                                        </TunableTuple>
                                                                    </TunableVariant>
                                                                </TunableTuple>
                                                            </TunableTuple>
                                                            <TunableTuple name="enacted" class="TunableBaseCivicPolicyTestEnacted" display="Enacted" muid="C96DFCDF799D4705" description="Test enacted policies." Deprecated="False" filter="0" group="General">
                                                                <TunableTuple name="white_black_list" class="TunableWhiteBlackList" display="White Black List" muid="486B62B7AEF3A8FB" description="The civic policies must pass the whitelist and blacklist&#xA;to pass the test." Deprecated="False" filter="0" group="General">
                                                                    <TunableVariant type="None" name="blacklist" class="OptionalTunable" default="nothing" display="Blacklist" muid="684FD65F763FA85A" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is not in the blacklist. If no blacklist is&#xA;specified, no items are disallowed." Deprecated="False" filter="0" group="General">
                                                                        <Tunable name="nothing" class="TunableExistance" display="Nothing" muid="D9EA403A9AC7CC03" />
                                                                        <TunableTuple name="specify" class="TunableBlacklist" display="Specify" muid="5CAE69F1B979B6EA" description="A tunable blacklist." Deprecated="False" filter="0" group="General">
                                                                            <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="BBA3018EF8E0E243" description="Blacklisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                                <Tunable type="snippet" class="TunableReference" muid="D6AEF4DF02166DF3" description="Allowed and disallowed civic policies." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="BaseCivicPolicy" />
                                                                            </TunableList>
                                                                            <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="C605914DA69857F9" description="Tunable option for how many items must be in the blacklist&#xA;for the blacklist to fail when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                                <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="57B148A546F29C8E" />
                                                                                <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="C9536AB59A1E38E7" description="When testing a collection of items, the number of items in&#xA;that collection that are in the blacklist must pass this&#xA;threshold test for the blacklist to disallow them all." Deprecated="False" filter="0" group="General">
                                                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="F21C98EF35DDE993" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                                    <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="6F21EA249802FE4" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                                </TunableTuple>
                                                                            </TunableVariant>
                                                                        </TunableTuple>
                                                                    </TunableVariant>
                                                                    <TunableVariant type="None" name="whitelist" class="OptionalTunable" default="everything" display="Whitelist" muid="7F9EBEC0B0140D40" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is in the whitelist. If no whitelist is&#xA;specified, all items are allowed." Deprecated="False" filter="0" group="General">
                                                                        <Tunable name="everything" class="TunableExistance" display="Everything" muid="F132805D623B8752" />
                                                                        <TunableTuple name="specify" class="TunableWhitelist" display="Specify" muid="C1ECF0E2AFB6B1F9" description="A tunable whitelist." Deprecated="False" filter="0" group="General">
                                                                            <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="7E152138C3FF41FD" description="Tunable option for how many items must be in the whitelist&#xA;for the whitelist to pass when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                                <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="9AC9DE4D9C34E47F" />
                                                                                <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="69B61503A37EB3AF" description="When testing a collection of items, the number of items in&#xA;that collection that are in the whitelist must pass this&#xA;threshold test for the whitelist to allow them all." Deprecated="False" filter="0" group="General">
                                                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="8F3768A8A1B8BDB9" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                                    <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="A1BCC9857587C0DD" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                                </TunableTuple>
                                                                            </TunableVariant>
                                                                            <TunableList name="whitelist" class="TunableSet" display="Whitelist" muid="BB6F871F717AE977" description="Whitelisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                                <Tunable type="snippet" class="TunableReference" muid="2FCF40211A2F07B0" description="Allowed and disallowed civic policies." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="BaseCivicPolicy" />
                                                                            </TunableList>
                                                                        </TunableTuple>
                                                                    </TunableVariant>
                                                                </TunableTuple>
                                                            </TunableTuple>
                                                            <TunableTuple name="repealable" class="TunableBaseCivicPolicyTestRepealable" display="Repealable" muid="124EC22B774DA443" description="Test up for repeal policies. Up for Repeal policies have been specifically marked&#xA;as such and will (if the vote/petition threshold is reached) be repealed&#xA;as part of closing the next vote." Deprecated="False" filter="0" group="General">
                                                                <TunableTuple name="white_black_list" class="TunableWhiteBlackList" display="White Black List" muid="5014FA4967D47096" description="The civic policies must pass the whitelist and blacklist&#xA;to pass the test." Deprecated="False" filter="0" group="General">
                                                                    <TunableVariant type="None" name="blacklist" class="OptionalTunable" default="nothing" display="Blacklist" muid="1AFE226A86F3E85D" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is not in the blacklist. If no blacklist is&#xA;specified, no items are disallowed." Deprecated="False" filter="0" group="General">
                                                                        <Tunable name="nothing" class="TunableExistance" display="Nothing" muid="D26B8F15B54C8D23" />
                                                                        <TunableTuple name="specify" class="TunableBlacklist" display="Specify" muid="D86345892C76BC5E" description="A tunable blacklist." Deprecated="False" filter="0" group="General">
                                                                            <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="7EFDE44ACE3BD513" description="Blacklisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                                <Tunable type="snippet" class="TunableReference" muid="C65D5FA17E65FDCA" description="Allowed and disallowed civic policies." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="BaseCivicPolicy" />
                                                                            </TunableList>
                                                                            <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="B69F28B351AF779B" description="Tunable option for how many items must be in the blacklist&#xA;for the blacklist to fail when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                                <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="6DBF15D5059DF412" />
                                                                                <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="2BEA457DFCB16045" description="When testing a collection of items, the number of items in&#xA;that collection that are in the blacklist must pass this&#xA;threshold test for the blacklist to disallow them all." Deprecated="False" filter="0" group="General">
                                                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="9E6B5B8FD9DED226" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                                    <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="E2774E0F3C3DE8BE" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                                </TunableTuple>
                                                                            </TunableVariant>
                                                                        </TunableTuple>
                                                                    </TunableVariant>
                                                                    <TunableVariant type="None" name="whitelist" class="OptionalTunable" default="everything" display="Whitelist" muid="581551AD0BC6FDB9" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is in the whitelist. If no whitelist is&#xA;specified, all items are allowed." Deprecated="False" filter="0" group="General">
                                                                        <Tunable name="everything" class="TunableExistance" display="Everything" muid="5B91388090D2BA26" />
                                                                        <TunableTuple name="specify" class="TunableWhitelist" display="Specify" muid="F13968A094029693" description="A tunable whitelist." Deprecated="False" filter="0" group="General">
                                                                            <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="A33C02EB2DE6CCA6" description="Tunable option for how many items must be in the whitelist&#xA;for the whitelist to pass when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                                <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="70A113F6DD1B2B91" />
                                                                                <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="296771E71B106DFB" description="When testing a collection of items, the number of items in&#xA;that collection that are in the whitelist must pass this&#xA;threshold test for the whitelist to allow them all." Deprecated="False" filter="0" group="General">
                                                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="FA6792CFF25521E1" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                                    <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="D77A9B2D3D62119A" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                                </TunableTuple>
                                                                            </TunableVariant>
                                                                            <TunableList name="whitelist" class="TunableSet" display="Whitelist" muid="5A2D8B7480EC483F" description="Whitelisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                                <Tunable type="snippet" class="TunableReference" muid="E27638EB613F442C" description="Allowed and disallowed civic policies." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="BaseCivicPolicy" />
                                                                            </TunableList>
                                                                        </TunableTuple>
                                                                    </TunableVariant>
                                                                </TunableTuple>
                                                            </TunableTuple>
                                                            <TunableTuple name="voting_open" class="TunableBaseCivicPolicyTestVotingOpen" display="Voting Open" muid="FCEA601409A31555" description="If checked, will verify that voting is currently active." Deprecated="False" filter="0" group="General">
                                                                <Tunable type="bool" name="negate" class="Tunable" default="False" display="Negate" muid="8DD5C290244FF195" description="If checked then this test will return True when not active." Deprecated="False" filter="0" group="General" />
                                                            </TunableTuple>
                                                            <TunableTuple name="voting_time_until_change" class="TunableBaseCivicPolicyTestVotingTimeUntilChange" display="Voting Time Until Change" muid="D33C0584721838FB" description="If checked, will check the time remaining before the next voting open status change." Deprecated="False" filter="0" group="General">
                                                                <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="91E704CBC298FE9" description="The amount of time relative to the next voting state change to test." Deprecated="False" filter="0" group="General">
                                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="E6DA138C0C3AB9B9" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                    <TunableTuple name="value" class="TunableTimeSpan" display="Value" muid="D5F5C4238D6BC0EF" description="Duration before the next change." Deprecated="False" filter="0" group="General">
                                                                        <Tunable type="int" name="days" class="TunableRange" default="0" display="Days" muid="63FDAAB0A639C185" min="0" max="None" description="Number of days" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                        <Tunable type="int" name="hours" class="TunableRange" default="1" display="Hours" muid="5048DDF5638D5CFC" min="0" max="23" description="Number of hours" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                        <Tunable type="int" name="minutes" class="TunableRange" default="0" display="Minutes" muid="DEDA4FF8002CE7B6" min="0" max="59" description="Number of minutes" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                    </TunableTuple>
                                                                </TunableTuple>
                                                            </TunableTuple>
                                                        </TunableVariant>
                                                    </TunableList>
                                                    <TunableVariant type="None" name="street" class="TunableVariant" default="literal" display="Street" muid="21ADCD13F6EA46A5" description="Select what street to test." Deprecated="False" filter="0" group="General">
                                                        <Tunable type="street" name="literal" class="TunableReference" display="Literal" muid="764EF4178AE74C2F" description="Identify a specific Street." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                        <TunableTuple name="via_street_participant" class="TunableStreetParticipant" display="Via Street Participant" muid="2F62E23A55540606" description="Get the street participant." Deprecated="False" filter="0" group="General" />
                                                        <TunableVariant type="None" name="via_zone_source" class="TunableVariant" default="use_current_zone" display="Via Zone Source" muid="B379D5FEC309E3B2" description="Select the street to use by specifying a Zone Source." Deprecated="False" filter="0" group="General">
                                                            <TunableTuple name="use_current_zone" class="TunableActiveZone" display="Use Current Zone" muid="59DCC9A100A2D3F" description="Get the active zone." Deprecated="False" filter="0" group="General" />
                                                            <TunableTuple name="use_participant_home_zone" class="TunableParticipantHomeZone" display="Use Participant Home Zone" muid="347CE6F4D1FCC379" description="Get a participant's home zone. Can be None if they don't have one." Deprecated="False" filter="0" group="General">
                                                                <TunableEnum type="ParticipantTypeSingleSim" name="participant" class="TunableEnumEntry" default="Actor" display="Participant" muid="DD803F62A05AF0D0" static_entries="interactions.ParticipantTypeSingleSim" description="Test against the participant's home zone. Townies' home zone will&#xA;be None." Deprecated="False" filter="0" group="General" />
                                                            </TunableTuple>
                                                            <TunableTuple name="use_pick_info" class="TunablePickInfoZone" display="Use Pick Info" muid="86D1F18B17D10A06" description="Get the zone of the lot the user clicked on." Deprecated="False" filter="0" group="General" />
                                                            <TunableTuple name="use_picked_zone_ids" class="TunablePickedZoneIds" display="Use Picked Zone Ids" muid="99DCDC7A49EAA9FE" description="Get the zone from the interaction's picked_zone_ids participant. Usually&#xA;comes from a picker." Deprecated="False" filter="0" group="General" />
                                                        </TunableVariant>
                                                    </TunableVariant>
                                                </TunableTuple>
                                            </TunableVariant>
                                        </TunableList>
                                    </TunableList>
                                    <Tunable type="int" name="weight" class="TunableRange" default="1" display="Weight" muid="9E90A200425E735" min="1" max="None" description="Weight to use." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                </TunableTuple>
                            </TunableList>
                        </TunableTuple>
                    </TunableList>
                </TunableTuple>
                <TunableTuple name="time_of_day" class="TunableTimeOfDay" display="Time Of Day" muid="EC66BC59BF20846D" description="Time of day to run cleanup." Deprecated="False" filter="0" group="General">
                    <Tunable type="int" name="hour" class="TunableRange" default="4" display="Hour" muid="4194AB5BB903FC3E" min="0" max="23" description="Hour of the day" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                    <Tunable type="int" name="minute" class="TunableRange" default="0" display="Minute" muid="9BA54BCAAE690A8B" min="0" max="59" description="Minute of Hour" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                </TunableTuple>
            </TunableTuple>

            <TunableTuple name="NEW_TENANT_CLEANUP" class="TunableModifyAllLotItems" display="New Tenant Cleanup" muid="8519F23EF0DBBE9" description="Modifications to make to objects when a new tenant moves in.&#xA;Example: We want to fix and reset all apartment problems when new&#xA;tenants move in." Deprecated="False" filter="0" group="General">
                <TunableList name="modifications" class="TunableList" display="Modifications" muid="B304F82369E87F1C" description="A list of where the elements define how to modify objects on the&#xA;lot. Each entry is a triplet of an object modification action&#xA;(currently either destroy the object or set its state), a list of&#xA;tests to run on the object to determine if we should actually apply&#xA;the modification, and a priority in case some modifications should&#xA;take precedence over other ones when both of their tests pass.&#xA;&#xA;EX: test list: object's dirtiness state != dirtiness clean&#xA;action: set state to Dirtiness_clean&#xA;&#xA;So dirty objects will become clean" Deprecated="False" filter="0" group="General">
                    <TunableTuple class="TunableTuple" muid="9E945C93A494B06E" Deprecated="False" filter="0" group="General">
                        <TunableVariant type="None" name="action" class="TunableVariant" default="none" display="Action" muid="1BDEE6A41B94238A" Deprecated="False" filter="0" group="General">
                            <TunableTuple name="cleanup_vehicle" class="TunableTuple" display="Cleanup Vehicle" muid="E9DB878E638DC0B3" description="Cleanup vehicles that are left around." Deprecated="False" filter="0" group="General" />
                            <TunableTuple name="deliver_bills" class="TunableTuple" display="Deliver Bills" muid="8CC0BFB74972BFE" Deprecated="False" filter="0" group="General">
                                <TunableTuple name="action_value" class="TunableDeliverBillFakePerform" display="Action Value" muid="3CC368C7E045E2AB" description="Let the bills manager know that a bill has been delivered and&#xA;trigger appropriate bill-specific functionality." Deprecated="False" filter="0" group="General" />
                            </TunableTuple>
                            <TunableTuple name="destroy_object" class="TunableTuple" display="Destroy Object" muid="A861C6DFC14AE04C" Deprecated="False" filter="0" group="General" />
                            <TunableTuple name="inventory_transfer" class="TunableTuple" display="Inventory Transfer" muid="937AB00AF96CA071" Deprecated="False" filter="0" group="General">
                                <TunableTuple name="action_value" class="TunableInventoryTransferFakePerform" display="Action Value" muid="1A3458CFE6DD543B" description="Transfer all objects with a specified inventory type from the&#xA;specified inventory to the inventory of a specified participant." Deprecated="False" filter="0" group="General">
                                    <TunableEnum type="InventoryType" name="recipient" class="TunableEnumEntry" default="UNDEFINED" display="Recipient" muid="3F2E00601E60C17A" dynamic_entries="objects-components-inventory_enums.InventoryType._elements" static_entries="objects-components-inventory_enums.InventoryType" description="The inventory into which the objects will be transferred." Deprecated="False" filter="0" group="General" />
                                    <TunableEnum type="InventoryType" name="source" class="TunableEnumEntry" default="UNDEFINED" display="Source" muid="517CB73B240F363A" dynamic_entries="objects-components-inventory_enums.InventoryType._elements" static_entries="objects-components-inventory_enums.InventoryType" description="The inventory from which the objects will be transferred." Deprecated="False" filter="0" group="General" />
                                </TunableTuple>
                            </TunableTuple>
                            <TunableTuple name="loot" class="TunableTuple" display="Loot" muid="298BFB19DF4CC1F3" description="Apply loots to the object." Deprecated="False" filter="0" group="General">
                                <TunableList name="loot_actions" class="TunableSet" display="Loot Actions" muid="FC7206595F28E0BB" description="Loot(s) to apply." Deprecated="False" filter="0" group="General" unique_entries="true">
                                    <Tunable type="action" class="TunableReference" muid="5D6E277DF9B5B097" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                </TunableList>
                            </TunableTuple>
                            <Tunable name="none" class="TunableExistance" display="None" muid="6F7A0131D17B7E8F" />
                            <TunableTuple name="set_on_fire" class="TunableTuple" display="Set On Fire" muid="1B9036F90D98F6BE" Deprecated="False" filter="0" group="General" />
                            <TunableTuple name="set_state" class="TunableTuple" display="Set State" muid="A7742C3B21A9F428" Deprecated="False" filter="0" group="General">
                                <Tunable type="object_state" name="action_value" class="TunableReference" display="Action Value" muid="FD52F62C24016369" description="An object state to set the object to" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="ObjectStateValue" />
                            </TunableTuple>
                        </TunableVariant>
                        <Tunable type="float" name="chance" class="TunablePercent" default="100" display="Chance" muid="DCC87A19F06E678C" min="1" max="100" description="Chance this modification will occur." Deprecated="False" filter="0" group="General" />
                        <TunableList name="global_tests" class="TunableObjectModifyGlobalTestList" display="Global Tests" muid="EB2316C4A5A8BDBD" description="Non object-related tests that gate this modification from occurring.  Use this for any global&#xA;tests that don't require the object, such as zone/location/time-elapsed tests.  These tests&#xA;will run only ONCE for this action, unlike 'Tests', which runs PER OBJECT. " Deprecated="False" filter="0" group="General">
                            <TunableVariant type="None" class="TunableObjectModifyGlobalTestVariant" default="none" muid="2583100A92321ADC" Deprecated="False" filter="0" group="General">
                                <TunableTuple name="elapsed_time" class="TunableTimeElapsedZoneTest" display="Elapsed Time" muid="E17866FE10C49B0" description="Test to make sure enough time has passed since the zone was last saved." Deprecated="False" filter="0" group="General">
                                    <Tunable type="float" name="minutes_passed" class="TunableSimMinute" default="720" display="Minutes Passed" muid="C3DF54800AA9F094" min="1" max="None" description="This test will pass when the minutes passed is greater than the&#xA;number minutes since last loading into zone." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                </TunableTuple>
                                <Tunable name="none" class="TunableExistance" display="None" muid="3BC469EF78C9502D" />
                                <TunableTuple name="season" class="TunableSeasonTest" display="Season" muid="F7FD22D3B80079AD" description="SeasonTest will test if the current simulation time falls within the&#xA;specified test conditions." Deprecated="False" filter="0" group="General">
                                    <Tunable type="bool" name="requires_seasons_pack" class="Tunable" default="True" display="Requires Seasons Pack" muid="BBE7797E57065E68" description="If checked, this test will require that the Seasons pack be &#xA;installed in order for the seasons test to pass.  If unchecked, &#xA;this test will automatically pass." Deprecated="False" filter="0" group="General" />
                                    <TunableList name="seasons" class="TunableEnumSet" display="Seasons" muid="1B3FC31CE603E35C" min="1" description="Season(s) that we must be in to pass the test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                        <TunableEnum type="SeasonType" class="TunableEnumEntry" default="SUMMER" muid="648C00DEBD8BBB15" static_entries="seasons-seasons_enums.SeasonType" Deprecated="False" filter="0" group="General" />
                                    </TunableList>
                                    <TunableVariant type="None" name="time_of_season" class="OptionalTunable" default="disabled" display="Time Of Season" muid="422CE19E989A0D0C" description="Portion(s) of season(s) that we must be in to pass the test." Deprecated="False" filter="0" group="General">
                                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="31C3651D0D238F8F" />
                                        <TunableList name="enabled" class="TunableEnumSet" display="Enabled" muid="F9D66C38DDCC9D18" min="1" description="Portion(s) of season(s) that we must be in to pass the test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                            <TunableEnum type="SeasonSegment" class="TunableEnumEntry" default="EARLY" muid="8B9C401F200F4A26" static_entries="seasons-seasons_enums.SeasonSegment" Deprecated="False" filter="0" group="General" />
                                        </TunableList>
                                    </TunableVariant>
                                </TunableTuple>
                                <TunableTuple name="zone" class="TunableZoneTest" display="Zone" muid="44903C3AD47050DA" description="A tunable factory that tests properties of a particular zone." Deprecated="False" filter="0" group="General">
                                    <TunableVariant type="None" name="zone_source" class="TunableVariant" default="use_current_zone" display="Zone Source" muid="269498BE7F837B8" description="Which zone we want to test." Deprecated="False" filter="0" group="General">
                                        <TunableTuple name="use_current_zone" class="TunableActiveZone" display="Use Current Zone" muid="49B4CD8EB852C201" description="Get the active zone." Deprecated="False" filter="0" group="General" />
                                        <TunableTuple name="use_participant_home_zone" class="TunableParticipantHomeZone" display="Use Participant Home Zone" muid="87C9FE5E830B9EAD" description="Get a participant's home zone. Can be None if they don't have one." Deprecated="False" filter="0" group="General">
                                            <TunableEnum type="ParticipantTypeSingleSim" name="participant" class="TunableEnumEntry" default="Actor" display="Participant" muid="9426DE418F747F28" static_entries="interactions.ParticipantTypeSingleSim" description="Test against the participant's home zone. Townies' home zone will&#xA;be None." Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                        <TunableTuple name="use_pick_info" class="TunablePickInfoZone" display="Use Pick Info" muid="3008A98593F3EBEB" description="Get the zone of the lot the user clicked on." Deprecated="False" filter="0" group="General" />
                                        <TunableTuple name="use_picked_zone_ids" class="TunablePickedZoneIds" display="Use Picked Zone Ids" muid="9C36395D62E6CA1C" description="Get the zone from the interaction's picked_zone_ids participant. Usually&#xA;comes from a picker." Deprecated="False" filter="0" group="General" />
                                    </TunableVariant>
                                    <TunableTuple name="zone_tests" class="TunableTuple" display="Zone Tests" muid="E639C27F3251909" description="The tests we wish to run on the zone in question." Deprecated="False" filter="0" group="General">
                                        <TunableVariant type="None" name="business_tests" class="OptionalTunable" default="Don't_Test" display="Business Tests" muid="1C1D4AF93D7E5C11" description="If enabled, test if the specified zone is a business or not." Deprecated="False" filter="0" group="General">
                                            <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="E7D87BD12E8841DE" />
                                            <TunableVariant type="None" name="enabled" class="TunableVariant" default="is_business" display="Enabled" muid="D4D70D685D561CC0" description="Test if the zone is a business, an open business, or a&#xA;closed business." Deprecated="False" filter="0" group="General">
                                                <TunableTuple name="is_business" class="Tunable_IsBusinessTest" display="Is Business" muid="6F13117B1177628E" description="Test if the zone specified by the zone id is a business or not." Deprecated="False" filter="0" group="General" />
                                                <TunableTuple name="is_business_open" class="Tunable_IsBusinessOpenTest" display="Is Business Open" muid="4D2918F2800C80C5" description="Test if the zone specified by the zone id is an open business." Deprecated="False" filter="0" group="General" />
                                            </TunableVariant>
                                        </TunableVariant>
                                        <TunableVariant type="None" name="is_apartment" class="OptionalTunable" default="Don't_Test" display="Is Apartment" muid="9FBC3CC5032EC1AD" description="If checked, test will pass if the zone is an apartment. If&#xA;unchecked, test passes if the zone is NOT an apartment. Useful&#xA; in aspiration tuning, to discriminate between property&#xA;types in tests of lot value. Allows &quot;Own a House worth X&quot; and&#xA;&quot;Own an Apartment worth X&quot;" Deprecated="False" filter="0" group="General">
                                            <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="DAEE9B1AA8E2D7B2" />
                                            <TunableTuple name="Is_or_is_not_apartment_zone" class="TunableTuple" display="Is Or Is Not Apartment Zone" muid="C9508BFB492E44D0" description="Test whether the zone is an apartment or not." Deprecated="False" filter="0" group="General">
                                                <Tunable type="bool" name="consider_penthouse_an_apartment" class="Tunable" default="True" display="Consider Penthouse An Apartment" muid="1754AF511DD08596" description="If enabled, we will consider penthouses to be&#xA;apartments when testing them against the apartment&#xA;check." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="bool" name="is_apartment" class="Tunable" default="True" display="Is Apartment" muid="1254F430E5F34DEE" description="If checked, test will pass if the zone is an apartment.&#xA;If unchecked, test passes if the zone is NOT an&#xA;apartment." Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                        </TunableVariant>
                                        <TunableVariant type="None" name="is_penthouse" class="OptionalTunable" default="disabled" display="Is Penthouse" muid="5FBBB3D75B76102A" description="If enabled, test whether or not the current zone is a penthouse." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="E7831AF23903EC14" />
                                            <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="A6CCDAC7E6916D81" description="If checked, the zone must be a penthouse. If unchecked, the&#xA;zone cannot be a penthouse." Deprecated="False" filter="0" group="General" />
                                        </TunableVariant>
                                        <Tunable type="bool" name="use_source_venue" class="Tunable" default="False" display="Use Source Venue" muid="45FFF2A87917EFD7" description="If enabled, the test will test the source venue instead of the active&#xA;venue.  For example, the Community Lot instead of the active Marketplace.&#xA;Testing the active venue is the default." Deprecated="False" filter="0" group="General" />
                                        <TunableVariant type="None" name="venue_tier" class="OptionalTunable" default="disabled" display="Venue Tier" muid="C364AB8A5E743F75" description="If checked, will verify that the zone's venue is at the tuned &#xA;tier. If &quot;no valid tier&quot; is selected, this test will be True&#xA;if either the current venue doesn't have tiers or if it does but&#xA;it doesn't currently meet any of their requirements." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="12FC6235B779B085" />
                                            <TunableVariant type="None" name="enabled" class="TunableVariant" default="none" display="Enabled" muid="616985D0EB242CF0" description="                    " Deprecated="False" filter="0" group="General">
                                                <Tunable name="no_valid_tier" class="TunableExistance" display="No Valid Tier" muid="D82A32A3DA22B7D8" />
                                                <Tunable name="none" class="TunableExistance" display="None" muid="562B3B06003DAF23" />
                                                <Tunable type="int" name="tier_number" class="TunableRange" default="0" display="Tier Number" muid="849CB73E05ABE65E" min="0" max="None" description="The index of the tier to test. This test will return&#xA;true if this tier is active and false otherwise. This&#xA;should be the index of the tier in the tier list and not&#xA;any player-facing index. For instance, if a tier list&#xA;had a single tier, that tier would be 0, and if a second&#xA;tier were added, that second tier would be 1." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            </TunableVariant>
                                        </TunableVariant>
                                        <TunableVariant type="None" name="venue_type" class="OptionalTunable" default="Don't_Test" display="Venue Type" muid="C1679F7C902DD3F5" description="If checked, will verify the zone's venue type is allowed or&#xA;disallowed." Deprecated="False" filter="0" group="General">
                                            <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="D029DBB07E536D20" />
                                            <TunableTuple name="enabled" class="TunableWhiteBlackList" display="Enabled" muid="798A2D2740C98319" description="The zone's venue type must pass the whitelist and blacklist&#xA;to pass the test." Deprecated="False" filter="0" group="General">
                                                <TunableVariant type="None" name="blacklist" class="OptionalTunable" default="nothing" display="Blacklist" muid="548047278B0772F0" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is not in the blacklist. If no blacklist is&#xA;specified, no items are disallowed." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="nothing" class="TunableExistance" display="Nothing" muid="2274FA7BD896BB9E" />
                                                    <TunableTuple name="specify" class="TunableBlacklist" display="Specify" muid="387C11FE66D208F5" description="A tunable blacklist." Deprecated="False" filter="0" group="General">
                                                        <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="172D86BB95559F28" description="Blacklisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                            <Tunable type="venue" class="TunableReference" muid="6CF6D9F186DA87BA" description="Allowed and disallowed venue types." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                        </TunableList>
                                                        <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="AD5A253D92677302" description="Tunable option for how many items must be in the blacklist&#xA;for the blacklist to fail when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                            <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="A7BB55B9193E3982" />
                                                            <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="E6F86EAD1E46A319" description="When testing a collection of items, the number of items in&#xA;that collection that are in the blacklist must pass this&#xA;threshold test for the blacklist to disallow them all." Deprecated="False" filter="0" group="General">
                                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="3E43B106F02FBC4F" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="68724BD6FE3764C2" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                            </TunableTuple>
                                                        </TunableVariant>
                                                    </TunableTuple>
                                                </TunableVariant>
                                                <TunableVariant type="None" name="whitelist" class="OptionalTunable" default="everything" display="Whitelist" muid="DCD2884301FBDC4E" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is in the whitelist. If no whitelist is&#xA;specified, all items are allowed." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="everything" class="TunableExistance" display="Everything" muid="F09C1E31287A247F" />
                                                    <TunableTuple name="specify" class="TunableWhitelist" display="Specify" muid="1436B61B1E29B979" description="A tunable whitelist." Deprecated="False" filter="0" group="General">
                                                        <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="D66FAAB4D57E04D9" description="Tunable option for how many items must be in the whitelist&#xA;for the whitelist to pass when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                            <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="607C862ABD08F705" />
                                                            <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="E934B79B73FB73A0" description="When testing a collection of items, the number of items in&#xA;that collection that are in the whitelist must pass this&#xA;threshold test for the whitelist to allow them all." Deprecated="False" filter="0" group="General">
                                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="AACE3393A4387C7E" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="FB88A046F3ADB85A" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                            </TunableTuple>
                                                        </TunableVariant>
                                                        <TunableList name="whitelist" class="TunableSet" display="Whitelist" muid="D083E5EA21A95AE0" description="Whitelisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                            <Tunable type="venue" class="TunableReference" muid="4BD498B4F3F53AAA" description="Allowed and disallowed venue types." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                        </TunableList>
                                                    </TunableTuple>
                                                </TunableVariant>
                                            </TunableTuple>
                                        </TunableVariant>
                                        <TunableVariant type="None" name="was_owner_household_changed" class="OptionalTunable" default="Don't_Test" display="Was Owner Household Changed" muid="85BAFC18559AB28C" description="If enabled, test if the lot owner household for the specified zone &#xA;was changed between when the zone was saved and when it was loaded." Deprecated="False" filter="0" group="General">
                                            <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="6D8EB04D01FC8255" />
                                            <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="11B2382697BE0887" description="If checked,  test will pass if the zone's owner household was changed &#xA;between when the zone was saved and when it was loaded. &#xA;If unchecked, test will pass if the zone's owner household was NOT changed &#xA;between when the zone was saved and when it was loaded. " Deprecated="False" filter="0" group="General" />
                                        </TunableVariant>
                                        <TunableVariant type="None" name="world_tests" class="OptionalTunable" default="disabled" display="World Tests" muid="76F3E89000A53201" description="If enabled, we test if specified zone is or is not in the specified world(s)" Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="8EE4999508AE156B" />
                                            <TunableTuple name="enabled" class="TunableWhiteBlackList" display="Enabled" muid="C078C6BA8BAE8ACC" description="Pass if zone is in one of the worlds in the whitelist,&#xA;or fail if it is any of the worlds in the blacklist." Deprecated="False" filter="0" group="General">
                                                <TunableVariant type="None" name="blacklist" class="OptionalTunable" default="nothing" display="Blacklist" muid="37F3D65A083233BF" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is not in the blacklist. If no blacklist is&#xA;specified, no items are disallowed." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="nothing" class="TunableExistance" display="Nothing" muid="481A330FAA12161" />
                                                    <TunableTuple name="specify" class="TunableBlacklist" display="Specify" muid="5509AF8754EE209E" description="A tunable blacklist." Deprecated="False" filter="0" group="General">
                                                        <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="E83E08F034CCC5EA" description="Blacklisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                            <Tunable type="worlddescription" class="TunableReference" muid="479C4B843E342A28" description="World to check against." Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                        </TunableList>
                                                        <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="58E22E1C0489C5F3" description="Tunable option for how many items must be in the blacklist&#xA;for the blacklist to fail when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                            <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="A829198455F14948" />
                                                            <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="7AF09BD03D597477" description="When testing a collection of items, the number of items in&#xA;that collection that are in the blacklist must pass this&#xA;threshold test for the blacklist to disallow them all." Deprecated="False" filter="0" group="General">
                                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="DA0A778F030E86D4" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="8D8CD57F232D4520" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                            </TunableTuple>
                                                        </TunableVariant>
                                                    </TunableTuple>
                                                </TunableVariant>
                                                <TunableVariant type="None" name="whitelist" class="OptionalTunable" default="everything" display="Whitelist" muid="5DF34BFBFF9A5DDE" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is in the whitelist. If no whitelist is&#xA;specified, all items are allowed." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="everything" class="TunableExistance" display="Everything" muid="D3A030751AB72B57" />
                                                    <TunableTuple name="specify" class="TunableWhitelist" display="Specify" muid="F89BF705CA0EFCF3" description="A tunable whitelist." Deprecated="False" filter="0" group="General">
                                                        <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="78C71620F3EBA911" description="Tunable option for how many items must be in the whitelist&#xA;for the whitelist to pass when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                            <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="41D013CFFB011200" />
                                                            <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="D696FA8760682AED" description="When testing a collection of items, the number of items in&#xA;that collection that are in the whitelist must pass this&#xA;threshold test for the whitelist to allow them all." Deprecated="False" filter="0" group="General">
                                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="69862D7634F8CC33" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="3909388136741ED2" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                            </TunableTuple>
                                                        </TunableVariant>
                                                        <TunableList name="whitelist" class="TunableSet" display="Whitelist" muid="7FD14800D16A58C9" description="Whitelisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                            <Tunable type="worlddescription" class="TunableReference" muid="E808F2F38969B1C2" description="World to check against." Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                        </TunableList>
                                                    </TunableTuple>
                                                </TunableVariant>
                                            </TunableTuple>
                                        </TunableVariant>
                                        <TunableVariant type="None" name="zone_modifiers" class="OptionalTunable" default="Don't_Test" display="Zone Modifiers" muid="C3562D65072FC650" description="if enabled, we test the zone modifiers allowed or disallowed." Deprecated="False" filter="0" group="General">
                                            <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="B109BDCFD2C1FE1C" />
                                            <TunableTuple name="enabled" class="TunableWhiteBlackList" display="Enabled" muid="8BF93B38B3D0CEDD" description="The zone's modifiers must pass this whitelist and blacklist for the&#xA;test to pass." Deprecated="False" filter="0" group="General">
                                                <TunableVariant type="None" name="blacklist" class="OptionalTunable" default="nothing" display="Blacklist" muid="257EB2D23245AF03" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is not in the blacklist. If no blacklist is&#xA;specified, no items are disallowed." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="nothing" class="TunableExistance" display="Nothing" muid="2F71E3A5AA67E660" />
                                                    <TunableTuple name="specify" class="TunableBlacklist" display="Specify" muid="F99A521A2572EF0B" description="A tunable blacklist." Deprecated="False" filter="0" group="General">
                                                        <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="16A1C11B31D1962B" description="Blacklisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                            <Tunable type="zone_modifier" class="TunableReference" muid="D5184B09F3A86D32" description="Allowed and disallowed zone modifiers." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                        </TunableList>
                                                        <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="746AF9E44281C740" description="Tunable option for how many items must be in the blacklist&#xA;for the blacklist to fail when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                            <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="AD29BB4E88D173D0" />
                                                            <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="6A920597B21DC563" description="When testing a collection of items, the number of items in&#xA;that collection that are in the blacklist must pass this&#xA;threshold test for the blacklist to disallow them all." Deprecated="False" filter="0" group="General">
                                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="FDB4D3F36A3B3590" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="A54505A400105882" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                            </TunableTuple>
                                                        </TunableVariant>
                                                    </TunableTuple>
                                                </TunableVariant>
                                                <TunableVariant type="None" name="whitelist" class="OptionalTunable" default="everything" display="Whitelist" muid="1B04DBCF736BA451" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is in the whitelist. If no whitelist is&#xA;specified, all items are allowed." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="everything" class="TunableExistance" display="Everything" muid="7B1F4BCB932B5D8A" />
                                                    <TunableTuple name="specify" class="TunableWhitelist" display="Specify" muid="9861BB061121BD2B" description="A tunable whitelist." Deprecated="False" filter="0" group="General">
                                                        <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="53C3BB6C85EEDAD5" description="Tunable option for how many items must be in the whitelist&#xA;for the whitelist to pass when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                            <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="B2953A78F5B6D9B9" />
                                                            <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="52C434C05C3D3DBF" description="When testing a collection of items, the number of items in&#xA;that collection that are in the whitelist must pass this&#xA;threshold test for the whitelist to allow them all." Deprecated="False" filter="0" group="General">
                                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="B87D2F4740C7BAB4" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="1E977176A5D4FDB" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                            </TunableTuple>
                                                        </TunableVariant>
                                                        <TunableList name="whitelist" class="TunableSet" display="Whitelist" muid="5050D0F2476D2EDE" description="Whitelisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                            <Tunable type="zone_modifier" class="TunableReference" muid="3FD8D1D4BE0B42E7" description="Allowed and disallowed zone modifiers." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                        </TunableList>
                                                    </TunableTuple>
                                                </TunableVariant>
                                            </TunableTuple>
                                        </TunableVariant>
                                    </TunableTuple>
                                </TunableTuple>
                            </TunableVariant>
                        </TunableList>
                        <TunableList name="tests" class="TunableObjectModifyTestSet" display="Tests" muid="EC32C7E644DA5FB7" description="All least one subtest group (AKA one list item) must pass&#xA;within this list before the action associated with this&#xA;tuning will be run." Deprecated="False" filter="0" group="General">
                            <TunableList class="TunableList" muid="11A71184B2B69B06" description="A list of tests.  All of these must pass for the group to pass." Deprecated="False" filter="0" group="General">
                                <TunableVariant type="None" class="TunableObjectModifyTestVariant" default="none" muid="100B03B816D333E1" description="A single tunable test." Deprecated="False" filter="0" group="General">
                                    <TunableTuple name="consumable_test" class="TunableConsumableTest" display="Consumable Test" muid="F6F6A0C63BBC8B83" description="A test that checks information about consumables." Deprecated="False" filter="0" group="General">
                                        <TunableTuple name="bites_left" class="TunableTuple" display="Bites Left" muid="A5782E910D684282" description="A check that tests against the number of bites left before the&#xA;subject is completely consumed." Deprecated="False" filter="0" group="General">
                                            <TunableEnum type="Operator" name="operator" class="TunableOperator" default="EQUAL" display="Operator" muid="B0FE04DF0207C8FE" static_entries="sims4-math.Operator" description="The operator to use for the comparison." Deprecated="False" filter="0" group="General" />
                                            <Tunable type="int" name="value" class="Tunable" default="1" display="Value" muid="5AD953BB8E5E31E5" description="The number of bites to test against." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                        <Tunable type="bool" name="is_consumable" class="Tunable" default="True" display="Is Consumable" muid="EC18E52A4498F7A7" description="If checked, the subject must be a consumable, if unchecked, the&#xA;subject must not be a consumable." Deprecated="False" filter="0" group="General" />
                                        <TunableEnum type="ParticipantType" name="subject" class="TunableEnumEntry" default="Object" display="Subject" muid="5D824D97687C4DE3" static_entries="interactions.ParticipantType" description="The subject of the test. This is the consumable object." Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                    <TunableTuple name="custom_name" class="TunableCustomNameTest" display="Custom Name" muid="DA7351720FD03C56" description="Require or prohibit an object from having a custom&#xA;name or description set." Deprecated="False" filter="0" group="General">
                                        <TunableVariant type="None" name="has_custom_description" class="OptionalTunable" default="disabled" display="Has Custom Description" muid="47B7EC43D051B0C1" description="If checked, the subject must have a custom description set. If unchecked, it cannot have a custom description set." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="C9E5C4FD9B5F3D84" />
                                            <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="FAB024F72A3154DD" description="If checked, the subject must have a custom description set. If unchecked, it cannot have a custom description set." Deprecated="False" filter="0" group="General" />
                                        </TunableVariant>
                                        <TunableVariant type="None" name="has_custom_name" class="OptionalTunable" default="disabled" display="Has Custom Name" muid="3D229392FD2CB769" description="If checked, the subject must have a custom name set. If unchecked, it cannot have a custom name set." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="CE11F29DAC409D99" />
                                            <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="2D27BE129A71E4B7" description="If checked, the subject must have a custom name set. If unchecked, it cannot have a custom name set." Deprecated="False" filter="0" group="General" />
                                        </TunableVariant>
                                        <TunableEnum type="ParticipantType" name="participant" class="TunableEnumEntry" default="Object" display="Participant" muid="4ADA2FFAB451A333" static_entries="interactions.ParticipantType" description="The subject who is the object of this test." Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                    <TunableTuple name="elapsed_time" class="TunableTimeElapsedZoneTest" display="Elapsed Time" muid="BFEC32CB06487D5F" description="Test to make sure enough time has passed since the zone was last saved." Deprecated="False" filter="0" group="General">
                                        <Tunable type="float" name="minutes_passed" class="TunableSimMinute" default="720" display="Minutes Passed" muid="3CB8F316E9B83A2F" min="1" max="None" description="This test will pass when the minutes passed is greater than the&#xA;number minutes since last loading into zone." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                    <TunableTuple name="existence" class="TunableExistenceTest" display="Existence" muid="8C923BC36C200FE7" description="A test to check whether the specified participant exists." Deprecated="False" filter="0" group="General">
                                        <Tunable type="bool" name="allow_hidden_sim_status" class="Tunable" default="False" display="Allow Hidden Sim Status" muid="326C11EEBC4CD6C5" description="If checked then we will ignore hidden Sim status such that they will count as existing even though they&#xA;have been hidden.  Use this in conjunction with Require Instantiated in order to determine the Sim's actual&#xA;instantiated status. " Deprecated="False" filter="0" group="General" />
                                        <Tunable type="bool" name="exists" class="Tunable" default="True" display="Exists" muid="F2D585E61501C181" description="When checked, require the specified participant to exist. When&#xA;unchecked, require the specified participant to not exist." Deprecated="False" filter="0" group="General" />
                                        <TunableEnum type="ParticipantType" name="participant" class="TunableEnumEntry" default="TargetSim" display="Participant" muid="6BEB85DC8B004383" static_entries="interactions.ParticipantType" description="The participant for which to check existence." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="bool" name="require_instantiatable" class="Tunable" default="True" display="Require Instantiatable" muid="CFAD4D2ABF29C729" description="If checked, the specified participant must be instantiatable. This&#xA;is generally true for all Sims at LOD above MINIMUM." Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                    <TunableTuple name="game_option" class="TunableSimInfoGameplayOptionsTest" display="Game Option" muid="B85D7FEDC00A8EF3" description="Test whether or not a Sim has a specific gameplay option set." Deprecated="False" filter="0" group="General">
                                        <TunableEnum type="TestableGameOptions" name="gameplay_option" class="TunableEnumEntry" default="CIVIC_POLICY_NPC_VOTING_ENABLED" display="Gameplay Option" muid="A9A3F12B39DE6F1D" static_entries="event_testing-game_option_tests.TestableGameOptions" description="The gameplay option to test. This test will pass if this option is&#xA;set." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="bool" name="invert" class="Tunable" default="False" display="Invert" muid="59F6F7E379C50319" description="If enabled, requires the option to be unset for the test to pass." Deprecated="False" filter="0" group="General" />
                                        <TunableVariant type="None" name="tooltip" class="OptionalTunable" default="disabled" display="Tooltip" muid="6D74287BFA0F7BA0" description="Reason of failure." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="5741F68F81D6A1BB" />
                                            <Tunable type="int" name="enabled" class="TunableLocalizedString" default="0x0" display="Enabled" muid="7DED6F9E60802F63" description="Reason of failure." Deprecated="False" filter="0" group="General" />
                                        </TunableVariant>
                                    </TunableTuple>
                                    <TunableTuple name="inventory" class="TunableInventoryTest" display="Inventory" muid="92399807ADBC9297" description="A test to check on the contents of either a sim inventory or&#xA;an object inventory." Deprecated="False" filter="0" group="General">
                                        <TunableVariant type="None" name="contents_check" class="TunableVariant" default="has_anything" display="Contents Check" muid="DF7BD97CE807CE49" description="Checks to run on each object of the specified inventory" Deprecated="False" filter="0" group="General">
                                            <Tunable name="has_anything" class="TunableExistance" display="Has Anything" muid="6B69DF1115590AD0" />
                                            <TunableTuple name="has_object_of_participant_type" class="TunableTuple" display="Has Object Of Participant Type" muid="34E8F69A3AF85414" description="Participant type we want to test if its in the selected&#xA;inventory." Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="ParticipantType" name="participant" class="TunableEnumEntry" default="Object" display="Participant" muid="A26AFBB6EFA942B6" static_entries="interactions.ParticipantType" description="Which participant of the interaction do we want to validate&#xA;on the inventory. " Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <TunableTuple name="has_object_with_def" class="TunableTuple" display="Has Object With Def" muid="9706B30812A9A789" Deprecated="False" filter="0" group="General">
                                                <Tunable type="object" name="definition" class="TunableReference" display="Definition" muid="969E515B639D30BA" description="The object definition to look for inside inventory." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                            </TunableTuple>
                                            <TunableTuple name="has_object_with_states" class="BasicStateCheckFactory" display="Has Object With States" muid="69B920AE8BAA3910" description="This option tests crafted item's tags against a list of possible&#xA;tags." Deprecated="False" filter="0" group="General">
                                                <TunableVariant type="None" name="object_requirement" class="TunableVariant" default="any_object" display="Object Requirement" muid="1FF7DE9750213FAE" Deprecated="False" filter="0" group="General">
                                                    <Tunable name="any_object" class="TunableExistance" display="Any Object" muid="71001AE39F8E0483" />
                                                    <TunableTuple name="definition" class="TunableTuple" display="Definition" muid="4FAC2FD72FB9ADE8" Deprecated="False" filter="0" group="General">
                                                        <Tunable type="object" name="definition" class="TunableReference" display="Definition" muid="53F87F023B8997D0" description="The object must have this definition." allow_none="False" Deprecated="False" filter="0" group="General" />
                                                    </TunableTuple>
                                                    <TunableTuple name="tag" class="TunableTuple" display="Tag" muid="8AA6158511853E45" Deprecated="False" filter="0" group="General">
                                                        <TunableTuple name="tag" class="CraftTaggedItemFactory" display="Tag" muid="EB630BBBC907E3DB" description="The object must have this tag." Deprecated="False" filter="0" group="General">
                                                            <TunableList name="tag_set" class="TunableSet" display="Tag Set" muid="37FFE0843CC699E1" description="The tag of objects we want to test ownership of" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                <TunableEnum type="Tag" class="TunableEnumEntry" default="INVALID" muid="EE729D3A2B7E6159" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="What tag to test for" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                            </TunableList>
                                                            <TunableEnum type="TagTestType" name="test_type" class="TunableEnumEntry" default="CONTAINS_ANY_TAG_IN_SET" display="Test Type" muid="BE934882C16E0EE4" static_entries="objects-object_tests.TagTestType" description="How to test the tags in the tag set against the objects on the lot." Deprecated="False" filter="0" group="General" />
                                                        </TunableTuple>
                                                    </TunableTuple>
                                                </TunableVariant>
                                                <TunableList name="state_set" class="TunableSet" display="State Set" muid="2CD46237A71F8145" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                    <Tunable type="object_state" class="TunableReference" muid="B975E49299A3BF88" description="What state to test for." allow_none="False" Deprecated="False" filter="0" group="General" />
                                                </TunableList>
                                                <TunableEnum type="StateTestType" name="test_type" class="TunableEnumEntry" default="CONTAINS_ANY_STATE_IN_SET" display="Test Type" muid="ED18BD0D0C8D2C4E" static_entries="objects-object_tests.StateTestType" description="How to test the states in the state set against the objects in&#xA;the inventory." Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <TunableTuple name="has_object_with_tag" class="CraftTaggedItemFactory" display="Has Object With Tag" muid="1C06999411B8C8F9" description="This option tests crafted item's tags against a list of possible tags" Deprecated="False" filter="0" group="General">
                                                <TunableList name="tag_set" class="TunableSet" display="Tag Set" muid="34A7AD1C0F1A221F" description="The tag of objects we want to test ownership of" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                    <TunableEnum type="Tag" class="TunableEnumEntry" default="INVALID" muid="6D0AA74A4B9DD1B7" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="What tag to test for" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                </TunableList>
                                                <TunableEnum type="TagTestType" name="test_type" class="TunableEnumEntry" default="CONTAINS_ANY_TAG_IN_SET" display="Test Type" muid="19303629F812B7F7" static_entries="objects-object_tests.TagTestType" description="How to test the tags in the tag set against the objects on the lot." Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                        </TunableVariant>
                                        <TunableVariant type="None" name="inventory_location" class="TunableVariant" default="participant_inventory" display="Inventory Location" muid="3F28CA2D461CC4E1" description="Who owns the inventory. Either look in the inventory of a &#xA;participant or specify an object inventory type directly.&#xA;&#xA;If participant returns multiple inventory owners, the test will &#xA;pass only if ALL of those owners pass the inventory content test." Deprecated="False" filter="0" group="General">
                                            <TunableTuple name="hidden_inventory_objects" class="TunableTuple" display="Hidden Inventory Objects" muid="D72BBEE1FB86292D" Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="InventoryType" name="inventory" class="TunableEnumEntry" default="UNDEFINED" display="Inventory" muid="537A8EF9AC6E80E7" dynamic_entries="objects-components-inventory_enums.InventoryType._elements" static_entries="objects-components-inventory_enums.InventoryType" description="Check in the hidden inventory for objects that can go into the&#xA;specified inventory type. EX: check that there are mailbox&#xA;objects in the hidden inventory" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <TunableTuple name="object_inventory_type" class="TunableTuple" display="Object Inventory Type" muid="F0DA21C8B2110B52" Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="InventoryType" name="inventory" class="TunableEnumEntry" default="UNDEFINED" display="Inventory" muid="F56431C3CF5339AC" dynamic_entries="objects-components-inventory_enums.InventoryType._elements" static_entries="objects-components-inventory_enums.InventoryType" description="Check the global Object inventory that has the specified type.&#xA;EX: check in the global fridge inventory that exists for all&#xA;fridges" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <TunableTuple name="participant_inventory" class="TunableTuple" display="Participant Inventory" muid="FBFB89E705CBABD8" Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="ParticipantType" name="inventory" class="TunableEnumEntry" default="Actor" display="Inventory" muid="E91F5BB33E87A82E" static_entries="interactions.ParticipantType" description="The owner of the inventory" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                        </TunableVariant>
                                        <TunableTuple name="required_count" class="TunableThreshold" display="Required Count" muid="1D156C58886C05C9" description="The inventory must have a tunable threshold of objects that&#xA;pass the contents check test.&#xA;&#xA;EX: test is object definition of type pizza. required count is enabled&#xA;and has a threshold of &gt;= 5. That means this test will pass if you&#xA;have 5 or more pizzas in your inventory. To check if any objects&#xA;exist, use required count &gt;= 1" Deprecated="False" filter="0" group="General">
                                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="C68AB5F96C1D62E7" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                            <Tunable type="int" name="value" class="Tunable" default="1" display="Value" muid="6F45295B6BD9FC80" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                        <TunableEnum type="TestHiddenInventories" name="test_hidden" class="TunableEnumEntry" default="ANY" display="Test Hidden" muid="6259ECA07D797191" static_entries="objects-object_tests.InventoryTest.TestHiddenInventories" description="Optionally restrict to only hidden or non-hidden inventories." Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                    <TunableTuple name="location" class="TunableLocationTest" display="Location" muid="761F9EBF21404BE6" description="Tests for object locations.&#xA;Outside: Check if an object is on the inside or outside (has a roof over&#xA;its head)&#xA;Natural ground: Checks the floor tiles where the object is to see if it &#xA;qualifies as natural ground" Deprecated="False" filter="0" group="General">
                                        <TunableTuple name="location_tests" class="TunableTuple" display="Location Tests" muid="6A6D79C38A1A7326" Deprecated="False" filter="0" group="General">
                                            <TunableVariant type="None" name="has_terrain_tag" class="OptionalTunable" default="Don't_Test" display="Has Terrain Tag" muid="69ADB2E7D9A90302" description="If checked, will verify the subject of the test is currently on&#xA;the tuned terrain tag." Deprecated="False" filter="0" group="General">
                                                <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="EA3B20754738B1B0" />
                                                <TunableTuple name="enabled" class="TunableTuple" display="Enabled" muid="50A5136EDD0678B0" description=",&#xA;A set of terrain tags required for this test to pass." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="bool" name="negate" class="Tunable" default="False" display="Negate" muid="9661224CF05DD0DC" description="If checked, the test will be inverted. In other words,&#xA;the test will fail if at least one tag is detected at&#xA;this location." Deprecated="False" filter="0" group="General" />
                                                    <TunableList name="terrain_tags" class="TunableEnumSet" display="Terrain Tags" muid="CF2FFBD8F498EA45" description="A set of terrain tags. Only one of these tags needs to be&#xA;present at this location. Although it is not tunable, there&#xA;is a threshold weight underneath which a terrain tag will&#xA;not appear to be present." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                        <TunableEnum type="TerrainTag" class="TunableEnumEntry" default="INVALID" muid="3EFEB7B9B09EF92F" static_entries="world-terrain_enums.TerrainTag" Deprecated="False" filter="0" group="General" />
                                                    </TunableList>
                                                    <Tunable type="bool" name="test_floor_tiles" class="Tunable" default="False" display="Test Floor Tiles" muid="F9B5B8860C67D53D" description="If checked, floor tiles will be tested. Otherwise, &#xA;it'll only check the terrain and will ignore the &#xA;floor tiles on the terrain." Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                            </TunableVariant>
                                            <TunableVariant type="None" name="in_common_area" class="OptionalTunable" default="Don't_Test" display="In Common Area" muid="886027CC15717F70" description="If checked, will verify the subject is in the common area&#xA;of an apartment.  If unchecked will verify the subject is not." Deprecated="False" filter="0" group="General">
                                                <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="726058A20215FDCC" />
                                                <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="97DB351F0B1B5CFD" Deprecated="False" filter="0" group="General" />
                                            </TunableVariant>
                                            <TunableVariant type="None" name="is_fire_allowed" class="OptionalTunable" default="Don't_Test" display="Is Fire Allowed" muid="273D6573B7630244" description="If checked, will verify if fire is possible at the subject's position. &#xA;If unchecked, will pass if fire is not possible.&#xA;If not enabled, doesn't care either way." Deprecated="False" filter="0" group="General">
                                                <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="2679FD7CB858A900" />
                                                <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="CE9BB08954189EDD" Deprecated="False" filter="0" group="General" />
                                            </TunableVariant>
                                            <TunableVariant type="None" name="is_in_slot" class="OptionalTunable" default="Don't_Test" display="Is In Slot" muid="326048ADE7BC45D" description="If enabled will test if the object is attacked/deattached to&#xA;any of possible tuned slots.&#xA;If you tune a slot type set the test will test if the object &#xA;is slotted or not slotted into into any of those types. " Deprecated="False" filter="0" group="General">
                                                <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="58E51E34DF5653D8" />
                                                <TunableTuple name="enabled" class="TunableTuple" display="Enabled" muid="C07E7A51F6E9A98D" description="Test if an object is current slotted in any of a possible&#xA;list of slot types.&#xA;Empty slot type set is allowed for testing for slotted or&#xA;not slotted only." Deprecated="False" filter="0" group="General">
                                                    <TunableVariant type="None" name="slot_test_type" class="TunableVariant" default="any_slot" display="Slot Test Type" muid="394ADD69AE865A59" description="Strategy to test the slots:&#xA;Any Slot - is the object in any slot&#xA;Surface Slot - is object is in a surface slot&#xA;Specific Slot - is the object in specific list of slots" Deprecated="False" filter="0" group="General">
                                                        <TunableTuple name="any_slot" class="TunableSlotTestType" display="Any Slot" muid="64468EE5E958F95E" description="Singleton factory for testing if object is slotted." Deprecated="False" filter="0" group="General">
                                                            <Tunable type="bool" name="require_slotted" class="Tunable" default="True" display="Require Slotted" muid="5852CFE126011A35" description="If checked, return success if the object is slotted&#xA;If unchecked, test the absense of slotting." Deprecated="False" filter="0" group="General" />
                                                        </TunableTuple>
                                                        <TunableTuple name="specific_slot" class="TunableSpecificSlotTest" display="Specific Slot" muid="C8429607C66C6CE0" description="Subclass of SlotTestType that can check against a specific&#xA;slot set." Deprecated="False" filter="0" group="General">
                                                            <Tunable type="bool" name="require_slotted" class="Tunable" default="True" display="Require Slotted" muid="345E13F8B1EFBFAD" description="If checked, return success if the object is slotted&#xA;If unchecked, test the absense of slotting." Deprecated="False" filter="0" group="General" />
                                                            <Tunable type="slot_type_set" name="specific_slot_set" class="TunableReference" display="Specific Slot Set" muid="D76200846A9D49C5" description="Set of slots the object may be attached to." allow_none="False" Deprecated="False" filter="0" group="General" />
                                                        </TunableTuple>
                                                        <TunableTuple name="surface_slot" class="TunableSurfaceSlotTest" display="Surface Slot" muid="81F06775E8698DAE" description="Subclass of SlotTestType that checks that a slot has&#xA;is_surface set to true." Deprecated="False" filter="0" group="General">
                                                            <Tunable type="bool" name="require_slotted" class="Tunable" default="True" display="Require Slotted" muid="EA993AA0F118594B" description="If checked, return success if the object is slotted&#xA;If unchecked, test the absense of slotting." Deprecated="False" filter="0" group="General" />
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                </TunableTuple>
                                            </TunableVariant>
                                            <TunableVariant type="None" name="is_inside_building" class="OptionalTunable" default="Don't_Test" display="Is Inside Building" muid="7A28C026D903CA93" description="If checked, will verify if the subject of the test is inside a&#xA;building. This uses a client function that checks if the block&#xA;the sim is mostly enclosed by walls or if not, if the adjoining&#xA;blocks are themselves enclosed. This should be used when we&#xA;want to test if a subject is inside a normally constructed &#xA;building. If we simply want to test whether the subject is &#xA;covered / has a roof over them, use is_outside. See comment on&#xA;is_outside for more details. If unchecked, will negate this &#xA;test." Deprecated="False" filter="0" group="General">
                                                <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="E8A871A20552AFD" />
                                                <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="867BF8605C70A4C2" Deprecated="False" filter="0" group="General" />
                                            </TunableVariant>
                                            <TunableVariant type="None" name="is_natural_ground" class="OptionalTunable" default="Don't_Test" display="Is Natural Ground" muid="2CAF63868D7F4BC0" description="If checked, will verify the subject of the test is on natural &#xA;ground (no floor tiles are under him).&#xA;Otherwise, will verify the subject of the test is not on &#xA;natural ground." Deprecated="False" filter="0" group="General">
                                                <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="D9CF2C4A32F76682" />
                                                <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="D0571A68CE9E529E" Deprecated="False" filter="0" group="General" />
                                            </TunableVariant>
                                            <TunableVariant type="None" name="is_on_active_lot" class="OptionalTunable" default="Don't_Test" display="Is On Active Lot" muid="A307CDC54380D719" description="If disabled the test will not be used.&#xA;If enabled and checked, the test will pass if the subject is&#xA;on the active lot. (their center is within the lot bounds)&#xA;If enabled and not checked, the test will pass if the subject is &#xA;outside of the active lot.&#xA;&#xA;For example, Ask To Leave is tuned with this enabled and checked&#xA;for the TargetSim. You can only ask someone to leave if they&#xA;are actually on the active lot, but not if they are wandering&#xA;around in the open streets." Deprecated="False" filter="0" group="General">
                                                <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="500BDA04431E3616" />
                                                <TunableTuple name="Is_or_is_not_on_active_lot" class="TunableTuple" display="Is Or Is Not On Active Lot" muid="EB6EA62BDD3AE03D" Deprecated="False" filter="0" group="General">
                                                    <Tunable type="bool" name="include_spawn_point" class="Tunable" default="False" display="Include Spawn Point" muid="88892DEEDB6575DA" description="If set to true, we will consider the lot's spawn point as part of the active lot." Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="bool" name="is_or_is_not_on_active_lot" class="Tunable" default="True" display="Is Or Is Not On Active Lot" muid="7AACE4312103A23D" description="If checked then the test will pass if the subject is on&#xA;the active lot." Deprecated="False" filter="0" group="General" />
                                                    <TunableVariant type="None" name="tolerance" class="TunableVariant" default="explicit" display="Tolerance" muid="E1AE521ACB004CFE" Deprecated="False" filter="0" group="General">
                                                        <Tunable type="int" name="explicit" class="Tunable" default="0" display="Explicit" muid="6949760BE5BF5A61" description="The tolerance from the edge of the lot that the&#xA;location test will use in order to determine if the&#xA;test target is considered on lot or not." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                        <TunableTuple name="use_default_tolerance" class="UseDefaultOfflotToleranceFactory" display="Use Default Tolerance" muid="8A744EB77730A348" description="Use the default tuned global offlot tolerance tuned&#xA;in objects.components.statistic_component.Default Off Lot." Deprecated="False" filter="0" group="General" />
                                                    </TunableVariant>
                                                </TunableTuple>
                                            </TunableVariant>
                                            <TunableVariant type="None" name="is_on_level" class="OptionalTunable" default="Don't_Test" display="Is On Level" muid="8BC198BA43619199" description="If enabled, we check the participant's current level against&#xA;the tuned threshold.  In the case of sims in pools, the effective&#xA;level will be that of the surface of the pool, not the bottom." Deprecated="False" filter="0" group="General">
                                                <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="5D9429062F36D3F6" />
                                                <TunableTuple name="enabled" class="TunableThreshold" display="Enabled" muid="B0E8FED6AB40BF92" description="Value/comparison pair used to define a Threshold." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="A4DD6294D1089F5B" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="int" name="value" class="Tunable" default="0" display="Value" muid="FFA90D3A2CD54CA2" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                            </TunableVariant>
                                            <TunableVariant type="None" name="is_outside" class="OptionalTunable" default="Don't_Test" display="Is Outside" muid="64D3ABDCBC7AD45C" description="PLEASE BE AWARE. If checked, will verify if the subject of the&#xA;test does not have a roof over their head. If unchecked, will &#xA;test if the subject has a roof over their head. If the &#xA;intention is to determine if a subject is in/not in a building, &#xA;this test is deprecated in favor of is_inside_building. If you &#xA;would like to test if a subject is inside a building, but also &#xA;need to test if they have a roof over their head, please use &#xA;both options." Deprecated="False" filter="0" group="General">
                                                <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="6A7EA47679F66F06" />
                                                <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="40A185170B0C7616" Deprecated="False" filter="0" group="General" />
                                            </TunableVariant>
                                            <TunableVariant type="None" name="is_venue_type" class="OptionalTunable" default="Don't_Test" display="Is Venue Type" muid="8F64C25340206ACD" description="If checked, will verify if the subject is at a venue of the&#xA;specified type." Deprecated="False" filter="0" group="General">
                                                <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="A2108BCD8EF758DE" />
                                                <TunableTuple name="enabled" class="TunableTuple" display="Enabled" muid="6DF67F7EA074BAB8" description="Venue type required for this test to pass." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="bool" name="negate" class="Tunable" default="False" display="Negate" muid="9FA086CF030D1D04" description="If enabled, the test will return true if the subject&#xA;IS NOT at a venue of the specified type." Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="bool" name="use_source_venue" class="Tunable" default="False" display="Use Source Venue" muid="35EC9B74CB171F65" description="If enabled, the test will test the source venue instead of the active&#xA;venue.  For example, the Community Lot instead of the active Marketplace.&#xA;Testing the active venue is the default." Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="venue" name="venue_type" class="TunableReference" display="Venue Type" muid="24D822C266214D09" description="Venue type to test against." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                </TunableTuple>
                                            </TunableVariant>
                                            <TunableVariant type="None" name="valid_surface_types" class="OptionalTunable" default="Don't_Test" display="Valid Surface Types" muid="57EAF059FF4CCDD5" description="If enabled, we will test the surface type of the subject&#xA;against prohibited or required surface types." Deprecated="False" filter="0" group="General">
                                                <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="C174B95488B514EC" />
                                                <TunableTuple name="Test_Surface_Types" class="TunableWhiteBlackList" display="Test Surface Types" muid="B456C1AD22A71A0F" description="Required and Prohibited Surface Types. " Deprecated="False" filter="0" group="General">
                                                    <TunableVariant type="None" name="blacklist" class="OptionalTunable" default="nothing" display="Blacklist" muid="6697934EF53C52CF" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is not in the blacklist. If no blacklist is&#xA;specified, no items are disallowed." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="nothing" class="TunableExistance" display="Nothing" muid="E36171EA3A5D9C6" />
                                                        <TunableTuple name="specify" class="TunableBlacklist" display="Specify" muid="52F5328224CBF5F8" description="A tunable blacklist." Deprecated="False" filter="0" group="General">
                                                            <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="FEA61C8BDC60464A" description="Blacklisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                <TunableEnum type="SurfaceType" class="TunableEnumEntry" default="SURFACETYPE_WORLD" muid="373286364750E696" static_entries="routing.SurfaceType" description="Surface Type the object is placed on." Deprecated="False" filter="0" group="General" invalid_entries="SURFACETYPE_UNKNOWN" />
                                                            </TunableList>
                                                            <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="851C9BBFD3188A07" description="Tunable option for how many items must be in the blacklist&#xA;for the blacklist to fail when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="124C2860696DC020" />
                                                                <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="A54CCBE0137632C" description="When testing a collection of items, the number of items in&#xA;that collection that are in the blacklist must pass this&#xA;threshold test for the blacklist to disallow them all." Deprecated="False" filter="0" group="General">
                                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="84496A91DDE4A4E8" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                    <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="1DA3CC08EDA6494" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                </TunableTuple>
                                                            </TunableVariant>
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                    <TunableVariant type="None" name="whitelist" class="OptionalTunable" default="everything" display="Whitelist" muid="1672F74036FE247E" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is in the whitelist. If no whitelist is&#xA;specified, all items are allowed." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="everything" class="TunableExistance" display="Everything" muid="735605B66EFBE7B2" />
                                                        <TunableTuple name="specify" class="TunableWhitelist" display="Specify" muid="80245894540D3009" description="A tunable whitelist." Deprecated="False" filter="0" group="General">
                                                            <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="48ED6721C0F6E188" description="Tunable option for how many items must be in the whitelist&#xA;for the whitelist to pass when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="407C94516DBB1BD4" />
                                                                <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="AAA028B7E6175992" description="When testing a collection of items, the number of items in&#xA;that collection that are in the whitelist must pass this&#xA;threshold test for the whitelist to allow them all." Deprecated="False" filter="0" group="General">
                                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="892206B938141E7E" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                    <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="E4CF116C40D0E9" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                </TunableTuple>
                                                            </TunableVariant>
                                                            <TunableList name="whitelist" class="TunableSet" display="Whitelist" muid="19D3188CF2C86EA5" description="Whitelisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                <TunableEnum type="SurfaceType" class="TunableEnumEntry" default="SURFACETYPE_WORLD" muid="3DF5566987C18AE1" static_entries="routing.SurfaceType" description="Surface Type the object is placed on." Deprecated="False" filter="0" group="General" invalid_entries="SURFACETYPE_UNKNOWN" />
                                                            </TunableList>
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                </TunableTuple>
                                            </TunableVariant>
                                        </TunableTuple>
                                    </TunableTuple>
                                    <Tunable name="none" class="TunableExistance" display="None" muid="190A6FC9FDB53A43" />
                                    <TunableTuple name="object_definition" class="TunableObjectMatchesDefinitionOrTagTest" display="Object Definition" muid="F4CAC1E3BB0CD01" description="Check to see if the specified object matches either a static definition or a set of tags" Deprecated="False" filter="0" group="General">
                                        <TunableVariant type="None" name="item" class="TunableVariant" default="tagged_item" display="Item" muid="3175483A5A80233" description="Whether to test for a specific item or item that has a set of tags" Deprecated="False" filter="0" group="General">
                                            <TunableTuple name="actual_item" class="CraftActualItemFactory" display="Actual Item" muid="D5C380B766D7A7A0" description="This option tests crafted item against a list of possible items" Deprecated="False" filter="0" group="General">
                                                <TunableList name="items_to_check" class="TunableList" display="Items To Check" muid="964860B9FE691628" Deprecated="False" filter="0" group="General">
                                                    <Tunable type="object" class="TunableReference" muid="4F9C61BF289DA4C" description="Object that qualifies for this check." allow_none="False" Deprecated="False" filter="0" group="General" />
                                                </TunableList>
                                            </TunableTuple>
                                            <TunableTuple name="tagged_item" class="CraftTaggedItemFactory" display="Tagged Item" muid="CA8D0B62F05D205B" description="This option tests crafted item's tags against a list of possible tags" Deprecated="False" filter="0" group="General">
                                                <TunableList name="tag_set" class="TunableSet" display="Tag Set" muid="3CE38FC04FAEFADA" description="The tag of objects we want to test ownership of" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                    <TunableEnum type="Tag" class="TunableEnumEntry" default="INVALID" muid="2116A08682ED268D" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="What tag to test for" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                </TunableList>
                                                <TunableEnum type="TagTestType" name="test_type" class="TunableEnumEntry" default="CONTAINS_ANY_TAG_IN_SET" display="Test Type" muid="E33BCCBA35845732" static_entries="objects-object_tests.TagTestType" description="How to test the tags in the tag set against the objects on the lot." Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                        </TunableVariant>
                                        <TunableVariant type="None" name="tooltip" class="OptionalTunable" default="disabled" display="Tooltip" muid="1BF10AB1EB827DE9" description="Reason of failure." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="B77EA7C4A19A7733" />
                                            <Tunable type="int" name="enabled" class="TunableLocalizedString" default="0x0" display="Enabled" muid="22F632FD7367B678" description="Reason of failure." Deprecated="False" filter="0" group="General" />
                                        </TunableVariant>
                                    </TunableTuple>
                                    <TunableTuple name="object_preference" class="TunableObjectScoringPreferenceTest" display="Object Preference" muid="2D8E3832EDEB5B0C" description="A tunable factory that checks whether or not the target object of an affordance&#xA;is the Sim's preferred scoring object." Deprecated="False" filter="0" group="General">
                                        <TunableVariant type="None" name="any_sim" class="OptionalTunable" default="disabled" display="Any Sim" muid="35CEC3A2978A4FA7" description="If enabled, will return whether the object has any &quot;Use Only&quot; preference&#xA;set for the specified tag.  Will not be sim specific, and thus only&#xA;works for &quot;use only&quot; preference type.  Does NOT rely on interaction&#xA;to determine preference type.&#xA;&#xA;Value is the tag to test for." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="69F3666D9F4C85E6" />
                                            <TunableEnum type="ObjectPreferenceTag" name="enabled" class="TunableEnumEntry" default="INVALID" display="Enabled" muid="42C9E890B25DE4FB" dynamic_entries="autonomy-autonomy_preference.ObjectPreferenceTag._elements" static_entries="autonomy-autonomy_preference.ObjectPreferenceTag" description="Tag to determine which preference type to use." Deprecated="False" filter="0" group="General" invalid_entries="INVALID" />
                                        </TunableVariant>
                                        <Tunable type="bool" name="require" class="Tunable" default="True" display="Require" muid="D7C4C86C00934A1D" description="The Sim's preference is required to be True or required to be False." Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                    <TunableTuple name="season" class="TunableSeasonTest" display="Season" muid="C70CDA730DECA0D1" description="SeasonTest will test if the current simulation time falls within the&#xA;specified test conditions." Deprecated="False" filter="0" group="General">
                                        <Tunable type="bool" name="requires_seasons_pack" class="Tunable" default="True" display="Requires Seasons Pack" muid="C4B36B347AED8364" description="If checked, this test will require that the Seasons pack be &#xA;installed in order for the seasons test to pass.  If unchecked, &#xA;this test will automatically pass." Deprecated="False" filter="0" group="General" />
                                        <TunableList name="seasons" class="TunableEnumSet" display="Seasons" muid="BCC3B5A8591DF9E2" min="1" description="Season(s) that we must be in to pass the test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                            <TunableEnum type="SeasonType" class="TunableEnumEntry" default="SUMMER" muid="A3832B222FA19090" static_entries="seasons-seasons_enums.SeasonType" Deprecated="False" filter="0" group="General" />
                                        </TunableList>
                                        <TunableVariant type="None" name="time_of_season" class="OptionalTunable" default="disabled" display="Time Of Season" muid="6E382DC026CAE3F5" description="Portion(s) of season(s) that we must be in to pass the test." Deprecated="False" filter="0" group="General">
                                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="2129183A5D97575A" />
                                            <TunableList name="enabled" class="TunableEnumSet" display="Enabled" muid="B96C28E276859EF8" min="1" description="Portion(s) of season(s) that we must be in to pass the test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                <TunableEnum type="SeasonSegment" class="TunableEnumEntry" default="EARLY" muid="1BE2828C6A18B81F" static_entries="seasons-seasons_enums.SeasonSegment" Deprecated="False" filter="0" group="General" />
                                            </TunableList>
                                        </TunableVariant>
                                    </TunableTuple>
                                    <TunableTuple name="state" class="TunableStateTest" display="State" muid="D1D0FEC753FA093E" description="Gate availability by object state.  By default, the test will use the&#xA;state's linked stat as a fallback in case the target doesn't have the&#xA;state involved." Deprecated="False" filter="0" group="General">
                                        <TunableVariant type="None" name="fallback_behavior" class="TunableVariant" default="always_fail" display="Fallback Behavior" muid="9A658CEEC012BBC7" description="What to do if the given object doesn't have the state in question." Deprecated="False" filter="0" group="General">
                                            <Tunable name="always_fail" class="TunableExistance" display="Always Fail" muid="FFFB20263A06D802" />
                                            <Tunable name="always_pass" class="TunableExistance" display="Always Pass" muid="D2C4426921C1060" />
                                        </TunableVariant>
                                        <TunableEnum type="Operator" name="operator" class="TunableOperator" default="EQUAL" display="Operator" muid="2439FD9AB3AE651A" static_entries="sims4-math.Operator" description="The comparison to use." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="object_state" name="value" class="TunableReference" display="Value" muid="EF7F52566880DB20" description="The value to compare to." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="ObjectStateValue" />
                                    </TunableTuple>
                                    <TunableTuple name="statistic" class="TunableStatThresholdTest" display="Statistic" muid="82027EFC8FBD048E" description="A test that checks whether or not a statistic is at a certain threshold for&#xA;a given participant. It can also test whether or not the participant has the&#xA;statistic explicitly added on them." Deprecated="False" filter="0" group="General">
                                        <Tunable type="bool" name="must_have_stat" class="Tunable" default="False" display="Must Have Stat" muid="74BFFEBF31F09E46" description="Setting this to True (checked) will ensure that this test only&#xA;passes if the tested Sim actually has the statistic referenced. If&#xA;left False (unchecked), this test will evaluate as if the Sim had&#xA;the statistic at the value of 0" Deprecated="False" filter="0" group="General" />
                                        <TunableVariant type="None" name="score_to_use" class="TunableVariant" default="user_value" display="Score To Use" muid="A340C224DB3261FE" description="Depending on the choice, this decides what value to use for the &#xA;threshold comparison." Deprecated="False" filter="0" group="General">
                                            <TunableTuple name="points" class="Tunable_PointsValue" display="Points" muid="68F7DEF54B2B1C62" description="Use the raw points for the comparison in the test." Deprecated="False" filter="0" group="General" />
                                            <TunableTuple name="rank" class="Tunable_RankValue" display="Rank" muid="F80701FD3AEC4CEC" description="Use the rank value for the comparison in the test." Deprecated="False" filter="0" group="General" />
                                            <TunableTuple name="user_value" class="Tunable_UserValue" display="User Value" muid="D08BBBB1A8317EEB" description="Use the user value for the comparison in the test." Deprecated="False" filter="0" group="General">
                                                <Tunable type="bool" name="highest_level_reached_instead" class="Tunable" default="False" display="Highest Level Reached Instead" muid="30DEFBF8149F5DBE" description="If checked this will test against the highest level reached. This&#xA;currently only works with Ranked Statistics. Other statistics do&#xA;not have a notion of highest level reached. If we are using&#xA;something that doesn't support highest level reached it will &#xA;test against the current level instead." Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                        </TunableVariant>
                                        <Tunable type="statistic" name="stat" class="TunableReference" display="Stat" muid="DBC00E4B5EEAD6B4" description="The stat we are operating on." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                        <TunableVariant type="None" name="threshold" class="TunableVariant" default="value_threshold" display="Threshold" muid="E7356ACEB3595C27" description="The value or state threshold to test against." Deprecated="False" filter="0" group="General">
                                            <TunableTuple name="state_value_threshold" class="TunableObjectStateValueThreshold" display="State Value Threshold" muid="EA3A776A11F93A91" description="Value/comparison pair used to define a Threshold." Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="7029F119A25E5B2E" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="object_state" name="value" class="TunableReference" display="Value" muid="E9D0BDC7650E1D4D" description="The state threshold for this test." allow_none="False" Deprecated="False" filter="0" group="General" restrict="ObjectStateValue" />
                                            </TunableTuple>
                                            <TunableTuple name="value_threshold" class="TunableThreshold" display="Value Threshold" muid="7BEDD8FFAEAF109A" description="The threshold to control availability based on the statistic's&#xA;value." Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="CC44B62003514E13" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="4E50F1D230ADBE51" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                        </TunableVariant>
                                        <TunableEnum type="ParticipantType" name="who" class="TunableEnumEntry" default="Actor" display="Who" muid="5BA8A918DA2FAE91" static_entries="interactions.ParticipantType" description="Who or what to apply this test to." Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                    <TunableTuple name="street_civic_policy_test" class="TunableStreetCivicPolicyTest" display="Street Civic Policy Test" muid="F6313DD464363506" description="Test the state of the selected Street's Civic Policy Provider." Deprecated="False" filter="0" group="General">
                                        <TunableList name="civic_policy_tests" class="TunableList" display="Civic Policy Tests" muid="DE5EEE4683992EFC" description="The tests we wish to run on the civic policies in question, run in&#xA;order.  AND operation, all must pass, first to fail stops tests." Deprecated="False" filter="0" group="General">
                                            <TunableVariant type="None" class="TunableVariant" default="voting_open" muid="AD7D588C1EA23541" description="Individual tests run on Civic Policy Provider." Deprecated="False" filter="0" group="General">
                                                <TunableTuple name="available" class="TunableBaseCivicPolicyTestAvailable" display="Available" muid="687AC7FAB8AE7939" description="Test available policies. Available policies include everything tuned." Deprecated="False" filter="0" group="General">
                                                    <TunableTuple name="white_black_list" class="TunableWhiteBlackList" display="White Black List" muid="CCE1D6137BC3B699" description="The civic policies must pass the whitelist and blacklist&#xA;to pass the test." Deprecated="False" filter="0" group="General">
                                                        <TunableVariant type="None" name="blacklist" class="OptionalTunable" default="nothing" display="Blacklist" muid="7B7466B5946656B" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is not in the blacklist. If no blacklist is&#xA;specified, no items are disallowed." Deprecated="False" filter="0" group="General">
                                                            <Tunable name="nothing" class="TunableExistance" display="Nothing" muid="37C259F0F1E29DAE" />
                                                            <TunableTuple name="specify" class="TunableBlacklist" display="Specify" muid="7B8D606C732B233D" description="A tunable blacklist." Deprecated="False" filter="0" group="General">
                                                                <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="C428A9EF3A7E656B" description="Blacklisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                    <Tunable type="snippet" class="TunableReference" muid="84DBF7C1AE96DB6E" description="Allowed and disallowed civic policies." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="BaseCivicPolicy" />
                                                                </TunableList>
                                                                <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="98C7C2D7F77DE158" description="Tunable option for how many items must be in the blacklist&#xA;for the blacklist to fail when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                    <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="9FC2DFD523982B22" />
                                                                    <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="E48ACBFF58FA3511" description="When testing a collection of items, the number of items in&#xA;that collection that are in the blacklist must pass this&#xA;threshold test for the blacklist to disallow them all." Deprecated="False" filter="0" group="General">
                                                                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="7C16AEC2DAA09B86" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                        <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="DE143EA4A65D71D6" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                    </TunableTuple>
                                                                </TunableVariant>
                                                            </TunableTuple>
                                                        </TunableVariant>
                                                        <TunableVariant type="None" name="whitelist" class="OptionalTunable" default="everything" display="Whitelist" muid="184C62B359824A72" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is in the whitelist. If no whitelist is&#xA;specified, all items are allowed." Deprecated="False" filter="0" group="General">
                                                            <Tunable name="everything" class="TunableExistance" display="Everything" muid="C6CAE1CDC5C9902B" />
                                                            <TunableTuple name="specify" class="TunableWhitelist" display="Specify" muid="F0055B83C1A31F7" description="A tunable whitelist." Deprecated="False" filter="0" group="General">
                                                                <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="A9443FB6B306DD40" description="Tunable option for how many items must be in the whitelist&#xA;for the whitelist to pass when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                    <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="911039B51AA87396" />
                                                                    <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="1C008F92689C53AD" description="When testing a collection of items, the number of items in&#xA;that collection that are in the whitelist must pass this&#xA;threshold test for the whitelist to allow them all." Deprecated="False" filter="0" group="General">
                                                                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="BEB025C2A6FC2E33" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                        <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="75E18F6720FF3C15" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                    </TunableTuple>
                                                                </TunableVariant>
                                                                <TunableList name="whitelist" class="TunableSet" display="Whitelist" muid="35E14E75AF225357" description="Whitelisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                    <Tunable type="snippet" class="TunableReference" muid="85CAEA749ACE34E3" description="Allowed and disallowed civic policies." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="BaseCivicPolicy" />
                                                                </TunableList>
                                                            </TunableTuple>
                                                        </TunableVariant>
                                                    </TunableTuple>
                                                </TunableTuple>
                                                <TunableTuple name="balloted" class="TunableBaseCivicPolicyTestBalloted" display="Balloted" muid="D3021CA075FA1130" description="Test balloted policies.  Policies being considered by the next/current vote are&#xA;balloted." Deprecated="False" filter="0" group="General">
                                                    <TunableTuple name="white_black_list" class="TunableWhiteBlackList" display="White Black List" muid="994470837A6CF427" description="The civic policies must pass the whitelist and blacklist&#xA;to pass the test." Deprecated="False" filter="0" group="General">
                                                        <TunableVariant type="None" name="blacklist" class="OptionalTunable" default="nothing" display="Blacklist" muid="435B54DB97A13DD9" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is not in the blacklist. If no blacklist is&#xA;specified, no items are disallowed." Deprecated="False" filter="0" group="General">
                                                            <Tunable name="nothing" class="TunableExistance" display="Nothing" muid="68A2CA8547F6DD19" />
                                                            <TunableTuple name="specify" class="TunableBlacklist" display="Specify" muid="2186BAD3D0F2E8E4" description="A tunable blacklist." Deprecated="False" filter="0" group="General">
                                                                <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="8F086EBF60F07012" description="Blacklisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                    <Tunable type="snippet" class="TunableReference" muid="5044C9E51C40D13F" description="Allowed and disallowed civic policies." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="BaseCivicPolicy" />
                                                                </TunableList>
                                                                <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="D39CF6BEA4B9CF90" description="Tunable option for how many items must be in the blacklist&#xA;for the blacklist to fail when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                    <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="9A7DA547B10DAA62" />
                                                                    <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="8EF5B2ECB5B1A682" description="When testing a collection of items, the number of items in&#xA;that collection that are in the blacklist must pass this&#xA;threshold test for the blacklist to disallow them all." Deprecated="False" filter="0" group="General">
                                                                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="9B87BF898DD0905A" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                        <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="A5DA20C790FFA0F9" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                    </TunableTuple>
                                                                </TunableVariant>
                                                            </TunableTuple>
                                                        </TunableVariant>
                                                        <TunableVariant type="None" name="whitelist" class="OptionalTunable" default="everything" display="Whitelist" muid="E4246368D3EA28E9" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is in the whitelist. If no whitelist is&#xA;specified, all items are allowed." Deprecated="False" filter="0" group="General">
                                                            <Tunable name="everything" class="TunableExistance" display="Everything" muid="FD9283A0FBC945B3" />
                                                            <TunableTuple name="specify" class="TunableWhitelist" display="Specify" muid="5A23BBB343C76282" description="A tunable whitelist." Deprecated="False" filter="0" group="General">
                                                                <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="58E66CA9D37750E4" description="Tunable option for how many items must be in the whitelist&#xA;for the whitelist to pass when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                    <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="3058C555F36591BE" />
                                                                    <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="D54D18CA7857008F" description="When testing a collection of items, the number of items in&#xA;that collection that are in the whitelist must pass this&#xA;threshold test for the whitelist to allow them all." Deprecated="False" filter="0" group="General">
                                                                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="F081442B07485FEF" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                        <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="A41B7EB05D04535F" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                    </TunableTuple>
                                                                </TunableVariant>
                                                                <TunableList name="whitelist" class="TunableSet" display="Whitelist" muid="61931BCBC9D22C19" description="Whitelisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                    <Tunable type="snippet" class="TunableReference" muid="8970855D575404C1" description="Allowed and disallowed civic policies." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="BaseCivicPolicy" />
                                                                </TunableList>
                                                            </TunableTuple>
                                                        </TunableVariant>
                                                    </TunableTuple>
                                                </TunableTuple>
                                                <TunableTuple name="dormant" class="TunableBaseCivicPolicyTestDormant" display="Dormant" muid="9A98F616EA361935" description="Test dormant policies. Dormant policies are not enacted and not balloted." Deprecated="False" filter="0" group="General">
                                                    <TunableTuple name="white_black_list" class="TunableWhiteBlackList" display="White Black List" muid="6155EC90E81615E8" description="The civic policies must pass the whitelist and blacklist&#xA;to pass the test." Deprecated="False" filter="0" group="General">
                                                        <TunableVariant type="None" name="blacklist" class="OptionalTunable" default="nothing" display="Blacklist" muid="E473915FF7FEA7AB" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is not in the blacklist. If no blacklist is&#xA;specified, no items are disallowed." Deprecated="False" filter="0" group="General">
                                                            <Tunable name="nothing" class="TunableExistance" display="Nothing" muid="33150586D6C40709" />
                                                            <TunableTuple name="specify" class="TunableBlacklist" display="Specify" muid="AEE5B9B52F242E7F" description="A tunable blacklist." Deprecated="False" filter="0" group="General">
                                                                <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="D3D8224864CD1073" description="Blacklisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                    <Tunable type="snippet" class="TunableReference" muid="2C738CF7ED829B4D" description="Allowed and disallowed civic policies." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="BaseCivicPolicy" />
                                                                </TunableList>
                                                                <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="5F6280CE911EBF71" description="Tunable option for how many items must be in the blacklist&#xA;for the blacklist to fail when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                    <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="DEE06C7F5B4193E0" />
                                                                    <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="6DE5280DECC2AA53" description="When testing a collection of items, the number of items in&#xA;that collection that are in the blacklist must pass this&#xA;threshold test for the blacklist to disallow them all." Deprecated="False" filter="0" group="General">
                                                                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="9584947F167EF55A" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                        <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="B3B49C8D91D9F4CD" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                    </TunableTuple>
                                                                </TunableVariant>
                                                            </TunableTuple>
                                                        </TunableVariant>
                                                        <TunableVariant type="None" name="whitelist" class="OptionalTunable" default="everything" display="Whitelist" muid="F791150CDCB33319" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is in the whitelist. If no whitelist is&#xA;specified, all items are allowed." Deprecated="False" filter="0" group="General">
                                                            <Tunable name="everything" class="TunableExistance" display="Everything" muid="BC1AD9891DD8393C" />
                                                            <TunableTuple name="specify" class="TunableWhitelist" display="Specify" muid="C286DB36F4051A02" description="A tunable whitelist." Deprecated="False" filter="0" group="General">
                                                                <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="72FE5312D43269A3" description="Tunable option for how many items must be in the whitelist&#xA;for the whitelist to pass when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                    <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="4ED6E4CDB5037CF5" />
                                                                    <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="22182A6B2C8D4760" description="When testing a collection of items, the number of items in&#xA;that collection that are in the whitelist must pass this&#xA;threshold test for the whitelist to allow them all." Deprecated="False" filter="0" group="General">
                                                                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="3A8989B2A50B7708" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                        <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="E52F1CED2A8FB417" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                    </TunableTuple>
                                                                </TunableVariant>
                                                                <TunableList name="whitelist" class="TunableSet" display="Whitelist" muid="BE62928B6A83979F" description="Whitelisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                    <Tunable type="snippet" class="TunableReference" muid="4CB31F181EED2C5" description="Allowed and disallowed civic policies." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="BaseCivicPolicy" />
                                                                </TunableList>
                                                            </TunableTuple>
                                                        </TunableVariant>
                                                    </TunableTuple>
                                                </TunableTuple>
                                                <TunableTuple name="enacted" class="TunableBaseCivicPolicyTestEnacted" display="Enacted" muid="B6365038FABFFE73" description="Test enacted policies." Deprecated="False" filter="0" group="General">
                                                    <TunableTuple name="white_black_list" class="TunableWhiteBlackList" display="White Black List" muid="8DFDC8BEA6C0C42D" description="The civic policies must pass the whitelist and blacklist&#xA;to pass the test." Deprecated="False" filter="0" group="General">
                                                        <TunableVariant type="None" name="blacklist" class="OptionalTunable" default="nothing" display="Blacklist" muid="60EDFFB925DDA0B6" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is not in the blacklist. If no blacklist is&#xA;specified, no items are disallowed." Deprecated="False" filter="0" group="General">
                                                            <Tunable name="nothing" class="TunableExistance" display="Nothing" muid="8DF23BF21C8A51BC" />
                                                            <TunableTuple name="specify" class="TunableBlacklist" display="Specify" muid="3A66F0978AFD3CB9" description="A tunable blacklist." Deprecated="False" filter="0" group="General">
                                                                <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="AAB1CBD6EB5216FE" description="Blacklisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                    <Tunable type="snippet" class="TunableReference" muid="F0EDB0BF1CE22BFF" description="Allowed and disallowed civic policies." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="BaseCivicPolicy" />
                                                                </TunableList>
                                                                <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="93B32CDD8CFC5D7B" description="Tunable option for how many items must be in the blacklist&#xA;for the blacklist to fail when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                    <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="B8B121A7E9FEE370" />
                                                                    <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="766E426871F11138" description="When testing a collection of items, the number of items in&#xA;that collection that are in the blacklist must pass this&#xA;threshold test for the blacklist to disallow them all." Deprecated="False" filter="0" group="General">
                                                                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="1A30FD3A5376409D" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                        <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="F8BFD9FEFBD26ED1" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                    </TunableTuple>
                                                                </TunableVariant>
                                                            </TunableTuple>
                                                        </TunableVariant>
                                                        <TunableVariant type="None" name="whitelist" class="OptionalTunable" default="everything" display="Whitelist" muid="751E1CD746616DBB" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is in the whitelist. If no whitelist is&#xA;specified, all items are allowed." Deprecated="False" filter="0" group="General">
                                                            <Tunable name="everything" class="TunableExistance" display="Everything" muid="D0D2F36FE5C35365" />
                                                            <TunableTuple name="specify" class="TunableWhitelist" display="Specify" muid="DAF40B63E52E136E" description="A tunable whitelist." Deprecated="False" filter="0" group="General">
                                                                <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="D6FC428B7AC7C109" description="Tunable option for how many items must be in the whitelist&#xA;for the whitelist to pass when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                    <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="6D2C68D5668CE825" />
                                                                    <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="8370A67E87ABE75B" description="When testing a collection of items, the number of items in&#xA;that collection that are in the whitelist must pass this&#xA;threshold test for the whitelist to allow them all." Deprecated="False" filter="0" group="General">
                                                                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="A869D1AFF90486C3" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                        <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="FB680C51BB9515F" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                    </TunableTuple>
                                                                </TunableVariant>
                                                                <TunableList name="whitelist" class="TunableSet" display="Whitelist" muid="A864AE7812125E9D" description="Whitelisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                    <Tunable type="snippet" class="TunableReference" muid="F285F172702826E9" description="Allowed and disallowed civic policies." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="BaseCivicPolicy" />
                                                                </TunableList>
                                                            </TunableTuple>
                                                        </TunableVariant>
                                                    </TunableTuple>
                                                </TunableTuple>
                                                <TunableTuple name="repealable" class="TunableBaseCivicPolicyTestRepealable" display="Repealable" muid="1D944F3ADABEC57C" description="Test up for repeal policies. Up for Repeal policies have been specifically marked&#xA;as such and will (if the vote/petition threshold is reached) be repealed&#xA;as part of closing the next vote." Deprecated="False" filter="0" group="General">
                                                    <TunableTuple name="white_black_list" class="TunableWhiteBlackList" display="White Black List" muid="BC9A30A1BD02CFED" description="The civic policies must pass the whitelist and blacklist&#xA;to pass the test." Deprecated="False" filter="0" group="General">
                                                        <TunableVariant type="None" name="blacklist" class="OptionalTunable" default="nothing" display="Blacklist" muid="339EE374DF820C13" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is not in the blacklist. If no blacklist is&#xA;specified, no items are disallowed." Deprecated="False" filter="0" group="General">
                                                            <Tunable name="nothing" class="TunableExistance" display="Nothing" muid="72786EE4C9C3D1A" />
                                                            <TunableTuple name="specify" class="TunableBlacklist" display="Specify" muid="31CBF8404FF82472" description="A tunable blacklist." Deprecated="False" filter="0" group="General">
                                                                <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="FFC94CE4AC1FBDB3" description="Blacklisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                    <Tunable type="snippet" class="TunableReference" muid="1ABDB8A1E1C8F2BE" description="Allowed and disallowed civic policies." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="BaseCivicPolicy" />
                                                                </TunableList>
                                                                <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="8C8D1CC5F22016ED" description="Tunable option for how many items must be in the blacklist&#xA;for the blacklist to fail when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                    <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="86F7772A47CA4AF" />
                                                                    <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="D5A2D039EDAAEBD1" description="When testing a collection of items, the number of items in&#xA;that collection that are in the blacklist must pass this&#xA;threshold test for the blacklist to disallow them all." Deprecated="False" filter="0" group="General">
                                                                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="DD0EEF5AD98EF516" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                        <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="70C93E9BBEB6DB35" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                    </TunableTuple>
                                                                </TunableVariant>
                                                            </TunableTuple>
                                                        </TunableVariant>
                                                        <TunableVariant type="None" name="whitelist" class="OptionalTunable" default="everything" display="Whitelist" muid="3F13D5190D951C69" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is in the whitelist. If no whitelist is&#xA;specified, all items are allowed." Deprecated="False" filter="0" group="General">
                                                            <Tunable name="everything" class="TunableExistance" display="Everything" muid="3B084EB41FF63BAF" />
                                                            <TunableTuple name="specify" class="TunableWhitelist" display="Specify" muid="68C3B8D2CA607BDF" description="A tunable whitelist." Deprecated="False" filter="0" group="General">
                                                                <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="9DEB1159469D4F0" description="Tunable option for how many items must be in the whitelist&#xA;for the whitelist to pass when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                    <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="80BD0C5BB9731DCF" />
                                                                    <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="ED1A2C2A9571DAB1" description="When testing a collection of items, the number of items in&#xA;that collection that are in the whitelist must pass this&#xA;threshold test for the whitelist to allow them all." Deprecated="False" filter="0" group="General">
                                                                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="D13ACC52C0DB3DAC" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                        <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="769F17198B4748FB" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                    </TunableTuple>
                                                                </TunableVariant>
                                                                <TunableList name="whitelist" class="TunableSet" display="Whitelist" muid="48C36D0E9024C21D" description="Whitelisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                    <Tunable type="snippet" class="TunableReference" muid="6C9746CDD2A7D2C5" description="Allowed and disallowed civic policies." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="BaseCivicPolicy" />
                                                                </TunableList>
                                                            </TunableTuple>
                                                        </TunableVariant>
                                                    </TunableTuple>
                                                </TunableTuple>
                                                <TunableTuple name="voting_open" class="TunableBaseCivicPolicyTestVotingOpen" display="Voting Open" muid="FBBB3B707C0F1AB2" description="If checked, will verify that voting is currently active." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="bool" name="negate" class="Tunable" default="False" display="Negate" muid="1CFFAEBBF7687A41" description="If checked then this test will return True when not active." Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableTuple name="voting_time_until_change" class="TunableBaseCivicPolicyTestVotingTimeUntilChange" display="Voting Time Until Change" muid="323F8C3B7A62B38C" description="If checked, will check the time remaining before the next voting open status change." Deprecated="False" filter="0" group="General">
                                                    <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="169BACE06B3D0099" description="The amount of time relative to the next voting state change to test." Deprecated="False" filter="0" group="General">
                                                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="17411622C372BF51" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                        <TunableTuple name="value" class="TunableTimeSpan" display="Value" muid="26AF16FB8BA421FA" description="Duration before the next change." Deprecated="False" filter="0" group="General">
                                                            <Tunable type="int" name="days" class="TunableRange" default="0" display="Days" muid="1FC9F48059135DA1" min="0" max="None" description="Number of days" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                            <Tunable type="int" name="hours" class="TunableRange" default="1" display="Hours" muid="D4AD076FA31E1487" min="0" max="23" description="Number of hours" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                            <Tunable type="int" name="minutes" class="TunableRange" default="0" display="Minutes" muid="6BCF73E58F54A67A" min="0" max="59" description="Number of minutes" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                        </TunableTuple>
                                                    </TunableTuple>
                                                </TunableTuple>
                                            </TunableVariant>
                                        </TunableList>
                                        <TunableVariant type="None" name="street" class="TunableVariant" default="literal" display="Street" muid="FBFF892157257F60" description="Select what street to test." Deprecated="False" filter="0" group="General">
                                            <Tunable type="street" name="literal" class="TunableReference" display="Literal" muid="7649F5D175855427" description="Identify a specific Street." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                            <TunableTuple name="via_street_participant" class="TunableStreetParticipant" display="Via Street Participant" muid="4457835C57A4E7DD" description="Get the street participant." Deprecated="False" filter="0" group="General" />
                                            <TunableVariant type="None" name="via_zone_source" class="TunableVariant" default="use_current_zone" display="Via Zone Source" muid="46F830B1771B2F77" description="Select the street to use by specifying a Zone Source." Deprecated="False" filter="0" group="General">
                                                <TunableTuple name="use_current_zone" class="TunableActiveZone" display="Use Current Zone" muid="BB9E273F0D5170B" description="Get the active zone." Deprecated="False" filter="0" group="General" />
                                                <TunableTuple name="use_participant_home_zone" class="TunableParticipantHomeZone" display="Use Participant Home Zone" muid="20A4234D5DDD173C" description="Get a participant's home zone. Can be None if they don't have one." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="ParticipantTypeSingleSim" name="participant" class="TunableEnumEntry" default="Actor" display="Participant" muid="9A40AC2CDE75C6DC" static_entries="interactions.ParticipantTypeSingleSim" description="Test against the participant's home zone. Townies' home zone will&#xA;be None." Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableTuple name="use_pick_info" class="TunablePickInfoZone" display="Use Pick Info" muid="80304ACB82FF4DBB" description="Get the zone of the lot the user clicked on." Deprecated="False" filter="0" group="General" />
                                                <TunableTuple name="use_picked_zone_ids" class="TunablePickedZoneIds" display="Use Picked Zone Ids" muid="D696774208A2CDEC" description="Get the zone from the interaction's picked_zone_ids participant. Usually&#xA;comes from a picker." Deprecated="False" filter="0" group="General" />
                                            </TunableVariant>
                                        </TunableVariant>
                                    </TunableTuple>
                                </TunableVariant>
                            </TunableList>
                        </TunableList>
                        <TunableList name="weighted_tests" class="TunableList" display="Weighted Tests" muid="D4E114A86612876A" description="Weighted tests for the individual object. One is chosen &#xA;based on weight, and all objects are run against that chosen&#xA;test set." Deprecated="False" filter="0" group="General">
                            <TunableTuple class="TunableTuple" muid="D2D14DE26B492D22" Deprecated="False" filter="0" group="General">
                                <TunableList name="tests" class="TunableObjectModifyTestSet" display="Tests" muid="308B36F9173D08B2" description="All least one subtest group (AKA one list item) must pass&#xA;within this list before the action associated with this&#xA;tuning will be run." Deprecated="False" filter="0" group="General">
                                    <TunableList class="TunableList" muid="342940F64715A849" description="A list of tests.  All of these must pass for the group to pass." Deprecated="False" filter="0" group="General">
                                        <TunableVariant type="None" class="TunableObjectModifyTestVariant" default="none" muid="A5AB714167E43264" description="A single tunable test." Deprecated="False" filter="0" group="General">
                                            <TunableTuple name="consumable_test" class="TunableConsumableTest" display="Consumable Test" muid="7D2B3E610A57C690" description="A test that checks information about consumables." Deprecated="False" filter="0" group="General">
                                                <TunableTuple name="bites_left" class="TunableTuple" display="Bites Left" muid="19EBB269BE95C10" description="A check that tests against the number of bites left before the&#xA;subject is completely consumed." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="Operator" name="operator" class="TunableOperator" default="EQUAL" display="Operator" muid="F7003ECEADC1B515" static_entries="sims4-math.Operator" description="The operator to use for the comparison." Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="int" name="value" class="Tunable" default="1" display="Value" muid="38C4034ADBC0D662" description="The number of bites to test against." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <Tunable type="bool" name="is_consumable" class="Tunable" default="True" display="Is Consumable" muid="3F13BD7975C604A7" description="If checked, the subject must be a consumable, if unchecked, the&#xA;subject must not be a consumable." Deprecated="False" filter="0" group="General" />
                                                <TunableEnum type="ParticipantType" name="subject" class="TunableEnumEntry" default="Object" display="Subject" muid="D70C4060FA725D78" static_entries="interactions.ParticipantType" description="The subject of the test. This is the consumable object." Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <TunableTuple name="custom_name" class="TunableCustomNameTest" display="Custom Name" muid="849C9D835965038" description="Require or prohibit an object from having a custom&#xA;name or description set." Deprecated="False" filter="0" group="General">
                                                <TunableVariant type="None" name="has_custom_description" class="OptionalTunable" default="disabled" display="Has Custom Description" muid="9706497343DDA041" description="If checked, the subject must have a custom description set. If unchecked, it cannot have a custom description set." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="B3904EDC4E45EF64" />
                                                    <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="35A4EF6D3C8E4756" description="If checked, the subject must have a custom description set. If unchecked, it cannot have a custom description set." Deprecated="False" filter="0" group="General" />
                                                </TunableVariant>
                                                <TunableVariant type="None" name="has_custom_name" class="OptionalTunable" default="disabled" display="Has Custom Name" muid="C88ED4A090123005" description="If checked, the subject must have a custom name set. If unchecked, it cannot have a custom name set." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="D50F5FFD391F95A9" />
                                                    <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="60D23483BC8408A8" description="If checked, the subject must have a custom name set. If unchecked, it cannot have a custom name set." Deprecated="False" filter="0" group="General" />
                                                </TunableVariant>
                                                <TunableEnum type="ParticipantType" name="participant" class="TunableEnumEntry" default="Object" display="Participant" muid="90E39741E6568B9E" static_entries="interactions.ParticipantType" description="The subject who is the object of this test." Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <TunableTuple name="elapsed_time" class="TunableTimeElapsedZoneTest" display="Elapsed Time" muid="AB839904AEA8CB39" description="Test to make sure enough time has passed since the zone was last saved." Deprecated="False" filter="0" group="General">
                                                <Tunable type="float" name="minutes_passed" class="TunableSimMinute" default="720" display="Minutes Passed" muid="C6F2967F24949C92" min="1" max="None" description="This test will pass when the minutes passed is greater than the&#xA;number minutes since last loading into zone." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <TunableTuple name="existence" class="TunableExistenceTest" display="Existence" muid="1E737F0718D87406" description="A test to check whether the specified participant exists." Deprecated="False" filter="0" group="General">
                                                <Tunable type="bool" name="allow_hidden_sim_status" class="Tunable" default="False" display="Allow Hidden Sim Status" muid="62CF9FFB8DEB2C72" description="If checked then we will ignore hidden Sim status such that they will count as existing even though they&#xA;have been hidden.  Use this in conjunction with Require Instantiated in order to determine the Sim's actual&#xA;instantiated status. " Deprecated="False" filter="0" group="General" />
                                                <Tunable type="bool" name="exists" class="Tunable" default="True" display="Exists" muid="B867181A1D47A4B4" description="When checked, require the specified participant to exist. When&#xA;unchecked, require the specified participant to not exist." Deprecated="False" filter="0" group="General" />
                                                <TunableEnum type="ParticipantType" name="participant" class="TunableEnumEntry" default="TargetSim" display="Participant" muid="5C7A243FBFC5D4AD" static_entries="interactions.ParticipantType" description="The participant for which to check existence." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="bool" name="require_instantiatable" class="Tunable" default="True" display="Require Instantiatable" muid="40E8A18AAC9F8A81" description="If checked, the specified participant must be instantiatable. This&#xA;is generally true for all Sims at LOD above MINIMUM." Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <TunableTuple name="game_option" class="TunableSimInfoGameplayOptionsTest" display="Game Option" muid="EE8D5BA87D063808" description="Test whether or not a Sim has a specific gameplay option set." Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="TestableGameOptions" name="gameplay_option" class="TunableEnumEntry" default="CIVIC_POLICY_NPC_VOTING_ENABLED" display="Gameplay Option" muid="A2821FAF5A23AE51" static_entries="event_testing-game_option_tests.TestableGameOptions" description="The gameplay option to test. This test will pass if this option is&#xA;set." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="bool" name="invert" class="Tunable" default="False" display="Invert" muid="9284ADD56B91FBBD" description="If enabled, requires the option to be unset for the test to pass." Deprecated="False" filter="0" group="General" />
                                                <TunableVariant type="None" name="tooltip" class="OptionalTunable" default="disabled" display="Tooltip" muid="450FAE8ABD823527" description="Reason of failure." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="F40F0EB571C0AEBB" />
                                                    <Tunable type="int" name="enabled" class="TunableLocalizedString" default="0x0" display="Enabled" muid="5634F93C7350B644" description="Reason of failure." Deprecated="False" filter="0" group="General" />
                                                </TunableVariant>
                                            </TunableTuple>
                                            <TunableTuple name="inventory" class="TunableInventoryTest" display="Inventory" muid="BA56537D7AEAA2F6" description="A test to check on the contents of either a sim inventory or&#xA;an object inventory." Deprecated="False" filter="0" group="General">
                                                <TunableVariant type="None" name="contents_check" class="TunableVariant" default="has_anything" display="Contents Check" muid="D57AB64EE2E180B5" description="Checks to run on each object of the specified inventory" Deprecated="False" filter="0" group="General">
                                                    <Tunable name="has_anything" class="TunableExistance" display="Has Anything" muid="57FC168EE0944E1A" />
                                                    <TunableTuple name="has_object_of_participant_type" class="TunableTuple" display="Has Object Of Participant Type" muid="D0F805FD35B5229A" description="Participant type we want to test if its in the selected&#xA;inventory." Deprecated="False" filter="0" group="General">
                                                        <TunableEnum type="ParticipantType" name="participant" class="TunableEnumEntry" default="Object" display="Participant" muid="E3DC377E79E70429" static_entries="interactions.ParticipantType" description="Which participant of the interaction do we want to validate&#xA;on the inventory. " Deprecated="False" filter="0" group="General" />
                                                    </TunableTuple>
                                                    <TunableTuple name="has_object_with_def" class="TunableTuple" display="Has Object With Def" muid="D2EFE1903F0D292B" Deprecated="False" filter="0" group="General">
                                                        <Tunable type="object" name="definition" class="TunableReference" display="Definition" muid="3A66C2D47AABF7C9" description="The object definition to look for inside inventory." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                    </TunableTuple>
                                                    <TunableTuple name="has_object_with_states" class="BasicStateCheckFactory" display="Has Object With States" muid="6BE57290C940716A" description="This option tests crafted item's tags against a list of possible&#xA;tags." Deprecated="False" filter="0" group="General">
                                                        <TunableVariant type="None" name="object_requirement" class="TunableVariant" default="any_object" display="Object Requirement" muid="D80452B5F0E9B170" Deprecated="False" filter="0" group="General">
                                                            <Tunable name="any_object" class="TunableExistance" display="Any Object" muid="6B015C2627E7671B" />
                                                            <TunableTuple name="definition" class="TunableTuple" display="Definition" muid="2A15D0F1966C375B" Deprecated="False" filter="0" group="General">
                                                                <Tunable type="object" name="definition" class="TunableReference" display="Definition" muid="40806556A1A80FF8" description="The object must have this definition." allow_none="False" Deprecated="False" filter="0" group="General" />
                                                            </TunableTuple>
                                                            <TunableTuple name="tag" class="TunableTuple" display="Tag" muid="EE98D674C305D69D" Deprecated="False" filter="0" group="General">
                                                                <TunableTuple name="tag" class="CraftTaggedItemFactory" display="Tag" muid="8EE81E37E19A7346" description="The object must have this tag." Deprecated="False" filter="0" group="General">
                                                                    <TunableList name="tag_set" class="TunableSet" display="Tag Set" muid="D0CFEACBC742D8F6" description="The tag of objects we want to test ownership of" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                        <TunableEnum type="Tag" class="TunableEnumEntry" default="INVALID" muid="B7F6E4A124E30CDA" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="What tag to test for" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                                    </TunableList>
                                                                    <TunableEnum type="TagTestType" name="test_type" class="TunableEnumEntry" default="CONTAINS_ANY_TAG_IN_SET" display="Test Type" muid="28DE707A15C375CF" static_entries="objects-object_tests.TagTestType" description="How to test the tags in the tag set against the objects on the lot." Deprecated="False" filter="0" group="General" />
                                                                </TunableTuple>
                                                            </TunableTuple>
                                                        </TunableVariant>
                                                        <TunableList name="state_set" class="TunableSet" display="State Set" muid="3D603638A3705DD1" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                            <Tunable type="object_state" class="TunableReference" muid="290912AEBC63EF8D" description="What state to test for." allow_none="False" Deprecated="False" filter="0" group="General" />
                                                        </TunableList>
                                                        <TunableEnum type="StateTestType" name="test_type" class="TunableEnumEntry" default="CONTAINS_ANY_STATE_IN_SET" display="Test Type" muid="D1E61B526F87B2F3" static_entries="objects-object_tests.StateTestType" description="How to test the states in the state set against the objects in&#xA;the inventory." Deprecated="False" filter="0" group="General" />
                                                    </TunableTuple>
                                                    <TunableTuple name="has_object_with_tag" class="CraftTaggedItemFactory" display="Has Object With Tag" muid="A492B8F18161885F" description="This option tests crafted item's tags against a list of possible tags" Deprecated="False" filter="0" group="General">
                                                        <TunableList name="tag_set" class="TunableSet" display="Tag Set" muid="E85BD92CE04CE5FC" description="The tag of objects we want to test ownership of" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                            <TunableEnum type="Tag" class="TunableEnumEntry" default="INVALID" muid="9C141CA35155F658" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="What tag to test for" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                        </TunableList>
                                                        <TunableEnum type="TagTestType" name="test_type" class="TunableEnumEntry" default="CONTAINS_ANY_TAG_IN_SET" display="Test Type" muid="41884C82F11B05E4" static_entries="objects-object_tests.TagTestType" description="How to test the tags in the tag set against the objects on the lot." Deprecated="False" filter="0" group="General" />
                                                    </TunableTuple>
                                                </TunableVariant>
                                                <TunableVariant type="None" name="inventory_location" class="TunableVariant" default="participant_inventory" display="Inventory Location" muid="F0E69F16F5B949FB" description="Who owns the inventory. Either look in the inventory of a &#xA;participant or specify an object inventory type directly.&#xA;&#xA;If participant returns multiple inventory owners, the test will &#xA;pass only if ALL of those owners pass the inventory content test." Deprecated="False" filter="0" group="General">
                                                    <TunableTuple name="hidden_inventory_objects" class="TunableTuple" display="Hidden Inventory Objects" muid="705313BD6EB59BA5" Deprecated="False" filter="0" group="General">
                                                        <TunableEnum type="InventoryType" name="inventory" class="TunableEnumEntry" default="UNDEFINED" display="Inventory" muid="C35FB7AA4D5A55D" dynamic_entries="objects-components-inventory_enums.InventoryType._elements" static_entries="objects-components-inventory_enums.InventoryType" description="Check in the hidden inventory for objects that can go into the&#xA;specified inventory type. EX: check that there are mailbox&#xA;objects in the hidden inventory" Deprecated="False" filter="0" group="General" />
                                                    </TunableTuple>
                                                    <TunableTuple name="object_inventory_type" class="TunableTuple" display="Object Inventory Type" muid="6E0C5FC135C94919" Deprecated="False" filter="0" group="General">
                                                        <TunableEnum type="InventoryType" name="inventory" class="TunableEnumEntry" default="UNDEFINED" display="Inventory" muid="E1CAF9980EC9E838" dynamic_entries="objects-components-inventory_enums.InventoryType._elements" static_entries="objects-components-inventory_enums.InventoryType" description="Check the global Object inventory that has the specified type.&#xA;EX: check in the global fridge inventory that exists for all&#xA;fridges" Deprecated="False" filter="0" group="General" />
                                                    </TunableTuple>
                                                    <TunableTuple name="participant_inventory" class="TunableTuple" display="Participant Inventory" muid="B574082E080725B1" Deprecated="False" filter="0" group="General">
                                                        <TunableEnum type="ParticipantType" name="inventory" class="TunableEnumEntry" default="Actor" display="Inventory" muid="B28C1381B118D864" static_entries="interactions.ParticipantType" description="The owner of the inventory" Deprecated="False" filter="0" group="General" />
                                                    </TunableTuple>
                                                </TunableVariant>
                                                <TunableTuple name="required_count" class="TunableThreshold" display="Required Count" muid="E3DE1B85753FDB4E" description="The inventory must have a tunable threshold of objects that&#xA;pass the contents check test.&#xA;&#xA;EX: test is object definition of type pizza. required count is enabled&#xA;and has a threshold of &gt;= 5. That means this test will pass if you&#xA;have 5 or more pizzas in your inventory. To check if any objects&#xA;exist, use required count &gt;= 1" Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="1514137F6D4D9214" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="int" name="value" class="Tunable" default="1" display="Value" muid="BA783A87019DD480" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableEnum type="TestHiddenInventories" name="test_hidden" class="TunableEnumEntry" default="ANY" display="Test Hidden" muid="916654DA4DAC20A9" static_entries="objects-object_tests.InventoryTest.TestHiddenInventories" description="Optionally restrict to only hidden or non-hidden inventories." Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <TunableTuple name="location" class="TunableLocationTest" display="Location" muid="90F0B7763B5E8A56" description="Tests for object locations.&#xA;Outside: Check if an object is on the inside or outside (has a roof over&#xA;its head)&#xA;Natural ground: Checks the floor tiles where the object is to see if it &#xA;qualifies as natural ground" Deprecated="False" filter="0" group="General">
                                                <TunableTuple name="location_tests" class="TunableTuple" display="Location Tests" muid="3DEEFD6B48942616" Deprecated="False" filter="0" group="General">
                                                    <TunableVariant type="None" name="has_terrain_tag" class="OptionalTunable" default="Don't_Test" display="Has Terrain Tag" muid="907CD9F52963BC33" description="If checked, will verify the subject of the test is currently on&#xA;the tuned terrain tag." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="B86E63A8EF6A2F19" />
                                                        <TunableTuple name="enabled" class="TunableTuple" display="Enabled" muid="F3BC6A2F2E11B9B3" description=",&#xA;A set of terrain tags required for this test to pass." Deprecated="False" filter="0" group="General">
                                                            <Tunable type="bool" name="negate" class="Tunable" default="False" display="Negate" muid="44CCE77147142B3F" description="If checked, the test will be inverted. In other words,&#xA;the test will fail if at least one tag is detected at&#xA;this location." Deprecated="False" filter="0" group="General" />
                                                            <TunableList name="terrain_tags" class="TunableEnumSet" display="Terrain Tags" muid="3C97B9156ECCFAA6" description="A set of terrain tags. Only one of these tags needs to be&#xA;present at this location. Although it is not tunable, there&#xA;is a threshold weight underneath which a terrain tag will&#xA;not appear to be present." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                <TunableEnum type="TerrainTag" class="TunableEnumEntry" default="INVALID" muid="F29588A101D26CAF" static_entries="world-terrain_enums.TerrainTag" Deprecated="False" filter="0" group="General" />
                                                            </TunableList>
                                                            <Tunable type="bool" name="test_floor_tiles" class="Tunable" default="False" display="Test Floor Tiles" muid="596F86FD39D734BB" description="If checked, floor tiles will be tested. Otherwise, &#xA;it'll only check the terrain and will ignore the &#xA;floor tiles on the terrain." Deprecated="False" filter="0" group="General" />
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                    <TunableVariant type="None" name="in_common_area" class="OptionalTunable" default="Don't_Test" display="In Common Area" muid="DC595BF7CA4323E8" description="If checked, will verify the subject is in the common area&#xA;of an apartment.  If unchecked will verify the subject is not." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="E778684820380E97" />
                                                        <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="ABE695F750CC3BCB" Deprecated="False" filter="0" group="General" />
                                                    </TunableVariant>
                                                    <TunableVariant type="None" name="is_fire_allowed" class="OptionalTunable" default="Don't_Test" display="Is Fire Allowed" muid="1C69489D20F0E671" description="If checked, will verify if fire is possible at the subject's position. &#xA;If unchecked, will pass if fire is not possible.&#xA;If not enabled, doesn't care either way." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="C82963069F77F231" />
                                                        <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="8CFBD087946B3036" Deprecated="False" filter="0" group="General" />
                                                    </TunableVariant>
                                                    <TunableVariant type="None" name="is_in_slot" class="OptionalTunable" default="Don't_Test" display="Is In Slot" muid="153F8A6AFFD5EB38" description="If enabled will test if the object is attacked/deattached to&#xA;any of possible tuned slots.&#xA;If you tune a slot type set the test will test if the object &#xA;is slotted or not slotted into into any of those types. " Deprecated="False" filter="0" group="General">
                                                        <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="B3A716E16B419CCD" />
                                                        <TunableTuple name="enabled" class="TunableTuple" display="Enabled" muid="6785DB71165F43BE" description="Test if an object is current slotted in any of a possible&#xA;list of slot types.&#xA;Empty slot type set is allowed for testing for slotted or&#xA;not slotted only." Deprecated="False" filter="0" group="General">
                                                            <TunableVariant type="None" name="slot_test_type" class="TunableVariant" default="any_slot" display="Slot Test Type" muid="EB5F0EBEFE42312" description="Strategy to test the slots:&#xA;Any Slot - is the object in any slot&#xA;Surface Slot - is object is in a surface slot&#xA;Specific Slot - is the object in specific list of slots" Deprecated="False" filter="0" group="General">
                                                                <TunableTuple name="any_slot" class="TunableSlotTestType" display="Any Slot" muid="44A713B2ED12B3BD" description="Singleton factory for testing if object is slotted." Deprecated="False" filter="0" group="General">
                                                                    <Tunable type="bool" name="require_slotted" class="Tunable" default="True" display="Require Slotted" muid="EDDC1F914D148CEA" description="If checked, return success if the object is slotted&#xA;If unchecked, test the absense of slotting." Deprecated="False" filter="0" group="General" />
                                                                </TunableTuple>
                                                                <TunableTuple name="specific_slot" class="TunableSpecificSlotTest" display="Specific Slot" muid="23E0784B7BBAC2A0" description="Subclass of SlotTestType that can check against a specific&#xA;slot set." Deprecated="False" filter="0" group="General">
                                                                    <Tunable type="bool" name="require_slotted" class="Tunable" default="True" display="Require Slotted" muid="8D0C70010EA53CB0" description="If checked, return success if the object is slotted&#xA;If unchecked, test the absense of slotting." Deprecated="False" filter="0" group="General" />
                                                                    <Tunable type="slot_type_set" name="specific_slot_set" class="TunableReference" display="Specific Slot Set" muid="169B626530B9FDF6" description="Set of slots the object may be attached to." allow_none="False" Deprecated="False" filter="0" group="General" />
                                                                </TunableTuple>
                                                                <TunableTuple name="surface_slot" class="TunableSurfaceSlotTest" display="Surface Slot" muid="2F8C7DD3E30BCEE8" description="Subclass of SlotTestType that checks that a slot has&#xA;is_surface set to true." Deprecated="False" filter="0" group="General">
                                                                    <Tunable type="bool" name="require_slotted" class="Tunable" default="True" display="Require Slotted" muid="2E284EC13990B554" description="If checked, return success if the object is slotted&#xA;If unchecked, test the absense of slotting." Deprecated="False" filter="0" group="General" />
                                                                </TunableTuple>
                                                            </TunableVariant>
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                    <TunableVariant type="None" name="is_inside_building" class="OptionalTunable" default="Don't_Test" display="Is Inside Building" muid="1B33357B1E430DE5" description="If checked, will verify if the subject of the test is inside a&#xA;building. This uses a client function that checks if the block&#xA;the sim is mostly enclosed by walls or if not, if the adjoining&#xA;blocks are themselves enclosed. This should be used when we&#xA;want to test if a subject is inside a normally constructed &#xA;building. If we simply want to test whether the subject is &#xA;covered / has a roof over them, use is_outside. See comment on&#xA;is_outside for more details. If unchecked, will negate this &#xA;test." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="3C9213173CCD80B6" />
                                                        <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="608599B885C7D765" Deprecated="False" filter="0" group="General" />
                                                    </TunableVariant>
                                                    <TunableVariant type="None" name="is_natural_ground" class="OptionalTunable" default="Don't_Test" display="Is Natural Ground" muid="1171E1A3B11FD658" description="If checked, will verify the subject of the test is on natural &#xA;ground (no floor tiles are under him).&#xA;Otherwise, will verify the subject of the test is not on &#xA;natural ground." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="71A2FCA6BE62EB43" />
                                                        <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="A313B4A996DDECAE" Deprecated="False" filter="0" group="General" />
                                                    </TunableVariant>
                                                    <TunableVariant type="None" name="is_on_active_lot" class="OptionalTunable" default="Don't_Test" display="Is On Active Lot" muid="F0679CBF0A0EA96F" description="If disabled the test will not be used.&#xA;If enabled and checked, the test will pass if the subject is&#xA;on the active lot. (their center is within the lot bounds)&#xA;If enabled and not checked, the test will pass if the subject is &#xA;outside of the active lot.&#xA;&#xA;For example, Ask To Leave is tuned with this enabled and checked&#xA;for the TargetSim. You can only ask someone to leave if they&#xA;are actually on the active lot, but not if they are wandering&#xA;around in the open streets." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="C8B5C64A9F372AD6" />
                                                        <TunableTuple name="Is_or_is_not_on_active_lot" class="TunableTuple" display="Is Or Is Not On Active Lot" muid="AC4E8324EDEC1D24" Deprecated="False" filter="0" group="General">
                                                            <Tunable type="bool" name="include_spawn_point" class="Tunable" default="False" display="Include Spawn Point" muid="905CE86EF2B43D54" description="If set to true, we will consider the lot's spawn point as part of the active lot." Deprecated="False" filter="0" group="General" />
                                                            <Tunable type="bool" name="is_or_is_not_on_active_lot" class="Tunable" default="True" display="Is Or Is Not On Active Lot" muid="49494600D306873D" description="If checked then the test will pass if the subject is on&#xA;the active lot." Deprecated="False" filter="0" group="General" />
                                                            <TunableVariant type="None" name="tolerance" class="TunableVariant" default="explicit" display="Tolerance" muid="4F78673B635A48CA" Deprecated="False" filter="0" group="General">
                                                                <Tunable type="int" name="explicit" class="Tunable" default="0" display="Explicit" muid="D21292BD8BFCF003" description="The tolerance from the edge of the lot that the&#xA;location test will use in order to determine if the&#xA;test target is considered on lot or not." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                <TunableTuple name="use_default_tolerance" class="UseDefaultOfflotToleranceFactory" display="Use Default Tolerance" muid="7452AB684119C2E8" description="Use the default tuned global offlot tolerance tuned&#xA;in objects.components.statistic_component.Default Off Lot." Deprecated="False" filter="0" group="General" />
                                                            </TunableVariant>
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                    <TunableVariant type="None" name="is_on_level" class="OptionalTunable" default="Don't_Test" display="Is On Level" muid="B7C3A46FC122E057" description="If enabled, we check the participant's current level against&#xA;the tuned threshold.  In the case of sims in pools, the effective&#xA;level will be that of the surface of the pool, not the bottom." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="CB9DAD0F9932F4E1" />
                                                        <TunableTuple name="enabled" class="TunableThreshold" display="Enabled" muid="DFA80CAF08B3AB68" description="Value/comparison pair used to define a Threshold." Deprecated="False" filter="0" group="General">
                                                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="346E6D5CC6B1B577" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                            <Tunable type="int" name="value" class="Tunable" default="0" display="Value" muid="50E64CF54E4C729C" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                    <TunableVariant type="None" name="is_outside" class="OptionalTunable" default="Don't_Test" display="Is Outside" muid="4C89C83504429CAD" description="PLEASE BE AWARE. If checked, will verify if the subject of the&#xA;test does not have a roof over their head. If unchecked, will &#xA;test if the subject has a roof over their head. If the &#xA;intention is to determine if a subject is in/not in a building, &#xA;this test is deprecated in favor of is_inside_building. If you &#xA;would like to test if a subject is inside a building, but also &#xA;need to test if they have a roof over their head, please use &#xA;both options." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="D46D270FF08A5D5C" />
                                                        <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="812338EC46DD2DAF" Deprecated="False" filter="0" group="General" />
                                                    </TunableVariant>
                                                    <TunableVariant type="None" name="is_venue_type" class="OptionalTunable" default="Don't_Test" display="Is Venue Type" muid="7EADD84617F9D8E6" description="If checked, will verify if the subject is at a venue of the&#xA;specified type." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="5507EE26634F60AC" />
                                                        <TunableTuple name="enabled" class="TunableTuple" display="Enabled" muid="6F3F9ADA52BACA06" description="Venue type required for this test to pass." Deprecated="False" filter="0" group="General">
                                                            <Tunable type="bool" name="negate" class="Tunable" default="False" display="Negate" muid="57E424DFD443D7EB" description="If enabled, the test will return true if the subject&#xA;IS NOT at a venue of the specified type." Deprecated="False" filter="0" group="General" />
                                                            <Tunable type="bool" name="use_source_venue" class="Tunable" default="False" display="Use Source Venue" muid="474D64ED87B0FE35" description="If enabled, the test will test the source venue instead of the active&#xA;venue.  For example, the Community Lot instead of the active Marketplace.&#xA;Testing the active venue is the default." Deprecated="False" filter="0" group="General" />
                                                            <Tunable type="venue" name="venue_type" class="TunableReference" display="Venue Type" muid="16577A2395A2523" description="Venue type to test against." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                    <TunableVariant type="None" name="valid_surface_types" class="OptionalTunable" default="Don't_Test" display="Valid Surface Types" muid="33294E70A0850463" description="If enabled, we will test the surface type of the subject&#xA;against prohibited or required surface types." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="9B5EB6F37C9302CD" />
                                                        <TunableTuple name="Test_Surface_Types" class="TunableWhiteBlackList" display="Test Surface Types" muid="8246123A5E3107ED" description="Required and Prohibited Surface Types. " Deprecated="False" filter="0" group="General">
                                                            <TunableVariant type="None" name="blacklist" class="OptionalTunable" default="nothing" display="Blacklist" muid="91CDF2F6797CA371" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is not in the blacklist. If no blacklist is&#xA;specified, no items are disallowed." Deprecated="False" filter="0" group="General">
                                                                <Tunable name="nothing" class="TunableExistance" display="Nothing" muid="38659EC5D12F2DA2" />
                                                                <TunableTuple name="specify" class="TunableBlacklist" display="Specify" muid="8DEB1278988FA28F" description="A tunable blacklist." Deprecated="False" filter="0" group="General">
                                                                    <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="5136801AEC32DB3D" description="Blacklisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                        <TunableEnum type="SurfaceType" class="TunableEnumEntry" default="SURFACETYPE_WORLD" muid="690C79132C178355" static_entries="routing.SurfaceType" description="Surface Type the object is placed on." Deprecated="False" filter="0" group="General" invalid_entries="SURFACETYPE_UNKNOWN" />
                                                                    </TunableList>
                                                                    <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="E451825A7336B427" description="Tunable option for how many items must be in the blacklist&#xA;for the blacklist to fail when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                        <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="F47799CEDBEA239B" />
                                                                        <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="6783844589DB25C0" description="When testing a collection of items, the number of items in&#xA;that collection that are in the blacklist must pass this&#xA;threshold test for the blacklist to disallow them all." Deprecated="False" filter="0" group="General">
                                                                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="D512BC4DD040511C" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                            <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="A89D37ADCC80C962" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                        </TunableTuple>
                                                                    </TunableVariant>
                                                                </TunableTuple>
                                                            </TunableVariant>
                                                            <TunableVariant type="None" name="whitelist" class="OptionalTunable" default="everything" display="Whitelist" muid="F0ED1B71343A174" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is in the whitelist. If no whitelist is&#xA;specified, all items are allowed." Deprecated="False" filter="0" group="General">
                                                                <Tunable name="everything" class="TunableExistance" display="Everything" muid="3CBB150DAE37B489" />
                                                                <TunableTuple name="specify" class="TunableWhitelist" display="Specify" muid="A8AFE37D8B4970F9" description="A tunable whitelist." Deprecated="False" filter="0" group="General">
                                                                    <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="CD7B364E8FE891BE" description="Tunable option for how many items must be in the whitelist&#xA;for the whitelist to pass when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                        <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="F52FF5CB4FD8005F" />
                                                                        <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="2EDDEDA868A1FD67" description="When testing a collection of items, the number of items in&#xA;that collection that are in the whitelist must pass this&#xA;threshold test for the whitelist to allow them all." Deprecated="False" filter="0" group="General">
                                                                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="94BD516EB82D6F46" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                            <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="EA4462A68D0135E7" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                        </TunableTuple>
                                                                    </TunableVariant>
                                                                    <TunableList name="whitelist" class="TunableSet" display="Whitelist" muid="1D26DEB44BADBB91" description="Whitelisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                        <TunableEnum type="SurfaceType" class="TunableEnumEntry" default="SURFACETYPE_WORLD" muid="AB5E9BBDBC67871C" static_entries="routing.SurfaceType" description="Surface Type the object is placed on." Deprecated="False" filter="0" group="General" invalid_entries="SURFACETYPE_UNKNOWN" />
                                                                    </TunableList>
                                                                </TunableTuple>
                                                            </TunableVariant>
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                </TunableTuple>
                                            </TunableTuple>
                                            <Tunable name="none" class="TunableExistance" display="None" muid="138843D843CADFC1" />
                                            <TunableTuple name="object_definition" class="TunableObjectMatchesDefinitionOrTagTest" display="Object Definition" muid="C865EB5938557907" description="Check to see if the specified object matches either a static definition or a set of tags" Deprecated="False" filter="0" group="General">
                                                <TunableVariant type="None" name="item" class="TunableVariant" default="tagged_item" display="Item" muid="2A8C836A164F7AA6" description="Whether to test for a specific item or item that has a set of tags" Deprecated="False" filter="0" group="General">
                                                    <TunableTuple name="actual_item" class="CraftActualItemFactory" display="Actual Item" muid="E4E4C43222B4FD96" description="This option tests crafted item against a list of possible items" Deprecated="False" filter="0" group="General">
                                                        <TunableList name="items_to_check" class="TunableList" display="Items To Check" muid="F5E28ADC5BB4749D" Deprecated="False" filter="0" group="General">
                                                            <Tunable type="object" class="TunableReference" muid="CCCC3EA421A87294" description="Object that qualifies for this check." allow_none="False" Deprecated="False" filter="0" group="General" />
                                                        </TunableList>
                                                    </TunableTuple>
                                                    <TunableTuple name="tagged_item" class="CraftTaggedItemFactory" display="Tagged Item" muid="2C935C212D489E54" description="This option tests crafted item's tags against a list of possible tags" Deprecated="False" filter="0" group="General">
                                                        <TunableList name="tag_set" class="TunableSet" display="Tag Set" muid="73553B8A302F10A5" description="The tag of objects we want to test ownership of" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                            <TunableEnum type="Tag" class="TunableEnumEntry" default="INVALID" muid="36C0CA405BF72596" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="What tag to test for" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                        </TunableList>
                                                        <TunableEnum type="TagTestType" name="test_type" class="TunableEnumEntry" default="CONTAINS_ANY_TAG_IN_SET" display="Test Type" muid="F05FAA42AEB79C99" static_entries="objects-object_tests.TagTestType" description="How to test the tags in the tag set against the objects on the lot." Deprecated="False" filter="0" group="General" />
                                                    </TunableTuple>
                                                </TunableVariant>
                                                <TunableVariant type="None" name="tooltip" class="OptionalTunable" default="disabled" display="Tooltip" muid="93686E8D85247309" description="Reason of failure." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="783BE2393EC4AB8B" />
                                                    <Tunable type="int" name="enabled" class="TunableLocalizedString" default="0x0" display="Enabled" muid="CDF693417012B1B9" description="Reason of failure." Deprecated="False" filter="0" group="General" />
                                                </TunableVariant>
                                            </TunableTuple>
                                            <TunableTuple name="object_preference" class="TunableObjectScoringPreferenceTest" display="Object Preference" muid="67D586708446E8CD" description="A tunable factory that checks whether or not the target object of an affordance&#xA;is the Sim's preferred scoring object." Deprecated="False" filter="0" group="General">
                                                <TunableVariant type="None" name="any_sim" class="OptionalTunable" default="disabled" display="Any Sim" muid="43723FEBB99BF0C8" description="If enabled, will return whether the object has any &quot;Use Only&quot; preference&#xA;set for the specified tag.  Will not be sim specific, and thus only&#xA;works for &quot;use only&quot; preference type.  Does NOT rely on interaction&#xA;to determine preference type.&#xA;&#xA;Value is the tag to test for." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="9D5294C87023F549" />
                                                    <TunableEnum type="ObjectPreferenceTag" name="enabled" class="TunableEnumEntry" default="INVALID" display="Enabled" muid="EF7D572AEE59B7E8" dynamic_entries="autonomy-autonomy_preference.ObjectPreferenceTag._elements" static_entries="autonomy-autonomy_preference.ObjectPreferenceTag" description="Tag to determine which preference type to use." Deprecated="False" filter="0" group="General" invalid_entries="INVALID" />
                                                </TunableVariant>
                                                <Tunable type="bool" name="require" class="Tunable" default="True" display="Require" muid="8B04CFBF7E0B3E5" description="The Sim's preference is required to be True or required to be False." Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <TunableTuple name="season" class="TunableSeasonTest" display="Season" muid="C609A22870D9E1E2" description="SeasonTest will test if the current simulation time falls within the&#xA;specified test conditions." Deprecated="False" filter="0" group="General">
                                                <Tunable type="bool" name="requires_seasons_pack" class="Tunable" default="True" display="Requires Seasons Pack" muid="6731878DB7E3AA7A" description="If checked, this test will require that the Seasons pack be &#xA;installed in order for the seasons test to pass.  If unchecked, &#xA;this test will automatically pass." Deprecated="False" filter="0" group="General" />
                                                <TunableList name="seasons" class="TunableEnumSet" display="Seasons" muid="C1BD82FE899257EE" min="1" description="Season(s) that we must be in to pass the test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                    <TunableEnum type="SeasonType" class="TunableEnumEntry" default="SUMMER" muid="5D64B1657D6E79A" static_entries="seasons-seasons_enums.SeasonType" Deprecated="False" filter="0" group="General" />
                                                </TunableList>
                                                <TunableVariant type="None" name="time_of_season" class="OptionalTunable" default="disabled" display="Time Of Season" muid="588D168DA41E3D1C" description="Portion(s) of season(s) that we must be in to pass the test." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="660A34AEADEC0FA3" />
                                                    <TunableList name="enabled" class="TunableEnumSet" display="Enabled" muid="EB70F053A85FEE69" min="1" description="Portion(s) of season(s) that we must be in to pass the test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                        <TunableEnum type="SeasonSegment" class="TunableEnumEntry" default="EARLY" muid="D8FBE1F463727559" static_entries="seasons-seasons_enums.SeasonSegment" Deprecated="False" filter="0" group="General" />
                                                    </TunableList>
                                                </TunableVariant>
                                            </TunableTuple>
                                            <TunableTuple name="state" class="TunableStateTest" display="State" muid="AF018F7A95DC271D" description="Gate availability by object state.  By default, the test will use the&#xA;state's linked stat as a fallback in case the target doesn't have the&#xA;state involved." Deprecated="False" filter="0" group="General">
                                                <TunableVariant type="None" name="fallback_behavior" class="TunableVariant" default="always_fail" display="Fallback Behavior" muid="15EF8D0DDBA2B923" description="What to do if the given object doesn't have the state in question." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="always_fail" class="TunableExistance" display="Always Fail" muid="5130329F8CE26CC5" />
                                                    <Tunable name="always_pass" class="TunableExistance" display="Always Pass" muid="8F1A7A105859DC27" />
                                                </TunableVariant>
                                                <TunableEnum type="Operator" name="operator" class="TunableOperator" default="EQUAL" display="Operator" muid="69D4A4245EF6ECA9" static_entries="sims4-math.Operator" description="The comparison to use." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="object_state" name="value" class="TunableReference" display="Value" muid="E1A07A13818EA569" description="The value to compare to." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="ObjectStateValue" />
                                            </TunableTuple>
                                            <TunableTuple name="statistic" class="TunableStatThresholdTest" display="Statistic" muid="5274674BBF1E7B2B" description="A test that checks whether or not a statistic is at a certain threshold for&#xA;a given participant. It can also test whether or not the participant has the&#xA;statistic explicitly added on them." Deprecated="False" filter="0" group="General">
                                                <Tunable type="bool" name="must_have_stat" class="Tunable" default="False" display="Must Have Stat" muid="75EBD137E274BA9E" description="Setting this to True (checked) will ensure that this test only&#xA;passes if the tested Sim actually has the statistic referenced. If&#xA;left False (unchecked), this test will evaluate as if the Sim had&#xA;the statistic at the value of 0" Deprecated="False" filter="0" group="General" />
                                                <TunableVariant type="None" name="score_to_use" class="TunableVariant" default="user_value" display="Score To Use" muid="7F7473E27A0C7E27" description="Depending on the choice, this decides what value to use for the &#xA;threshold comparison." Deprecated="False" filter="0" group="General">
                                                    <TunableTuple name="points" class="Tunable_PointsValue" display="Points" muid="941DC5666AB8081" description="Use the raw points for the comparison in the test." Deprecated="False" filter="0" group="General" />
                                                    <TunableTuple name="rank" class="Tunable_RankValue" display="Rank" muid="AABDA6D1AC7DBCFA" description="Use the rank value for the comparison in the test." Deprecated="False" filter="0" group="General" />
                                                    <TunableTuple name="user_value" class="Tunable_UserValue" display="User Value" muid="3214815E6E3FE4EF" description="Use the user value for the comparison in the test." Deprecated="False" filter="0" group="General">
                                                        <Tunable type="bool" name="highest_level_reached_instead" class="Tunable" default="False" display="Highest Level Reached Instead" muid="D9625A87357A995B" description="If checked this will test against the highest level reached. This&#xA;currently only works with Ranked Statistics. Other statistics do&#xA;not have a notion of highest level reached. If we are using&#xA;something that doesn't support highest level reached it will &#xA;test against the current level instead." Deprecated="False" filter="0" group="General" />
                                                    </TunableTuple>
                                                </TunableVariant>
                                                <Tunable type="statistic" name="stat" class="TunableReference" display="Stat" muid="3DF8CB5E7E774E3E" description="The stat we are operating on." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                <TunableVariant type="None" name="threshold" class="TunableVariant" default="value_threshold" display="Threshold" muid="6A5E0689D0F00E9A" description="The value or state threshold to test against." Deprecated="False" filter="0" group="General">
                                                    <TunableTuple name="state_value_threshold" class="TunableObjectStateValueThreshold" display="State Value Threshold" muid="31C015CFB0953CC9" description="Value/comparison pair used to define a Threshold." Deprecated="False" filter="0" group="General">
                                                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="68F90D2A91713CDA" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                        <Tunable type="object_state" name="value" class="TunableReference" display="Value" muid="613585EF18724FDA" description="The state threshold for this test." allow_none="False" Deprecated="False" filter="0" group="General" restrict="ObjectStateValue" />
                                                    </TunableTuple>
                                                    <TunableTuple name="value_threshold" class="TunableThreshold" display="Value Threshold" muid="B79F3D291D135A52" description="The threshold to control availability based on the statistic's&#xA;value." Deprecated="False" filter="0" group="General">
                                                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="C170DC0D1987B547" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                        <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="7DC6C591613F8E90" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                    </TunableTuple>
                                                </TunableVariant>
                                                <TunableEnum type="ParticipantType" name="who" class="TunableEnumEntry" default="Actor" display="Who" muid="208B6D955BD8B409" static_entries="interactions.ParticipantType" description="Who or what to apply this test to." Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <TunableTuple name="street_civic_policy_test" class="TunableStreetCivicPolicyTest" display="Street Civic Policy Test" muid="7176F7B8A5291A9E" description="Test the state of the selected Street's Civic Policy Provider." Deprecated="False" filter="0" group="General">
                                                <TunableList name="civic_policy_tests" class="TunableList" display="Civic Policy Tests" muid="C18D117F853B38AB" description="The tests we wish to run on the civic policies in question, run in&#xA;order.  AND operation, all must pass, first to fail stops tests." Deprecated="False" filter="0" group="General">
                                                    <TunableVariant type="None" class="TunableVariant" default="voting_open" muid="5916EE16567E9462" description="Individual tests run on Civic Policy Provider." Deprecated="False" filter="0" group="General">
                                                        <TunableTuple name="available" class="TunableBaseCivicPolicyTestAvailable" display="Available" muid="CBD726CEC6DEA189" description="Test available policies. Available policies include everything tuned." Deprecated="False" filter="0" group="General">
                                                            <TunableTuple name="white_black_list" class="TunableWhiteBlackList" display="White Black List" muid="67A9C57F34D2CAF3" description="The civic policies must pass the whitelist and blacklist&#xA;to pass the test." Deprecated="False" filter="0" group="General">
                                                                <TunableVariant type="None" name="blacklist" class="OptionalTunable" default="nothing" display="Blacklist" muid="F3076140729A5989" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is not in the blacklist. If no blacklist is&#xA;specified, no items are disallowed." Deprecated="False" filter="0" group="General">
                                                                    <Tunable name="nothing" class="TunableExistance" display="Nothing" muid="DA1C21542BDD27AD" />
                                                                    <TunableTuple name="specify" class="TunableBlacklist" display="Specify" muid="8B35A4ACE403F5DE" description="A tunable blacklist." Deprecated="False" filter="0" group="General">
                                                                        <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="7DD315E5778B3EF3" description="Blacklisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                            <Tunable type="snippet" class="TunableReference" muid="FB7926CBF65140AD" description="Allowed and disallowed civic policies." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="BaseCivicPolicy" />
                                                                        </TunableList>
                                                                        <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="EBD2531695BA3599" description="Tunable option for how many items must be in the blacklist&#xA;for the blacklist to fail when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                            <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="79E6F612EEB8FFB" />
                                                                            <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="69AC1A1189BC4731" description="When testing a collection of items, the number of items in&#xA;that collection that are in the blacklist must pass this&#xA;threshold test for the blacklist to disallow them all." Deprecated="False" filter="0" group="General">
                                                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="5C96902D3A5656A0" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                                <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="8E47E456CC64BAFA" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                            </TunableTuple>
                                                                        </TunableVariant>
                                                                    </TunableTuple>
                                                                </TunableVariant>
                                                                <TunableVariant type="None" name="whitelist" class="OptionalTunable" default="everything" display="Whitelist" muid="817E39A57820D662" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is in the whitelist. If no whitelist is&#xA;specified, all items are allowed." Deprecated="False" filter="0" group="General">
                                                                    <Tunable name="everything" class="TunableExistance" display="Everything" muid="3340D4C7B203BA87" />
                                                                    <TunableTuple name="specify" class="TunableWhitelist" display="Specify" muid="4805D46F22A19008" description="A tunable whitelist." Deprecated="False" filter="0" group="General">
                                                                        <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="FDD8AC6C0BFBF925" description="Tunable option for how many items must be in the whitelist&#xA;for the whitelist to pass when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                            <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="B8815263F65ADFD9" />
                                                                            <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="16BDC9170DBA0BCB" description="When testing a collection of items, the number of items in&#xA;that collection that are in the whitelist must pass this&#xA;threshold test for the whitelist to allow them all." Deprecated="False" filter="0" group="General">
                                                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="8898E6D4C59D95A" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                                <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="545137DC0DDBCC8B" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                            </TunableTuple>
                                                                        </TunableVariant>
                                                                        <TunableList name="whitelist" class="TunableSet" display="Whitelist" muid="DD0C8750BADDE726" description="Whitelisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                            <Tunable type="snippet" class="TunableReference" muid="531A1996B212B185" description="Allowed and disallowed civic policies." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="BaseCivicPolicy" />
                                                                        </TunableList>
                                                                    </TunableTuple>
                                                                </TunableVariant>
                                                            </TunableTuple>
                                                        </TunableTuple>
                                                        <TunableTuple name="balloted" class="TunableBaseCivicPolicyTestBalloted" display="Balloted" muid="DB5BC6AFF8563660" description="Test balloted policies.  Policies being considered by the next/current vote are&#xA;balloted." Deprecated="False" filter="0" group="General">
                                                            <TunableTuple name="white_black_list" class="TunableWhiteBlackList" display="White Black List" muid="2BE85EE83045F58E" description="The civic policies must pass the whitelist and blacklist&#xA;to pass the test." Deprecated="False" filter="0" group="General">
                                                                <TunableVariant type="None" name="blacklist" class="OptionalTunable" default="nothing" display="Blacklist" muid="D6DCA8FC92935CD8" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is not in the blacklist. If no blacklist is&#xA;specified, no items are disallowed." Deprecated="False" filter="0" group="General">
                                                                    <Tunable name="nothing" class="TunableExistance" display="Nothing" muid="249751B7EDF4A0C0" />
                                                                    <TunableTuple name="specify" class="TunableBlacklist" display="Specify" muid="C547086165AFBBD" description="A tunable blacklist." Deprecated="False" filter="0" group="General">
                                                                        <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="2081DC82AF58509A" description="Blacklisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                            <Tunable type="snippet" class="TunableReference" muid="79B761C12A99D855" description="Allowed and disallowed civic policies." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="BaseCivicPolicy" />
                                                                        </TunableList>
                                                                        <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="F1A8B2D2539F9B03" description="Tunable option for how many items must be in the blacklist&#xA;for the blacklist to fail when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                            <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="DFF5CF0D38588505" />
                                                                            <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="B25C0446D7BF84A" description="When testing a collection of items, the number of items in&#xA;that collection that are in the blacklist must pass this&#xA;threshold test for the blacklist to disallow them all." Deprecated="False" filter="0" group="General">
                                                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="F6E07B0ABFF6469E" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                                <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="AFD6EC11EB5D751B" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                            </TunableTuple>
                                                                        </TunableVariant>
                                                                    </TunableTuple>
                                                                </TunableVariant>
                                                                <TunableVariant type="None" name="whitelist" class="OptionalTunable" default="everything" display="Whitelist" muid="870DC90660FA1A83" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is in the whitelist. If no whitelist is&#xA;specified, all items are allowed." Deprecated="False" filter="0" group="General">
                                                                    <Tunable name="everything" class="TunableExistance" display="Everything" muid="455075BC714803A1" />
                                                                    <TunableTuple name="specify" class="TunableWhitelist" display="Specify" muid="E34410156B1396AD" description="A tunable whitelist." Deprecated="False" filter="0" group="General">
                                                                        <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="2524A3735671CDC9" description="Tunable option for how many items must be in the whitelist&#xA;for the whitelist to pass when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                            <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="569C5608660ABBD2" />
                                                                            <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="87B6C41EE0200C2D" description="When testing a collection of items, the number of items in&#xA;that collection that are in the whitelist must pass this&#xA;threshold test for the whitelist to allow them all." Deprecated="False" filter="0" group="General">
                                                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="8AE767B8FEFFFB1B" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                                <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="9339358A32EFF07" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                            </TunableTuple>
                                                                        </TunableVariant>
                                                                        <TunableList name="whitelist" class="TunableSet" display="Whitelist" muid="1646B57479390A50" description="Whitelisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                            <Tunable type="snippet" class="TunableReference" muid="E975797BD83D980B" description="Allowed and disallowed civic policies." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="BaseCivicPolicy" />
                                                                        </TunableList>
                                                                    </TunableTuple>
                                                                </TunableVariant>
                                                            </TunableTuple>
                                                        </TunableTuple>
                                                        <TunableTuple name="dormant" class="TunableBaseCivicPolicyTestDormant" display="Dormant" muid="DE7C0BE05AC4502E" description="Test dormant policies. Dormant policies are not enacted and not balloted." Deprecated="False" filter="0" group="General">
                                                            <TunableTuple name="white_black_list" class="TunableWhiteBlackList" display="White Black List" muid="BE12B9FE0D674DA8" description="The civic policies must pass the whitelist and blacklist&#xA;to pass the test." Deprecated="False" filter="0" group="General">
                                                                <TunableVariant type="None" name="blacklist" class="OptionalTunable" default="nothing" display="Blacklist" muid="A22723A172AE1CB8" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is not in the blacklist. If no blacklist is&#xA;specified, no items are disallowed." Deprecated="False" filter="0" group="General">
                                                                    <Tunable name="nothing" class="TunableExistance" display="Nothing" muid="5EC7CBD83BFC4016" />
                                                                    <TunableTuple name="specify" class="TunableBlacklist" display="Specify" muid="B98425728F732537" description="A tunable blacklist." Deprecated="False" filter="0" group="General">
                                                                        <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="D05737439077689D" description="Blacklisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                            <Tunable type="snippet" class="TunableReference" muid="69D54A020A57F71" description="Allowed and disallowed civic policies." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="BaseCivicPolicy" />
                                                                        </TunableList>
                                                                        <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="CB184A7FDDEBB20A" description="Tunable option for how many items must be in the blacklist&#xA;for the blacklist to fail when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                            <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="38B1377BBCC3B898" />
                                                                            <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="D9A6A094472076C9" description="When testing a collection of items, the number of items in&#xA;that collection that are in the blacklist must pass this&#xA;threshold test for the blacklist to disallow them all." Deprecated="False" filter="0" group="General">
                                                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="81BEB2CAA5E3E06B" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                                <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="B82E10EC65C45ACA" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                            </TunableTuple>
                                                                        </TunableVariant>
                                                                    </TunableTuple>
                                                                </TunableVariant>
                                                                <TunableVariant type="None" name="whitelist" class="OptionalTunable" default="everything" display="Whitelist" muid="BCAB25D8FACB06FF" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is in the whitelist. If no whitelist is&#xA;specified, all items are allowed." Deprecated="False" filter="0" group="General">
                                                                    <Tunable name="everything" class="TunableExistance" display="Everything" muid="20BBA2FC1121C046" />
                                                                    <TunableTuple name="specify" class="TunableWhitelist" display="Specify" muid="11C611626F9E716C" description="A tunable whitelist." Deprecated="False" filter="0" group="General">
                                                                        <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="825387BD1702B71B" description="Tunable option for how many items must be in the whitelist&#xA;for the whitelist to pass when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                            <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="74CD907FD0034ABA" />
                                                                            <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="F58F2E2C2830DC12" description="When testing a collection of items, the number of items in&#xA;that collection that are in the whitelist must pass this&#xA;threshold test for the whitelist to allow them all." Deprecated="False" filter="0" group="General">
                                                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="1C91CB064173FEF" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                                <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="AA8092D773309EFE" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                            </TunableTuple>
                                                                        </TunableVariant>
                                                                        <TunableList name="whitelist" class="TunableSet" display="Whitelist" muid="40DCFDE24E4CAC04" description="Whitelisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                            <Tunable type="snippet" class="TunableReference" muid="9D089B48EBB91858" description="Allowed and disallowed civic policies." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="BaseCivicPolicy" />
                                                                        </TunableList>
                                                                    </TunableTuple>
                                                                </TunableVariant>
                                                            </TunableTuple>
                                                        </TunableTuple>
                                                        <TunableTuple name="enacted" class="TunableBaseCivicPolicyTestEnacted" display="Enacted" muid="FEEA0697C0AE0200" description="Test enacted policies." Deprecated="False" filter="0" group="General">
                                                            <TunableTuple name="white_black_list" class="TunableWhiteBlackList" display="White Black List" muid="9D23104922549CE4" description="The civic policies must pass the whitelist and blacklist&#xA;to pass the test." Deprecated="False" filter="0" group="General">
                                                                <TunableVariant type="None" name="blacklist" class="OptionalTunable" default="nothing" display="Blacklist" muid="C0460C8835A33FDA" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is not in the blacklist. If no blacklist is&#xA;specified, no items are disallowed." Deprecated="False" filter="0" group="General">
                                                                    <Tunable name="nothing" class="TunableExistance" display="Nothing" muid="EC1FAB6CF7288EE2" />
                                                                    <TunableTuple name="specify" class="TunableBlacklist" display="Specify" muid="D7370CB6D1E40CAB" description="A tunable blacklist." Deprecated="False" filter="0" group="General">
                                                                        <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="A64F65E980239952" description="Blacklisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                            <Tunable type="snippet" class="TunableReference" muid="B7E0B5925A9484C5" description="Allowed and disallowed civic policies." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="BaseCivicPolicy" />
                                                                        </TunableList>
                                                                        <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="C1C5299516980D8D" description="Tunable option for how many items must be in the blacklist&#xA;for the blacklist to fail when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                            <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="303D60F5F8B1C758" />
                                                                            <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="8B68F63990E9B923" description="When testing a collection of items, the number of items in&#xA;that collection that are in the blacklist must pass this&#xA;threshold test for the blacklist to disallow them all." Deprecated="False" filter="0" group="General">
                                                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="CA0E17A8C4F1E3EC" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                                <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="2DAF29C5605760A" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                            </TunableTuple>
                                                                        </TunableVariant>
                                                                    </TunableTuple>
                                                                </TunableVariant>
                                                                <TunableVariant type="None" name="whitelist" class="OptionalTunable" default="everything" display="Whitelist" muid="E57D5A6826F9E00B" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is in the whitelist. If no whitelist is&#xA;specified, all items are allowed." Deprecated="False" filter="0" group="General">
                                                                    <Tunable name="everything" class="TunableExistance" display="Everything" muid="CC251175DE309862" />
                                                                    <TunableTuple name="specify" class="TunableWhitelist" display="Specify" muid="BDC2350939ADDDD8" description="A tunable whitelist." Deprecated="False" filter="0" group="General">
                                                                        <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="BFF4B906B521F06C" description="Tunable option for how many items must be in the whitelist&#xA;for the whitelist to pass when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                            <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="1DDB6BFC8EF51386" />
                                                                            <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="4BF5382808BA71B5" description="When testing a collection of items, the number of items in&#xA;that collection that are in the whitelist must pass this&#xA;threshold test for the whitelist to allow them all." Deprecated="False" filter="0" group="General">
                                                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="DCA6407CCBE40A0" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                                <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="CE8CDFC25C099D87" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                            </TunableTuple>
                                                                        </TunableVariant>
                                                                        <TunableList name="whitelist" class="TunableSet" display="Whitelist" muid="3B9E401AE8A5B34E" description="Whitelisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                            <Tunable type="snippet" class="TunableReference" muid="FFBC4889F1D8A69" description="Allowed and disallowed civic policies." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="BaseCivicPolicy" />
                                                                        </TunableList>
                                                                    </TunableTuple>
                                                                </TunableVariant>
                                                            </TunableTuple>
                                                        </TunableTuple>
                                                        <TunableTuple name="repealable" class="TunableBaseCivicPolicyTestRepealable" display="Repealable" muid="3D80F9D5B60424DD" description="Test up for repeal policies. Up for Repeal policies have been specifically marked&#xA;as such and will (if the vote/petition threshold is reached) be repealed&#xA;as part of closing the next vote." Deprecated="False" filter="0" group="General">
                                                            <TunableTuple name="white_black_list" class="TunableWhiteBlackList" display="White Black List" muid="8B32D7AADFAF4324" description="The civic policies must pass the whitelist and blacklist&#xA;to pass the test." Deprecated="False" filter="0" group="General">
                                                                <TunableVariant type="None" name="blacklist" class="OptionalTunable" default="nothing" display="Blacklist" muid="1A4DD137CF706323" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is not in the blacklist. If no blacklist is&#xA;specified, no items are disallowed." Deprecated="False" filter="0" group="General">
                                                                    <Tunable name="nothing" class="TunableExistance" display="Nothing" muid="389DA7998783250A" />
                                                                    <TunableTuple name="specify" class="TunableBlacklist" display="Specify" muid="C16DE4E8D7FB164" description="A tunable blacklist." Deprecated="False" filter="0" group="General">
                                                                        <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="ABF7C097C6AD040B" description="Blacklisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                            <Tunable type="snippet" class="TunableReference" muid="CFB96B301AC4A459" description="Allowed and disallowed civic policies." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="BaseCivicPolicy" />
                                                                        </TunableList>
                                                                        <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="6E34FE478D894097" description="Tunable option for how many items must be in the blacklist&#xA;for the blacklist to fail when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                            <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="E81CDDD1B3B30363" />
                                                                            <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="C9A25430A5386BE7" description="When testing a collection of items, the number of items in&#xA;that collection that are in the blacklist must pass this&#xA;threshold test for the blacklist to disallow them all." Deprecated="False" filter="0" group="General">
                                                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="D8FDA86915E91377" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                                <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="CD2E60F74BB6829F" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                            </TunableTuple>
                                                                        </TunableVariant>
                                                                    </TunableTuple>
                                                                </TunableVariant>
                                                                <TunableVariant type="None" name="whitelist" class="OptionalTunable" default="everything" display="Whitelist" muid="A57D331AEAEDD0B5" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is in the whitelist. If no whitelist is&#xA;specified, all items are allowed." Deprecated="False" filter="0" group="General">
                                                                    <Tunable name="everything" class="TunableExistance" display="Everything" muid="6D2AD1DF2BBE400E" />
                                                                    <TunableTuple name="specify" class="TunableWhitelist" display="Specify" muid="7EE2904C82DEB85C" description="A tunable whitelist." Deprecated="False" filter="0" group="General">
                                                                        <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="F236984FE2A7B5A7" description="Tunable option for how many items must be in the whitelist&#xA;for the whitelist to pass when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                            <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="AC366257F57DBAB5" />
                                                                            <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="102317F8A9EBAB81" description="When testing a collection of items, the number of items in&#xA;that collection that are in the whitelist must pass this&#xA;threshold test for the whitelist to allow them all." Deprecated="False" filter="0" group="General">
                                                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="A5E4694AD6F2F577" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                                <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="8F49DD3A9578A4DF" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                            </TunableTuple>
                                                                        </TunableVariant>
                                                                        <TunableList name="whitelist" class="TunableSet" display="Whitelist" muid="BF626A8C1DD9F76E" description="Whitelisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                            <Tunable type="snippet" class="TunableReference" muid="244759BCE55C185A" description="Allowed and disallowed civic policies." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="BaseCivicPolicy" />
                                                                        </TunableList>
                                                                    </TunableTuple>
                                                                </TunableVariant>
                                                            </TunableTuple>
                                                        </TunableTuple>
                                                        <TunableTuple name="voting_open" class="TunableBaseCivicPolicyTestVotingOpen" display="Voting Open" muid="FE197190A97C5916" description="If checked, will verify that voting is currently active." Deprecated="False" filter="0" group="General">
                                                            <Tunable type="bool" name="negate" class="Tunable" default="False" display="Negate" muid="2B12438DF919EE50" description="If checked then this test will return True when not active." Deprecated="False" filter="0" group="General" />
                                                        </TunableTuple>
                                                        <TunableTuple name="voting_time_until_change" class="TunableBaseCivicPolicyTestVotingTimeUntilChange" display="Voting Time Until Change" muid="2A20B9BA76022225" description="If checked, will check the time remaining before the next voting open status change." Deprecated="False" filter="0" group="General">
                                                            <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="E11321D9D01A8B4B" description="The amount of time relative to the next voting state change to test." Deprecated="False" filter="0" group="General">
                                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="A880B793C9C7499B" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                <TunableTuple name="value" class="TunableTimeSpan" display="Value" muid="36C876E7DE7DB402" description="Duration before the next change." Deprecated="False" filter="0" group="General">
                                                                    <Tunable type="int" name="days" class="TunableRange" default="0" display="Days" muid="C925923F236E270E" min="0" max="None" description="Number of days" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                    <Tunable type="int" name="hours" class="TunableRange" default="1" display="Hours" muid="D26F27C7AF22AFE5" min="0" max="23" description="Number of hours" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                    <Tunable type="int" name="minutes" class="TunableRange" default="0" display="Minutes" muid="4AD8A6CDEADDA34F" min="0" max="59" description="Number of minutes" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                </TunableTuple>
                                                            </TunableTuple>
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                </TunableList>
                                                <TunableVariant type="None" name="street" class="TunableVariant" default="literal" display="Street" muid="AFB7889B2FC50680" description="Select what street to test." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="street" name="literal" class="TunableReference" display="Literal" muid="4050045420C644A0" description="Identify a specific Street." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                    <TunableTuple name="via_street_participant" class="TunableStreetParticipant" display="Via Street Participant" muid="BE5956FC5A270D8B" description="Get the street participant." Deprecated="False" filter="0" group="General" />
                                                    <TunableVariant type="None" name="via_zone_source" class="TunableVariant" default="use_current_zone" display="Via Zone Source" muid="1BE67BDCF87588F2" description="Select the street to use by specifying a Zone Source." Deprecated="False" filter="0" group="General">
                                                        <TunableTuple name="use_current_zone" class="TunableActiveZone" display="Use Current Zone" muid="C9301478CF9D31FE" description="Get the active zone." Deprecated="False" filter="0" group="General" />
                                                        <TunableTuple name="use_participant_home_zone" class="TunableParticipantHomeZone" display="Use Participant Home Zone" muid="6B1CCCE739083E89" description="Get a participant's home zone. Can be None if they don't have one." Deprecated="False" filter="0" group="General">
                                                            <TunableEnum type="ParticipantTypeSingleSim" name="participant" class="TunableEnumEntry" default="Actor" display="Participant" muid="E6F02776D80AC109" static_entries="interactions.ParticipantTypeSingleSim" description="Test against the participant's home zone. Townies' home zone will&#xA;be None." Deprecated="False" filter="0" group="General" />
                                                        </TunableTuple>
                                                        <TunableTuple name="use_pick_info" class="TunablePickInfoZone" display="Use Pick Info" muid="49E5F0695405FFE4" description="Get the zone of the lot the user clicked on." Deprecated="False" filter="0" group="General" />
                                                        <TunableTuple name="use_picked_zone_ids" class="TunablePickedZoneIds" display="Use Picked Zone Ids" muid="C750D34440C0C7A5" description="Get the zone from the interaction's picked_zone_ids participant. Usually&#xA;comes from a picker." Deprecated="False" filter="0" group="General" />
                                                    </TunableVariant>
                                                </TunableVariant>
                                            </TunableTuple>
                                        </TunableVariant>
                                    </TunableList>
                                </TunableList>
                                <Tunable type="int" name="weight" class="TunableRange" default="1" display="Weight" muid="2443AFD05A31D595" min="1" max="None" description="Weight to use." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                            </TunableTuple>
                        </TunableList>
                    </TunableTuple>
                </TunableList>
            </TunableTuple>
        </Class>
    </Module>

    <VersionHistory>
        <ActionList>
            <Action type="kRemove" old_muid="98B9D431A929D940" />
            <Action type="kRemove" old_muid="7E658F3E35760C81" />
        </ActionList>
    </VersionHistory>
</TuningRoot>