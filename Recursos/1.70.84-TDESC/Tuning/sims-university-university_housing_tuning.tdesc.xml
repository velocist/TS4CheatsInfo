<?xml version="1.0" encoding="iso-8859-1"?>

<TuningRoot>
    <Module name="sims.university.university_housing_tuning" muid="6057326FC18ABBFE">
        <Class name="UniversityHousingTuning" muid="C8226D9CAFD8D02B">
            <Tunable type="situation" name="UNIVERSITY_HOUSING_KICK_OUT_SITUATION" class="TunableReference" display="University Housing Kick Out Situation" muid="D07CFED4AF6B76B0" description="The situation to kick a sim out of university housing." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="UniversityHousingKickOutSituation" />

            <TunableEnum type="Tag" name="UNIVERSITY_HOUSING_KICKOUT_SITUATION_BLOCKER_TAG" class="TunableEnumWithFilter" default="INVALID" display="University Housing Kickout Situation Blocker Tag" muid="912B41CE7088515" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="If a situation with this tag is running, we won't start any kickout situations.  We use this tag to prevent&#xA;edge cases such as multiple kickouts running at the same time, or kicking out sims who have died." Deprecated="False" dynamic_entries_prefix="situation" filter="0" group="General" pack_safe="True" />

            <TdescFragTag name="UNIVERSITY_HOUSING_PREGNANCY_TEST" class="TunableTestSet" display="University Housing Pregnancy Test" muid="E8DCA36562D5C03E" description="Test to determine if a sim is at the appropriate stage in a pregnancy&#xA;in order to be kicked out of university housing." filter="0" group="General" />

            <TunableList name="UNIVERSITY_HOUSING_ROOMMATE_FILTER_TERM_TEMPLATES" class="TunableMapping" display="University Housing Roommate Filter Term Templates" muid="545B23CF0E6905B" mapping_key="Requirement Criteria" mapping_value="Filter Term Template" description="Template filter terms for each university housing roommate requirement criteria.&#xA;We will be modifying these terms in code based on what the player sets&#xA;in the venue's configuration UI. For example, the template gender filter&#xA;term is set to male, but if the player sets their university housing&#xA;venue as female only, we will modify this filter term before retrieving&#xA;roommates.  These values are set in tuning so the majority of the filter&#xA;terms' values are initialized to their defaults, instead of having&#xA;to do so in code." Deprecated="False" filter="0" group="General">
                <TunableTuple class="TunableTuple" muid="5A508A16D34DB4C7" Deprecated="False" filter="0" group="General">
                    <TunableVariant type="None" name="Filter Term Template" class="FilterTermVariant" default="skill" display="Filter Term Template" muid="CF638F81678128C" Deprecated="False" filter="0" group="General">
                        <TunableTuple name="age" class="TunableAgeFilterTerm" display="Age" muid="ACF614853EE9DF58" description="A term for filtering Sims based on their age. The score is modified based on&#xA;the tuned ideal value for the age. If you are looking for age variation, please&#xA;choose &quot;Age Variant&quot; instead.&#xA;&#xA;Only new Sims may be conformed by creating them of a valid age. Existing&#xA;Sims may not be conformed." Deprecated="False" filter="0" group="General">
                            <TunableEnum type="Age" name="ideal_value" class="TunableEnumEntry" default="ADULT" display="Ideal Value" muid="1A02A804697CE398" static_entries="sims-sim_info_types.Age" description="The ideal age of the sim we are filtering for." Deprecated="False" filter="0" group="General" />
                            <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="3641F835353EE550" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                            <TunableEnum type="Age" name="max_value" class="TunableEnumEntry" default="ELDER" display="Max Value" muid="4B6AB43AF59FC06F" static_entries="sims-sim_info_types.Age" description="The maximum age of the sim we are filtering for." Deprecated="False" filter="0" group="General" />
                            <TunableEnum type="Age" name="min_value" class="TunableEnumEntry" default="BABY" display="Min Value" muid="57F4B032AE15BB35" static_entries="sims-sim_info_types.Age" description="The minimum age of the sim we are filtering for." Deprecated="False" filter="0" group="General" />
                            <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="51C5327356DCBCB1" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                        </TunableTuple>
                        <TunableTuple name="age_progress" class="TunableAgeProgressFilterTerm" display="Age Progress" muid="A9BCC8CE4D0793C" description="A term for filtering Sims based on their age progress. The score is modified&#xA;based on the tuned ideal value.&#xA;&#xA;New and existing Sims can be conformed by advancing their age progress,&#xA;within the tuned bounds." Deprecated="False" filter="0" group="General">
                            <Tunable type="float" name="ideal_value" class="Tunable" default="5" display="Ideal Value" muid="CD4ABB6A296E4C53" description="Ideal value of age progress." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                            <Tunable type="float" name="max_value" class="Tunable" default="10" display="Max Value" muid="6B80331202D421CA" description="Maximum value of age progress." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                            <Tunable type="float" name="min_value" class="Tunable" default="0" display="Min Value" muid="81CC98361297723A" description="Minimum value of age progress." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                            <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="3E8D040FA0953D1C" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                        </TunableTuple>
                        <TunableTuple name="age_progress_percentage" class="TunableAgeProgressPercentageFilterTerm" display="Age Progress Percentage" muid="8D30235A113A51D9" description="A term for filtering Sims based on their age progress as a percentage. The &#xA;score is modified based on the tuned ideal value. Age progress values over&#xA;100% are capped at 100% for the purposes of evaluating a sim's age progress&#xA;for this filter.&#xA;&#xA;Sims may not be conformed to match this filter term." Deprecated="False" filter="0" group="General">
                            <Tunable type="int" name="ideal_value" class="Tunable" default="50" display="Ideal Value" muid="5939A13A788ECF62" description="Ideal value of age progress as a percentage." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                            <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="1E22B40BFF1CB5AB" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                            <TunableTuple name="value_range" class="TunableInterval" display="Value Range" muid="9B859B8F5E690EF3" description="The minimum and maximum age progress percentage." Deprecated="False" filter="0" group="General">
                                <Tunable type="int" name="lower_bound" class="TunableRange" default="0" display="Lower Bound" muid="FCB857E4ED345FE" min="0" max="None" description="The lower bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                <Tunable type="int" name="upper_bound" class="TunableRange" default="100" display="Upper Bound" muid="BCD00DFA64144338" min="None" max="100" description="The upper bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                            </TunableTuple>
                        </TunableTuple>
                        <TunableTuple name="age_variant" class="TunableAgeVariationFilterTerm" display="Age Variant" muid="A4F1322F6899A31A" description="A term for filtering Sims based on a list of allowed ages.&#xA;&#xA;Only new Sims may be conformed by creating them of a valid age. Existing&#xA;Sims may not be conformed." Deprecated="False" filter="0" group="General">
                            <TunableList name="allowed_ages" class="TunableEnumSet" display="Allowed Ages" muid="40DE45353F35C9DE" description="The allowed ages we're filtering for." Deprecated="False" filter="0" group="General" unique_entries="true">
                                <TunableEnum type="Age" class="TunableEnumEntry" default="ADULT" muid="7568F3E72C21CB7C" static_entries="sims-sim_info_types.Age" Deprecated="False" filter="0" group="General" />
                            </TunableList>
                            <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="5AF3B2AF08C6AC73" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                        </TunableTuple>
                        <TunableTuple name="can_age_up" class="TunableAgeUpFilterTerm" display="Can Age Up" muid="6EEDF48D295F19B" description="A term for filtering Sims that may or may not age up at this time. Note:&#xA;This probably does not do what you want it to do. It simply checks if the&#xA;sim is not an elder and that aging is not disabled.&#xA;&#xA;Sims may not be conformed to match this filter term." Deprecated="False" filter="0" group="General">
                            <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="6093D13B0BE1CD01" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                            <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="90F2C2003EC856E2" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                        </TunableTuple>
                        <TunableTuple name="can_be_outside" class="TunableCanBeOutside" display="Can Be Outside" muid="F044F533B9F1A6E7" description="A term for filtering Sims that may or may not be outside.&#xA;Restriction is implemented only for vampires. It needs to be updated &#xA;if we add other occults or systems that resctrict it.&#xA;&#xA;Normal Sim will always pass this filter. Certain Sim, e.g Vampire, &#xA;cannot be outside on daytime except daywalker vampire.&#xA;&#xA;New and existing Sims may be conformed to match this filter term by&#xA;granting or removing vampire trait and daywalker perk." Deprecated="False" filter="0" group="General">
                            <Tunable type="bool" name="at_anytime" class="Tunable" default="False" display="At Anytime" muid="655969918AD8B10C" description="If enabled, the Sim needs to be able to go outside during day and night.&#xA;Otherwise, it needs to be able to go outside at current time or &#xA;during certain period of time." Deprecated="False" filter="0" group="General" />
                            <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="703DED1C8D384F56" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                            <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="B550F6DDB8C46C2D" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                        </TunableTuple>
                        <TunableTuple name="career" class="TunableCareerFilterTerm" display="Career" muid="F558130FC01AA851" description="A term for filtering Sims in a specific career.&#xA;&#xA;New and existing Sims can be conformed by granting them the career, provided&#xA;any availability tests pass." Deprecated="False" filter="0" group="General">
                            <TunableVariant type="None" name="career" class="TunableVariant" default="from_explicit_type" display="Career" muid="BBC647E67AF6E584" description="Define the career that this filter term applies to." Deprecated="False" filter="0" group="General">
                                <TunableTuple name="from_category" class="Tunable_CareerTypeFromCategory" display="From Category" muid="6E7E4121E4CDEF82" description="The filter term applies to the career, if any, of the specified category&#xA;for the Sim." Deprecated="False" filter="0" group="General">
                                    <TunableEnum type="CareerCategory" name="career_category" class="TunableEnumEntry" default="Work" display="Career Category" muid="D2F2070DE101B947" static_entries="careers-career_enums.CareerCategory" description="The career category that this filter term applies to. Sims may&#xA;be conformed if we want to remove the career, i.e. the term is&#xA;inverted, but may not be conformed to join a career." Deprecated="False" filter="0" group="General" />
                                </TunableTuple>
                                <TunableTuple name="from_explicit_type" class="Tunable_CareerTypeExplicit" display="From Explicit Type" muid="BC7F19DE70AA1BF4" description="The filter term applies to a specific career." Deprecated="False" filter="0" group="General">
                                    <Tunable type="career" name="career_type" class="TunableReference" display="Career Type" muid="3A6E350AE8CBC6FD" description="The career that this term applies to. Sims that are conformed to the&#xA;filter will enter the career at its entry level." allow_none="False" Deprecated="False" filter="0" group="General" />
                                </TunableTuple>
                            </TunableVariant>
                            <TunableVariant type="None" name="career_level" class="OptionalTunable" default="disabled" display="Career Level" muid="D69A1D82F6AE5D82" description="If enabled we add an additional requirement of the user level of&#xA;the career to the requirements." Deprecated="False" filter="0" group="General">
                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="F6F8844CB63780B4" />
                                <TunableVariant type="None" name="enabled" class="TunableVariant" default="career_level_reference" display="Enabled" muid="C6EC37C425A759A4" Deprecated="False" filter="0" group="General">
                                    <TunableTuple name="career_level_reference" class="Tunable_CareerLevelReferenceFilter" display="Career Level Reference" muid="619E01AAD1DB0328" description="Filters sims based on a list of CareerLevel references." Deprecated="False" filter="0" group="General">
                                        <TunableList name="career_level_references" class="TunableList" display="Career Level References" muid="F57ACF2D06E4C589" description="A list of CareerLevels. One will be randomly chosen&#xA;when conforming sims." Deprecated="False" filter="0" group="General">
                                            <Tunable type="career_level" class="TunableReference" muid="8B0447C2735AE4AC" description="A reference to a CareerLevel to join the career at.&#xA;The CareerLevel must belong to the career tuned above." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                        </TunableList>
                                    </TunableTuple>
                                    <TunableTuple name="career_user_level" class="Tunable_CareerUserLevelFilter" display="Career User Level" muid="CE818099011536AD" description="Filters sims based on a user career level." Deprecated="False" filter="0" group="General">
                                        <Tunable type="int" name="career_user_level" class="TunableRange" default="1" display="Career User Level" muid="98EA1C44C634BA6D" min="1" max="None" description="A user level. If this level cooresponds to an advanced branch&#xA;and we conform or generate a sim with this filter and the career &#xA;has branches a branch will be chosen at random. If this behavior&#xA;is not desired, use Career Level Reference instead." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                </TunableVariant>
                            </TunableVariant>
                            <TunableVariant type="None" name="career_location" class="TunableVariant" default="none" display="Career Location" muid="E2EB832239ADAFA2" description="Define how important career location is for this filter. Leave None&#xA;if location is not important." Deprecated="False" filter="0" group="General">
                                <Tunable name="none" class="TunableExistance" display="None" muid="7BBD9524DCD0B83C" />
                                <TunableTuple name="on_active_lot" class="Tunable_CareerLocationFilterActiveLot" display="On Active Lot" muid="83F60429DFB0E5EB" description="Any Sim must be in the specified career and hired by the venue on the&#xA;active lot in order to match the filter. Sims that are conformed by&#xA;joining a career will be hired by the venue on the active lot." Deprecated="False" filter="0" group="General" />
                            </TunableVariant>
                            <TunableVariant type="None" name="career_schedule" class="TunableVariant" default="none" display="Career Schedule" muid="C270EEE3FCACC285" description="Define how scheduling affects this filter. Leave None if schedule is&#xA;not important." Deprecated="False" filter="0" group="General">
                                <TunableTuple name="available_now" class="Tunable_CareerScheduleFilterAvailableNow" display="Available Now" muid="F8C03E19F508B602" description="Any Sim must be in the specified career and must be scheduled to work at&#xA;the time of the filter request. If they are not, their career will not&#xA;be conformed to match the filter." Deprecated="False" filter="0" group="General" />
                                <Tunable name="none" class="TunableExistance" display="None" muid="39372CF6B9E413F" />
                            </TunableVariant>
                            <Tunable type="bool" name="career_seniority" class="Tunable" default="True" display="Career Seniority" muid="E63801807126785A" description="If enabled, Sims that have been in the career for longer will score&#xA;higher than Sims that have been in the career for less time." Deprecated="False" filter="0" group="General" />
                            <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="30C9299D7414D9AE" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                            <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="3FC22ECE2232D213" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                        </TunableTuple>
                        <TunableTuple name="cas_tags" class="TunableCasTagsFilterTerm" display="Cas Tags" muid="30459B124ACB1D48" description="A term for filtering Sims based on their CAS tags.&#xA;&#xA;Only new Sims may be conformed by creating them with valid CAS tags.&#xA;Existing Sims may not be conformed." Deprecated="False" filter="0" group="General">
                            <TunableList name="cas_tags" class="TunableSet" display="Cas Tags" muid="1EEAB819896DA05E" description="Sims must have at least one of these tags on their parts for the&#xA;filter to pass." Deprecated="False" filter="0" group="General" unique_entries="true">
                                <TunableEnum type="Tag" class="TunableEnumEntry" default="INVALID" muid="3312531A9EBD9EA3" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" Deprecated="False" filter="0" group="General" />
                            </TunableList>
                            <TunableVariant type="None" name="creation_cas_tags" class="OptionalTunable" default="same_as_cas_tags" display="Creation Cas Tags" muid="E50DBB584047E52B" description="The tags to use when creating a new Sim with this filter term.&#xA;&#xA;This should be same_as_cas_tags for almost all cases. Note that&#xA;custom cas tags are supplied, the Sim must still have Cas Tags&#xA;for sim creation to succeed." Deprecated="False" filter="0" group="General">
                                <TunableList name="custom" class="TunableTags" display="Custom" muid="4061E32251B6AF0" min="1" Deprecated="False" filter="0" group="General" unique_entries="true">
                                    <TunableEnum type="Tag" class="TunableEnumEntry" default="INVALID" muid="EC02B57DA56B8947" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" Deprecated="False" filter="0" group="General" invalid_entries="INVALID" />
                                </TunableList>
                                <Tunable name="same_as_cas_tags" class="TunableExistance" display="Same As Cas Tags" muid="186369C673B96010" />
                            </TunableVariant>
                            <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="63B5EBADBE985700" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                        </TunableTuple>
                        <TunableTuple name="gender" class="TunableGenderFilterTerm" display="Gender" muid="8A1D0457AFA59EA9" description="A term for filtering Sims base on their gender.&#xA;&#xA;Only new Sims may be conformed by creating them of a valid gender. Existing&#xA;Sims may not be conformed." Deprecated="False" filter="0" group="General">
                            <TunableEnum type="Gender" name="gender" class="TunableEnumEntry" default="MALE" display="Gender" muid="B4BAC9C707DCE03F" static_entries="sims-sim_info_types.Gender" description="The required gender of the sim we are filtering for." Deprecated="False" filter="0" group="General" />
                            <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="C31AA832C4DB7D8F" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                        </TunableTuple>
                        <TunableTuple name="gender_preference" class="TunableGenderPreferenceFilterTerm" display="Gender Preference" muid="B9FA35C88CD5640F" description="A filter term for filtering sims that fit the requesting sim info's gender &#xA;preference." Deprecated="False" filter="0" group="General">
                            <Tunable type="bool" name="fallback_if_no_preference_is_set" class="Tunable" default="False" display="Fallback If No Preference Is Set" muid="DA8E4D144FA561E5" description="If checked then if no gender preference is set then fallback." Deprecated="False" filter="0" group="General" />
                            <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="73D51DBB0033D030" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                        </TunableTuple>
                        <TunableTuple name="gender_relative" class="TunableGenderRelativeFilterTerm" display="Gender Relative" muid="EE42FE3435530867" description="A term for filtering Sims base on their gender relative to target sims&#xA;gender.&#xA;&#xA;Only new Sims may be conformed by creating them of a valid gender. Existing&#xA;Sims may not be conformed." Deprecated="False" filter="0" group="General">
                            <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="66FDB89463114947" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                            <Tunable type="bool" name="same" class="Tunable" default="False" display="Same" muid="27CF4AF4711F537E" description="If checked then we will make sure that the sim is the same gender&#xA;as the target sim.  Otherwise the opposite gender" Deprecated="False" filter="0" group="General" />
                        </TunableTuple>
                        <TunableTuple name="genealogy" class="TunableGenealogyFilterTerm" display="Genealogy" muid="590B9864C3373AEC" description="A term for filtering Sims based on their genealogy.&#xA;&#xA;New and existing Sims can be conformed by propagating genealogy relations." Deprecated="False" filter="0" group="General">
                            <TunableEnum type="FamilyRelationshipIndex" name="family_relationship" class="TunableEnumEntry" default="MOTHER" display="Family Relationship" muid="21D3B5C4FF279290" static_entries="sims-genealogy_tracker.FamilyRelationshipIndex" description="This is the family relationship between the requesting sim and the&#xA;target sim." Deprecated="False" filter="0" group="General" />
                            <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="870D642FC6FDE8E" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                            <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="A00FA4229F1B9A01" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                            <Tunable type="bool" name="swap_direction" class="Tunable" default="False" display="Swap Direction" muid="E8EDF60684906A2C" description="This is the direction between the requesting sim and the target sim&#xA;so that the genealogy is checked between the sim info and the&#xA;requesting sim info." Deprecated="False" filter="0" group="General" />
                        </TunableTuple>
                        <TunableTuple name="has_home_zone" class="TunableHasHomeZoneFilterTerm" display="Has Home Zone" muid="D04BA20EA2156B68" description="A term for filtering Sims that may or may not have a home zone.&#xA;&#xA;Sims may not be conformed to match this filter term." Deprecated="False" filter="0" group="General">
                            <Tunable type="bool" name="include_vacation_home" class="Tunable" default="False" display="Include Vacation Home" muid="80444FF9BEC4CE64" description="If enabled and the Sim is on a vacation at a zone, this will return&#xA;True." Deprecated="False" filter="0" group="General" />
                            <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="CC2D3F810ACBB7BC" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                            <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="A2E3CAB746D2C403" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                        </TunableTuple>
                        <TunableTuple name="has_household_ever_been_played" class="TunableHasHouseholdEverBeenPlayedFilterTerm" display="Has Household Ever Been Played" muid="39CD85D59F849C1A" description="A term for filtering Sims that may or may not have ever been played by the&#xA;user.&#xA;&#xA;Sims may not be conformed to match this filter term." Deprecated="False" filter="0" group="General">
                            <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="C593F6E4CCD7AFBC" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                            <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="D36F3ACA3361F7FC" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                        </TunableTuple>
                        <TunableTuple name="household_composition" class="TunableHouseholdCompositionFilterTerm" display="Household Composition" muid="1D30E481FF742B59" description="A term for filtering Sims based on the composition of their household." Deprecated="False" filter="0" group="General">
                            <TunableVariant type="None" name="age" class="OptionalTunable" default="Dont_Care" display="Age" muid="E83850136C1FD2F4" description="Define an age condition for Sims in the household." Deprecated="False" filter="0" group="General">
                                <Tunable name="Dont_Care" class="TunableExistance" display="Dont Care" muid="A265F894A929A154" />
                                <TunableTuple name="enabled" class="TunableAgeFilterTerm" display="Enabled" muid="D326FF049C7B9463" description="A term for filtering Sims based on their age. The score is modified based on&#xA;the tuned ideal value for the age. If you are looking for age variation, please&#xA;choose &quot;Age Variant&quot; instead.&#xA;&#xA;Only new Sims may be conformed by creating them of a valid age. Existing&#xA;Sims may not be conformed." Deprecated="False" filter="0" group="General">
                                    <TunableEnum type="Age" name="ideal_value" class="TunableEnumEntry" default="ADULT" display="Ideal Value" muid="EB4AC7E288D54A65" static_entries="sims-sim_info_types.Age" description="The ideal age of the sim we are filtering for." Deprecated="False" filter="0" group="General" />
                                    <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="B3FF85323793CADC" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                                    <TunableEnum type="Age" name="max_value" class="TunableEnumEntry" default="ELDER" display="Max Value" muid="C2A3115062594EA2" static_entries="sims-sim_info_types.Age" description="The maximum age of the sim we are filtering for." Deprecated="False" filter="0" group="General" />
                                    <TunableEnum type="Age" name="min_value" class="TunableEnumEntry" default="BABY" display="Min Value" muid="1DAA2C2C68C0889" static_entries="sims-sim_info_types.Age" description="The minimum age of the sim we are filtering for." Deprecated="False" filter="0" group="General" />
                                    <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="72C9DD1A8DBFDE96" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                </TunableTuple>
                            </TunableVariant>
                            <TunableVariant type="None" name="gender" class="OptionalTunable" default="Dont_Care" display="Gender" muid="3D6EDC5D879FE9F7" description="Define a gender condition for Sims in the household." Deprecated="False" filter="0" group="General">
                                <Tunable name="Dont_Care" class="TunableExistance" display="Dont Care" muid="1B0F6772811AB1C6" />
                                <TunableTuple name="enabled" class="TunableGenderFilterTerm" display="Enabled" muid="E578C716CD86F47C" description="A term for filtering Sims base on their gender.&#xA;&#xA;Only new Sims may be conformed by creating them of a valid gender. Existing&#xA;Sims may not be conformed." Deprecated="False" filter="0" group="General">
                                    <TunableEnum type="Gender" name="gender" class="TunableEnumEntry" default="MALE" display="Gender" muid="2041C401F3CAEC18" static_entries="sims-sim_info_types.Gender" description="The required gender of the sim we are filtering for." Deprecated="False" filter="0" group="General" />
                                    <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="AB03B34D62DF6406" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                </TunableTuple>
                            </TunableVariant>
                            <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="93E3E1A69FDDC422" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                            <TunableVariant type="None" name="species" class="OptionalTunable" default="Dont_Care" display="Species" muid="5B6364226D3C8D9C" description="Define a species condition for Sims in the household." Deprecated="False" filter="0" group="General">
                                <Tunable name="Dont_Care" class="TunableExistance" display="Dont Care" muid="B5ED2B86F58F50E5" />
                                <TunableTuple name="enabled" class="TunableSpeciesFilterTerm" display="Enabled" muid="ECF318DBF1D6BC70" description="A term for filtering Sim based on their species.&#xA;&#xA;Only new Sims may be conformed by creating them with a valid species.&#xA;Existing Sims may not be conformed." Deprecated="False" filter="0" group="General">
                                    <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="681EE26D3ACACA02" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                                    <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="1632273B475CB77D" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                    <TunableEnum type="Species" name="species" class="TunableEnumEntry" default="HUMAN" display="Species" muid="FF02ABAC3265E4D1" static_entries="sims-sim_info_types.Species" description="The species to filter for." Deprecated="False" filter="0" group="General" invalid_entries="INVALID" />
                                </TunableTuple>
                            </TunableVariant>
                            <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="BE8CB8412EC2A9FE" description="Define the required number of Sims required in order to satisfy the&#xA;term." Deprecated="False" filter="0" group="General">
                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="684740EDB89B2ABD" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="48925A34F215876E" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                            </TunableTuple>
                        </TunableTuple>
                        <TunableTuple name="household_value" class="TunableHouseholdValueFilterTerm" display="Household Value" muid="443D29B8021C1CB6" description="A term for filtering Sims based on their household value.&#xA;&#xA;We intentionally do not conform Sims for this filter term. The only thing&#xA;we have safe control over here is household funds, and this isn't player-&#xA;facing, so it wouldn't be obvious if a Sim was conformed. A player will&#xA;really only judge NPC wealth by property ownership and clothing." Deprecated="False" filter="0" group="General">
                            <TunableTuple name="household_value" class="TunableInterval" display="Household Value" muid="7798DD8D6B1A400A" description="An interval the Sim's household value must be between in order to&#xA;conform to this filter term." Deprecated="False" filter="0" group="General">
                                <Tunable type="int" name="lower_bound" class="TunableRange" default="0" display="Lower Bound" muid="FAD5513333BB3318" min="0" max="None" description="The lower bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                <Tunable type="int" name="upper_bound" class="TunableRange" default="1000" display="Upper Bound" muid="49954CB256167928" min="None" max="None" description="The upper bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                            </TunableTuple>
                            <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="F4A2203F8B1CE00F" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                        </TunableTuple>
                        <TunableTuple name="in_club" class="TunableInClubFilterTerm" display="In Club" muid="387D7C5930329DA4" description="A term for filtering Sims based on if they are in a club or not." Deprecated="False" filter="0" group="General">
                            <Tunable type="bool" name="check_if_requesting_sim_can_join" class="Tunable" default="False" display="Check If Requesting Sim Can Join" muid="FBBA838A6654B53A" description="If checked then we will make sure that the requesting Sim can join&#xA;one of the clubs of this Sim." Deprecated="False" filter="0" group="General" />
                            <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="A6F9F8A8362B62A3" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                            <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="642536C31B66A7F" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                        </TunableTuple>
                        <TunableTuple name="in_compatible_region" class="TunableInCompatibleRegionFilterTerm" display="In Compatible Region" muid="A640141D9C4ACA13" description="A term for filtering Sims that may or may not be in the Same region, thus&#xA;gating their availability to be in certain situations.&#xA;&#xA;Sims may not be conformed to match this filter term." Deprecated="False" filter="0" group="General">
                            <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="61FDB94CD738B9E3" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                            <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="251A9FCB638EEAD5" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                        </TunableTuple>
                        <TunableTuple name="in_family" class="TunableInFamilyFilterTerm" display="In Family" muid="A34A868E7A94CCA8" description="A term for filtering Sims living in the same household.&#xA;&#xA;Sims may not be conformed to match this filter term." Deprecated="False" filter="0" group="General">
                            <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="64EC895E86EC49BF" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                            <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="703574C09BC52D3B" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                        </TunableTuple>
                        <TunableTuple name="in_same_club" class="TunableInSameClubFilterTerm" display="In Same Club" muid="7A2943DC31D4EE75" description="A term for filtering if the Sim and the requesting sim info are in the&#xA;same club." Deprecated="False" filter="0" group="General">
                            <Tunable type="bool" name="check_supplied_club" class="Tunable" default="False" display="Check Supplied Club" muid="B08784BF0A33B5C0" description="If checked then we will check if the Sim is in a specific supplied&#xA;club.  Check with your GPE before using this option because it will&#xA;only work when the data is properly supplied by gameplay." Deprecated="False" filter="0" group="General" />
                            <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="98A6EC9EBF43AEE4" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                            <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="B456C0B8D77C824E" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                        </TunableTuple>
                        <TunableTuple name="is_busy" class="TunableIsBusyFilterTerm" display="Is Busy" muid="6B6813AB0ECCA65E" description="A term for filtering Sims that might be busy at the requested times, based&#xA;on their work schedule.&#xA;&#xA;Sims may not be conformed to match this filter term." Deprecated="False" filter="0" group="General">
                            <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="24D3273CB3B9D67B" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                            <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="28D5742A8B9008E" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                            <TunableVariant type="None" name="override" class="TunableVariant" default="no_override" display="Override" muid="47766C20014048E8" description="Determine a set of Sims that is never considered busy." Deprecated="False" filter="0" group="General">
                                <Tunable name="no_override" class="TunableExistance" display="No Override" muid="EAC9B0CA937FF68A" />
                                <Tunable name="npc_sims" class="TunableExistance" display="Npc Sims" muid="18F4BFFBF9C982DF" />
                                <Tunable name="selectable_sims" class="TunableExistance" display="Selectable Sims" muid="41B3882A5EA71747" />
                            </TunableVariant>
                        </TunableTuple>
                        <TunableTuple name="is_ghost" class="TunableIsGhostFilterTerm" display="Is Ghost" muid="74B5151DC12A7BD8" description="A filter term for filtering Sims that may or may not be ghosts.&#xA;&#xA;Sims may not be conformed to match this filter term." Deprecated="False" filter="0" group="General">
                            <Tunable type="bool" name="always_pass_active_household_sims" class="Tunable" default="False" display="Always Pass Active Household Sims" muid="3BB4FFCC3D6779D2" description="If enabled then we will always pass sims in the active household,&#xA;whether they are a ghost or not." Deprecated="False" filter="0" group="General" />
                            <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="EBEF4CC80FCED18A" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                            <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="D761F2EA37CB252" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                            <Tunable type="bool" name="require_npc" class="Tunable" default="True" display="Require Npc" muid="A34FFD23B0664999" description="If enabled, the Sim needs to be an NPC. If not enabled, any Sim that&#xA;is a ghost will pass the filter." Deprecated="False" filter="0" group="General" />
                        </TunableTuple>
                        <TunableTuple name="is_hidden" class="TunableIsHiddenFilterTerm" display="Is Hidden" muid="A5C1D2E1E8776AFB" description="A filter term to filter out hidden sims. " Deprecated="False" filter="0" group="General">
                            <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="7FA9151576EF0CBD" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                            <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="71E3FD2D4B607655" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                        </TunableTuple>
                        <TunableTuple name="is_neighbor" class="TunableIsNeighborFilterTerm" display="Is Neighbor" muid="BA760466AE2264" description="A term for filtering Sims that are or are not neighbors. This is applicable&#xA;even to neighbor Sims that have not met (thus not having relationship bits).&#xA;&#xA;Sims may not be conformed to match this filter term." Deprecated="False" filter="0" group="General">
                            <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="4795916924FEFB36" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                            <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="533D921299EAACE8" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                        </TunableTuple>
                        <TunableTuple name="is_not_incestuous" class="TunableIsNotIncestuousFilterTerm" display="Is Not Incestuous" muid="AFBEA810DF5194AB" description="A filter term to filtering out sims that would be incestuous with the&#xA;requesting sim info." Deprecated="False" filter="0" group="General">
                            <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="142EDADC24A29840" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                        </TunableTuple>
                        <TunableTuple name="is_roommate" class="TunableIsRoommateFilterTerm" display="Is Roommate" muid="170077F92FC26D67" description="A term for filtering Sims that are roommmates&#xA;&#xA;Sims may not be conformed to match this filter term." Deprecated="False" filter="0" group="General">
                            <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="D6A7D474C51F73ED" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                            <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="296067C1B85E9610" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                            <TunableVariant type="None" name="target_household" class="TunableVariant" default="any" display="Target Household" muid="EAD5CF8D4484E5FF" description="Which household must the sim be a roommate of." Deprecated="False" filter="0" group="General">
                                <Tunable name="active_household" class="TunableExistance" display="Active Household" muid="4661EEEE1827C418" />
                                <Tunable name="any" class="TunableExistance" display="Any" muid="3ECDE6268BF20B29" />
                                <Tunable name="requesting_sim_household" class="TunableExistance" display="Requesting Sim Household" muid="AE832C85C93F3C02" />
                                <Tunable name="specified_household" class="TunableExistance" display="Specified Household" muid="BD20E05D00BD3C7C" />
                            </TunableVariant>
                        </TunableTuple>
                        <TunableTuple name="is_sim_sick" class="TunableSickSimFilterTerm" display="Is Sim Sick" muid="5567A113DF7BD4E4" description="A term for filtering Sims based on whether they are sick or not." Deprecated="False" filter="0" group="General">
                            <TunableVariant type="None" name="difficulty_range" class="OptionalTunable" default="disabled" display="Difficulty Range" muid="ECC1268891AEC020" description="Optionally define the difficulty rating range that is required&#xA;for the Sim's sickness." Deprecated="False" filter="0" group="General">
                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="7A6621D4655333E2" />
                                <TunableTuple name="enabled" class="TunableInterval" display="Enabled" muid="67C22C1E1CC6BA49" description="The difficulty rating range, this maps to 'difficulty_rating'&#xA;values in Sickness tuning." Deprecated="False" filter="0" group="General">
                                    <Tunable type="float" name="lower_bound" class="TunableRange" default="0" display="Lower Bound" muid="C5DDCAC1C99B7CC2" min="0" max="None" description="The lower bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                    <Tunable type="float" name="upper_bound" class="TunableRange" default="10" display="Upper Bound" muid="E1652A26AF69C759" min="None" max="10" description="The upper bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                </TunableTuple>
                            </TunableVariant>
                            <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="4D8783A7B2A06EA7" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                            <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="BD2EA8B7616EAC4" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                        </TunableTuple>
                        <TunableTuple name="lives_in_region" class="TunableLivesInRegion" display="Lives In Region" muid="E8F5371C358D8B16" description="A filter term for filtering if the Sims live in the specified region or not." Deprecated="False" filter="0" group="General">
                            <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="55DE30374154C9CE" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                            <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="F7857AAB24EF8488" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                            <TunableVariant type="None" name="region" class="OptionalTunable" default="current_region" display="Region" muid="DDA6A7D33B06870" description="Which region to test against." Deprecated="False" filter="0" group="General">
                                <Tunable name="current_region" class="TunableExistance" display="Current Region" muid="6019145AF9BDBB6D" />
                                <TunableList name="specific_regions" class="TunableList" display="Specific Regions" muid="6CD1149B876FE046" min="1" description="The list of valid regions." Deprecated="False" filter="0" group="General" unique_entries="true">
                                    <Tunable type="region" class="TunableReference" muid="D570B5D7FCA23053" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="Region" />
                                </TunableList>
                            </TunableVariant>
                            <TunableVariant type="None" name="street_for_creation" class="OptionalTunable" default="disabled" display="Street For Creation" muid="61B95FFB24BCAB25" description="By default, Sims can only be created with this filter term if this&#xA;term is inverted (that is, the resulting Sim is a townie that lives&#xA;nowhere). Otherwise, the conform fails.&#xA;&#xA;If this is enabled and the term is not inverted, the Sim will&#xA;instead be assigned as townie living on the street." Deprecated="False" filter="0" group="General">
                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="7A75BF270DE177AE" />
                                <Tunable type="worlddescription" name="enabled" class="TunableReference" display="Enabled" muid="E2275B0F32534072" Deprecated="False" filter="0" group="General" pack_safe="True" />
                            </TunableVariant>
                        </TunableTuple>
                        <TunableTuple name="lives_on_apartment_floor" class="TunableLivesOnApartmentFloor" display="Lives On Apartment Floor" muid="4BD7FCD69CB671AC" description="A term for filtering Sims that live on the current apartment floor." Deprecated="False" filter="0" group="General">
                            <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="C4600BC3ADD332FB" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                            <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="C124A5A66735AE3F" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                        </TunableTuple>
                        <TunableTuple name="lives_on_street" class="TunableLivesOnStreetFilterTerm" display="Lives On Street" muid="F0FF7422EEB5CCF5" description="A term for filtering Sims that live on the current street." Deprecated="False" filter="0" group="General">
                            <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="5772AD30DA535DA1" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                            <TunableVariant type="None" name="match_criteria" class="TunableVariant" default="match_target_population" display="Match Criteria" muid="FF2B42E95BDDCC99" description="Criteria for a Sim to match this filter. This tunable is ignored if&#xA;the filter is inverted. If inverted, the filter passes if the Sim&#xA;doesn't live on the street and fails if so.&#xA;&#xA;Match Target Population: If the number of townies living on the&#xA;tuned street meets or exceeds the street's tuned townie threshold,&#xA;then this filter term will be considered met.&#xA;&#xA;Must Match: The Sim chosen or created must live on the street." Deprecated="False" filter="0" group="General">
                                <TunableTuple name="match_target_population" class="TunableMatchTargetPopulation" display="Match Target Population" muid="B2DB80442712E9A4" description="If the street is at its townie population cap, allow all Sims." Deprecated="False" filter="0" group="General" />
                                <TunableTuple name="must_match" class="TunableMustMatch" display="Must Match" muid="45573C11717AB06E" description="Sims must live on the street." Deprecated="False" filter="0" group="General" />
                            </TunableVariant>
                            <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="A009593F76379127" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                            <TunableVariant type="None" name="street" class="OptionalTunable" default="current_street" display="Street" muid="23D6CEC3E079B2C4" description="The street the Sim must live on." Deprecated="False" filter="0" group="General">
                                <Tunable name="current_street" class="TunableExistance" display="Current Street" muid="6AB320B9AD681F54" />
                                <Tunable type="worlddescription" name="specific_street" class="TunableReference" display="Specific Street" muid="7506B5CA2A65BF2A" Deprecated="False" filter="0" group="General" />
                            </TunableVariant>
                        </TunableTuple>
                        <TunableTuple name="lives_together" class="TunableLivesTogetherFilterTerm" display="Lives Together" muid="59BEC09F5371002C" description="A term for filtering Sims who are in the same travel group or household.&#xA;&#xA;Sims may not be conformed to match this filter term." Deprecated="False" filter="0" group="General">
                            <Tunable type="bool" name="consider_household" class="Tunable" default="True" display="Consider Household" muid="498C56FB8EF8B806" description="If enabled, this will succeed if the Sim is in the same household as&#xA;the requesting Sim." Deprecated="False" filter="0" group="General" />
                            <Tunable type="bool" name="consider_travel_group" class="Tunable" default="True" display="Consider Travel Group" muid="D841D7FB2DD5124D" description="If enabled, this will succeed if the Sim is in the same household as&#xA;the requesting Sim." Deprecated="False" filter="0" group="General" />
                            <Tunable type="bool" name="exclude_sims_in_both" class="Tunable" default="False" display="Exclude Sims In Both" muid="3683009135712AC" description="If enabled, this will fail if the Sim is in both the same household&#xA;and travel group. If false, it doesn't care." Deprecated="False" filter="0" group="General" />
                            <Tunable type="bool" name="include_roommates_as_household" class="Tunable" default="True" display="Include Roommates As Household" muid="10901A7519DABF82" description="If enabled, roommates will be considered part of the same household." Deprecated="False" filter="0" group="General" />
                            <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="9249EC122111E3CE" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                            <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="57620FBDE72454D6" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                        </TunableTuple>
                        <TunableTuple name="occult_ranked" class="TunableOccultRankFilterTerm" display="Occult Ranked" muid="A140C4F82CE51879" description="A term for filtering Sims based on ranked statistic.&#xA;&#xA;New and existing Sims can be conformed by granting them occult type and &#xA;XP to reach target rank." Deprecated="False" filter="0" group="General">
                            <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="EB0A37048A540A4B" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                            <TunableEnum type="OccultType" name="occult_type" class="TunableEnumEntry" default="HUMAN" display="Occult Type" muid="33D559E4DA90FBE6" static_entries="sims-occult-occult_enums.OccultType" description="The occult type that this entry applies to." Deprecated="False" filter="0" group="General" />
                            <TunableTuple name="rank_values" class="TunableInterval" display="Rank Values" muid="D5745FC97DC43296" description="An interval of the Sim rank. Rank must be between the interval &#xA;in order to pass the filter term. We set lower and upper rank interval &#xA;so then Sim that is too weak or too strong will not pass the filter." Deprecated="False" filter="0" group="General">
                                <Tunable type="int" name="lower_bound" class="TunableRange" default="1" display="Lower Bound" muid="C700AB8CF090612F" min="1" max="None" description="The lower bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                <Tunable type="int" name="upper_bound" class="TunableRange" default="1" display="Upper Bound" muid="D913AE3FC82B9B14" min="None" max="None" description="The upper bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                            </TunableTuple>
                        </TunableTuple>
                        <TunableTuple name="perks" class="TunablePerksFilterTerm" display="Perks" muid="AB287BD3EF7723E4" description="A term for filtering Sims that may or may not have perks.&#xA;&#xA;New and existing Sims can be conformed by granting or removing the perks." Deprecated="False" filter="0" group="General">
                            <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="C6DBA142A63AC6DD" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                            <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="89BBB40600CED912" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                            <TunableList name="perks" class="TunableSet" display="Perks" muid="346E6E1962A1EF11" description="List of perks that a Sim should has." Deprecated="False" filter="0" group="General" unique_entries="true">
                                <Tunable type="bucks_perk" class="TunableReference" muid="4FD8FA1FF3D77836" description="The perks that Sim should has." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                            </TunableList>
                        </TunableTuple>
                        <TunableTuple name="pregnancy" class="TunablePregnancyFilterTerm" display="Pregnancy" muid="99C028F869EFDE97" description="A term for filtering pregnant sims." Deprecated="False" filter="0" group="General">
                            <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="8235FCB84CD63300" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                            <TunableVariant type="None" name="pregnancy_partner_filter" class="OptionalTunable" default="Use_Spouse_Exclusively" display="Pregnancy Partner Filter" muid="C458B7E758FF5DF8" description="Specify how Sims are conformed to match this filter term." Deprecated="False" filter="0" group="General">
                                <Tunable name="Use_Spouse_Exclusively" class="TunableExistance" display="Use Spouse Exclusively" muid="512DA76ED5A756B2" />
                                <Tunable type="sim_filter" name="Use_Spouse_or_Filter" class="TunableReference" display="Use Spouse Or Filter" muid="DDD25F36270B0142" description="The filter that will be used to find a pregnancy partner for for&#xA;this Sim." allow_none="False" Deprecated="False" filter="0" group="General" />
                            </TunableVariant>
                            <TunableVariant type="None" name="pregnancy_progress" class="OptionalTunable" default="disabled" display="Pregnancy Progress" muid="49E498367FCC0DB8" description="If enabled then we will check a specific " Deprecated="False" filter="0" group="General">
                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="3C5C47B931110918" />
                                <TunableTuple name="enabled" class="TunableTuple" display="Enabled" muid="8DEC7F08C5BDF263" description="                " Deprecated="False" filter="0" group="General">
                                    <Tunable type="float" name="ideal_value" class="Tunable" default="50.0" display="Ideal Value" muid="21E1CD4DE55448E9" description="The ideal commodity value for scoring." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                    <Tunable type="float" name="maximum_value" class="Tunable" default="100.0" display="Maximum Value" muid="240856E8811D4594" description="The maximum commodity value that will pass." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                    <Tunable type="float" name="minimum_value" class="Tunable" default="0.0" display="Minimum Value" muid="9217AC1565731681" description="The minimum commodity value that will pass." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                </TunableTuple>
                            </TunableVariant>
                        </TunableTuple>
                        <TunableTuple name="ranked_statistic" class="TunableRankedStatisticFilterTerm" display="Ranked Statistic" muid="95B5CAF6BC234A66" description="A term for filtering Sims based on their ranked skills. The score is&#xA;modified based on the tuned ideal value of the ranked statistic.&#xA;&#xA;New and existing Sims can be conformed by granting them ranked statistics,&#xA;within the new bounds.&#xA;&#xA;If you want to operate on the rank of the ranked statistic then make sure &#xA;that the check box for 'use_rank' is checked. If you want this to behave&#xA;more like a normal statistic using the &quot;points&quot; and not the rank then&#xA;uncheck that value." Deprecated="False" filter="0" group="General">
                            <Tunable type="int" name="ideal_value" class="Tunable" default="2" display="Ideal Value" muid="621EEDEAC3E6E63F" description="Ideal value of the ranked statistic that we are filtering against." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                            <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="75798AB5A16A9378" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                            <Tunable type="int" name="max_value" class="Tunable" default="5" display="Max Value" muid="CCB83CED9FDD6068" description="Maximum value of the ranked statistic that we are filtering against." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                            <Tunable type="int" name="min_value" class="Tunable" default="0" display="Min Value" muid="4CED9591F9C834E9" description="Minimum value of the ranked statistic that we are filtering against." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                            <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="664DBD24B1829BA6" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                            <Tunable type="bool" name="only_check_statistic_owned" class="Tunable" default="False" display="Only Check Statistic Owned" muid="C35DCF3170F98691" description="Only require that the statistic is actually owned by the sim,&#xA;ignoring the statistic's level." Deprecated="False" filter="0" group="General" />
                            <Tunable type="statistic" name="ranked_statistic" class="TunableReference" display="Ranked Statistic" muid="DD2C26DC55F17A29" description="The ranked statistic the range applies to." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="RankedStatistic" />
                            <TunableVariant type="None" name="score_spread_override" class="OptionalTunable" default="disabled" display="Score Spread Override" muid="3D3BBC91A3C44B13" description="If enabled this interval modifies the spread over which the score&#xA;should return.&#xA;&#xA;A score is typically between 0 and 1.  A score of 0 means&#xA;the sim will never be selected, the higher a score is the more&#xA;likely that sim is to be selected.&#xA;&#xA;The score for statistic scoring is based on how close to the &quot;ideal&quot; value&#xA;the value for the specified statistic for a sim is.  It's a 1 if it's&#xA;that exact score.  It's *near* 0  (though not exactly, because the&#xA;general idea behind this filter to make it a weight not elimination)&#xA;as it gets farther from the ideal value and closer to the min or max value.&#xA;(Note: it uses min_value -1 and max_value + 1 as the min/max values to avoid&#xA;hitting 0.  However the min/max values don't have to be accurate,&#xA;so you can hit 0 by adjusting the tuned min/max values here as desired.)&#xA;&#xA;So if you have it tuned as:&#xA;min value: 0&#xA;max value: 5&#xA;ideal value: 5&#xA;The resulting score for each integer will be:&#xA;0 gives you: 0.17&#xA;1 gives you: 0.33&#xA;2 gives you: 0.5&#xA;3 gives you: 0.66&#xA;4 gives you: 0.83&#xA;5 gives you: 1&#xA;&#xA;The minimum filter score tuning is simply a floor.  Regardless of how low&#xA;the calculated score is, if it's lower than the minimum filter score&#xA;the result will simply be replaced with the minimum filter score.&#xA;&#xA;So adding a minimum filter score of 0.5 simply results in:&#xA;0 gives you: 0.5&#xA;1 gives you: 0.5&#xA;2 gives you: 0.5&#xA;3 gives you: 0.66&#xA;4 gives you: 0.83&#xA;5 gives you: 1&#xA;&#xA;This optional tunable modifies the spread over which the score&#xA;is returned (and gets rid of the -1/+1 padding as you can specify&#xA;the padding in the actual range.)  So instead of returning from 0 to 1, &#xA;where 0 is as far away from the ideal as possible, and 1 is at the &#xA;ideal value, it'll return the lower value when the statistic is as &#xA;far away from the ideal value as possible, and the closer you get to the &#xA;ideal value, the closer the return value will be to the maximum value.&#xA;&#xA;So adding a score spread override of 0.5 to 1.0, (instead of a&#xA;minimum filter score) results in:&#xA;0 gives you: 0.5&#xA;1 gives you: 0.6&#xA;2 gives you: 0.7&#xA;3 gives you: 0.8&#xA;4 gives you: 0.9&#xA;5 gives you: 1&#xA;&#xA;Note:  Since, as stated, it's perfectly possible to lie about the&#xA;min/max value, this result is also possible to achieve with clever&#xA;tuning:&#xA;min value of -4&#xA;max value of 5&#xA;ideal value of 5" Deprecated="False" filter="0" group="General">
                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="BBB05807E31173D4" />
                                <TunableTuple name="enabled" class="TunableInterval" display="Enabled" muid="DBDE2D17B805732F" description="A tunable interval between lower_bound and upper_bound." Deprecated="False" filter="0" group="General">
                                    <Tunable type="float" name="lower_bound" class="TunableRange" default="0.0" display="Lower Bound" muid="C7926C68FC017738" min="0" max="None" description="The lower bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                    <Tunable type="float" name="upper_bound" class="TunableRange" default="1.0" display="Upper Bound" muid="871DE287E10A8400" min="None" max="None" description="The upper bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                </TunableTuple>
                            </TunableVariant>
                            <Tunable type="bool" name="use_rank" class="Tunable" default="True" display="Use Rank" muid="4D2280CD5FDAB169" description="If checked then use the rank value instead of the point value for&#xA;our calculations." Deprecated="False" filter="0" group="General" />
                        </TunableTuple>
                        <TunableTuple name="relationship_bit" class="TunableRelationshipBitFilterTerm" display="Relationship Bit" muid="3E491CE2D87B97E2" description="A term for filtering against relationship bits.&#xA;&#xA;New and existing Sims can be conformed by granting or removing the specified&#xA;bits." Deprecated="False" filter="0" group="General">
                            <TunableList name="black_list" class="TunableSet" display="Black List" muid="86DBFA7D02491E27" description="A set of relationship bits that requires the requesting sim to not&#xA;have any one matching relationship bits with the sims we are&#xA;scoring." Deprecated="False" filter="0" group="General" unique_entries="true">
                                <Tunable type="relbit" class="TunableReference" muid="5B7F183EE8654BD5" description="A relationship bit that we will use to check if the requesting&#xA;sim has it with the sim we are scoring." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                            </TunableList>
                            <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="CD492E845EEBD6CE" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                            <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="DB7AD2F8CF21C3A6" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                            <TunableVariant type="None" name="relationship_selector" class="TunableVariant" default="use_requesting_sim" display="Relationship Selector" muid="3EF53736F1EBCCDB" description="Define which relationships are to be considered." Deprecated="False" filter="0" group="General">
                                <TunableTuple name="use_all_sims" class="Tunable_RelationshipAllKnown" display="Use All Sims" muid="DBAD6A638933BB59" description="Consider the relationship with all known Sims." Deprecated="False" filter="0" group="General" />
                                <TunableTuple name="use_played_sims" class="Tunable_RelationshipAllKnownPlayed" display="Use Played Sims" muid="85831C6EC29D5797" description="Consider the relationship with all known played Sims." Deprecated="False" filter="0" group="General" />
                                <TunableTuple name="use_requesting_sim" class="Tunable_RelationshipRequestingSim" display="Use Requesting Sim" muid="26DC6B85DE53DC51" description="Consider the relationship with the requesting Sim." Deprecated="False" filter="0" group="General" />
                            </TunableVariant>
                            <Tunable type="bool" name="requesting_sim_override" class="Tunable" default="False" display="Requesting Sim Override" muid="81E3E152E58563AB" description="If checked then the filter term will always return 1 if the&#xA;requesting sim info is the sim info we are looking at." Deprecated="False" filter="0" group="General" />
                            <Tunable type="bool" name="reverse_bit_lookup" class="Tunable" default="False" display="Reverse Bit Lookup" muid="7B119E4E51F1B719" description="Look up the relationship bits for target to source sim,&#xA;instead of the default behavior of source to target relationship bits" Deprecated="False" filter="0" group="General" />
                            <TunableList name="white_list" class="TunableSet" display="White List" muid="9453D9C4854EEBFE" description="A set of relationship bits that requires the requesting sim to have&#xA;at least one matching relationship bit with the sims we are scoring." Deprecated="False" filter="0" group="General" unique_entries="true">
                                <Tunable type="relbit" class="TunableReference" muid="8CE930B179CDCEA9" description="A relationship bit that we will use to check if the requesting&#xA;sim has it with the sim we are scoring.&#xA;WARNING: If all elements are in a pack, then no sim will pass&#xA;the filter if the pack(s) aren't installed." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                            </TunableList>
                        </TunableTuple>
                        <TunableTuple name="relationship_bit_collection" class="TunableRelationshipBitCollectionFilterTerm" display="Relationship Bit Collection" muid="A09E459CE1E14D35" description="A term for filtering against relationship bits or bit collections.&#xA;&#xA;This filter is NOT conformable" Deprecated="False" filter="0" group="General">
                            <TunableList name="black_list" class="TunableSet" display="Black List" muid="5B7E1453A466ED89" description="A set of relationship bits or bit collections that requires the &#xA;requesting sim to not have any one matching relationship bits with&#xA;the sims we are scoring." Deprecated="False" filter="0" group="General" unique_entries="true">
                                <Tunable type="relbit" class="TunableReference" muid="B03E30A9CF332503" description="A relationship bit or bit collection that we will use to check &#xA;if the requesting sim has it with the sim we are scoring." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                            </TunableList>
                            <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="78DC261E7CE63450" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                            <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="BF53E646CA2A005E" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                            <TunableVariant type="None" name="relationship_selector" class="TunableVariant" default="use_requesting_sim" display="Relationship Selector" muid="EFA2AD8F003104D4" description="Define which relationships are to be considered." Deprecated="False" filter="0" group="General">
                                <TunableTuple name="use_all_sims" class="Tunable_RelationshipAllKnown" display="Use All Sims" muid="5B2CEA09C7A2EFFE" description="Consider the relationship with all known Sims." Deprecated="False" filter="0" group="General" />
                                <TunableTuple name="use_played_sims" class="Tunable_RelationshipAllKnownPlayed" display="Use Played Sims" muid="6B958270DBBAEA01" description="Consider the relationship with all known played Sims." Deprecated="False" filter="0" group="General" />
                                <TunableTuple name="use_requesting_sim" class="Tunable_RelationshipRequestingSim" display="Use Requesting Sim" muid="B82DE3042E3FB0A3" description="Consider the relationship with the requesting Sim." Deprecated="False" filter="0" group="General" />
                            </TunableVariant>
                            <Tunable type="bool" name="requesting_sim_override" class="Tunable" default="False" display="Requesting Sim Override" muid="E44DE31CCC104A29" description="If checked then the filter term will always return 1 if the&#xA;requesting sim info is the sim info we are looking at." Deprecated="False" filter="0" group="General" />
                            <Tunable type="bool" name="reverse_bit_lookup" class="Tunable" default="False" display="Reverse Bit Lookup" muid="33E582E94B5EB449" description="Look up the relationship bits for target to source sim,&#xA;instead of the default behavior of source to target relationship bits" Deprecated="False" filter="0" group="General" />
                            <TunableList name="white_list" class="TunableSet" display="White List" muid="211329812CF1EA6F" description="A set of relationship bits or bit collections that requires the &#xA;requesting sim to have at least one matching relationship bit with &#xA;the sims we are scoring." Deprecated="False" filter="0" group="General" unique_entries="true">
                                <Tunable type="relbit" class="TunableReference" muid="39DAD61BDC232C84" description="A relationship bit or bit collection that we will use to check &#xA;if the requesting sim has it with the sim we are scoring.&#xA;WARNING: If all elements are in a pack, then no sim will pass&#xA;the filter if the pack(s) aren't installed." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                            </TunableList>
                        </TunableTuple>
                        <TunableTuple name="relationship_track" class="TunableRelationshipTrackFilterTerm" display="Relationship Track" muid="82F70962D26E5E8" description="A term for filtering against relationship tracks. The score is modified&#xA;based on the tuned ideal value of the relationship.&#xA;&#xA;New and existing Sims can be conformed by granting them relationship, within&#xA;the tuned bounds." Deprecated="False" filter="0" group="General">
                            <Tunable type="int" name="ideal_value" class="Tunable" default="0" display="Ideal Value" muid="29DAA9B8417964DD" description="Ideal value of the relationship track that we are filtering against." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                            <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="2C416255C5529763" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                            <Tunable type="int" name="max_value" class="Tunable" default="100" display="Max Value" muid="7CF215295222CBDC" description="The maximum value of the relationship track that we are filtering&#xA;against." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                            <Tunable type="int" name="min_value" class="Tunable" default="-100" display="Min Value" muid="5C52C30C2BEF6CE6" description="The minimum value of the relationship track that we are filtering&#xA;against." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                            <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="E5C0A76156DE5C3B" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                            <TunableVariant type="None" name="relationship_selector" class="TunableVariant" default="use_requesting_sim" display="Relationship Selector" muid="29D62DA98481BCC4" description="Define which relationships are to be considered." Deprecated="False" filter="0" group="General">
                                <TunableTuple name="use_all_sims" class="Tunable_RelationshipAllKnown" display="Use All Sims" muid="81691D1793466E45" description="Consider the relationship with all known Sims." Deprecated="False" filter="0" group="General" />
                                <TunableTuple name="use_played_sims" class="Tunable_RelationshipAllKnownPlayed" display="Use Played Sims" muid="19D36EFB20A2F3BB" description="Consider the relationship with all known played Sims." Deprecated="False" filter="0" group="General" />
                                <TunableTuple name="use_requesting_sim" class="Tunable_RelationshipRequestingSim" display="Use Requesting Sim" muid="1B297C79EC749694" description="Consider the relationship with the requesting Sim." Deprecated="False" filter="0" group="General" />
                            </TunableVariant>
                            <Tunable type="statistic" name="relationship_track" class="TunableReference" display="Relationship Track" muid="ED245E260114D171" description="The relationship track that we are filtering against." allow_none="False" Deprecated="False" filter="0" group="General" restrict="RelationshipTrack" />
                            <Tunable type="bool" name="requesting_sim_override" class="Tunable" default="False" display="Requesting Sim Override" muid="C7EF7B23057D3AF2" description="If checked then the filter term will always return 1 if the&#xA;requesting sim info is the sim info we are looking at." Deprecated="False" filter="0" group="General" />
                        </TunableTuple>
                        <TunableTuple name="requesting_sim" class="TunableRequestingSimFilterTerm" display="Requesting Sim" muid="75EC8960D2C5E6CA" description="A filter term for matching the requesting sim." Deprecated="False" filter="0" group="General">
                            <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="BBBBB6D26B394890" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                            <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="3F9B570CE0F93A85" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                        </TunableTuple>
                        <TunableTuple name="sim_info_fixups" class="TunableSimInfoFixupFilterTerm" display="Sim Info Fixups" muid="11A466F41AD8F56E" description="A term for filtering Sims based on a sim info fixup they may or may not have.&#xA;&#xA;New and existing Sims can be conformed by either granting or removing the&#xA;specified fixup." Deprecated="False" filter="0" group="General">
                            <Tunable type="sim_info_fixup" name="fixup" class="TunableReference" display="Fixup" muid="F604DBDFEE2DEB67" description="The sim info fixup to filter against." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                            <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="636F0AD15885A354" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                            <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="8E51CEE4584ED14C" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                        </TunableTuple>
                        <TunableTuple name="sim_info_lod" class="TunableSimLODFilterTerm" display="Sim Info Lod" muid="5325E53E1D9EF36A" description="A term for filtering Sims that have or do not have the specified Sim Info&#xA;LOD value.&#xA;&#xA;Sims may not be conformed to match this filter term." Deprecated="False" filter="0" group="General">
                            <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="26C801F652EC4284" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                            <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="31B7ED19C1D41982" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                            <TunableEnum type="SimInfoLODLevel" name="sim_lod_value" class="TunableEnumEntry" default="BACKGROUND" display="Sim Lod Value" muid="2917C42D8549E4E6" static_entries="sims-sim_info_lod.SimInfoLODLevel" description="The Sim LOD value to check against." Deprecated="False" filter="0" group="General" />
                        </TunableTuple>
                        <TunableTuple name="skill" class="TunableSkillFilterTerm" display="Skill" muid="994385F1A3B94AAD" description="A term for filtering Sims based on their skill. The score is modified based&#xA;on the tuned ideal value of the skill.&#xA;&#xA;New and existing Sims can be conformed by granting them the skill, within&#xA;the tuned bounds." Deprecated="False" filter="0" group="General">
                            <Tunable type="int" name="ideal_value" class="Tunable" default="5" display="Ideal Value" muid="F59669AB8D861875" description="Ideal value of the skill that we are filtering against." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                            <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="BB13B36589809BE7" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                            <Tunable type="int" name="max_value" class="Tunable" default="10" display="Max Value" muid="931697C7E0E1C568" description="Maximum value of the skill that we are filtering against." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                            <Tunable type="int" name="min_value" class="Tunable" default="0" display="Min Value" muid="41B3C46C4E48C192" description="Minimum value of the skill that we are filtering against." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                            <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="7EE88662BC71403E" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                            <Tunable type="bool" name="only_check_statistic_owned" class="Tunable" default="False" display="Only Check Statistic Owned" muid="A61D723EF7B4C3AD" description="Only require that the statistic is actually owned by the sim,&#xA;ignoring the statistic's level." Deprecated="False" filter="0" group="General" />
                            <TunableVariant type="None" name="score_spread_override" class="OptionalTunable" default="disabled" display="Score Spread Override" muid="CD667B94B0CDB35A" description="If enabled this interval modifies the spread over which the score&#xA;should return.&#xA;&#xA;A score is typically between 0 and 1.  A score of 0 means&#xA;the sim will never be selected, the higher a score is the more&#xA;likely that sim is to be selected.&#xA;&#xA;The score for statistic scoring is based on how close to the &quot;ideal&quot; value&#xA;the value for the specified statistic for a sim is.  It's a 1 if it's&#xA;that exact score.  It's *near* 0  (though not exactly, because the&#xA;general idea behind this filter to make it a weight not elimination)&#xA;as it gets farther from the ideal value and closer to the min or max value.&#xA;(Note: it uses min_value -1 and max_value + 1 as the min/max values to avoid&#xA;hitting 0.  However the min/max values don't have to be accurate,&#xA;so you can hit 0 by adjusting the tuned min/max values here as desired.)&#xA;&#xA;So if you have it tuned as:&#xA;min value: 0&#xA;max value: 5&#xA;ideal value: 5&#xA;The resulting score for each integer will be:&#xA;0 gives you: 0.17&#xA;1 gives you: 0.33&#xA;2 gives you: 0.5&#xA;3 gives you: 0.66&#xA;4 gives you: 0.83&#xA;5 gives you: 1&#xA;&#xA;The minimum filter score tuning is simply a floor.  Regardless of how low&#xA;the calculated score is, if it's lower than the minimum filter score&#xA;the result will simply be replaced with the minimum filter score.&#xA;&#xA;So adding a minimum filter score of 0.5 simply results in:&#xA;0 gives you: 0.5&#xA;1 gives you: 0.5&#xA;2 gives you: 0.5&#xA;3 gives you: 0.66&#xA;4 gives you: 0.83&#xA;5 gives you: 1&#xA;&#xA;This optional tunable modifies the spread over which the score&#xA;is returned (and gets rid of the -1/+1 padding as you can specify&#xA;the padding in the actual range.)  So instead of returning from 0 to 1, &#xA;where 0 is as far away from the ideal as possible, and 1 is at the &#xA;ideal value, it'll return the lower value when the statistic is as &#xA;far away from the ideal value as possible, and the closer you get to the &#xA;ideal value, the closer the return value will be to the maximum value.&#xA;&#xA;So adding a score spread override of 0.5 to 1.0, (instead of a&#xA;minimum filter score) results in:&#xA;0 gives you: 0.5&#xA;1 gives you: 0.6&#xA;2 gives you: 0.7&#xA;3 gives you: 0.8&#xA;4 gives you: 0.9&#xA;5 gives you: 1&#xA;&#xA;Note:  Since, as stated, it's perfectly possible to lie about the&#xA;min/max value, this result is also possible to achieve with clever&#xA;tuning:&#xA;min value of -4&#xA;max value of 5&#xA;ideal value of 5" Deprecated="False" filter="0" group="General">
                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="C7E2F91BF8EFD293" />
                                <TunableTuple name="enabled" class="TunableInterval" display="Enabled" muid="A7B2127C71447699" description="A tunable interval between lower_bound and upper_bound." Deprecated="False" filter="0" group="General">
                                    <Tunable type="float" name="lower_bound" class="TunableRange" default="0.0" display="Lower Bound" muid="B6372554297A7F46" min="0" max="None" description="The lower bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                    <Tunable type="float" name="upper_bound" class="TunableRange" default="1.0" display="Upper Bound" muid="D36765560B82AB38" min="None" max="None" description="The upper bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                </TunableTuple>
                            </TunableVariant>
                            <Tunable type="statistic" name="skill" class="TunableReference" display="Skill" muid="B1723F7A5F950738" description="The skill the range applies to." allow_none="False" Deprecated="False" filter="0" group="General" restrict="Skill" />
                        </TunableTuple>
                        <TunableTuple name="species" class="TunableSpeciesFilterTerm" display="Species" muid="89C746880D0937D7" description="A term for filtering Sim based on their species.&#xA;&#xA;Only new Sims may be conformed by creating them with a valid species.&#xA;Existing Sims may not be conformed." Deprecated="False" filter="0" group="General">
                            <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="E8E331A7F95CFE13" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                            <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="448F4C535AEAF4B6" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                            <TunableEnum type="Species" name="species" class="TunableEnumEntry" default="HUMAN" display="Species" muid="DDB59C737F582A98" static_entries="sims-sim_info_types.Species" description="The species to filter for." Deprecated="False" filter="0" group="General" invalid_entries="INVALID" />
                        </TunableTuple>
                        <TunableTuple name="statistic" class="TunableStatisticFilterTerm" display="Statistic" muid="ADFB16417F167047" description="A term for filtering Sims based on a statistic. The score is modified based&#xA;on the tuned ideal value of the statistic.&#xA;&#xA;New and existing Sims can be conformed by granting them the statistic, within&#xA;the tuned bounds." Deprecated="False" filter="0" group="General">
                            <Tunable type="float" name="ideal_value" class="Tunable" default="5.0" display="Ideal Value" muid="DF66C2B738D88493" description="Ideal value of the statistic that we are filtering against." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                            <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="99FC5DB1961CFE72" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                            <Tunable type="float" name="max_value" class="Tunable" default="10.0" display="Max Value" muid="16F5D150867BA271" description="Maximum value of the statistic that we are filtering against." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                            <Tunable type="float" name="min_value" class="Tunable" default="0.0" display="Min Value" muid="20FDCD94C34F2EE" description="Minimum value of the statistic that we are filtering against." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                            <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="2849DE8FE8321603" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                            <Tunable type="bool" name="only_check_statistic_owned" class="Tunable" default="False" display="Only Check Statistic Owned" muid="EF5252A80721B41F" description="Only require that the statistic is actually owned by the sim,&#xA;ignoring the statistic's level." Deprecated="False" filter="0" group="General" />
                            <TunableVariant type="None" name="score_spread_override" class="OptionalTunable" default="disabled" display="Score Spread Override" muid="E606D8348918C93D" description="If enabled this interval modifies the spread over which the score&#xA;should return.&#xA;&#xA;A score is typically between 0 and 1.  A score of 0 means&#xA;the sim will never be selected, the higher a score is the more&#xA;likely that sim is to be selected.&#xA;&#xA;The score for statistic scoring is based on how close to the &quot;ideal&quot; value&#xA;the value for the specified statistic for a sim is.  It's a 1 if it's&#xA;that exact score.  It's *near* 0  (though not exactly, because the&#xA;general idea behind this filter to make it a weight not elimination)&#xA;as it gets farther from the ideal value and closer to the min or max value.&#xA;(Note: it uses min_value -1 and max_value + 1 as the min/max values to avoid&#xA;hitting 0.  However the min/max values don't have to be accurate,&#xA;so you can hit 0 by adjusting the tuned min/max values here as desired.)&#xA;&#xA;So if you have it tuned as:&#xA;min value: 0&#xA;max value: 5&#xA;ideal value: 5&#xA;The resulting score for each integer will be:&#xA;0 gives you: 0.17&#xA;1 gives you: 0.33&#xA;2 gives you: 0.5&#xA;3 gives you: 0.66&#xA;4 gives you: 0.83&#xA;5 gives you: 1&#xA;&#xA;The minimum filter score tuning is simply a floor.  Regardless of how low&#xA;the calculated score is, if it's lower than the minimum filter score&#xA;the result will simply be replaced with the minimum filter score.&#xA;&#xA;So adding a minimum filter score of 0.5 simply results in:&#xA;0 gives you: 0.5&#xA;1 gives you: 0.5&#xA;2 gives you: 0.5&#xA;3 gives you: 0.66&#xA;4 gives you: 0.83&#xA;5 gives you: 1&#xA;&#xA;This optional tunable modifies the spread over which the score&#xA;is returned (and gets rid of the -1/+1 padding as you can specify&#xA;the padding in the actual range.)  So instead of returning from 0 to 1, &#xA;where 0 is as far away from the ideal as possible, and 1 is at the &#xA;ideal value, it'll return the lower value when the statistic is as &#xA;far away from the ideal value as possible, and the closer you get to the &#xA;ideal value, the closer the return value will be to the maximum value.&#xA;&#xA;So adding a score spread override of 0.5 to 1.0, (instead of a&#xA;minimum filter score) results in:&#xA;0 gives you: 0.5&#xA;1 gives you: 0.6&#xA;2 gives you: 0.7&#xA;3 gives you: 0.8&#xA;4 gives you: 0.9&#xA;5 gives you: 1&#xA;&#xA;Note:  Since, as stated, it's perfectly possible to lie about the&#xA;min/max value, this result is also possible to achieve with clever&#xA;tuning:&#xA;min value of -4&#xA;max value of 5&#xA;ideal value of 5" Deprecated="False" filter="0" group="General">
                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="593017959F97B136" />
                                <TunableTuple name="enabled" class="TunableInterval" display="Enabled" muid="455D93812F5C8B02" description="A tunable interval between lower_bound and upper_bound." Deprecated="False" filter="0" group="General">
                                    <Tunable type="float" name="lower_bound" class="TunableRange" default="0.0" display="Lower Bound" muid="958202FD11D7090B" min="0" max="None" description="The lower bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                    <Tunable type="float" name="upper_bound" class="TunableRange" default="1.0" display="Upper Bound" muid="B2BC486262026667" min="None" max="None" description="The upper bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                </TunableTuple>
                            </TunableVariant>
                            <Tunable type="statistic" name="statistic" class="TunableReference" display="Statistic" muid="3453FE00F015B6F2" description="The statistic the range applies to." allow_none="False" Deprecated="False" filter="0" group="General" restrict="Statistic" />
                        </TunableTuple>
                        <TunableTuple name="trait" class="TunableTraitFilterTerm" display="Trait" muid="776761DE40DD8517" description="A term for filtering Sims based on a trait they may or may not have.&#xA;&#xA;New and existing Sims can be conformed by either granting or removing the&#xA;specified trait." Deprecated="False" filter="0" group="General">
                            <Tunable type="bool" name="ignore_if_wrong_pack" class="Tunable" default="False" display="Ignore If Wrong Pack" muid="4894D28A264A0D54" description="If checked then we will ignore this filter term if the specified&#xA;trait isn't found.  (.e.g. trait is from uninstalled pack.)&#xA;For example we'd *like* to pick sims that use umbrellas.  But if &#xA;Seasons isn't installed it's ok to use sims that don't." Deprecated="False" filter="0" group="General" />
                            <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="FEACB66B3564A34" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                            <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="71F745BAB5A2AF98" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                            <Tunable type="trait" name="trait" class="TunableReference" display="Trait" muid="E9E66817F564BBD" description="The trait to filter against." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                        </TunableTuple>
                        <TunableTuple name="university" class="TunableUniversityMajorFilterTerm" display="University" muid="5D4BF99A66DEC3C6" description="A term for filtering Sims going to university/in a specific Major.&#xA;&#xA;To pass, Sims must have specified major as their current major and still be&#xA;enrolled in at least one class." Deprecated="False" filter="0" group="General">
                            <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="BF50CF8390D6A79A" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                            <TunableVariant type="None" name="major" class="TunableVariant" default="any_majors" display="Major" muid="3D38306D0F6273E8" description="Which major(s) the sim must be pursuing." Deprecated="False" filter="0" group="General">
                                <TunableTuple name="any_majors" class="Tunable_AnyMajors" display="Any Majors" muid="32FCE930A5F51AF8" description="To pass, sim must currently be enrolled in any major. " Deprecated="False" filter="0" group="General">
                                    <Tunable type="bool" name="conform_using_skills" class="Tunable" default="False" display="Conform Using Skills" muid="B62DC22C572D5DB3" description="If checked then when we conform a Sim using this filter term&#xA;we will use the Sims skills to choose which Major to enroll &#xA;them in. If unchecked we will pick one randomly." Deprecated="False" filter="0" group="General" />
                                </TunableTuple>
                                <TunableTuple name="specific_majors" class="Tunable_SpecificMajors" display="Specific Majors" muid="932692EF54EC2389" description="To pass, the sim must currently be enrolled in 1 of the specified majors." Deprecated="False" filter="0" group="General">
                                    <TunableList name="_majors" class="TunableList" display="Majors" muid="40A6CD24ECF33ACB" min="1" description="Sim must be currently enrolled in one of the specified majors." Deprecated="False" filter="0" group="General">
                                        <Tunable type="university_major" class="TunableReference" muid="81834B46866E3972" description="                    " allow_none="False" Deprecated="False" filter="0" group="General" />
                                    </TunableList>
                                </TunableTuple>
                            </TunableVariant>
                            <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="6B4BB10555C47937" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                            <TunableVariant type="None" name="university" class="OptionalTunable" default="disabled" display="University" muid="2D3069045EF54012" description="University in which the sim must be enrolled.&#xA;If Disabled, sim can be in any university." Deprecated="False" filter="0" group="General">
                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="421EF5ABCA347087" />
                                <Tunable type="university" name="enabled" class="TunableReference" display="Enabled" muid="B686678A3E022FFE" description="The university to filter for." allow_none="False" Deprecated="False" filter="0" group="General" />
                            </TunableVariant>
                        </TunableTuple>
                    </TunableVariant>
                    <TunableEnum type="UniversityHousingRoommateRequirementCriteria" name="Requirement Criteria" class="TunableEnumEntry" default="NONE" display="Requirement Criteria" muid="CA43F261A4C56014" static_entries="sims-university-university_enums.UniversityHousingRoommateRequirementCriteria" Deprecated="False" filter="0" group="General" pack_safe="True" />
                </TunableTuple>
            </TunableList>

            <TunableTuple name="UNIVERSITY_HOUSING_VALIDATION_CADENCE" class="TunableTimeSpan" display="University Housing Validation Cadence" muid="C21742AFFC540F01" description="When a university housing venue is loaded, the timespan between updates&#xA;where we validate household sims to decide if they need to be kicked out." Deprecated="False" filter="0" group="General">
                <Tunable type="int" name="days" class="TunableRange" default="0" display="Days" muid="7B287A527C9B9A49" min="0" max="None" description="Number of days" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                <Tunable type="int" name="hours" class="TunableRange" default="0" display="Hours" muid="101AB85A3C2078" min="0" max="23" description="Number of hours" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                <Tunable type="int" name="minutes" class="TunableRange" default="0" display="Minutes" muid="7B6724022342A0E" min="0" max="59" description="Number of minutes" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
            </TunableTuple>

            <Tunable type="venue" name="UNIVERSITY_HOUSING_VENUE_TUNING" class="TunableReference" display="University Housing Venue Tuning" muid="4351622111C617A1" description="The university housing venue." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
        </Class>
    </Module>

    <VersionHistory>
        <ActionList>
            <Action type="kRename" old_muid="69E5DEB77A6939AC" new_muid="F6F8844CB63780B4" />
            <Action type="kRename" old_muid="B286AD13BB2C6A9F" new_muid="98EA1C44C634BA6D" />
            <Action type="kRemove" old_muid="D200413701FCD966" />
        </ActionList>

        <ActionList>
            <Action type="kRemove" old_muid="4E1E3B4F5417C918" />
        </ActionList>

        <ActionList>
            <Action type="kRename" old_muid="15D37210F7B1538B" new_muid="4351622111C617A1" />
        </ActionList>
    </VersionHistory>
</TuningRoot>