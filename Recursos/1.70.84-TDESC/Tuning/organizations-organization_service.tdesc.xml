<?xml version="1.0" encoding="iso-8859-1"?>

<TuningRoot>
    <Module name="organizations.organization_service" muid="79558E4A52C6462F">
        <Class name="OrganizationService" muid="B36053B5A0CE0364">
            <TunableList name="ADDITIONAL_FILTER_TERMS_ON_GENERATING_NEW_MEMBERS" class="TunableList" display="Additional Filter Terms On Generating New Members" muid="F5D594C2747B8CEB" description="A list of additional filter terms to apply on sims that are considered&#xA;for membership in any organization. " Deprecated="False" filter="0" group="General">
                <TunableVariant type="None" class="FilterTermVariant" default="skill" muid="ABD083F94B48DC93" Deprecated="False" filter="0" group="General">
                    <TunableTuple name="age" class="TunableAgeFilterTerm" display="Age" muid="9E2BE0E181AD551B" description="A term for filtering Sims based on their age. The score is modified based on&#xA;the tuned ideal value for the age. If you are looking for age variation, please&#xA;choose &quot;Age Variant&quot; instead.&#xA;&#xA;Only new Sims may be conformed by creating them of a valid age. Existing&#xA;Sims may not be conformed." Deprecated="False" filter="0" group="General">
                        <TunableEnum type="Age" name="ideal_value" class="TunableEnumEntry" default="ADULT" display="Ideal Value" muid="3BA36EC4B09DB5B6" static_entries="sims-sim_info_types.Age" description="The ideal age of the sim we are filtering for." Deprecated="False" filter="0" group="General" />
                        <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="3D1982BE215D08DC" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                        <TunableEnum type="Age" name="max_value" class="TunableEnumEntry" default="ELDER" display="Max Value" muid="7824AA8F0F8F958D" static_entries="sims-sim_info_types.Age" description="The maximum age of the sim we are filtering for." Deprecated="False" filter="0" group="General" />
                        <TunableEnum type="Age" name="min_value" class="TunableEnumEntry" default="BABY" display="Min Value" muid="FCC9A734CD6C2271" static_entries="sims-sim_info_types.Age" description="The minimum age of the sim we are filtering for." Deprecated="False" filter="0" group="General" />
                        <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="46771D8EF9E4FB80" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                    </TunableTuple>
                    <TunableTuple name="age_progress" class="TunableAgeProgressFilterTerm" display="Age Progress" muid="BA3D5361D9CAF73A" description="A term for filtering Sims based on their age progress. The score is modified&#xA;based on the tuned ideal value.&#xA;&#xA;New and existing Sims can be conformed by advancing their age progress,&#xA;within the tuned bounds." Deprecated="False" filter="0" group="General">
                        <Tunable type="float" name="ideal_value" class="Tunable" default="5" display="Ideal Value" muid="AB2DEB8931590E41" description="Ideal value of age progress." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                        <Tunable type="float" name="max_value" class="Tunable" default="10" display="Max Value" muid="B19AD79F9759889C" description="Maximum value of age progress." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                        <Tunable type="float" name="min_value" class="Tunable" default="0" display="Min Value" muid="ED18E19DF60B467F" description="Minimum value of age progress." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                        <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="403AF0CB8299F00A" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                    </TunableTuple>
                    <TunableTuple name="age_progress_percentage" class="TunableAgeProgressPercentageFilterTerm" display="Age Progress Percentage" muid="A093FCAAABECD3BA" description="A term for filtering Sims based on their age progress as a percentage. The &#xA;score is modified based on the tuned ideal value. Age progress values over&#xA;100% are capped at 100% for the purposes of evaluating a sim's age progress&#xA;for this filter.&#xA;&#xA;Sims may not be conformed to match this filter term." Deprecated="False" filter="0" group="General">
                        <Tunable type="int" name="ideal_value" class="Tunable" default="50" display="Ideal Value" muid="50B935D3E22C0C69" description="Ideal value of age progress as a percentage." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                        <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="AB31F861CC621025" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                        <TunableTuple name="value_range" class="TunableInterval" display="Value Range" muid="508B36ED65092C86" description="The minimum and maximum age progress percentage." Deprecated="False" filter="0" group="General">
                            <Tunable type="int" name="lower_bound" class="TunableRange" default="0" display="Lower Bound" muid="A02F1AD930E6EBF6" min="0" max="None" description="The lower bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                            <Tunable type="int" name="upper_bound" class="TunableRange" default="100" display="Upper Bound" muid="9FA70FE0C07EDC77" min="None" max="100" description="The upper bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                        </TunableTuple>
                    </TunableTuple>
                    <TunableTuple name="age_variant" class="TunableAgeVariationFilterTerm" display="Age Variant" muid="57181FB9A91D82C8" description="A term for filtering Sims based on a list of allowed ages.&#xA;&#xA;Only new Sims may be conformed by creating them of a valid age. Existing&#xA;Sims may not be conformed." Deprecated="False" filter="0" group="General">
                        <TunableList name="allowed_ages" class="TunableEnumSet" display="Allowed Ages" muid="152CEE0D13717DCF" description="The allowed ages we're filtering for." Deprecated="False" filter="0" group="General" unique_entries="true">
                            <TunableEnum type="Age" class="TunableEnumEntry" default="ADULT" muid="72126E15807AF949" static_entries="sims-sim_info_types.Age" Deprecated="False" filter="0" group="General" />
                        </TunableList>
                        <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="EE2F39A0DC1DD0F8" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                    </TunableTuple>
                    <TunableTuple name="can_age_up" class="TunableAgeUpFilterTerm" display="Can Age Up" muid="2ED23E63E8197AF0" description="A term for filtering Sims that may or may not age up at this time. Note:&#xA;This probably does not do what you want it to do. It simply checks if the&#xA;sim is not an elder and that aging is not disabled.&#xA;&#xA;Sims may not be conformed to match this filter term." Deprecated="False" filter="0" group="General">
                        <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="142BB191E64C80FD" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                        <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="397CAB862D8E9AB9" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                    </TunableTuple>
                    <TunableTuple name="can_be_outside" class="TunableCanBeOutside" display="Can Be Outside" muid="5D4B7355288A13DB" description="A term for filtering Sims that may or may not be outside.&#xA;Restriction is implemented only for vampires. It needs to be updated &#xA;if we add other occults or systems that resctrict it.&#xA;&#xA;Normal Sim will always pass this filter. Certain Sim, e.g Vampire, &#xA;cannot be outside on daytime except daywalker vampire.&#xA;&#xA;New and existing Sims may be conformed to match this filter term by&#xA;granting or removing vampire trait and daywalker perk." Deprecated="False" filter="0" group="General">
                        <Tunable type="bool" name="at_anytime" class="Tunable" default="False" display="At Anytime" muid="5EF121E1DAE44DE2" description="If enabled, the Sim needs to be able to go outside during day and night.&#xA;Otherwise, it needs to be able to go outside at current time or &#xA;during certain period of time." Deprecated="False" filter="0" group="General" />
                        <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="8832B386F2DB0B07" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                        <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="31D5C08E1F0FF2AB" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                    </TunableTuple>
                    <TunableTuple name="career" class="TunableCareerFilterTerm" display="Career" muid="9FD9B5239AE5A748" description="A term for filtering Sims in a specific career.&#xA;&#xA;New and existing Sims can be conformed by granting them the career, provided&#xA;any availability tests pass." Deprecated="False" filter="0" group="General">
                        <TunableVariant type="None" name="career" class="TunableVariant" default="from_explicit_type" display="Career" muid="D4E5B543303411F0" description="Define the career that this filter term applies to." Deprecated="False" filter="0" group="General">
                            <TunableTuple name="from_category" class="Tunable_CareerTypeFromCategory" display="From Category" muid="52F261156A061C90" description="The filter term applies to the career, if any, of the specified category&#xA;for the Sim." Deprecated="False" filter="0" group="General">
                                <TunableEnum type="CareerCategory" name="career_category" class="TunableEnumEntry" default="Work" display="Career Category" muid="63E7782630B0BEB7" static_entries="careers-career_enums.CareerCategory" description="The career category that this filter term applies to. Sims may&#xA;be conformed if we want to remove the career, i.e. the term is&#xA;inverted, but may not be conformed to join a career." Deprecated="False" filter="0" group="General" />
                            </TunableTuple>
                            <TunableTuple name="from_explicit_type" class="Tunable_CareerTypeExplicit" display="From Explicit Type" muid="1604FF294A3344BC" description="The filter term applies to a specific career." Deprecated="False" filter="0" group="General">
                                <Tunable type="career" name="career_type" class="TunableReference" display="Career Type" muid="ABA951F4AB448E71" description="The career that this term applies to. Sims that are conformed to the&#xA;filter will enter the career at its entry level." allow_none="False" Deprecated="False" filter="0" group="General" />
                            </TunableTuple>
                        </TunableVariant>
                        <TunableVariant type="None" name="career_level" class="OptionalTunable" default="disabled" display="Career Level" muid="7F09CBBD5FEF8BD4" description="If enabled we add an additional requirement of the user level of&#xA;the career to the requirements." Deprecated="False" filter="0" group="General">
                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="C41133EA2A058D5C" />
                            <TunableVariant type="None" name="enabled" class="TunableVariant" default="career_level_reference" display="Enabled" muid="CC250E6008D34585" Deprecated="False" filter="0" group="General">
                                <TunableTuple name="career_level_reference" class="Tunable_CareerLevelReferenceFilter" display="Career Level Reference" muid="DD23D0E34696C29B" description="Filters sims based on a list of CareerLevel references." Deprecated="False" filter="0" group="General">
                                    <TunableList name="career_level_references" class="TunableList" display="Career Level References" muid="9FFD38642713426B" description="A list of CareerLevels. One will be randomly chosen&#xA;when conforming sims." Deprecated="False" filter="0" group="General">
                                        <Tunable type="career_level" class="TunableReference" muid="E83DF863D3EDDB9F" description="A reference to a CareerLevel to join the career at.&#xA;The CareerLevel must belong to the career tuned above." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                    </TunableList>
                                </TunableTuple>
                                <TunableTuple name="career_user_level" class="Tunable_CareerUserLevelFilter" display="Career User Level" muid="71640A8B08911904" description="Filters sims based on a user career level." Deprecated="False" filter="0" group="General">
                                    <Tunable type="int" name="career_user_level" class="TunableRange" default="1" display="Career User Level" muid="2F37F254C87A4E77" min="1" max="None" description="A user level. If this level cooresponds to an advanced branch&#xA;and we conform or generate a sim with this filter and the career &#xA;has branches a branch will be chosen at random. If this behavior&#xA;is not desired, use Career Level Reference instead." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                </TunableTuple>
                            </TunableVariant>
                        </TunableVariant>
                        <TunableVariant type="None" name="career_location" class="TunableVariant" default="none" display="Career Location" muid="43A06878D12A236F" description="Define how important career location is for this filter. Leave None&#xA;if location is not important." Deprecated="False" filter="0" group="General">
                            <Tunable name="none" class="TunableExistance" display="None" muid="16F454568FA417E2" />
                            <TunableTuple name="on_active_lot" class="Tunable_CareerLocationFilterActiveLot" display="On Active Lot" muid="5FF6511CAE9C3F30" description="Any Sim must be in the specified career and hired by the venue on the&#xA;active lot in order to match the filter. Sims that are conformed by&#xA;joining a career will be hired by the venue on the active lot." Deprecated="False" filter="0" group="General" />
                        </TunableVariant>
                        <TunableVariant type="None" name="career_schedule" class="TunableVariant" default="none" display="Career Schedule" muid="730F958DF6A54FF3" description="Define how scheduling affects this filter. Leave None if schedule is&#xA;not important." Deprecated="False" filter="0" group="General">
                            <TunableTuple name="available_now" class="Tunable_CareerScheduleFilterAvailableNow" display="Available Now" muid="73AA2661FCCD3A2D" description="Any Sim must be in the specified career and must be scheduled to work at&#xA;the time of the filter request. If they are not, their career will not&#xA;be conformed to match the filter." Deprecated="False" filter="0" group="General" />
                            <Tunable name="none" class="TunableExistance" display="None" muid="A9A945315E4996C6" />
                        </TunableVariant>
                        <Tunable type="bool" name="career_seniority" class="Tunable" default="True" display="Career Seniority" muid="A79719B177C8FAD7" description="If enabled, Sims that have been in the career for longer will score&#xA;higher than Sims that have been in the career for less time." Deprecated="False" filter="0" group="General" />
                        <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="2F293341928204A4" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                        <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="3DC88FDFED1BFC07" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                    </TunableTuple>
                    <TunableTuple name="cas_tags" class="TunableCasTagsFilterTerm" display="Cas Tags" muid="860FD7C88A536EE0" description="A term for filtering Sims based on their CAS tags.&#xA;&#xA;Only new Sims may be conformed by creating them with valid CAS tags.&#xA;Existing Sims may not be conformed." Deprecated="False" filter="0" group="General">
                        <TunableList name="cas_tags" class="TunableSet" display="Cas Tags" muid="4911F0202D8278CD" description="Sims must have at least one of these tags on their parts for the&#xA;filter to pass." Deprecated="False" filter="0" group="General" unique_entries="true">
                            <TunableEnum type="Tag" class="TunableEnumEntry" default="INVALID" muid="671508138065514A" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" Deprecated="False" filter="0" group="General" />
                        </TunableList>
                        <TunableVariant type="None" name="creation_cas_tags" class="OptionalTunable" default="same_as_cas_tags" display="Creation Cas Tags" muid="C066CC8F80BD8D33" description="The tags to use when creating a new Sim with this filter term.&#xA;&#xA;This should be same_as_cas_tags for almost all cases. Note that&#xA;custom cas tags are supplied, the Sim must still have Cas Tags&#xA;for sim creation to succeed." Deprecated="False" filter="0" group="General">
                            <TunableList name="custom" class="TunableTags" display="Custom" muid="C3F2BAC56F4D5DC1" min="1" Deprecated="False" filter="0" group="General" unique_entries="true">
                                <TunableEnum type="Tag" class="TunableEnumEntry" default="INVALID" muid="A1D6EF7202FEC859" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" Deprecated="False" filter="0" group="General" invalid_entries="INVALID" />
                            </TunableList>
                            <Tunable name="same_as_cas_tags" class="TunableExistance" display="Same As Cas Tags" muid="4F0C2E4A6DBCD579" />
                        </TunableVariant>
                        <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="D767A476B06D00E2" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                    </TunableTuple>
                    <TunableTuple name="gender" class="TunableGenderFilterTerm" display="Gender" muid="7BCAAEE1F91D4041" description="A term for filtering Sims base on their gender.&#xA;&#xA;Only new Sims may be conformed by creating them of a valid gender. Existing&#xA;Sims may not be conformed." Deprecated="False" filter="0" group="General">
                        <TunableEnum type="Gender" name="gender" class="TunableEnumEntry" default="MALE" display="Gender" muid="577F2BEF972A6C04" static_entries="sims-sim_info_types.Gender" description="The required gender of the sim we are filtering for." Deprecated="False" filter="0" group="General" />
                        <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="99AB4D106849D1F7" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                    </TunableTuple>
                    <TunableTuple name="gender_preference" class="TunableGenderPreferenceFilterTerm" display="Gender Preference" muid="15866AD24F65257D" description="A filter term for filtering sims that fit the requesting sim info's gender &#xA;preference." Deprecated="False" filter="0" group="General">
                        <Tunable type="bool" name="fallback_if_no_preference_is_set" class="Tunable" default="False" display="Fallback If No Preference Is Set" muid="78D957656CE90346" description="If checked then if no gender preference is set then fallback." Deprecated="False" filter="0" group="General" />
                        <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="74992EFE436BA07D" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                    </TunableTuple>
                    <TunableTuple name="gender_relative" class="TunableGenderRelativeFilterTerm" display="Gender Relative" muid="811A667B0055F20A" description="A term for filtering Sims base on their gender relative to target sims&#xA;gender.&#xA;&#xA;Only new Sims may be conformed by creating them of a valid gender. Existing&#xA;Sims may not be conformed." Deprecated="False" filter="0" group="General">
                        <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="453CD073EA0F0D9E" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                        <Tunable type="bool" name="same" class="Tunable" default="False" display="Same" muid="A4B4F6C93A4A4AE4" description="If checked then we will make sure that the sim is the same gender&#xA;as the target sim.  Otherwise the opposite gender" Deprecated="False" filter="0" group="General" />
                    </TunableTuple>
                    <TunableTuple name="genealogy" class="TunableGenealogyFilterTerm" display="Genealogy" muid="F0CC17F94D3E2DF5" description="A term for filtering Sims based on their genealogy.&#xA;&#xA;New and existing Sims can be conformed by propagating genealogy relations." Deprecated="False" filter="0" group="General">
                        <TunableEnum type="FamilyRelationshipIndex" name="family_relationship" class="TunableEnumEntry" default="MOTHER" display="Family Relationship" muid="CE65ECF9D72EA577" static_entries="sims-genealogy_tracker.FamilyRelationshipIndex" description="This is the family relationship between the requesting sim and the&#xA;target sim." Deprecated="False" filter="0" group="General" />
                        <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="5C4D0B08F0E5408C" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                        <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="9B22904322D9D7F3" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                        <Tunable type="bool" name="swap_direction" class="Tunable" default="False" display="Swap Direction" muid="5FF5E53F10F558E0" description="This is the direction between the requesting sim and the target sim&#xA;so that the genealogy is checked between the sim info and the&#xA;requesting sim info." Deprecated="False" filter="0" group="General" />
                    </TunableTuple>
                    <TunableTuple name="has_home_zone" class="TunableHasHomeZoneFilterTerm" display="Has Home Zone" muid="3A60E6F128E23F30" description="A term for filtering Sims that may or may not have a home zone.&#xA;&#xA;Sims may not be conformed to match this filter term." Deprecated="False" filter="0" group="General">
                        <Tunable type="bool" name="include_vacation_home" class="Tunable" default="False" display="Include Vacation Home" muid="CD5A48A80A5E0C9C" description="If enabled and the Sim is on a vacation at a zone, this will return&#xA;True." Deprecated="False" filter="0" group="General" />
                        <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="40E67ACA55945631" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                        <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="C92F13FB15CD5422" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                    </TunableTuple>
                    <TunableTuple name="has_household_ever_been_played" class="TunableHasHouseholdEverBeenPlayedFilterTerm" display="Has Household Ever Been Played" muid="F35E3545391FD8DC" description="A term for filtering Sims that may or may not have ever been played by the&#xA;user.&#xA;&#xA;Sims may not be conformed to match this filter term." Deprecated="False" filter="0" group="General">
                        <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="BBE1F102DF840964" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                        <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="6BF37EA91BD2AA4A" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                    </TunableTuple>
                    <TunableTuple name="household_composition" class="TunableHouseholdCompositionFilterTerm" display="Household Composition" muid="EB1F673CB88744EE" description="A term for filtering Sims based on the composition of their household." Deprecated="False" filter="0" group="General">
                        <TunableVariant type="None" name="age" class="OptionalTunable" default="Dont_Care" display="Age" muid="7C7D12094AC999B4" description="Define an age condition for Sims in the household." Deprecated="False" filter="0" group="General">
                            <Tunable name="Dont_Care" class="TunableExistance" display="Dont Care" muid="2516A64742E9C81" />
                            <TunableTuple name="enabled" class="TunableAgeFilterTerm" display="Enabled" muid="521289B6EC8DA504" description="A term for filtering Sims based on their age. The score is modified based on&#xA;the tuned ideal value for the age. If you are looking for age variation, please&#xA;choose &quot;Age Variant&quot; instead.&#xA;&#xA;Only new Sims may be conformed by creating them of a valid age. Existing&#xA;Sims may not be conformed." Deprecated="False" filter="0" group="General">
                                <TunableEnum type="Age" name="ideal_value" class="TunableEnumEntry" default="ADULT" display="Ideal Value" muid="13AA1D37A83477A8" static_entries="sims-sim_info_types.Age" description="The ideal age of the sim we are filtering for." Deprecated="False" filter="0" group="General" />
                                <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="D037AFF3E5FC10CE" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                                <TunableEnum type="Age" name="max_value" class="TunableEnumEntry" default="ELDER" display="Max Value" muid="6C72B9A2372F145E" static_entries="sims-sim_info_types.Age" description="The maximum age of the sim we are filtering for." Deprecated="False" filter="0" group="General" />
                                <TunableEnum type="Age" name="min_value" class="TunableEnumEntry" default="BABY" display="Min Value" muid="C072FCA5A84993A0" static_entries="sims-sim_info_types.Age" description="The minimum age of the sim we are filtering for." Deprecated="False" filter="0" group="General" />
                                <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="FAB0D384B52923EB" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                            </TunableTuple>
                        </TunableVariant>
                        <TunableVariant type="None" name="gender" class="OptionalTunable" default="Dont_Care" display="Gender" muid="88E8B1790F171FCF" description="Define a gender condition for Sims in the household." Deprecated="False" filter="0" group="General">
                            <Tunable name="Dont_Care" class="TunableExistance" display="Dont Care" muid="D6D9392D3BF9921E" />
                            <TunableTuple name="enabled" class="TunableGenderFilterTerm" display="Enabled" muid="F92E3FD4A9678F9E" description="A term for filtering Sims base on their gender.&#xA;&#xA;Only new Sims may be conformed by creating them of a valid gender. Existing&#xA;Sims may not be conformed." Deprecated="False" filter="0" group="General">
                                <TunableEnum type="Gender" name="gender" class="TunableEnumEntry" default="MALE" display="Gender" muid="1B4199282740036" static_entries="sims-sim_info_types.Gender" description="The required gender of the sim we are filtering for." Deprecated="False" filter="0" group="General" />
                                <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="9B9CA541249882E3" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                            </TunableTuple>
                        </TunableVariant>
                        <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="B420F22D8B6C06AD" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                        <TunableVariant type="None" name="species" class="OptionalTunable" default="Dont_Care" display="Species" muid="47B21560153BADD7" description="Define a species condition for Sims in the household." Deprecated="False" filter="0" group="General">
                            <Tunable name="Dont_Care" class="TunableExistance" display="Dont Care" muid="B6DF230C7D33C116" />
                            <TunableTuple name="enabled" class="TunableSpeciesFilterTerm" display="Enabled" muid="40F53369F6374C84" description="A term for filtering Sim based on their species.&#xA;&#xA;Only new Sims may be conformed by creating them with a valid species.&#xA;Existing Sims may not be conformed." Deprecated="False" filter="0" group="General">
                                <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="822211BDDFC2856E" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                                <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="AB83F452715EE21A" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                <TunableEnum type="Species" name="species" class="TunableEnumEntry" default="HUMAN" display="Species" muid="4D5AFD8C58334703" static_entries="sims-sim_info_types.Species" description="The species to filter for." Deprecated="False" filter="0" group="General" invalid_entries="INVALID" />
                            </TunableTuple>
                        </TunableVariant>
                        <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="4DC5F3A34BB4BD35" description="Define the required number of Sims required in order to satisfy the&#xA;term." Deprecated="False" filter="0" group="General">
                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="57FA2AF82C01DD7A" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                            <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="9B406A82B185954F" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                        </TunableTuple>
                    </TunableTuple>
                    <TunableTuple name="household_value" class="TunableHouseholdValueFilterTerm" display="Household Value" muid="2B8C41178FA84D03" description="A term for filtering Sims based on their household value.&#xA;&#xA;We intentionally do not conform Sims for this filter term. The only thing&#xA;we have safe control over here is household funds, and this isn't player-&#xA;facing, so it wouldn't be obvious if a Sim was conformed. A player will&#xA;really only judge NPC wealth by property ownership and clothing." Deprecated="False" filter="0" group="General">
                        <TunableTuple name="household_value" class="TunableInterval" display="Household Value" muid="8FCF31A187C36124" description="An interval the Sim's household value must be between in order to&#xA;conform to this filter term." Deprecated="False" filter="0" group="General">
                            <Tunable type="int" name="lower_bound" class="TunableRange" default="0" display="Lower Bound" muid="ADE2446AF6CC987" min="0" max="None" description="The lower bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                            <Tunable type="int" name="upper_bound" class="TunableRange" default="1000" display="Upper Bound" muid="584E3D43F029F234" min="None" max="None" description="The upper bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                        </TunableTuple>
                        <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="8EB37E163951E83A" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                    </TunableTuple>
                    <TunableTuple name="in_club" class="TunableInClubFilterTerm" display="In Club" muid="F43A6537693F6F9C" description="A term for filtering Sims based on if they are in a club or not." Deprecated="False" filter="0" group="General">
                        <Tunable type="bool" name="check_if_requesting_sim_can_join" class="Tunable" default="False" display="Check If Requesting Sim Can Join" muid="2D9127368D46587E" description="If checked then we will make sure that the requesting Sim can join&#xA;one of the clubs of this Sim." Deprecated="False" filter="0" group="General" />
                        <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="3B5FD4558FCD6E33" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                        <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="40AFB5F4269491C" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                    </TunableTuple>
                    <TunableTuple name="in_compatible_region" class="TunableInCompatibleRegionFilterTerm" display="In Compatible Region" muid="5A31F4824064689F" description="A term for filtering Sims that may or may not be in the Same region, thus&#xA;gating their availability to be in certain situations.&#xA;&#xA;Sims may not be conformed to match this filter term." Deprecated="False" filter="0" group="General">
                        <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="3CF542DBF1EC49FD" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                        <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="A2227C449D4690DD" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                    </TunableTuple>
                    <TunableTuple name="in_family" class="TunableInFamilyFilterTerm" display="In Family" muid="730B6DCCC3CB6370" description="A term for filtering Sims living in the same household.&#xA;&#xA;Sims may not be conformed to match this filter term." Deprecated="False" filter="0" group="General">
                        <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="FA3A75C7FFEBE422" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                        <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="57C812D6844854CD" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                    </TunableTuple>
                    <TunableTuple name="in_same_club" class="TunableInSameClubFilterTerm" display="In Same Club" muid="B8B6AA39BD18EC1E" description="A term for filtering if the Sim and the requesting sim info are in the&#xA;same club." Deprecated="False" filter="0" group="General">
                        <Tunable type="bool" name="check_supplied_club" class="Tunable" default="False" display="Check Supplied Club" muid="61F61116307B1BC2" description="If checked then we will check if the Sim is in a specific supplied&#xA;club.  Check with your GPE before using this option because it will&#xA;only work when the data is properly supplied by gameplay." Deprecated="False" filter="0" group="General" />
                        <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="C5C6C92D874C2CED" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                        <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="A5DCB86A7A5AF1A7" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                    </TunableTuple>
                    <TunableTuple name="is_busy" class="TunableIsBusyFilterTerm" display="Is Busy" muid="5DE41C840E6AEFBD" description="A term for filtering Sims that might be busy at the requested times, based&#xA;on their work schedule.&#xA;&#xA;Sims may not be conformed to match this filter term." Deprecated="False" filter="0" group="General">
                        <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="D94057577F01B28E" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                        <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="3F4BD4263BB2586B" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                        <TunableVariant type="None" name="override" class="TunableVariant" default="no_override" display="Override" muid="F0F0AF9883B44A35" description="Determine a set of Sims that is never considered busy." Deprecated="False" filter="0" group="General">
                            <Tunable name="no_override" class="TunableExistance" display="No Override" muid="C0F2E3303A400AEB" />
                            <Tunable name="npc_sims" class="TunableExistance" display="Npc Sims" muid="BBA39084B24D64F3" />
                            <Tunable name="selectable_sims" class="TunableExistance" display="Selectable Sims" muid="3D112BDD7137027C" />
                        </TunableVariant>
                    </TunableTuple>
                    <TunableTuple name="is_ghost" class="TunableIsGhostFilterTerm" display="Is Ghost" muid="EE93A1B7F378B973" description="A filter term for filtering Sims that may or may not be ghosts.&#xA;&#xA;Sims may not be conformed to match this filter term." Deprecated="False" filter="0" group="General">
                        <Tunable type="bool" name="always_pass_active_household_sims" class="Tunable" default="False" display="Always Pass Active Household Sims" muid="33C0BE2C699E9A84" description="If enabled then we will always pass sims in the active household,&#xA;whether they are a ghost or not." Deprecated="False" filter="0" group="General" />
                        <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="FCA62E97038E45FE" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                        <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="28622A73A7B5F9FC" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                        <Tunable type="bool" name="require_npc" class="Tunable" default="True" display="Require Npc" muid="D1743E3F5F2C3602" description="If enabled, the Sim needs to be an NPC. If not enabled, any Sim that&#xA;is a ghost will pass the filter." Deprecated="False" filter="0" group="General" />
                    </TunableTuple>
                    <TunableTuple name="is_hidden" class="TunableIsHiddenFilterTerm" display="Is Hidden" muid="53D490B51DFABFBB" description="A filter term to filter out hidden sims. " Deprecated="False" filter="0" group="General">
                        <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="10DE10492E46BC7F" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                        <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="B096EF629BF10FAF" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                    </TunableTuple>
                    <TunableTuple name="is_neighbor" class="TunableIsNeighborFilterTerm" display="Is Neighbor" muid="2B93870B2CD0B55C" description="A term for filtering Sims that are or are not neighbors. This is applicable&#xA;even to neighbor Sims that have not met (thus not having relationship bits).&#xA;&#xA;Sims may not be conformed to match this filter term." Deprecated="False" filter="0" group="General">
                        <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="7514EA5D38474D3A" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                        <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="81998F8FED557DB7" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                    </TunableTuple>
                    <TunableTuple name="is_not_incestuous" class="TunableIsNotIncestuousFilterTerm" display="Is Not Incestuous" muid="3598132067965FEF" description="A filter term to filtering out sims that would be incestuous with the&#xA;requesting sim info." Deprecated="False" filter="0" group="General">
                        <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="8D06F815A29C22EA" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                    </TunableTuple>
                    <TunableTuple name="is_roommate" class="TunableIsRoommateFilterTerm" display="Is Roommate" muid="F6D7004D274525A9" description="A term for filtering Sims that are roommmates&#xA;&#xA;Sims may not be conformed to match this filter term." Deprecated="False" filter="0" group="General">
                        <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="E118CCAA8019A798" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                        <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="31038956021F60E9" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                        <TunableVariant type="None" name="target_household" class="TunableVariant" default="any" display="Target Household" muid="5B0420FCEC68A687" description="Which household must the sim be a roommate of." Deprecated="False" filter="0" group="General">
                            <Tunable name="active_household" class="TunableExistance" display="Active Household" muid="460CAA9F48D3F12C" />
                            <Tunable name="any" class="TunableExistance" display="Any" muid="E3672B1FFDC546B4" />
                            <Tunable name="requesting_sim_household" class="TunableExistance" display="Requesting Sim Household" muid="2582964AAE950312" />
                            <Tunable name="specified_household" class="TunableExistance" display="Specified Household" muid="DCC13872A85D4CA4" />
                        </TunableVariant>
                    </TunableTuple>
                    <TunableTuple name="is_sim_sick" class="TunableSickSimFilterTerm" display="Is Sim Sick" muid="86B858F2CE04B778" description="A term for filtering Sims based on whether they are sick or not." Deprecated="False" filter="0" group="General">
                        <TunableVariant type="None" name="difficulty_range" class="OptionalTunable" default="disabled" display="Difficulty Range" muid="F237884B7DD0581B" description="Optionally define the difficulty rating range that is required&#xA;for the Sim's sickness." Deprecated="False" filter="0" group="General">
                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="873525DFBAF50B2E" />
                            <TunableTuple name="enabled" class="TunableInterval" display="Enabled" muid="FD9FE9736D0999F1" description="The difficulty rating range, this maps to 'difficulty_rating'&#xA;values in Sickness tuning." Deprecated="False" filter="0" group="General">
                                <Tunable type="float" name="lower_bound" class="TunableRange" default="0" display="Lower Bound" muid="3A30657C139258AA" min="0" max="None" description="The lower bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                <Tunable type="float" name="upper_bound" class="TunableRange" default="10" display="Upper Bound" muid="F3F6875E23E7672E" min="None" max="10" description="The upper bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                            </TunableTuple>
                        </TunableVariant>
                        <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="9D0ACB2C37FE9697" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                        <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="42BD69CA46B32790" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                    </TunableTuple>
                    <TunableTuple name="lives_in_region" class="TunableLivesInRegion" display="Lives In Region" muid="5DC0DD0D5839FB6D" description="A filter term for filtering if the Sims live in the specified region or not." Deprecated="False" filter="0" group="General">
                        <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="938C67070897BE5F" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                        <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="96256ECD14825119" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                        <TunableVariant type="None" name="region" class="OptionalTunable" default="current_region" display="Region" muid="5BFB0DEE46369770" description="Which region to test against." Deprecated="False" filter="0" group="General">
                            <Tunable name="current_region" class="TunableExistance" display="Current Region" muid="55421AF1EF229CBE" />
                            <TunableList name="specific_regions" class="TunableList" display="Specific Regions" muid="EF24E73FA97D6E5F" min="1" description="The list of valid regions." Deprecated="False" filter="0" group="General" unique_entries="true">
                                <Tunable type="region" class="TunableReference" muid="835887513EC211FD" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="Region" />
                            </TunableList>
                        </TunableVariant>
                        <TunableVariant type="None" name="street_for_creation" class="OptionalTunable" default="disabled" display="Street For Creation" muid="9E644A42C73C55D1" description="By default, Sims can only be created with this filter term if this&#xA;term is inverted (that is, the resulting Sim is a townie that lives&#xA;nowhere). Otherwise, the conform fails.&#xA;&#xA;If this is enabled and the term is not inverted, the Sim will&#xA;instead be assigned as townie living on the street." Deprecated="False" filter="0" group="General">
                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="6361FB2807745AC5" />
                            <Tunable type="worlddescription" name="enabled" class="TunableReference" display="Enabled" muid="BA477C12EC57CEC0" Deprecated="False" filter="0" group="General" pack_safe="True" />
                        </TunableVariant>
                    </TunableTuple>
                    <TunableTuple name="lives_on_apartment_floor" class="TunableLivesOnApartmentFloor" display="Lives On Apartment Floor" muid="A1D5089B6B735B80" description="A term for filtering Sims that live on the current apartment floor." Deprecated="False" filter="0" group="General">
                        <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="FF09FFC378FA13FF" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                        <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="37E0ECA36BE21B3E" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                    </TunableTuple>
                    <TunableTuple name="lives_on_street" class="TunableLivesOnStreetFilterTerm" display="Lives On Street" muid="2AF4075EF23C0242" description="A term for filtering Sims that live on the current street." Deprecated="False" filter="0" group="General">
                        <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="9E623F5F263B267D" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                        <TunableVariant type="None" name="match_criteria" class="TunableVariant" default="match_target_population" display="Match Criteria" muid="6C5FB6BEC77B9E29" description="Criteria for a Sim to match this filter. This tunable is ignored if&#xA;the filter is inverted. If inverted, the filter passes if the Sim&#xA;doesn't live on the street and fails if so.&#xA;&#xA;Match Target Population: If the number of townies living on the&#xA;tuned street meets or exceeds the street's tuned townie threshold,&#xA;then this filter term will be considered met.&#xA;&#xA;Must Match: The Sim chosen or created must live on the street." Deprecated="False" filter="0" group="General">
                            <TunableTuple name="match_target_population" class="TunableMatchTargetPopulation" display="Match Target Population" muid="56AD6A29C251FBC1" description="If the street is at its townie population cap, allow all Sims." Deprecated="False" filter="0" group="General" />
                            <TunableTuple name="must_match" class="TunableMustMatch" display="Must Match" muid="476BA21931324D30" description="Sims must live on the street." Deprecated="False" filter="0" group="General" />
                        </TunableVariant>
                        <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="AB3434C98A4E1BA2" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                        <TunableVariant type="None" name="street" class="OptionalTunable" default="current_street" display="Street" muid="B368585AC606DCB0" description="The street the Sim must live on." Deprecated="False" filter="0" group="General">
                            <Tunable name="current_street" class="TunableExistance" display="Current Street" muid="EBA06AB50BEF9717" />
                            <Tunable type="worlddescription" name="specific_street" class="TunableReference" display="Specific Street" muid="7BAD77E6A870FFC6" Deprecated="False" filter="0" group="General" />
                        </TunableVariant>
                    </TunableTuple>
                    <TunableTuple name="lives_together" class="TunableLivesTogetherFilterTerm" display="Lives Together" muid="99CFA0FD06007148" description="A term for filtering Sims who are in the same travel group or household.&#xA;&#xA;Sims may not be conformed to match this filter term." Deprecated="False" filter="0" group="General">
                        <Tunable type="bool" name="consider_household" class="Tunable" default="True" display="Consider Household" muid="3D4AEE5B8A820425" description="If enabled, this will succeed if the Sim is in the same household as&#xA;the requesting Sim." Deprecated="False" filter="0" group="General" />
                        <Tunable type="bool" name="consider_travel_group" class="Tunable" default="True" display="Consider Travel Group" muid="D1C2F963EDA924DF" description="If enabled, this will succeed if the Sim is in the same household as&#xA;the requesting Sim." Deprecated="False" filter="0" group="General" />
                        <Tunable type="bool" name="exclude_sims_in_both" class="Tunable" default="False" display="Exclude Sims In Both" muid="55463A93A9483AE3" description="If enabled, this will fail if the Sim is in both the same household&#xA;and travel group. If false, it doesn't care." Deprecated="False" filter="0" group="General" />
                        <Tunable type="bool" name="include_roommates_as_household" class="Tunable" default="True" display="Include Roommates As Household" muid="91FC1489FD028303" description="If enabled, roommates will be considered part of the same household." Deprecated="False" filter="0" group="General" />
                        <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="E748C087DAA4B18B" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                        <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="95D0716F45E708CD" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                    </TunableTuple>
                    <TunableTuple name="occult_ranked" class="TunableOccultRankFilterTerm" display="Occult Ranked" muid="42DC7EBD319AA39C" description="A term for filtering Sims based on ranked statistic.&#xA;&#xA;New and existing Sims can be conformed by granting them occult type and &#xA;XP to reach target rank." Deprecated="False" filter="0" group="General">
                        <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="999251F8EC1E92F5" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                        <TunableEnum type="OccultType" name="occult_type" class="TunableEnumEntry" default="HUMAN" display="Occult Type" muid="9E51348BA2F697FB" static_entries="sims-occult-occult_enums.OccultType" description="The occult type that this entry applies to." Deprecated="False" filter="0" group="General" />
                        <TunableTuple name="rank_values" class="TunableInterval" display="Rank Values" muid="85845A9FDBF37D03" description="An interval of the Sim rank. Rank must be between the interval &#xA;in order to pass the filter term. We set lower and upper rank interval &#xA;so then Sim that is too weak or too strong will not pass the filter." Deprecated="False" filter="0" group="General">
                            <Tunable type="int" name="lower_bound" class="TunableRange" default="1" display="Lower Bound" muid="8038E867AC109854" min="1" max="None" description="The lower bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                            <Tunable type="int" name="upper_bound" class="TunableRange" default="1" display="Upper Bound" muid="5EFB0906192E4138" min="None" max="None" description="The upper bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                        </TunableTuple>
                    </TunableTuple>
                    <TunableTuple name="perks" class="TunablePerksFilterTerm" display="Perks" muid="F409243F8668F839" description="A term for filtering Sims that may or may not have perks.&#xA;&#xA;New and existing Sims can be conformed by granting or removing the perks." Deprecated="False" filter="0" group="General">
                        <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="3F3708ABFF6C19CF" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                        <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="F3F3DB88DDD72DCF" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                        <TunableList name="perks" class="TunableSet" display="Perks" muid="6836855E0670D61E" description="List of perks that a Sim should has." Deprecated="False" filter="0" group="General" unique_entries="true">
                            <Tunable type="bucks_perk" class="TunableReference" muid="B0055AAD1685832E" description="The perks that Sim should has." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                        </TunableList>
                    </TunableTuple>
                    <TunableTuple name="pregnancy" class="TunablePregnancyFilterTerm" display="Pregnancy" muid="A450CB923A6111E7" description="A term for filtering pregnant sims." Deprecated="False" filter="0" group="General">
                        <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="C0CAF4DD6A29EA7" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                        <TunableVariant type="None" name="pregnancy_partner_filter" class="OptionalTunable" default="Use_Spouse_Exclusively" display="Pregnancy Partner Filter" muid="46C3C924F6683905" description="Specify how Sims are conformed to match this filter term." Deprecated="False" filter="0" group="General">
                            <Tunable name="Use_Spouse_Exclusively" class="TunableExistance" display="Use Spouse Exclusively" muid="4F55F54419A38CFF" />
                            <Tunable type="sim_filter" name="Use_Spouse_or_Filter" class="TunableReference" display="Use Spouse Or Filter" muid="9CFD8361D0CED1B5" description="The filter that will be used to find a pregnancy partner for for&#xA;this Sim." allow_none="False" Deprecated="False" filter="0" group="General" />
                        </TunableVariant>
                        <TunableVariant type="None" name="pregnancy_progress" class="OptionalTunable" default="disabled" display="Pregnancy Progress" muid="1BA621C5597E3A6E" description="If enabled then we will check a specific " Deprecated="False" filter="0" group="General">
                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="92D7D99FE191D2D3" />
                            <TunableTuple name="enabled" class="TunableTuple" display="Enabled" muid="466CBC9F6AF734F3" description="                " Deprecated="False" filter="0" group="General">
                                <Tunable type="float" name="ideal_value" class="Tunable" default="50.0" display="Ideal Value" muid="F849E0EDAC9161DB" description="The ideal commodity value for scoring." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                <Tunable type="float" name="maximum_value" class="Tunable" default="100.0" display="Maximum Value" muid="A0307188E38E0BDE" description="The maximum commodity value that will pass." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                <Tunable type="float" name="minimum_value" class="Tunable" default="0.0" display="Minimum Value" muid="6FB3627406BED688" description="The minimum commodity value that will pass." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                            </TunableTuple>
                        </TunableVariant>
                    </TunableTuple>
                    <TunableTuple name="ranked_statistic" class="TunableRankedStatisticFilterTerm" display="Ranked Statistic" muid="9107D4F2DCB4E0AA" description="A term for filtering Sims based on their ranked skills. The score is&#xA;modified based on the tuned ideal value of the ranked statistic.&#xA;&#xA;New and existing Sims can be conformed by granting them ranked statistics,&#xA;within the new bounds.&#xA;&#xA;If you want to operate on the rank of the ranked statistic then make sure &#xA;that the check box for 'use_rank' is checked. If you want this to behave&#xA;more like a normal statistic using the &quot;points&quot; and not the rank then&#xA;uncheck that value." Deprecated="False" filter="0" group="General">
                        <Tunable type="int" name="ideal_value" class="Tunable" default="2" display="Ideal Value" muid="A5D91C4F8EF8F7DD" description="Ideal value of the ranked statistic that we are filtering against." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                        <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="5A751E04CDB56F62" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                        <Tunable type="int" name="max_value" class="Tunable" default="5" display="Max Value" muid="18DDE4ECC4820DA6" description="Maximum value of the ranked statistic that we are filtering against." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                        <Tunable type="int" name="min_value" class="Tunable" default="0" display="Min Value" muid="581ABF7226B04AA9" description="Minimum value of the ranked statistic that we are filtering against." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                        <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="7486F52F031CB39B" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                        <Tunable type="bool" name="only_check_statistic_owned" class="Tunable" default="False" display="Only Check Statistic Owned" muid="AB08377D0C691112" description="Only require that the statistic is actually owned by the sim,&#xA;ignoring the statistic's level." Deprecated="False" filter="0" group="General" />
                        <Tunable type="statistic" name="ranked_statistic" class="TunableReference" display="Ranked Statistic" muid="B911731F697FB03" description="The ranked statistic the range applies to." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="RankedStatistic" />
                        <TunableVariant type="None" name="score_spread_override" class="OptionalTunable" default="disabled" display="Score Spread Override" muid="DA309109D9884BE8" description="If enabled this interval modifies the spread over which the score&#xA;should return.&#xA;&#xA;A score is typically between 0 and 1.  A score of 0 means&#xA;the sim will never be selected, the higher a score is the more&#xA;likely that sim is to be selected.&#xA;&#xA;The score for statistic scoring is based on how close to the &quot;ideal&quot; value&#xA;the value for the specified statistic for a sim is.  It's a 1 if it's&#xA;that exact score.  It's *near* 0  (though not exactly, because the&#xA;general idea behind this filter to make it a weight not elimination)&#xA;as it gets farther from the ideal value and closer to the min or max value.&#xA;(Note: it uses min_value -1 and max_value + 1 as the min/max values to avoid&#xA;hitting 0.  However the min/max values don't have to be accurate,&#xA;so you can hit 0 by adjusting the tuned min/max values here as desired.)&#xA;&#xA;So if you have it tuned as:&#xA;min value: 0&#xA;max value: 5&#xA;ideal value: 5&#xA;The resulting score for each integer will be:&#xA;0 gives you: 0.17&#xA;1 gives you: 0.33&#xA;2 gives you: 0.5&#xA;3 gives you: 0.66&#xA;4 gives you: 0.83&#xA;5 gives you: 1&#xA;&#xA;The minimum filter score tuning is simply a floor.  Regardless of how low&#xA;the calculated score is, if it's lower than the minimum filter score&#xA;the result will simply be replaced with the minimum filter score.&#xA;&#xA;So adding a minimum filter score of 0.5 simply results in:&#xA;0 gives you: 0.5&#xA;1 gives you: 0.5&#xA;2 gives you: 0.5&#xA;3 gives you: 0.66&#xA;4 gives you: 0.83&#xA;5 gives you: 1&#xA;&#xA;This optional tunable modifies the spread over which the score&#xA;is returned (and gets rid of the -1/+1 padding as you can specify&#xA;the padding in the actual range.)  So instead of returning from 0 to 1, &#xA;where 0 is as far away from the ideal as possible, and 1 is at the &#xA;ideal value, it'll return the lower value when the statistic is as &#xA;far away from the ideal value as possible, and the closer you get to the &#xA;ideal value, the closer the return value will be to the maximum value.&#xA;&#xA;So adding a score spread override of 0.5 to 1.0, (instead of a&#xA;minimum filter score) results in:&#xA;0 gives you: 0.5&#xA;1 gives you: 0.6&#xA;2 gives you: 0.7&#xA;3 gives you: 0.8&#xA;4 gives you: 0.9&#xA;5 gives you: 1&#xA;&#xA;Note:  Since, as stated, it's perfectly possible to lie about the&#xA;min/max value, this result is also possible to achieve with clever&#xA;tuning:&#xA;min value of -4&#xA;max value of 5&#xA;ideal value of 5" Deprecated="False" filter="0" group="General">
                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="1F26C1C76958CB84" />
                            <TunableTuple name="enabled" class="TunableInterval" display="Enabled" muid="161FC62CE4BCC5C1" description="A tunable interval between lower_bound and upper_bound." Deprecated="False" filter="0" group="General">
                                <Tunable type="float" name="lower_bound" class="TunableRange" default="0.0" display="Lower Bound" muid="43A9E41A5C25AF61" min="0" max="None" description="The lower bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                <Tunable type="float" name="upper_bound" class="TunableRange" default="1.0" display="Upper Bound" muid="237FA2919F74DAEA" min="None" max="None" description="The upper bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                            </TunableTuple>
                        </TunableVariant>
                        <Tunable type="bool" name="use_rank" class="Tunable" default="True" display="Use Rank" muid="B46AC17833DBDBE2" description="If checked then use the rank value instead of the point value for&#xA;our calculations." Deprecated="False" filter="0" group="General" />
                    </TunableTuple>
                    <TunableTuple name="relationship_bit" class="TunableRelationshipBitFilterTerm" display="Relationship Bit" muid="DDC3C5452ACB03FB" description="A term for filtering against relationship bits.&#xA;&#xA;New and existing Sims can be conformed by granting or removing the specified&#xA;bits." Deprecated="False" filter="0" group="General">
                        <TunableList name="black_list" class="TunableSet" display="Black List" muid="7EF67ED1FFFFAC5A" description="A set of relationship bits that requires the requesting sim to not&#xA;have any one matching relationship bits with the sims we are&#xA;scoring." Deprecated="False" filter="0" group="General" unique_entries="true">
                            <Tunable type="relbit" class="TunableReference" muid="FFF983228D8B1DC6" description="A relationship bit that we will use to check if the requesting&#xA;sim has it with the sim we are scoring." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                        </TunableList>
                        <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="3B196C5602F9257E" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                        <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="1C932F1F0E887B96" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                        <TunableVariant type="None" name="relationship_selector" class="TunableVariant" default="use_requesting_sim" display="Relationship Selector" muid="FCCAA10F8609CD7" description="Define which relationships are to be considered." Deprecated="False" filter="0" group="General">
                            <TunableTuple name="use_all_sims" class="Tunable_RelationshipAllKnown" display="Use All Sims" muid="100B3C352536D5A7" description="Consider the relationship with all known Sims." Deprecated="False" filter="0" group="General" />
                            <TunableTuple name="use_played_sims" class="Tunable_RelationshipAllKnownPlayed" display="Use Played Sims" muid="2A4CAAB35EF4A000" description="Consider the relationship with all known played Sims." Deprecated="False" filter="0" group="General" />
                            <TunableTuple name="use_requesting_sim" class="Tunable_RelationshipRequestingSim" display="Use Requesting Sim" muid="ABEBABA5A0E84FF5" description="Consider the relationship with the requesting Sim." Deprecated="False" filter="0" group="General" />
                        </TunableVariant>
                        <Tunable type="bool" name="requesting_sim_override" class="Tunable" default="False" display="Requesting Sim Override" muid="27152157494409A9" description="If checked then the filter term will always return 1 if the&#xA;requesting sim info is the sim info we are looking at." Deprecated="False" filter="0" group="General" />
                        <Tunable type="bool" name="reverse_bit_lookup" class="Tunable" default="False" display="Reverse Bit Lookup" muid="32F31ED0D1DD037" description="Look up the relationship bits for target to source sim,&#xA;instead of the default behavior of source to target relationship bits" Deprecated="False" filter="0" group="General" />
                        <TunableList name="white_list" class="TunableSet" display="White List" muid="60C429E81141775F" description="A set of relationship bits that requires the requesting sim to have&#xA;at least one matching relationship bit with the sims we are scoring." Deprecated="False" filter="0" group="General" unique_entries="true">
                            <Tunable type="relbit" class="TunableReference" muid="6A6D2C9124E42383" description="A relationship bit that we will use to check if the requesting&#xA;sim has it with the sim we are scoring.&#xA;WARNING: If all elements are in a pack, then no sim will pass&#xA;the filter if the pack(s) aren't installed." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                        </TunableList>
                    </TunableTuple>
                    <TunableTuple name="relationship_bit_collection" class="TunableRelationshipBitCollectionFilterTerm" display="Relationship Bit Collection" muid="902CDF24CD8E9CB9" description="A term for filtering against relationship bits or bit collections.&#xA;&#xA;This filter is NOT conformable" Deprecated="False" filter="0" group="General">
                        <TunableList name="black_list" class="TunableSet" display="Black List" muid="5E3A290E48CC00D4" description="A set of relationship bits or bit collections that requires the &#xA;requesting sim to not have any one matching relationship bits with&#xA;the sims we are scoring." Deprecated="False" filter="0" group="General" unique_entries="true">
                            <Tunable type="relbit" class="TunableReference" muid="3527BBE13B4376A6" description="A relationship bit or bit collection that we will use to check &#xA;if the requesting sim has it with the sim we are scoring." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                        </TunableList>
                        <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="EF037C9E60F7AFDE" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                        <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="F25A489D82432542" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                        <TunableVariant type="None" name="relationship_selector" class="TunableVariant" default="use_requesting_sim" display="Relationship Selector" muid="3FDECA731C5A1D26" description="Define which relationships are to be considered." Deprecated="False" filter="0" group="General">
                            <TunableTuple name="use_all_sims" class="Tunable_RelationshipAllKnown" display="Use All Sims" muid="BCFEA1C76AA5EB7D" description="Consider the relationship with all known Sims." Deprecated="False" filter="0" group="General" />
                            <TunableTuple name="use_played_sims" class="Tunable_RelationshipAllKnownPlayed" display="Use Played Sims" muid="D15AF4658F7D483F" description="Consider the relationship with all known played Sims." Deprecated="False" filter="0" group="General" />
                            <TunableTuple name="use_requesting_sim" class="Tunable_RelationshipRequestingSim" display="Use Requesting Sim" muid="7CBBB5A239B6281E" description="Consider the relationship with the requesting Sim." Deprecated="False" filter="0" group="General" />
                        </TunableVariant>
                        <Tunable type="bool" name="requesting_sim_override" class="Tunable" default="False" display="Requesting Sim Override" muid="2D93725325F383F0" description="If checked then the filter term will always return 1 if the&#xA;requesting sim info is the sim info we are looking at." Deprecated="False" filter="0" group="General" />
                        <Tunable type="bool" name="reverse_bit_lookup" class="Tunable" default="False" display="Reverse Bit Lookup" muid="11504D630A11E225" description="Look up the relationship bits for target to source sim,&#xA;instead of the default behavior of source to target relationship bits" Deprecated="False" filter="0" group="General" />
                        <TunableList name="white_list" class="TunableSet" display="White List" muid="6A2228266B79D344" description="A set of relationship bits or bit collections that requires the &#xA;requesting sim to have at least one matching relationship bit with &#xA;the sims we are scoring." Deprecated="False" filter="0" group="General" unique_entries="true">
                            <Tunable type="relbit" class="TunableReference" muid="3459F609DAF8E60E" description="A relationship bit or bit collection that we will use to check &#xA;if the requesting sim has it with the sim we are scoring.&#xA;WARNING: If all elements are in a pack, then no sim will pass&#xA;the filter if the pack(s) aren't installed." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                        </TunableList>
                    </TunableTuple>
                    <TunableTuple name="relationship_track" class="TunableRelationshipTrackFilterTerm" display="Relationship Track" muid="7E658C84D7A790E1" description="A term for filtering against relationship tracks. The score is modified&#xA;based on the tuned ideal value of the relationship.&#xA;&#xA;New and existing Sims can be conformed by granting them relationship, within&#xA;the tuned bounds." Deprecated="False" filter="0" group="General">
                        <Tunable type="int" name="ideal_value" class="Tunable" default="0" display="Ideal Value" muid="8FC36128358DE8F6" description="Ideal value of the relationship track that we are filtering against." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                        <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="74677C7D79B2EE39" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                        <Tunable type="int" name="max_value" class="Tunable" default="100" display="Max Value" muid="2ADE7F200F670640" description="The maximum value of the relationship track that we are filtering&#xA;against." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                        <Tunable type="int" name="min_value" class="Tunable" default="-100" display="Min Value" muid="36350326402BA5B7" description="The minimum value of the relationship track that we are filtering&#xA;against." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                        <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="E52162C40E23CD54" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                        <TunableVariant type="None" name="relationship_selector" class="TunableVariant" default="use_requesting_sim" display="Relationship Selector" muid="A621BB0E15ACC93D" description="Define which relationships are to be considered." Deprecated="False" filter="0" group="General">
                            <TunableTuple name="use_all_sims" class="Tunable_RelationshipAllKnown" display="Use All Sims" muid="AF08E9FC8ED86785" description="Consider the relationship with all known Sims." Deprecated="False" filter="0" group="General" />
                            <TunableTuple name="use_played_sims" class="Tunable_RelationshipAllKnownPlayed" display="Use Played Sims" muid="5CDF8DD562CA93C4" description="Consider the relationship with all known played Sims." Deprecated="False" filter="0" group="General" />
                            <TunableTuple name="use_requesting_sim" class="Tunable_RelationshipRequestingSim" display="Use Requesting Sim" muid="4BC8E8D066A3312" description="Consider the relationship with the requesting Sim." Deprecated="False" filter="0" group="General" />
                        </TunableVariant>
                        <Tunable type="statistic" name="relationship_track" class="TunableReference" display="Relationship Track" muid="A47D06440BC9E992" description="The relationship track that we are filtering against." allow_none="False" Deprecated="False" filter="0" group="General" restrict="RelationshipTrack" />
                        <Tunable type="bool" name="requesting_sim_override" class="Tunable" default="False" display="Requesting Sim Override" muid="6634F60AF62029B4" description="If checked then the filter term will always return 1 if the&#xA;requesting sim info is the sim info we are looking at." Deprecated="False" filter="0" group="General" />
                    </TunableTuple>
                    <TunableTuple name="requesting_sim" class="TunableRequestingSimFilterTerm" display="Requesting Sim" muid="602B3DDD3E2E4CE" description="A filter term for matching the requesting sim." Deprecated="False" filter="0" group="General">
                        <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="506EB5247E589821" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                        <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="EDC7B35A1507AAA9" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                    </TunableTuple>
                    <TunableTuple name="sim_info_fixups" class="TunableSimInfoFixupFilterTerm" display="Sim Info Fixups" muid="C5522CD55D4743EA" description="A term for filtering Sims based on a sim info fixup they may or may not have.&#xA;&#xA;New and existing Sims can be conformed by either granting or removing the&#xA;specified fixup." Deprecated="False" filter="0" group="General">
                        <Tunable type="sim_info_fixup" name="fixup" class="TunableReference" display="Fixup" muid="55905326CC8B30B0" description="The sim info fixup to filter against." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                        <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="200FE9A6FCF2401C" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                        <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="38FC06338667C3DB" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                    </TunableTuple>
                    <TunableTuple name="sim_info_lod" class="TunableSimLODFilterTerm" display="Sim Info Lod" muid="5C30B7A9B0A13771" description="A term for filtering Sims that have or do not have the specified Sim Info&#xA;LOD value.&#xA;&#xA;Sims may not be conformed to match this filter term." Deprecated="False" filter="0" group="General">
                        <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="A0CF26145746EE59" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                        <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="32A9BF4BFB06BA49" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                        <TunableEnum type="SimInfoLODLevel" name="sim_lod_value" class="TunableEnumEntry" default="BACKGROUND" display="Sim Lod Value" muid="8DD6A255A0038C3D" static_entries="sims-sim_info_lod.SimInfoLODLevel" description="The Sim LOD value to check against." Deprecated="False" filter="0" group="General" />
                    </TunableTuple>
                    <TunableTuple name="skill" class="TunableSkillFilterTerm" display="Skill" muid="2F52B1D138DEDADD" description="A term for filtering Sims based on their skill. The score is modified based&#xA;on the tuned ideal value of the skill.&#xA;&#xA;New and existing Sims can be conformed by granting them the skill, within&#xA;the tuned bounds." Deprecated="False" filter="0" group="General">
                        <Tunable type="int" name="ideal_value" class="Tunable" default="5" display="Ideal Value" muid="F15015A798D099A" description="Ideal value of the skill that we are filtering against." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                        <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="78D94AD22CDD9D99" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                        <Tunable type="int" name="max_value" class="Tunable" default="10" display="Max Value" muid="AAC3E4A5A9FB4994" description="Maximum value of the skill that we are filtering against." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                        <Tunable type="int" name="min_value" class="Tunable" default="0" display="Min Value" muid="8B1AB43F3E96E5AD" description="Minimum value of the skill that we are filtering against." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                        <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="E6ABA691BAC74144" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                        <Tunable type="bool" name="only_check_statistic_owned" class="Tunable" default="False" display="Only Check Statistic Owned" muid="28640C0C9B4A3851" description="Only require that the statistic is actually owned by the sim,&#xA;ignoring the statistic's level." Deprecated="False" filter="0" group="General" />
                        <TunableVariant type="None" name="score_spread_override" class="OptionalTunable" default="disabled" display="Score Spread Override" muid="3B8F9B8A6B441FE0" description="If enabled this interval modifies the spread over which the score&#xA;should return.&#xA;&#xA;A score is typically between 0 and 1.  A score of 0 means&#xA;the sim will never be selected, the higher a score is the more&#xA;likely that sim is to be selected.&#xA;&#xA;The score for statistic scoring is based on how close to the &quot;ideal&quot; value&#xA;the value for the specified statistic for a sim is.  It's a 1 if it's&#xA;that exact score.  It's *near* 0  (though not exactly, because the&#xA;general idea behind this filter to make it a weight not elimination)&#xA;as it gets farther from the ideal value and closer to the min or max value.&#xA;(Note: it uses min_value -1 and max_value + 1 as the min/max values to avoid&#xA;hitting 0.  However the min/max values don't have to be accurate,&#xA;so you can hit 0 by adjusting the tuned min/max values here as desired.)&#xA;&#xA;So if you have it tuned as:&#xA;min value: 0&#xA;max value: 5&#xA;ideal value: 5&#xA;The resulting score for each integer will be:&#xA;0 gives you: 0.17&#xA;1 gives you: 0.33&#xA;2 gives you: 0.5&#xA;3 gives you: 0.66&#xA;4 gives you: 0.83&#xA;5 gives you: 1&#xA;&#xA;The minimum filter score tuning is simply a floor.  Regardless of how low&#xA;the calculated score is, if it's lower than the minimum filter score&#xA;the result will simply be replaced with the minimum filter score.&#xA;&#xA;So adding a minimum filter score of 0.5 simply results in:&#xA;0 gives you: 0.5&#xA;1 gives you: 0.5&#xA;2 gives you: 0.5&#xA;3 gives you: 0.66&#xA;4 gives you: 0.83&#xA;5 gives you: 1&#xA;&#xA;This optional tunable modifies the spread over which the score&#xA;is returned (and gets rid of the -1/+1 padding as you can specify&#xA;the padding in the actual range.)  So instead of returning from 0 to 1, &#xA;where 0 is as far away from the ideal as possible, and 1 is at the &#xA;ideal value, it'll return the lower value when the statistic is as &#xA;far away from the ideal value as possible, and the closer you get to the &#xA;ideal value, the closer the return value will be to the maximum value.&#xA;&#xA;So adding a score spread override of 0.5 to 1.0, (instead of a&#xA;minimum filter score) results in:&#xA;0 gives you: 0.5&#xA;1 gives you: 0.6&#xA;2 gives you: 0.7&#xA;3 gives you: 0.8&#xA;4 gives you: 0.9&#xA;5 gives you: 1&#xA;&#xA;Note:  Since, as stated, it's perfectly possible to lie about the&#xA;min/max value, this result is also possible to achieve with clever&#xA;tuning:&#xA;min value of -4&#xA;max value of 5&#xA;ideal value of 5" Deprecated="False" filter="0" group="General">
                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="F20BBB388BE496A4" />
                            <TunableTuple name="enabled" class="TunableInterval" display="Enabled" muid="EC3AAAC568FE88B7" description="A tunable interval between lower_bound and upper_bound." Deprecated="False" filter="0" group="General">
                                <Tunable type="float" name="lower_bound" class="TunableRange" default="0.0" display="Lower Bound" muid="4B62A52A83401C3E" min="0" max="None" description="The lower bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                <Tunable type="float" name="upper_bound" class="TunableRange" default="1.0" display="Upper Bound" muid="ED2F58CD684042D7" min="None" max="None" description="The upper bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                            </TunableTuple>
                        </TunableVariant>
                        <Tunable type="statistic" name="skill" class="TunableReference" display="Skill" muid="E7A1BC82AA5211C3" description="The skill the range applies to." allow_none="False" Deprecated="False" filter="0" group="General" restrict="Skill" />
                    </TunableTuple>
                    <TunableTuple name="species" class="TunableSpeciesFilterTerm" display="Species" muid="70E319DED243E61E" description="A term for filtering Sim based on their species.&#xA;&#xA;Only new Sims may be conformed by creating them with a valid species.&#xA;Existing Sims may not be conformed." Deprecated="False" filter="0" group="General">
                        <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="3F685B24B3040EC8" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                        <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="D6224E6DF8FF694F" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                        <TunableEnum type="Species" name="species" class="TunableEnumEntry" default="HUMAN" display="Species" muid="B964CCA33E757B0C" static_entries="sims-sim_info_types.Species" description="The species to filter for." Deprecated="False" filter="0" group="General" invalid_entries="INVALID" />
                    </TunableTuple>
                    <TunableTuple name="statistic" class="TunableStatisticFilterTerm" display="Statistic" muid="5D516CE9C1D12BCB" description="A term for filtering Sims based on a statistic. The score is modified based&#xA;on the tuned ideal value of the statistic.&#xA;&#xA;New and existing Sims can be conformed by granting them the statistic, within&#xA;the tuned bounds." Deprecated="False" filter="0" group="General">
                        <Tunable type="float" name="ideal_value" class="Tunable" default="5.0" display="Ideal Value" muid="F0DDD2621B05E87" description="Ideal value of the statistic that we are filtering against." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                        <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="A6D10A94CF7D2774" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                        <Tunable type="float" name="max_value" class="Tunable" default="10.0" display="Max Value" muid="A1AFE6951A9D5ACA" description="Maximum value of the statistic that we are filtering against." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                        <Tunable type="float" name="min_value" class="Tunable" default="0.0" display="Min Value" muid="8E844CE3F3B17A42" description="Minimum value of the statistic that we are filtering against." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                        <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="15C11C1B4895FD03" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                        <Tunable type="bool" name="only_check_statistic_owned" class="Tunable" default="False" display="Only Check Statistic Owned" muid="1152D2ACD0B72DE2" description="Only require that the statistic is actually owned by the sim,&#xA;ignoring the statistic's level." Deprecated="False" filter="0" group="General" />
                        <TunableVariant type="None" name="score_spread_override" class="OptionalTunable" default="disabled" display="Score Spread Override" muid="FC9DC9B22A107DFE" description="If enabled this interval modifies the spread over which the score&#xA;should return.&#xA;&#xA;A score is typically between 0 and 1.  A score of 0 means&#xA;the sim will never be selected, the higher a score is the more&#xA;likely that sim is to be selected.&#xA;&#xA;The score for statistic scoring is based on how close to the &quot;ideal&quot; value&#xA;the value for the specified statistic for a sim is.  It's a 1 if it's&#xA;that exact score.  It's *near* 0  (though not exactly, because the&#xA;general idea behind this filter to make it a weight not elimination)&#xA;as it gets farther from the ideal value and closer to the min or max value.&#xA;(Note: it uses min_value -1 and max_value + 1 as the min/max values to avoid&#xA;hitting 0.  However the min/max values don't have to be accurate,&#xA;so you can hit 0 by adjusting the tuned min/max values here as desired.)&#xA;&#xA;So if you have it tuned as:&#xA;min value: 0&#xA;max value: 5&#xA;ideal value: 5&#xA;The resulting score for each integer will be:&#xA;0 gives you: 0.17&#xA;1 gives you: 0.33&#xA;2 gives you: 0.5&#xA;3 gives you: 0.66&#xA;4 gives you: 0.83&#xA;5 gives you: 1&#xA;&#xA;The minimum filter score tuning is simply a floor.  Regardless of how low&#xA;the calculated score is, if it's lower than the minimum filter score&#xA;the result will simply be replaced with the minimum filter score.&#xA;&#xA;So adding a minimum filter score of 0.5 simply results in:&#xA;0 gives you: 0.5&#xA;1 gives you: 0.5&#xA;2 gives you: 0.5&#xA;3 gives you: 0.66&#xA;4 gives you: 0.83&#xA;5 gives you: 1&#xA;&#xA;This optional tunable modifies the spread over which the score&#xA;is returned (and gets rid of the -1/+1 padding as you can specify&#xA;the padding in the actual range.)  So instead of returning from 0 to 1, &#xA;where 0 is as far away from the ideal as possible, and 1 is at the &#xA;ideal value, it'll return the lower value when the statistic is as &#xA;far away from the ideal value as possible, and the closer you get to the &#xA;ideal value, the closer the return value will be to the maximum value.&#xA;&#xA;So adding a score spread override of 0.5 to 1.0, (instead of a&#xA;minimum filter score) results in:&#xA;0 gives you: 0.5&#xA;1 gives you: 0.6&#xA;2 gives you: 0.7&#xA;3 gives you: 0.8&#xA;4 gives you: 0.9&#xA;5 gives you: 1&#xA;&#xA;Note:  Since, as stated, it's perfectly possible to lie about the&#xA;min/max value, this result is also possible to achieve with clever&#xA;tuning:&#xA;min value of -4&#xA;max value of 5&#xA;ideal value of 5" Deprecated="False" filter="0" group="General">
                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="B43D2420C03EC66" />
                            <TunableTuple name="enabled" class="TunableInterval" display="Enabled" muid="5269353B5DD60BE7" description="A tunable interval between lower_bound and upper_bound." Deprecated="False" filter="0" group="General">
                                <Tunable type="float" name="lower_bound" class="TunableRange" default="0.0" display="Lower Bound" muid="D5D442C5A4B9CB18" min="0" max="None" description="The lower bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                <Tunable type="float" name="upper_bound" class="TunableRange" default="1.0" display="Upper Bound" muid="F064CF71AB78B3FB" min="None" max="None" description="The upper bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                            </TunableTuple>
                        </TunableVariant>
                        <Tunable type="statistic" name="statistic" class="TunableReference" display="Statistic" muid="C66682CE1A4A3E18" description="The statistic the range applies to." allow_none="False" Deprecated="False" filter="0" group="General" restrict="Statistic" />
                    </TunableTuple>
                    <TunableTuple name="trait" class="TunableTraitFilterTerm" display="Trait" muid="D30E25AF0265A193" description="A term for filtering Sims based on a trait they may or may not have.&#xA;&#xA;New and existing Sims can be conformed by either granting or removing the&#xA;specified trait." Deprecated="False" filter="0" group="General">
                        <Tunable type="bool" name="ignore_if_wrong_pack" class="Tunable" default="False" display="Ignore If Wrong Pack" muid="BC174D1290B1EC80" description="If checked then we will ignore this filter term if the specified&#xA;trait isn't found.  (.e.g. trait is from uninstalled pack.)&#xA;For example we'd *like* to pick sims that use umbrellas.  But if &#xA;Seasons isn't installed it's ok to use sims that don't." Deprecated="False" filter="0" group="General" />
                        <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="E9B95A37C3B665ED" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                        <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="BB96A42C53CF53A2" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                        <Tunable type="trait" name="trait" class="TunableReference" display="Trait" muid="972886C4BA010C78" description="The trait to filter against." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                    </TunableTuple>
                    <TunableTuple name="university" class="TunableUniversityMajorFilterTerm" display="University" muid="69FB0D6399AA7AAE" description="A term for filtering Sims going to university/in a specific Major.&#xA;&#xA;To pass, Sims must have specified major as their current major and still be&#xA;enrolled in at least one class." Deprecated="False" filter="0" group="General">
                        <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="C79A7D5DD0E4D2D4" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                        <TunableVariant type="None" name="major" class="TunableVariant" default="any_majors" display="Major" muid="46C377F3C232C188" description="Which major(s) the sim must be pursuing." Deprecated="False" filter="0" group="General">
                            <TunableTuple name="any_majors" class="Tunable_AnyMajors" display="Any Majors" muid="C20788B9200ED9DE" description="To pass, sim must currently be enrolled in any major. " Deprecated="False" filter="0" group="General">
                                <Tunable type="bool" name="conform_using_skills" class="Tunable" default="False" display="Conform Using Skills" muid="31B88BC19B1AF3DC" description="If checked then when we conform a Sim using this filter term&#xA;we will use the Sims skills to choose which Major to enroll &#xA;them in. If unchecked we will pick one randomly." Deprecated="False" filter="0" group="General" />
                            </TunableTuple>
                            <TunableTuple name="specific_majors" class="Tunable_SpecificMajors" display="Specific Majors" muid="98416C853BD01717" description="To pass, the sim must currently be enrolled in 1 of the specified majors." Deprecated="False" filter="0" group="General">
                                <TunableList name="_majors" class="TunableList" display="Majors" muid="A93A1971F56074D5" min="1" description="Sim must be currently enrolled in one of the specified majors." Deprecated="False" filter="0" group="General">
                                    <Tunable type="university_major" class="TunableReference" muid="1B0D9038D9E78DDF" description="                    " allow_none="False" Deprecated="False" filter="0" group="General" />
                                </TunableList>
                            </TunableTuple>
                        </TunableVariant>
                        <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="E622BC6C502B5BA5" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                        <TunableVariant type="None" name="university" class="OptionalTunable" default="disabled" display="University" muid="88C18FC63145D446" description="University in which the sim must be enrolled.&#xA;If Disabled, sim can be in any university." Deprecated="False" filter="0" group="General">
                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="EEF0BBD89B142CDA" />
                            <Tunable type="university" name="enabled" class="TunableReference" display="Enabled" muid="ED063064A4BB3238" description="The university to filter for." allow_none="False" Deprecated="False" filter="0" group="General" />
                        </TunableVariant>
                    </TunableTuple>
                </TunableVariant>
            </TunableList>

            <TunableList name="ORGANIZATION_EVENTS" class="TunableList" display="Organization Events" muid="B221AAC0F91E4222" description="The list of organization event drama nodes that will be scheduled&#xA;at the start of the game.&#xA;&#xA;NOTE: These should not include venue drama nodes, which are handled&#xA;separately in the Venue Org Event Mapping." Deprecated="False" filter="0" group="General">
                <Tunable type="drama_node" class="TunableReference" muid="3689E8F534936160" description="Drama Node that is part of an organization's events." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
            </TunableList>

            <TunableList name="VENUE_ORG_EVENT_MAPPING" class="TunableMapping" display="Venue Org Event Mapping" muid="B99739963F93B872" mapping_key="key" mapping_value="value" description="Each entry in the venue org event mapping maps a venue-type to the org&#xA;events that should be scheduled at the venue." Deprecated="False" filter="0" group="General">
                <TunableTuple class="TunableTuple" muid="7168EB790C0BF81E" Deprecated="False" filter="0" group="General">
                    <Tunable type="venue" name="key" class="TunableReference" display="Key" muid="9B410D3120509FE8" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                    <TunableTuple name="value" class="TunableTuple" display="Value" muid="88F787C1986175B" Deprecated="False" filter="0" group="General">
                        <TunableList name="org_blacklisted_regions" class="TunableList" display="Org Blacklisted Regions" muid="DA15A743FE67B098" description="A list of regions that are invalid for scheduling venue event on." Deprecated="False" filter="0" group="General">
                            <Tunable type="regiondescription" class="TunableReference" muid="C32667FDA74184AC" description="The venue's street owner that is invalid for scheduling a venue event." Deprecated="False" filter="0" group="General" pack_safe="True" />
                        </TunableList>
                        <TunableList name="org_drama_node_events" class="TunableList" display="Org Drama Node Events" muid="5457993AC62A116A" description="A list of drama nodes that provide organization events to venues&#xA;that they're a part of." Deprecated="False" filter="0" group="General">
                            <Tunable type="drama_node" class="TunableReference" muid="AC508AD0274218A4" description="A drama node that will contain an organization event on a venue." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="OrganizationEventDramaNode" />
                        </TunableList>
                        <TunableList name="org_preferred_regions" class="TunableList" display="Org Preferred Regions" muid="4EF249A3FB81285D" description="A list of regions that will be used to initially attempt to schedule&#xA;a venue event on. If no venues of the venue type exist within that region,&#xA;any available venue will be used, as long as it is not blacklisted." Deprecated="False" filter="0" group="General">
                            <Tunable type="regiondescription" class="TunableReference" muid="739DB885B6ADAA2F" description="The venue's street owner that is preferred to schedule a venue event." Deprecated="False" filter="0" group="General" pack_safe="True" />
                        </TunableList>
                        <Tunable type="int" name="org_zones_to_schedule" class="TunableRange" default="1" display="Org Zones To Schedule" muid="E2690E293F0611B5" min="0" max="None" description="The number of zones with this venue type on which to schedule&#xA;org drama nodes." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                    </TunableTuple>
                </TunableTuple>
            </TunableList>
        </Class>
    </Module>

    <VersionHistory>
        <ActionList>
            <Action type="kRename" old_muid="7D77118029767D6C" new_muid="E2690E293F0611B5" />
        </ActionList>

        <ActionList>
            <Action type="kRename" old_muid="49FCBB5E5C8751B8" new_muid="C41133EA2A058D5C" />
            <Action type="kRename" old_muid="D777124266CABFB3" new_muid="2F37F254C87A4E77" />
            <Action type="kRemove" old_muid="43B81CAE42E33A5C" />
        </ActionList>
    </VersionHistory>
</TuningRoot>