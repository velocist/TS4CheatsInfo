<?xml version="1.0" encoding="iso-8859-1"?>

<TuningRoot>
    <Instance instance_type="situation_goal" class="SituationGoalCraftObject" module="situations.situation_goal_craft_object" muid="810775AC23307C7" description="Situation Goal for crafting an object." instance_needs_reference="True" instance_subclasses_only="False" parents="SituationGoal" path="SituationGoals\Descriptions" use_guid_for_reference="True">
        <TunableList name="_post_tests" class="TunableSituationGoalActorPostTestSet" display="Post Tests" muid="CB0A48E7CDCB1D9F" description="                A set of tests that must all pass when the player satisfies the crafted_item_test &#xA;                for the goal to be consider completed.&#xA;These test can only consider the actor and &#xA;                the environment. &#xA;e.g. Make a Scotch and Soda while drunk." Deprecated="False" filter="0" group="Tests">
            <TunableVariant type="None" class="TunableSituationGoalActorPostTestVariant" default="none" muid="5A403312A63A2C6F" description="A single tunable test." Deprecated="False" filter="0" group="General">
                <TunableTuple name="buff" class="TunableBuffTest" display="Buff" muid="AE42034BD269231" description="Test whether or not a participant has or doesn't have specific buffs." Deprecated="False" filter="0" group="General">
                    <Tunable type="bool" name="apply_whitelist_on_individual_basis" class="Tunable" default="True" display="Apply Whitelist On Individual Basis" muid="BF5A4ADDCBA81F41" description="If checked, will require that each target has at least one&#xA;whitelisted buff. If unchecked, will require only a single target to&#xA;have at least one whitelisted trait." Deprecated="False" filter="0" group="General" />
                    <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="C6C2A6BFB0C15AC" description="The Sim must not have any buff in this list to pass the test." Deprecated="False" filter="0" group="General" unique_entries="true">
                        <Tunable type="buff" class="TunableReference" muid="795E249CCF234C75" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                    </TunableList>
                    <TunableVariant type="None" name="whitelist" class="OptionalTunable" default="disabled" display="Whitelist" muid="6CCE098FCEC07054" description="If enabled, participant will test for buff's on the whitelist." Deprecated="False" filter="0" group="General">
                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="6BAF8F2FBB4B4E77" />
                        <TunableList name="enabled" class="TunableSet" display="Enabled" muid="698D3CF45A25E961" description="The participant must have at least one buff in this list to pass the&#xA;test." Deprecated="False" filter="0" group="General" unique_entries="true">
                            <Tunable type="buff" class="TunableReference" muid="CF1837F6BD465D85" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                        </TunableList>
                    </TunableVariant>
                </TunableTuple>
                <TunableTuple name="career" class="TunableTunableCareerTest" display="Career" muid="157F14E513E7936" description="Tunable test for what careers a Sim has.&#xA;&#xA;subjects: A ParticipantType used for choosing whom to run the test on.&#xA;test_type: A variant of the different tunable tests that handle testing&#xA;        for careers." Deprecated="False" filter="0" group="General">
                    <Tunable type="bool" name="negate" class="Tunable" default="False" display="Negate" muid="15E4D37E0D2458F2" description="If this is true then it will negate &#xA;the result of the test type. For instance if this is true and the test&#xA;would return true for whether or not a sim has a particular career&#xA;False will be returned instead." Deprecated="False" filter="0" group="General" />
                    <TunableVariant type="None" name="test_type" class="TunableCareerTestVariant" default="career_reference" display="Test Type" muid="6D26FC484073E1E7" Deprecated="False" filter="0" group="General">
                        <TunableTuple name="attended_first_day" class="TunableCareerAttendedFirstDay" display="Attended First Day" muid="DF7C7C9BCF91038C" description="Test for whether or not the Sim has gone to work at all for the career." Deprecated="False" filter="0" group="General">
                            <Tunable type="career" name="career" class="TunableReference" display="Career" muid="97527567F4EF82EC" description="The career to see if the Sim has gone to work for." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                            <TunableVariant type="None" name="tooltip" class="OptionalTunable" default="disabled" display="Tooltip" muid="B12023F09DE0030A" description="Reason of failure." Deprecated="False" filter="0" group="General">
                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="7E7FE73270E89313" />
                                <Tunable type="int" name="enabled" class="TunableLocalizedString" default="0x0" display="Enabled" muid="B0568792C2BA092B" description="Reason of failure." Deprecated="False" filter="0" group="General" />
                            </TunableVariant>
                        </TunableTuple>
                        <TunableTuple name="can_join_career" class="TunableCareerAvailabilityTestFactory" display="Can Join Career" muid="576F437FCFDBEC34" description="A test for whether a sim can join a tunable number threshold of the tuned&#xA;careers. This requires that the career be valid for the sim and that the sim&#xA;not already be in the career." Deprecated="False" filter="0" group="General">
                            <TunableTuple name="careers_to_consider" class="TunableWhiteBlackList" display="Careers To Consider" muid="35300D0E854EDFC8" description="The set of careers to consider and the threshold for passing." Deprecated="False" filter="0" group="General">
                                <TunableVariant type="None" name="blacklist" class="OptionalTunable" default="nothing" display="Blacklist" muid="BA06454547E898C8" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is not in the blacklist. If no blacklist is&#xA;specified, no items are disallowed." Deprecated="False" filter="0" group="General">
                                    <Tunable name="nothing" class="TunableExistance" display="Nothing" muid="743E97076AA1C579" />
                                    <TunableTuple name="specify" class="TunableBlacklist" display="Specify" muid="A110749923827C91" description="A tunable blacklist." Deprecated="False" filter="0" group="General">
                                        <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="D3AC438B4F4DCB9A" description="Blacklisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                            <Tunable type="career" class="TunableReference" muid="7A12E7048F5410BA" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                        </TunableList>
                                        <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="7E065AE1E79F6699" description="Tunable option for how many items must be in the blacklist&#xA;for the blacklist to fail when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                            <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="ACC4AA1BFB396A2" />
                                            <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="D46842AB6CBFBABA" description="When testing a collection of items, the number of items in&#xA;that collection that are in the blacklist must pass this&#xA;threshold test for the blacklist to disallow them all." Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="FA8F9A1265AAB9B5" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="8C04565023971477" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                        </TunableVariant>
                                    </TunableTuple>
                                </TunableVariant>
                                <TunableVariant type="None" name="whitelist" class="OptionalTunable" default="everything" display="Whitelist" muid="A0CDAFFF81FBD583" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is in the whitelist. If no whitelist is&#xA;specified, all items are allowed." Deprecated="False" filter="0" group="General">
                                    <Tunable name="everything" class="TunableExistance" display="Everything" muid="C8DDEE3FF7F54709" />
                                    <TunableTuple name="specify" class="TunableWhitelist" display="Specify" muid="EA72F8EFE7FD5993" description="A tunable whitelist." Deprecated="False" filter="0" group="General">
                                        <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="2FA7B01C45C85C39" description="Tunable option for how many items must be in the whitelist&#xA;for the whitelist to pass when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                            <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="92E3FC3BF3C1AD53" />
                                            <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="8D27B7ED9AD321B9" description="When testing a collection of items, the number of items in&#xA;that collection that are in the whitelist must pass this&#xA;threshold test for the whitelist to allow them all." Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="83B16B01B788C34B" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="4E16B2C2488535A6" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                        </TunableVariant>
                                        <TunableList name="whitelist" class="TunableSet" display="Whitelist" muid="BA33F18718AA5801" description="Whitelisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                            <Tunable type="career" class="TunableReference" muid="EA82B542FF040596" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                        </TunableList>
                                    </TunableTuple>
                                </TunableVariant>
                            </TunableTuple>
                        </TunableTuple>
                        <TunableTuple name="career_level" class="TunableCareerLevelTestFactory" display="Career Level" muid="A23FB3287A1E0315" description="Test to see if the participants have a career at the specified level." Deprecated="False" filter="0" group="General">
                            <Tunable type="career_level" name="career_level" class="TunableReference" display="Career Level" muid="D4D8775D7D9C2F2D" description="A reference to career level tuning that each subject must have in &#xA;at least one career in order for this test to pass." tuning_state="NeedsTuning" allow_none="False" Deprecated="False" filter="0" group="General" />
                        </TunableTuple>
                        <TunableTuple name="career_reference" class="TunableCareerReferenceTestFactory" display="Career Reference" muid="16DE23E473E53E8D" description="A test for whether or not the specified subjects have the specified career,&#xA;career user level, or both." Deprecated="False" filter="0" group="General">
                            <Tunable type="bool" name="allow_invisible_careers" class="Tunable" default="False" display="Allow Invisible Careers" muid="F20D08A69827148F" description="If checked, this test will also allow non-visible careers (such as&#xA;Odd Jobs) to tested against." Deprecated="False" filter="0" group="General" />
                            <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="80D052B19188A3B9" description="Should be called &quot;Ignore List&quot;.  Set of careers that will be ignored&#xA;on the Sim.  If the Sim only had these careers, it would be like having no careers." Deprecated="False" filter="0" group="General" unique_entries="true">
                                <Tunable type="career" class="TunableReference" muid="16E732D17A0A728F" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                            </TunableList>
                            <TunableVariant type="None" name="career" class="OptionalTunable" default="all_careers" display="Career" muid="CFDF8FF831545F19" description="The career to test for on the Sim. When set by itself it will pass&#xA;if the subject simply has this career. When set with user level it&#xA;will only pass if the subjects user level passes the threshold&#xA;test." Deprecated="False" filter="0" group="General">
                                <Tunable name="all_careers" class="TunableExistance" display="All Careers" muid="20B8DC023CA8BC4F" />
                                <Tunable type="career" name="specific_career" class="TunableReference" display="Specific Career" muid="5D3846D5003B97F3" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                            </TunableVariant>
                            <TunableVariant type="None" name="user_level" class="OptionalTunable" default="disabled" display="User Level" muid="24B3F820BDDACEB7" description="Threshold test for the current user value of a career. If user_level&#xA;is set without career then it will pass if any of their careers &#xA;pass the threshold test. If set along with career then it will only&#xA;pass if the specified career passes the threshold test for user &#xA;level. &#xA;&#xA;The min and max for the user level are inclusive. So the Sim&#xA;can have any career level that meets the following equation and it&#xA;will pass.&#xA;&#xA;min &lt;= current career level &lt;= max." Deprecated="False" filter="0" group="General">
                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="5B20AFD5257CD76C" />
                                <TunableTuple name="enabled" class="TunableInterval" display="Enabled" muid="5E7E787E152AF76A" description="Threshold test for the current user value of a career. If user_level&#xA;is set without career then it will pass if any of their careers &#xA;pass the threshold test. If set along with career then it will only&#xA;pass if the specified career passes the threshold test for user &#xA;level. &#xA;&#xA;The min and max for the user level are inclusive. So the Sim&#xA;can have any career level that meets the following equation and it&#xA;will pass.&#xA;&#xA;min &lt;= current career level &lt;= max." Deprecated="False" filter="0" group="General">
                                    <Tunable type="int" name="lower_bound" class="TunableRange" default="1" display="Lower Bound" muid="7BD6C9D2B2AF7EC2" min="0" max="None" description="The lower bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                    <Tunable type="int" name="upper_bound" class="TunableRange" default="11" display="Upper Bound" muid="4517B319AF9B522B" min="None" max="11" description="The upper bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                </TunableTuple>
                            </TunableVariant>
                        </TunableTuple>
                        <TunableTuple name="career_track" class="TunableCareerTrackTestFactory" display="Career Track" muid="1F1A7507F6DAEF9B" description="Test for whether the specified subjects have a career currently on the &#xA;track specified." Deprecated="False" filter="0" group="General">
                            <Tunable type="career_track" name="career_track" class="TunableReference" display="Career Track" muid="98CE69528AB49E0C" description="A reference to the career track that each subject must have in at&#xA;least one career in order for this test to pass." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                            <TunableVariant type="None" name="user_level" class="OptionalTunable" default="disabled" display="User Level" muid="9432F380F2514297" description="Interval test for the current user value of a career. Career track&#xA;must also be specified for this check to work properly." Deprecated="False" filter="0" group="General">
                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="8614E4CDF22A6B4" />
                                <TunableTuple name="enabled" class="TunableInterval" display="Enabled" muid="2FD609F1A58DE0BE" description="Interval test for the current user value of a career. Career track&#xA;must also be specified for this check to work properly." Deprecated="False" filter="0" group="General">
                                    <Tunable type="int" name="lower_bound" class="TunableRange" default="1" display="Lower Bound" muid="1D1582DECDF29F7E" min="0" max="None" description="The lower bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                    <Tunable type="int" name="upper_bound" class="TunableRange" default="10" display="Upper Bound" muid="F7A85CF502D147BA" min="None" max="10" description="The upper bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                </TunableTuple>
                            </TunableVariant>
                        </TunableTuple>
                        <TunableTuple name="common_career" class="TunableCareerCommonTestFactory" display="Common Career" muid="45AA661336599E87" description="Test used to see if multiple participants have a career in common." Deprecated="False" filter="0" group="General">
                            <TunableList name="targets" class="TunableEnumFlags" default="Listeners" display="Targets" muid="D4E5F48B19904319" description="tuning for the targets to check for the same common career on." Deprecated="False" filter="0" group="General" unique_entries="true">
                                <TunableEnum type="ParticipantType" class="TunableEnumEntry" default="Invalid" muid="42C21837E9B8888F" static_entries="interactions.ParticipantType" Deprecated="False" filter="0" group="General" />
                            </TunableList>
                            <TunableVariant type="None" name="test_type" class="TunableCommonCareerTestsVariant" default="career_reference" display="Test Type" muid="7AABB2B82C158D82" Deprecated="False" filter="0" group="General">
                                <TunableTuple name="career_level" class="TunableCareerLevelTestFactory" display="Career Level" muid="DDE5F8F6D92F8A6B" description="Test to see if the participants have a career at the specified level." Deprecated="False" filter="0" group="General">
                                    <Tunable type="career_level" name="career_level" class="TunableReference" display="Career Level" muid="42B03A5BC8252DE6" description="A reference to career level tuning that each subject must have in &#xA;at least one career in order for this test to pass." tuning_state="NeedsTuning" allow_none="False" Deprecated="False" filter="0" group="General" />
                                </TunableTuple>
                                <TunableTuple name="career_reference" class="TunableCareerReferenceTestFactory" display="Career Reference" muid="3865418F1763832A" description="A test for whether or not the specified subjects have the specified career,&#xA;career user level, or both." Deprecated="False" filter="0" group="General">
                                    <Tunable type="bool" name="allow_invisible_careers" class="Tunable" default="False" display="Allow Invisible Careers" muid="C67C000A5D820E10" description="If checked, this test will also allow non-visible careers (such as&#xA;Odd Jobs) to tested against." Deprecated="False" filter="0" group="General" />
                                    <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="2CACED9AF4C73433" description="Should be called &quot;Ignore List&quot;.  Set of careers that will be ignored&#xA;on the Sim.  If the Sim only had these careers, it would be like having no careers." Deprecated="False" filter="0" group="General" unique_entries="true">
                                        <Tunable type="career" class="TunableReference" muid="9ABA5E88CA412762" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                    </TunableList>
                                    <TunableVariant type="None" name="career" class="OptionalTunable" default="all_careers" display="Career" muid="A8AFDBAE4FC4C732" description="The career to test for on the Sim. When set by itself it will pass&#xA;if the subject simply has this career. When set with user level it&#xA;will only pass if the subjects user level passes the threshold&#xA;test." Deprecated="False" filter="0" group="General">
                                        <Tunable name="all_careers" class="TunableExistance" display="All Careers" muid="2AB485F8062CD25D" />
                                        <Tunable type="career" name="specific_career" class="TunableReference" display="Specific Career" muid="A6BFC4C85586B31" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                    </TunableVariant>
                                    <TunableVariant type="None" name="user_level" class="OptionalTunable" default="disabled" display="User Level" muid="865BD3486979AD70" description="Threshold test for the current user value of a career. If user_level&#xA;is set without career then it will pass if any of their careers &#xA;pass the threshold test. If set along with career then it will only&#xA;pass if the specified career passes the threshold test for user &#xA;level. &#xA;&#xA;The min and max for the user level are inclusive. So the Sim&#xA;can have any career level that meets the following equation and it&#xA;will pass.&#xA;&#xA;min &lt;= current career level &lt;= max." Deprecated="False" filter="0" group="General">
                                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="AE64F0FA93FD544B" />
                                        <TunableTuple name="enabled" class="TunableInterval" display="Enabled" muid="BC2493FA5D9DC54A" description="Threshold test for the current user value of a career. If user_level&#xA;is set without career then it will pass if any of their careers &#xA;pass the threshold test. If set along with career then it will only&#xA;pass if the specified career passes the threshold test for user &#xA;level. &#xA;&#xA;The min and max for the user level are inclusive. So the Sim&#xA;can have any career level that meets the following equation and it&#xA;will pass.&#xA;&#xA;min &lt;= current career level &lt;= max." Deprecated="False" filter="0" group="General">
                                            <Tunable type="int" name="lower_bound" class="TunableRange" default="1" display="Lower Bound" muid="CAF78FCECF4736B5" min="0" max="None" description="The lower bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            <Tunable type="int" name="upper_bound" class="TunableRange" default="11" display="Upper Bound" muid="C3CD063D12A855E1" min="None" max="11" description="The upper bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                    </TunableVariant>
                                </TunableTuple>
                                <TunableTuple name="career_track" class="TunableCareerTrackTestFactory" display="Career Track" muid="2B2FF5173D03F2B2" description="Test for whether the specified subjects have a career currently on the &#xA;track specified." Deprecated="False" filter="0" group="General">
                                    <Tunable type="career_track" name="career_track" class="TunableReference" display="Career Track" muid="54CB57A382466176" description="A reference to the career track that each subject must have in at&#xA;least one career in order for this test to pass." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                    <TunableVariant type="None" name="user_level" class="OptionalTunable" default="disabled" display="User Level" muid="3FFA5A7543331041" description="Interval test for the current user value of a career. Career track&#xA;must also be specified for this check to work properly." Deprecated="False" filter="0" group="General">
                                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="4FCABEB615866417" />
                                        <TunableTuple name="enabled" class="TunableInterval" display="Enabled" muid="54B92E7D3F7C8F9D" description="Interval test for the current user value of a career. Career track&#xA;must also be specified for this check to work properly." Deprecated="False" filter="0" group="General">
                                            <Tunable type="int" name="lower_bound" class="TunableRange" default="1" display="Lower Bound" muid="E47EB9CC591BB662" min="0" max="None" description="The lower bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            <Tunable type="int" name="upper_bound" class="TunableRange" default="10" display="Upper Bound" muid="E76021DB1E64FBA2" min="None" max="10" description="The upper bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                    </TunableVariant>
                                </TunableTuple>
                                <TunableTuple name="same_career_at_user_level" class="TunableSameCareerAtUserLevelTestFactory" display="Same Career At User Level" muid="AC46A3D1F4E3AF70" description="Test to see if the participants share any career that they have the same&#xA;user level." Deprecated="False" filter="0" group="General">
                                    <TunableTuple name="user_level" class="TunableThreshold" display="User Level" muid="701051A0252D4B10" description="User level to test for." Deprecated="False" filter="0" group="General">
                                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="1631BC3693D81D17" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="C6247FE576C3A8C4" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                </TunableTuple>
                            </TunableVariant>
                        </TunableTuple>
                        <TunableTuple name="days_worked" class="TunableCareerDaysWorked" display="Days Worked" muid="E67EF089F7A6E308" description="Test for how many days the Sim has worked for a career." Deprecated="False" filter="0" group="General">
                            <Tunable type="bool" name="active_only" class="Tunable" default="True" display="Active Only" muid="9844F41E204F2A3A" description="If checked, only workdays that the player has actively played will&#xA;count." Deprecated="False" filter="0" group="General" />
                            <Tunable type="career" name="career" class="TunableReference" display="Career" muid="AA34012DB1EFE828" description="The career to test against." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                            <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="10F62E387D9E30C5" description="Threshold test for days worked." Deprecated="False" filter="0" group="General">
                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="9462DAD900BD8EF" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="BEA5988B514F3337" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                            </TunableTuple>
                            <TunableVariant type="None" name="tooltip" class="OptionalTunable" default="disabled" display="Tooltip" muid="6A4FC122C04470FD" description="Reason of failure." Deprecated="False" filter="0" group="General">
                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="E51FFB7A935C3C52" />
                                <Tunable type="int" name="enabled" class="TunableLocalizedString" default="0x0" display="Enabled" muid="D4430BBB9390DA10" description="Reason of failure." Deprecated="False" filter="0" group="General" />
                            </TunableVariant>
                        </TunableTuple>
                        <TunableTuple name="has_available_assignment" class="TunableCareerHasAssignmentTestFactory" display="Has Available Assignment" muid="447DC860A4482C71" description="A test for whether or not the specified subjects has an available assignment&#xA;in the specified career" Deprecated="False" filter="0" group="General">
                            <Tunable type="career" name="career" class="TunableReference" display="Career" muid="5DA0C6D57263F472" description="The career to test for having an available assignment.&#xA;&#xA;If None, will expect career passed in via PickedItemIds (i.e. via picker)." allow_none="True" Deprecated="False" filter="0" group="General" />
                        </TunableTuple>
                        <TunableTuple name="has_career" class="TunableHasCareerTestFactory" display="Has Career" muid="E59E602D718740EE" description="Test for whether or not the specified subjects have a career or not." Deprecated="False" filter="0" group="General">
                            <Tunable type="bool" name="has_career" class="Tunable" default="True" display="Has Career" muid="97BF8CECC4F2C2B8" description="If true all subjects must have a &#xA;career for the test to pass. If False then none of the subjects &#xA;can have a career for the test to pass." Deprecated="False" filter="0" group="General" />
                            <TunableVariant type="None" name="tooltip" class="OptionalTunable" default="disabled" display="Tooltip" muid="D0968E50AA2F9396" description="Reason of failure." Deprecated="False" filter="0" group="General">
                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="65D6D2632AC9C957" />
                                <Tunable type="int" name="enabled" class="TunableLocalizedString" default="0x0" display="Enabled" muid="64AA9F560968CF87" description="Reason of failure." Deprecated="False" filter="0" group="General" />
                            </TunableVariant>
                        </TunableTuple>
                        <TunableTuple name="has_career_outfit" class="TunableHasCareerOutfit" display="Has Career Outfit" muid="71028A1B3A7B896E" description="Test for if the subjects have a career outfit." Deprecated="False" filter="0" group="General" />
                        <TunableTuple name="has_quittable_career" class="TunableQuittableCareerTestFactory" display="Has Quittable Career" muid="142B1410259DDE0F" description="Test for whether or not the specified subjects have a quittable career or not." Deprecated="False" filter="0" group="General">
                            <Tunable type="bool" name="has_quittable_career" class="Tunable" default="True" display="Has Quittable Career" muid="386CDE3D7E4E3D29" description="If True then all of the subjects must have a quittable career in &#xA;order for the test to pass. If False then none of the subjects &#xA;can have a quittable career in order to pass." Deprecated="False" filter="0" group="General" />
                        </TunableTuple>
                        <TunableTuple name="highest_level_achieved" class="TunableCareerHighestLevelAchievedTest" display="Highest Level Achieved" muid="2411901B25E6108" description="Test looking at the highest level ever achieved of a specific career." Deprecated="False" filter="0" group="General">
                            <TunableList name="career_blacklist" class="TunableSet" display="Career Blacklist" muid="4533463DADC2614D" description="A set of careers that will not be looked at." Deprecated="False" filter="0" group="General" unique_entries="true">
                                <Tunable type="career" class="TunableReference" muid="BC7CDAFD0997007C" description="The career we will not check." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                            </TunableList>
                            <TunableVariant type="None" name="careers_to_check" class="OptionalTunable" default="disabled" display="Careers To Check" muid="8F9B0CE5836A4648" description="If enabled then we will only look at the careers listed in this.&#xA;set.  Otherwise will will look at all careers." Deprecated="False" filter="0" group="General">
                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="C888A6D11B4ADEBB" />
                                <TunableList name="enabled" class="TunableSet" display="Enabled" muid="6BD9FDD206921B06" description="A set of careers that will be looked at." Deprecated="False" filter="0" group="General" unique_entries="true">
                                    <Tunable type="career" class="TunableReference" muid="8825E36E7E4652EC" description="The career we will check." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                </TunableList>
                            </TunableVariant>
                            <Tunable type="int" name="careers_to_find" class="TunableRange" default="1" display="Careers To Find" muid="7E61114F9A0E2AF5" min="1" max="None" description="The number of careers that need to match the passing threshold for&#xA;this test to pass." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                            <TunableTuple name="passing_threshold" class="TunableThreshold" display="Passing Threshold" muid="8996EB9E2C6847D5" description="Threshold for determining if a career is considered passing for&#xA;this test." Deprecated="False" filter="0" group="General">
                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="68B8A09D31FF227F" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="4DD724183E1FF92F" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                            </TunableTuple>
                            <TunableVariant type="None" name="tooltip" class="OptionalTunable" default="disabled" display="Tooltip" muid="F11A28124934579D" description="Reason of failure." Deprecated="False" filter="0" group="General">
                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="6DF01362E6B529BE" />
                                <Tunable type="int" name="enabled" class="TunableLocalizedString" default="0x0" display="Enabled" muid="2C556378E7A3D376" description="Reason of failure." Deprecated="False" filter="0" group="General" />
                            </TunableVariant>
                        </TunableTuple>
                        <TunableTuple name="is_elective_course" class="TunableCareerIsElectiveCourseTest" display="Is Elective Course" muid="C1000670A8F76D37" description="Test used to see if a career slot for a sim's university course is associated with an &#xA;elective Univerity course." Deprecated="False" filter="0" group="General">
                            <Tunable type="career" name="career" class="TunableReference" display="Career" muid="96ED9C8AA14DAB0C" description="The career slot to test for associated elective course data on the &#xA;subjects. " allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="UniversityCourseCareerSlot" />
                        </TunableTuple>
                        <TunableTuple name="is_retired" class="TunableIsRetiredTestFactory" display="Is Retired" muid="CF283DC89BF5BDFA" description="Test for whether or not the specified subjects retired from a career." Deprecated="False" filter="0" group="General">
                            <Tunable type="career" name="career" class="TunableReference" display="Career" muid="20C3773CED25BA85" description="The retired career to test for on the subjects. If left unset, the&#xA;test will pass if the Sim is retired from any career." allow_none="False" Deprecated="False" filter="0" group="General" />
                        </TunableTuple>
                        <TunableTuple name="pto_amount" class="TunableCareerPTOAmountTestFactory" display="Pto Amount" muid="BE446BEB3BEDE136" description="A test for whether or not the specified subjects has the requested amount&#xA;of PTO available in the specified career" Deprecated="False" filter="0" group="General">
                            <Tunable type="career" name="career" class="TunableReference" display="Career" muid="CE60DECB927F49BB" description="The career to test for how much PTO the sim has.&#xA;&#xA;If None, will expect career passed in via PickedItemIds (i.e. via picker)." allow_none="True" Deprecated="False" filter="0" group="General" />
                            <TunableTuple name="required_pto_available" class="TunableThreshold" display="Required Pto Available" muid="318B815EA661D38F" description="Threshold test for how much PTO is required" Deprecated="False" filter="0" group="General">
                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="1B89CC91D502CF02" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="AFD1DDD5C4DB423C" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                            </TunableTuple>
                        </TunableTuple>
                        <TunableTuple name="time_off" class="TunableCareerTimeOffTest" display="Time Off" muid="4E4642FE6E51DAB9" description="Require a Sim to be in a career that does not have requested time off for&#xA;the any reason." Deprecated="False" filter="0" group="General">
                            <TunableVariant type="None" name="tooltip" class="OptionalTunable" default="disabled" display="Tooltip" muid="C06F1D7F555F13F7" description="Reason of failure." Deprecated="False" filter="0" group="General">
                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="A7966396CA939FA3" />
                                <Tunable type="int" name="enabled" class="TunableLocalizedString" default="0x0" display="Enabled" muid="59AF7CA24C6476B6" description="Reason of failure." Deprecated="False" filter="0" group="General" />
                            </TunableVariant>
                        </TunableTuple>
                        <TunableTuple name="time_until_work" class="TunableCareerTimeUntilWorkTestFactory" display="Time Until Work" muid="A539E982C4EA390A" description="A test for whether or not the specified subjects has the specified career,&#xA;And that their next work day starts within the specified number of hours" Deprecated="False" filter="0" group="General">
                            <Tunable type="career" name="career" class="TunableReference" display="Career" muid="94FC77F680FD784E" description="The career to test the next start time of.&#xA;&#xA;If None, will expect career passed in via PickedItemIds (i.e. via picker)." allow_none="True" Deprecated="False" filter="0" group="General" />
                            <Tunable type="bool" name="check_all_careers" class="Tunable" default="False" display="Check All Careers" muid="5F8D967489F1A7AF" description="If checked then we will check all careers rather than just the one defined&#xA;in the career tunable.  The test will fail if any career fails." Deprecated="False" filter="0" group="General" />
                            <TunableTuple name="hours_till_work" class="TunableInterval" display="Hours Till Work" muid="488D1E355D67A78F" description="Threshold test for how long 'till the &quot;next&quot; start time.  It will&#xA;test up to one hour past the start time, at which point it will test&#xA;against the next start time." Deprecated="False" filter="0" group="General">
                                <Tunable type="float" name="lower_bound" class="TunableRange" default="-1" display="Lower Bound" muid="D92BBDFE3B2161DE" min="-23" max="None" description="The lower bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                <Tunable type="float" name="upper_bound" class="TunableRange" default="23" display="Upper Bound" muid="381C1DA58A0AA54" min="None" max="168" description="The upper bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                            </TunableTuple>
                        </TunableTuple>
                    </TunableVariant>
                </TunableTuple>
                <TunableTuple name="club" class="TunableClubTest" display="Club" muid="9DB052717EE22085" description="A tunable factory that tests against Clubs.&#xA;&#xA;For use only with ClubSuperInteractions and ClubMixerInteractions." Deprecated="False" filter="0" group="General">
                    <TunableVariant type="None" name="affordance_rule" class="OptionalTunable" default="disabled" display="Affordance Rule" muid="5707D3921A9A42C7" description="If set, then the affordance being tested (should one exist) must&#xA;satisfy this rule requirement." Deprecated="False" filter="0" group="General">
                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="C7076229956BF475" />
                        <TunableVariant type="None" name="enabled" class="TunableVariant" default="is_encouraged" display="Enabled" muid="319B691C73BB034B" description="The rule requirement that the affordance must satisfy." Deprecated="False" filter="0" group="General">
                            <Tunable name="is_discouraged" class="TunableExistance" display="Is Discouraged" muid="2B32ED98B05EE2BD" />
                            <Tunable name="is_encouraged" class="TunableExistance" display="Is Encouraged" muid="4E7236790632215C" />
                            <Tunable name="is_not_discouraged" class="TunableExistance" display="Is Not Discouraged" muid="A1FC53DDFD0CA05D" />
                            <Tunable name="is_not_encouraged" class="TunableExistance" display="Is Not Encouraged" muid="2186BC3F2AA4EC5C" />
                        </TunableVariant>
                    </TunableVariant>
                    <TunableVariant type="None" name="club_status" class="OptionalTunable" default="disabled" display="Club Status" muid="B9F8707757974793" description="In enabled, require the tuned &quot;subject&quot; to either be or not be a&#xA;member of this interaction's associated Club." Deprecated="False" filter="0" group="General">
                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="EFDF907F448ED6C4" />
                        <TunableVariant type="None" name="enabled" class="TunableVariant" default="none" display="Enabled" muid="D065F24C6DB6C21C" description="In enabled, require the tuned &quot;subject&quot; to either be or not be a&#xA;member of this interaction's associated Club." Deprecated="False" filter="0" group="General">
                            <Tunable name="Leader" class="TunableExistance" display="Leader" muid="495FAC0EA7D2CC8" />
                            <Tunable name="Member" class="TunableExistance" display="Member" muid="4A813E577B1E2725" />
                            <Tunable name="none" class="TunableExistance" display="None" muid="D3672FAB89910D39" />
                            <Tunable name="Not Leader" class="TunableExistance" display="Not Leader" muid="29D7A69C5ABF5BC9" />
                            <Tunable name="Not Member" class="TunableExistance" display="Not Member" muid="A1755C39FE782114" />
                        </TunableVariant>
                    </TunableVariant>
                    <TunableVariant type="None" name="invite_only" class="OptionalTunable" default="disabled" display="Invite Only" muid="BD6AB32612ED7B2D" description="If enabled, require the associated Club to either be invite only or&#xA;be open to everyone." Deprecated="False" filter="0" group="General">
                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="AEE7ADD5F5AC166B" />
                        <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="28BB4B8EA48B69B7" description="If enabled, require the associated Club to either be invite only or&#xA;be open to everyone." Deprecated="False" filter="0" group="General" />
                    </TunableVariant>
                    <Tunable type="bool" name="pass_if_any_clubs_pass" class="Tunable" default="False" display="Pass If Any Clubs Pass" muid="18D14EE659CFAF49" description="If checked then this test will pass if any of the clubs match the&#xA;requirements otherwise we require all clubs to meet the&#xA;requirements." Deprecated="False" filter="0" group="General" />
                    <TunableVariant type="None" name="recent_member_status" class="OptionalTunable" default="disabled" display="Recent Member Status" muid="D38F17371BDC9CFD" description="If specified, the Sim must satisfy recent member status&#xA;requirements." Deprecated="False" filter="0" group="General">
                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="6136330565BE798D" />
                        <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="3CD20A3543CB031F" description="Whether or not the Sim must be a recent member of the Club in&#xA;order to pass this test." Deprecated="False" filter="0" group="General" />
                    </TunableVariant>
                    <TunableVariant type="None" name="require_common_club" class="OptionalTunable" default="disabled" display="Require Common Club" muid="E74E75741A0F098A" description="If enabled, then there must be a common Club that both the subject&#xA;Sim and this specified Sim are in. If the club type is set to &quot;Use&#xA;Club from Resolver&quot;, then both Sims must be in that Club. If the&#xA;club type is set to &quot;Use Any Club&quot;, then there must be one club both&#xA;the subject Sim and this Sim are in." Deprecated="False" filter="0" group="General">
                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="85C5A306726DBB2" />
                        <TunableEnum type="ParticipantType" name="enabled" class="TunableEnumEntry" default="TargetSim" display="Enabled" muid="864CD57F90BD71F5" static_entries="interactions.ParticipantType" description="The Sim to test against for a common Club. If a multi-Sim&#xA;participant is specified, the union of their clubs is&#xA;considered, i.e. the test passes if at least one Sim satisfies&#xA;the requirements." Deprecated="False" filter="0" group="General" />
                    </TunableVariant>
                    <TunableVariant type="None" name="required_sim_count" class="OptionalTunable" default="disabled" display="Required Sim Count" muid="88CAF3AD71C9B8C6" description="If enabled then this test will only pass if the group has a number &#xA;of members that passes the tuned threshold." Deprecated="False" filter="0" group="General">
                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="10AA46302D058E3B" />
                        <TunableTuple name="enabled" class="TunableThreshold" display="Enabled" muid="D4AEA47202961280" description="The member requirement for this test to pass." Deprecated="False" filter="0" group="General">
                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="7C6F61D4176D85DB" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                            <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="F3A5874228BA14BE" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                        </TunableTuple>
                    </TunableVariant>
                    <TunableVariant type="None" name="room_for_new_members" class="OptionalTunable" default="disabled" display="Room For New Members" muid="2367DB27758926FF" description="If enabled, require the associated Club to either have room for new&#xA;members or not have room for new members." Deprecated="False" filter="0" group="General">
                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="EAF792B76AC9B225" />
                        <TunableVariant type="None" name="enabled" class="TunableVariant" default="none" display="Enabled" muid="48384A8DC0A6DAA7" description="If enabled, require the associated Club to either have room for new&#xA;members or not have room for new members." Deprecated="False" filter="0" group="General">
                            <Tunable name="Has No Room" class="TunableExistance" display="Has No Room" muid="B8B7F13B5D1F08EE" />
                            <Tunable name="Has Room" class="TunableExistance" display="Has Room" muid="4DAC591E4F029254" />
                            <Tunable name="none" class="TunableExistance" display="None" muid="57712C9B1ECBFA31" />
                        </TunableVariant>
                    </TunableVariant>
                    <TunableVariant type="None" name="subject_can_join_more_clubs" class="OptionalTunable" default="disabled" display="Subject Can Join More Clubs" muid="5CCFEE3E5A2E65C2" description="If enabled, require the tuned &quot;subject&quot; to be allowed to join more&#xA;Clubs or not.&#xA;&#xA;The maximum number of Clubs per Sim is set in&#xA;club_tuning.ClubTunables in the &quot;MAX_CLUBS_PER_SIM&quot; tunable." Deprecated="False" filter="0" group="General">
                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="A963E68A99C32B74" />
                        <TunableVariant type="None" name="enabled" class="TunableVariant" default="none" display="Enabled" muid="15C9D361AA0F30DB" description="If enabled, require the tuned &quot;subject&quot; to be allowed to join more&#xA;Clubs or not.&#xA;&#xA;The maximum number of Clubs per Sim is set in&#xA;club_tuning.ClubTunables in the &quot;MAX_CLUBS_PER_SIM&quot; tunable." Deprecated="False" filter="0" group="General">
                            <Tunable name="Can Join More Clubs" class="TunableExistance" display="Can Join More Clubs" muid="29563548E43FF6C9" />
                            <Tunable name="Cannot Join More Clubs" class="TunableExistance" display="Cannot Join More Clubs" muid="E5FE12BF85FDD" />
                            <Tunable name="none" class="TunableExistance" display="None" muid="6C06C6FD5919B29D" />
                        </TunableVariant>
                    </TunableVariant>
                    <TunableVariant type="None" name="subject_passes_membership_criteria" class="OptionalTunable" default="disabled" display="Subject Passes Membership Criteria" muid="D3FA67E413E95645" description="If enabled, require the tuned &quot;subject&quot; to either pass this&#xA;associated Club's membership criteria or not pass the membership&#xA;criteria." Deprecated="False" filter="0" group="General">
                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="851777382544B4B7" />
                        <TunableVariant type="None" name="enabled" class="TunableVariant" default="none" display="Enabled" muid="8E2B3806052FC0D5" description="If enabled, require the tuned &quot;subject&quot; to either pass this&#xA;associated Club's membership criteria or not pass the membership&#xA;criteria." Deprecated="False" filter="0" group="General">
                            <Tunable name="Does Not Pass Criteria" class="TunableExistance" display="Does Not Pass Criteria" muid="573236596F06F58" />
                            <Tunable name="none" class="TunableExistance" display="None" muid="28FD99BA7837944D" />
                            <Tunable name="Passes Criteria" class="TunableExistance" display="Passes Criteria" muid="901D133BC4F6725D" />
                        </TunableVariant>
                    </TunableVariant>
                    <TunableVariant type="None" name="subject_relationship_with_leader" class="OptionalTunable" default="disabled" display="Subject Relationship With Leader" muid="49E63693DE99CBB5" description="If enabled, the tuned subject is required to have a specific&#xA;relationship with the leader. If the subject and the leader match,&#xA;the test fails." Deprecated="False" filter="0" group="General">
                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="9DDAD5F4A35A390A" />
                        <TunableTuple name="enabled" class="TunableRelationshipTest" display="Enabled" muid="33130F33FC555F8" description="Gate availability by a relationship status." Deprecated="False" filter="0" group="General">
                            <Tunable type="bool" name="invert_num_relations" class="Tunable" default="False" display="Invert Num Relations" muid="5E9AD3D2D983481D" description="If checked then we will check that your Num Relations is less than or&#xA;equal to the value rather than the other way around." Deprecated="False" filter="0" group="General" />
                            <TunableTuple name="prohibited_relationship_bits" class="TunableTuple" display="Prohibited Relationship Bits" muid="4265B8FC67E41710" Deprecated="False" filter="0" group="General">
                                <TunableList name="match_all" class="TunableSet" display="Match All" muid="914A1A2191DA44BA" description="All of these relationship bits must match to fail the test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                    <Tunable type="relbit" class="TunableReference" muid="C544EA275C506BD" allow_none="False" Deprecated="False" filter="0" group="General" />
                                </TunableList>
                                <TunableList name="match_any" class="TunableSet" display="Match Any" muid="38E5449F83CF27D" description="If any of these relationship bits match the test will fail." Deprecated="False" filter="0" group="General" unique_entries="true">
                                    <Tunable type="relbit" class="TunableReference" muid="72A492912F1C3BC" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                </TunableList>
                            </TunableTuple>
                            <TunableTuple name="relationship_score_interval" class="TunableInterval" display="Relationship Score Interval" muid="F9A04D1C254DAA48" description="The range that the relationship score must be within in order for&#xA;this test to pass." Deprecated="False" filter="0" group="General">
                                <Tunable type="float" name="lower_bound" class="TunableRange" default="-100.0" display="Lower Bound" muid="2AC1A7E4749BA792" min="-100.0" max="None" description="The lower bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                <Tunable type="float" name="upper_bound" class="TunableRange" default="100.0" display="Upper Bound" muid="F40D7FD737DE55BD" min="None" max="100.0" description="The upper bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                            </TunableTuple>
                            <TunableTuple name="required_relationship_bits" class="TunableTuple" display="Required Relationship Bits" muid="CA210A519E6C19AC" Deprecated="False" filter="0" group="General">
                                <TunableList name="match_all" class="TunableSet" display="Match All" muid="7087A59953A97232" description="All of these relationship bits must be present to pass the&#xA;test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                    <Tunable type="relbit" class="TunableReference" muid="8FABA007FCE8921E" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                </TunableList>
                                <TunableList name="match_any" class="TunableSet" display="Match Any" muid="A3C6DB8520E1D28C" description="Any of these relationship bits will pass the test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                    <Tunable type="relbit" class="TunableReference" muid="3A8E0FB2AE68849F" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                </TunableList>
                            </TunableTuple>
                            <TunableEnum type="RelationshipTestEvents" name="test_event" class="TunableEnumEntry" default="AllRelationshipEvents" display="Test Event" muid="6D6BB4E366D44134" static_entries="relationships-relationship_tests.RelationshipTestEvents" description="The event that we want to trigger this instance of the tuned test&#xA;on." Deprecated="False" filter="0" group="General" />
                            <TunableVariant type="None" name="test_incest" class="TunableVariant" default="disabled" display="Test Incest" muid="B1DCAA4C08AD9316" description="Test for incest status. Test passes if this matches the two Sim's&#xA;incest status." Deprecated="False" filter="0" group="General">
                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="C4D48282277BDA6E" />
                                <Tunable name="is incestuous" class="TunableExistance" display="Is Incestuous" muid="387A343493755F90" />
                                <Tunable name="is not incestuous" class="TunableExistance" display="Is Not Incestuous" muid="6C3B6F7AE74E6165" />
                            </TunableVariant>
                            <Tunable type="statistic" name="track" class="TunableReference" display="Track" muid="5465D173695074C3" description="If set, the test will use the relationship score between sims for&#xA;this track. If unset, the track defaults to the global module&#xA;tunable REL_INSPECTOR_TRACK." allow_none="True" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="RelationshipTrack" />
                        </TunableTuple>
                    </TunableVariant>
                </TunableTuple>
                <TunableTuple name="collection" class="TunableCollectionThresholdTest" display="Collection" muid="E6E656FA0000A065" description="Tests for a provided amount of a given collection type." Deprecated="False" filter="0" group="General">
                    <TunableEnum type="CollectionIdentifier" name="collection_type" class="TunableEnumEntry" default="Unindentified" display="Collection Type" muid="94E271C9320DCF7D" dynamic_entries="objects-collection_manager.CollectionIdentifier._elements" static_entries="objects-collection_manager.CollectionIdentifier" description="The collection we are checking on.  If collection type is&#xA;unidentified then we will look through all collections." Deprecated="False" filter="0" group="General" />
                    <Tunable type="bool" name="complete_collection" class="Tunable" default="False" display="Complete Collection" muid="21407908D3A71DA6" description="Setting this to True (checked) will override the threshold and&#xA;check for collection completed" Deprecated="False" filter="0" group="General" />
                    <TunableVariant type="None" name="specific_items" class="OptionalTunable" default="disabled" display="Specific Items" muid="BD18384A490FC41E" description="If enabled then the collection threshold test will check for&#xA;specific items within the collection.  When enabled both the&#xA;Collection Type and Complete Collection tuning will be ignored." Deprecated="False" filter="0" group="General">
                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="C63FAA5B746756F2" />
                        <TunableList name="enabled" class="TunableList" display="Enabled" muid="BDCBE637E3F13F26" description="List of allowed objects within a collection that we want to&#xA;check." Deprecated="False" filter="0" group="General">
                            <Tunable type="object" class="TunableReference" muid="71E06CC0CEFDF93E" description="Object reference to each collectible object." allow_none="False" Deprecated="False" filter="0" group="General" />
                        </TunableList>
                    </TunableVariant>
                    <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="7EDB9256E4103908" description="Threshold for which the Sim experiences motive failure" Deprecated="False" filter="0" group="General">
                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="A8F6562E6C3A077D" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                        <Tunable type="int" name="value" class="Tunable" default="1" display="Value" muid="234EF5273EDC4CA4" description="The value of the threshold that the collection is compared&#xA;against." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                    </TunableTuple>
                </TunableTuple>
                <TunableTuple name="location" class="TunableLocationTest" display="Location" muid="5F45A1F7066308A0" description="Tests for object locations.&#xA;Outside: Check if an object is on the inside or outside (has a roof over&#xA;its head)&#xA;Natural ground: Checks the floor tiles where the object is to see if it &#xA;qualifies as natural ground" Deprecated="False" filter="0" group="General">
                    <TunableTuple name="location_tests" class="TunableTuple" display="Location Tests" muid="6EF11C75FE9ACAB" Deprecated="False" filter="0" group="General">
                        <TunableVariant type="None" name="has_terrain_tag" class="OptionalTunable" default="Don't_Test" display="Has Terrain Tag" muid="1AF3736650F790C3" description="If checked, will verify the subject of the test is currently on&#xA;the tuned terrain tag." Deprecated="False" filter="0" group="General">
                            <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="BD25531CD8971DB4" />
                            <TunableTuple name="enabled" class="TunableTuple" display="Enabled" muid="163DAFF6FE527EA4" description=",&#xA;A set of terrain tags required for this test to pass." Deprecated="False" filter="0" group="General">
                                <Tunable type="bool" name="negate" class="Tunable" default="False" display="Negate" muid="5930BD3504E0E7D5" description="If checked, the test will be inverted. In other words,&#xA;the test will fail if at least one tag is detected at&#xA;this location." Deprecated="False" filter="0" group="General" />
                                <TunableList name="terrain_tags" class="TunableEnumSet" display="Terrain Tags" muid="3B5EF6200A242AC7" description="A set of terrain tags. Only one of these tags needs to be&#xA;present at this location. Although it is not tunable, there&#xA;is a threshold weight underneath which a terrain tag will&#xA;not appear to be present." Deprecated="False" filter="0" group="General" unique_entries="true">
                                    <TunableEnum type="TerrainTag" class="TunableEnumEntry" default="INVALID" muid="D9B15FA5C009B608" static_entries="world-terrain_enums.TerrainTag" Deprecated="False" filter="0" group="General" />
                                </TunableList>
                                <Tunable type="bool" name="test_floor_tiles" class="Tunable" default="False" display="Test Floor Tiles" muid="C00C52875071DEA5" description="If checked, floor tiles will be tested. Otherwise, &#xA;it'll only check the terrain and will ignore the &#xA;floor tiles on the terrain." Deprecated="False" filter="0" group="General" />
                            </TunableTuple>
                        </TunableVariant>
                        <TunableVariant type="None" name="in_common_area" class="OptionalTunable" default="Don't_Test" display="In Common Area" muid="28A19F750CBE7AD8" description="If checked, will verify the subject is in the common area&#xA;of an apartment.  If unchecked will verify the subject is not." Deprecated="False" filter="0" group="General">
                            <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="311ECEB04AD7DC" />
                            <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="64AD93CD0925B066" Deprecated="False" filter="0" group="General" />
                        </TunableVariant>
                        <TunableVariant type="None" name="is_fire_allowed" class="OptionalTunable" default="Don't_Test" display="Is Fire Allowed" muid="55543366BEB88A76" description="If checked, will verify if fire is possible at the subject's position. &#xA;If unchecked, will pass if fire is not possible.&#xA;If not enabled, doesn't care either way." Deprecated="False" filter="0" group="General">
                            <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="E6A8D8FF7E436D75" />
                            <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="20622A92CC27BBCA" Deprecated="False" filter="0" group="General" />
                        </TunableVariant>
                        <TunableVariant type="None" name="is_in_slot" class="OptionalTunable" default="Don't_Test" display="Is In Slot" muid="D6620FA607EED281" description="If enabled will test if the object is attacked/deattached to&#xA;any of possible tuned slots.&#xA;If you tune a slot type set the test will test if the object &#xA;is slotted or not slotted into into any of those types. " Deprecated="False" filter="0" group="General">
                            <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="6C0B99753E37D5A4" />
                            <TunableTuple name="enabled" class="TunableTuple" display="Enabled" muid="5245AFC8D77D0119" description="Test if an object is current slotted in any of a possible&#xA;list of slot types.&#xA;Empty slot type set is allowed for testing for slotted or&#xA;not slotted only." Deprecated="False" filter="0" group="General">
                                <TunableVariant type="None" name="slot_test_type" class="TunableVariant" default="any_slot" display="Slot Test Type" muid="EEA755A62DFA2171" description="Strategy to test the slots:&#xA;Any Slot - is the object in any slot&#xA;Surface Slot - is object is in a surface slot&#xA;Specific Slot - is the object in specific list of slots" Deprecated="False" filter="0" group="General">
                                    <TunableTuple name="any_slot" class="TunableSlotTestType" display="Any Slot" muid="D3B424B535966827" description="Singleton factory for testing if object is slotted." Deprecated="False" filter="0" group="General">
                                        <Tunable type="bool" name="require_slotted" class="Tunable" default="True" display="Require Slotted" muid="8966E64C57C68D60" description="If checked, return success if the object is slotted&#xA;If unchecked, test the absense of slotting." Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                    <TunableTuple name="specific_slot" class="TunableSpecificSlotTest" display="Specific Slot" muid="8A449ABA84FF4562" description="Subclass of SlotTestType that can check against a specific&#xA;slot set." Deprecated="False" filter="0" group="General">
                                        <Tunable type="bool" name="require_slotted" class="Tunable" default="True" display="Require Slotted" muid="C146BD5A58330C73" description="If checked, return success if the object is slotted&#xA;If unchecked, test the absense of slotting." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="slot_type_set" name="specific_slot_set" class="TunableReference" display="Specific Slot Set" muid="80CB9AF06759F3E8" description="Set of slots the object may be attached to." allow_none="False" Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                    <TunableTuple name="surface_slot" class="TunableSurfaceSlotTest" display="Surface Slot" muid="299D193C039BDEE1" description="Subclass of SlotTestType that checks that a slot has&#xA;is_surface set to true." Deprecated="False" filter="0" group="General">
                                        <Tunable type="bool" name="require_slotted" class="Tunable" default="True" display="Require Slotted" muid="2BFDC005D97AD6B4" description="If checked, return success if the object is slotted&#xA;If unchecked, test the absense of slotting." Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                </TunableVariant>
                            </TunableTuple>
                        </TunableVariant>
                        <TunableVariant type="None" name="is_inside_building" class="OptionalTunable" default="Don't_Test" display="Is Inside Building" muid="E43F51B6627AE410" description="If checked, will verify if the subject of the test is inside a&#xA;building. This uses a client function that checks if the block&#xA;the sim is mostly enclosed by walls or if not, if the adjoining&#xA;blocks are themselves enclosed. This should be used when we&#xA;want to test if a subject is inside a normally constructed &#xA;building. If we simply want to test whether the subject is &#xA;covered / has a roof over them, use is_outside. See comment on&#xA;is_outside for more details. If unchecked, will negate this &#xA;test." Deprecated="False" filter="0" group="General">
                            <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="CB7066990ED185B" />
                            <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="3A7E2763FED9935D" Deprecated="False" filter="0" group="General" />
                        </TunableVariant>
                        <TunableVariant type="None" name="is_natural_ground" class="OptionalTunable" default="Don't_Test" display="Is Natural Ground" muid="AA3739D0960A2742" description="If checked, will verify the subject of the test is on natural &#xA;ground (no floor tiles are under him).&#xA;Otherwise, will verify the subject of the test is not on &#xA;natural ground." Deprecated="False" filter="0" group="General">
                            <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="749DE4E6DC035E02" />
                            <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="872E4DACD3FEDE47" Deprecated="False" filter="0" group="General" />
                        </TunableVariant>
                        <TunableVariant type="None" name="is_on_active_lot" class="OptionalTunable" default="Don't_Test" display="Is On Active Lot" muid="6D73EF7D94FD34C0" description="If disabled the test will not be used.&#xA;If enabled and checked, the test will pass if the subject is&#xA;on the active lot. (their center is within the lot bounds)&#xA;If enabled and not checked, the test will pass if the subject is &#xA;outside of the active lot.&#xA;&#xA;For example, Ask To Leave is tuned with this enabled and checked&#xA;for the TargetSim. You can only ask someone to leave if they&#xA;are actually on the active lot, but not if they are wandering&#xA;around in the open streets." Deprecated="False" filter="0" group="General">
                            <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="7A9447BF027F1BB7" />
                            <TunableTuple name="Is_or_is_not_on_active_lot" class="TunableTuple" display="Is Or Is Not On Active Lot" muid="138D32FF67294399" Deprecated="False" filter="0" group="General">
                                <Tunable type="bool" name="include_spawn_point" class="Tunable" default="False" display="Include Spawn Point" muid="8CAD819E0249093C" description="If set to true, we will consider the lot's spawn point as part of the active lot." Deprecated="False" filter="0" group="General" />
                                <Tunable type="bool" name="is_or_is_not_on_active_lot" class="Tunable" default="True" display="Is Or Is Not On Active Lot" muid="AD968969449FC9B7" description="If checked then the test will pass if the subject is on&#xA;the active lot." Deprecated="False" filter="0" group="General" />
                                <TunableVariant type="None" name="tolerance" class="TunableVariant" default="explicit" display="Tolerance" muid="276E35FAC6A559B1" Deprecated="False" filter="0" group="General">
                                    <Tunable type="int" name="explicit" class="Tunable" default="0" display="Explicit" muid="BD5F874FD4FD6522" description="The tolerance from the edge of the lot that the&#xA;location test will use in order to determine if the&#xA;test target is considered on lot or not." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                    <TunableTuple name="use_default_tolerance" class="UseDefaultOfflotToleranceFactory" display="Use Default Tolerance" muid="2BEE952850A97627" description="Use the default tuned global offlot tolerance tuned&#xA;in objects.components.statistic_component.Default Off Lot." Deprecated="False" filter="0" group="General" />
                                </TunableVariant>
                            </TunableTuple>
                        </TunableVariant>
                        <TunableVariant type="None" name="is_on_level" class="OptionalTunable" default="Don't_Test" display="Is On Level" muid="63CEC70631F4A9D8" description="If enabled, we check the participant's current level against&#xA;the tuned threshold.  In the case of sims in pools, the effective&#xA;level will be that of the surface of the pool, not the bottom." Deprecated="False" filter="0" group="General">
                            <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="B7A4435B8B64F6EE" />
                            <TunableTuple name="enabled" class="TunableThreshold" display="Enabled" muid="D7D0467871339383" description="Value/comparison pair used to define a Threshold." Deprecated="False" filter="0" group="General">
                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="E5EBC99D4FD57301" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                <Tunable type="int" name="value" class="Tunable" default="0" display="Value" muid="85C3925F988FCC28" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                            </TunableTuple>
                        </TunableVariant>
                        <TunableVariant type="None" name="is_outside" class="OptionalTunable" default="Don't_Test" display="Is Outside" muid="DAF63018B9139771" description="PLEASE BE AWARE. If checked, will verify if the subject of the&#xA;test does not have a roof over their head. If unchecked, will &#xA;test if the subject has a roof over their head. If the &#xA;intention is to determine if a subject is in/not in a building, &#xA;this test is deprecated in favor of is_inside_building. If you &#xA;would like to test if a subject is inside a building, but also &#xA;need to test if they have a roof over their head, please use &#xA;both options." Deprecated="False" filter="0" group="General">
                            <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="1E2BDDBC25F0A0B" />
                            <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="B2E55CE257992CB4" Deprecated="False" filter="0" group="General" />
                        </TunableVariant>
                        <TunableVariant type="None" name="is_venue_type" class="OptionalTunable" default="Don't_Test" display="Is Venue Type" muid="C6B68A9C7562BF87" description="If checked, will verify if the subject is at a venue of the&#xA;specified type." Deprecated="False" filter="0" group="General">
                            <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="35B9443539C6245" />
                            <TunableTuple name="enabled" class="TunableTuple" display="Enabled" muid="5B73E9F278C690A3" description="Venue type required for this test to pass." Deprecated="False" filter="0" group="General">
                                <Tunable type="bool" name="negate" class="Tunable" default="False" display="Negate" muid="E01FAAEA401CD60" description="If enabled, the test will return true if the subject&#xA;IS NOT at a venue of the specified type." Deprecated="False" filter="0" group="General" />
                                <Tunable type="bool" name="use_source_venue" class="Tunable" default="False" display="Use Source Venue" muid="6EBB0C91D9150396" description="If enabled, the test will test the source venue instead of the active&#xA;venue.  For example, the Community Lot instead of the active Marketplace.&#xA;Testing the active venue is the default." Deprecated="False" filter="0" group="General" />
                                <Tunable type="venue" name="venue_type" class="TunableReference" display="Venue Type" muid="4F5D0E106A10CC05" description="Venue type to test against." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                            </TunableTuple>
                        </TunableVariant>
                        <TunableVariant type="None" name="valid_surface_types" class="OptionalTunable" default="Don't_Test" display="Valid Surface Types" muid="472BD72AAAC0BBAC" description="If enabled, we will test the surface type of the subject&#xA;against prohibited or required surface types." Deprecated="False" filter="0" group="General">
                            <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="16925FC1EB6528AC" />
                            <TunableTuple name="Test_Surface_Types" class="TunableWhiteBlackList" display="Test Surface Types" muid="73B173F73D3DBBF1" description="Required and Prohibited Surface Types. " Deprecated="False" filter="0" group="General">
                                <TunableVariant type="None" name="blacklist" class="OptionalTunable" default="nothing" display="Blacklist" muid="A20467CBEB52A6E2" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is not in the blacklist. If no blacklist is&#xA;specified, no items are disallowed." Deprecated="False" filter="0" group="General">
                                    <Tunable name="nothing" class="TunableExistance" display="Nothing" muid="D12E91CDED31725B" />
                                    <TunableTuple name="specify" class="TunableBlacklist" display="Specify" muid="F8967A1934EFFF96" description="A tunable blacklist." Deprecated="False" filter="0" group="General">
                                        <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="9B8944D624990B0A" description="Blacklisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                            <TunableEnum type="SurfaceType" class="TunableEnumEntry" default="SURFACETYPE_WORLD" muid="17D3DA829F763704" static_entries="routing.SurfaceType" description="Surface Type the object is placed on." Deprecated="False" filter="0" group="General" invalid_entries="SURFACETYPE_UNKNOWN" />
                                        </TunableList>
                                        <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="2EC899BC5596A115" description="Tunable option for how many items must be in the blacklist&#xA;for the blacklist to fail when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                            <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="47CB9F9EA1F7CD2B" />
                                            <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="E2B55F904555EE6D" description="When testing a collection of items, the number of items in&#xA;that collection that are in the blacklist must pass this&#xA;threshold test for the blacklist to disallow them all." Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="6A3D178E430AD081" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="9D1D922CF6DD4E75" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                        </TunableVariant>
                                    </TunableTuple>
                                </TunableVariant>
                                <TunableVariant type="None" name="whitelist" class="OptionalTunable" default="everything" display="Whitelist" muid="4A30AD6BAE512B97" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is in the whitelist. If no whitelist is&#xA;specified, all items are allowed." Deprecated="False" filter="0" group="General">
                                    <Tunable name="everything" class="TunableExistance" display="Everything" muid="11A1483183F2DC19" />
                                    <TunableTuple name="specify" class="TunableWhitelist" display="Specify" muid="2E02C4CAC9A7586F" description="A tunable whitelist." Deprecated="False" filter="0" group="General">
                                        <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="7192595171C898A4" description="Tunable option for how many items must be in the whitelist&#xA;for the whitelist to pass when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                            <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="4483BCC454986A52" />
                                            <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="2D05A9C4A6EC4470" description="When testing a collection of items, the number of items in&#xA;that collection that are in the whitelist must pass this&#xA;threshold test for the whitelist to allow them all." Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="1E18B75507D61A85" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="6D56A26C65AF0B5C" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                        </TunableVariant>
                                        <TunableList name="whitelist" class="TunableSet" display="Whitelist" muid="30ECDA0AB2C9750" description="Whitelisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                            <TunableEnum type="SurfaceType" class="TunableEnumEntry" default="SURFACETYPE_WORLD" muid="C72EAC7A8564CEE1" static_entries="routing.SurfaceType" description="Surface Type the object is placed on." Deprecated="False" filter="0" group="General" invalid_entries="SURFACETYPE_UNKNOWN" />
                                        </TunableList>
                                    </TunableTuple>
                                </TunableVariant>
                            </TunableTuple>
                        </TunableVariant>
                    </TunableTuple>
                </TunableTuple>
                <TunableTuple name="lot_owner" class="TunableLotOwnerTest" display="Lot Owner" muid="7A032494CE1C087C" description="Gate availability by whether a sim owns the lot the object is on or not." Deprecated="False" filter="0" group="General">
                    <Tunable type="bool" name="consider_business_lot_as_owned" class="Tunable" default="True" display="Consider Business Lot As Owned" muid="4E843A1CA0DA551" description="If checked, business lots are considered owned. If unchecked, business&#xA;lots are considered unowned." Deprecated="False" filter="0" group="General" />
                    <Tunable type="bool" name="consider_rented_lot_as_owned" class="Tunable" default="True" display="Consider Rented Lot As Owned" muid="E067EE3E12CA80CA" description="If checked, rented lots are considered owned. If unchecked, rented&#xA;lots are considered unowned." Deprecated="False" filter="0" group="General" />
                    <Tunable type="bool" name="invert" class="Tunable" default="False" display="Invert" muid="31B9C06CEBE4F380" description="If checked, this test will return the opposite of what it's tuned to&#xA;return. For instance, if this test is tuned to return True if the&#xA;active household owns the lot, but &quot;Invert&quot; is checked, it will&#xA;actually return False." Deprecated="False" filter="0" group="General" />
                    <Tunable type="bool" name="owns_lot" class="Tunable" default="True" display="Owns Lot" muid="B7EA805231FCB4EF" description="If checked and subject owns the current lot then this test will&#xA;pass. If unchecked, subject does not own lot, this test will pass." Deprecated="False" filter="0" group="General" />
                </TunableTuple>
                <TunableTuple name="mood" class="TunableMoodTest" display="Mood" muid="4CC176DAC6553A33" description="A tunable test that tests if a Sim has the requested mood." Deprecated="False" filter="0" group="General">
                    <Tunable type="bool" name="disallow" class="Tunable" default="False" display="Disallow" muid="C69E54DB841EBF0E" description="If True, this test will pass if the Sim's mood does NOT match the tuned mood reference." Deprecated="False" filter="0" group="General" />
                    <Tunable type="mood" name="mood" class="TunableReference" display="Mood" muid="F883C13344701612" description="The mood that must be active (or must be inactive, if 'Disallow' is&#xA;checked)." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                </TunableTuple>
                <TunableTuple name="motive" class="TunableMotiveThresholdTest" display="Motive" muid="5FBFAD35812F9C77" description="A tunable test method that checks one or many statistics against a threshold." Deprecated="False" filter="0" group="General">
                    <TunableList name="stats" class="TunableList" display="Stats" muid="A914241DF1FC4A9" description="The stat we are operating on." Deprecated="False" filter="0" group="General">
                        <Tunable type="statistic" class="TunableReference" muid="93D9E280CFE1EA40" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                    </TunableList>
                    <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="E7EE737A540B0C3D" description="The threshold to control availability based on the statistic's value." Deprecated="False" filter="0" group="General">
                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="16D257D7C17B707B" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                        <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="84382621CC4225A3" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                    </TunableTuple>
                </TunableTuple>
                <Tunable name="none" class="TunableExistance" display="None" muid="16CB170E3513DE74" />
                <TunableTuple name="ranked_statistic" class="TunableRankedStatThresholdTest" display="Ranked Statistic" muid="88765C276C7B5765" description="A test that checks whether or not a statistic is at a certain threshold for&#xA;a given participant." Deprecated="False" filter="0" group="General">
                    <Tunable type="bool" name="must_have_ranked_stat" class="Tunable" default="False" display="Must Have Ranked Stat" muid="9390F635B3CFBC7" description="Setting this to True (checked) will ensure that this test only&#xA;passes if the tested Sim actually has the ranked statistic &#xA;referenced. If left False (unchecked), this test will evaluate &#xA;as if the Sim had the ranked statistic at the value of 0" Deprecated="False" filter="0" group="General" />
                    <TunableVariant type="None" name="num_participants" class="OptionalTunable" default="all_participants" display="Num Participants" muid="7A876C63701DE88F" description="If disabled, all participants must pass this stat test.&#xA;If enabled, we test against this number for the number of participants&#xA;that need this value of stat to pass. " Deprecated="False" filter="0" group="General">
                        <Tunable name="all_participants" class="TunableExistance" display="All Participants" muid="F45748F4C8D69D3B" />
                        <TunableTuple name="enabled" class="TunableThreshold" display="Enabled" muid="8AD257CD968B1160" description="The threshold of the number of participants who must meet the &#xA;criteria individually." Deprecated="False" filter="0" group="General">
                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="547E0EE18C7E0E3E" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                            <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="780E3BC0FA088611" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                        </TunableTuple>
                    </TunableVariant>
                    <Tunable type="statistic" name="ranked_stat" class="TunableReference" display="Ranked Stat" muid="770D940E8DEB140D" description="The ranked stat we are operating on." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                    <Tunable type="bool" name="test_against_highest_rank" class="Tunable" default="False" display="Test Against Highest Rank" muid="B58BFF925C2B8B1E" description="When checked this test will only return True is the highest rank&#xA;achieved is in the threshold specified, and not the current rank." Deprecated="False" filter="0" group="General" />
                    <TunableVariant type="None" name="threshold" class="TunableVariant" default="value_threshold" display="Threshold" muid="89CA5491530F811A" description="The value or state threshold to test against." Deprecated="False" filter="0" group="General">
                        <TunableTuple name="state_value_threshold" class="TunableObjectStateValueThreshold" display="State Value Threshold" muid="150315C9244A4F08" description="Value/comparison pair used to define a Threshold." Deprecated="False" filter="0" group="General">
                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="A90539583D289B9C" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                            <Tunable type="object_state" name="value" class="TunableReference" display="Value" muid="86F10B6D11003B79" description="The state threshold for this test." allow_none="False" Deprecated="False" filter="0" group="General" restrict="ObjectStateValue" />
                        </TunableTuple>
                        <TunableTuple name="value_threshold" class="TunableThreshold" display="Value Threshold" muid="250F1C8A5CBA4B8F" description="The threshold to control availability based on the ranked&#xA;statistic's value." Deprecated="False" filter="0" group="General">
                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="85CC68ADDD50DEE6" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                            <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="4BF16A521A5C143A" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                        </TunableTuple>
                    </TunableVariant>
                </TunableTuple>
                <TunableTuple name="sim_filter" class="TunableFilterTest" display="Sim Filter" muid="54039DEE4E6849C9" description="A tunable test that checks to see if a sim matches a given filter." Deprecated="False" filter="0" group="General">
                    <Tunable type="float" name="duration_available" class="TunableSimMinute" default="120" display="Duration Available" muid="B18033A87437D0D2" min="0" max="None" description="The duration from now that will be used for the start&#xA;and end time of the filter request." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                    <TunableEnum type="ParticipantType" name="relative_sim" class="TunableEnumEntry" default="Actor" display="Relative Sim" muid="877D9782BE6A84F5" static_entries="interactions.ParticipantType" description="The sim that will be the relative sim that the filter will&#xA;check against for relative checks such as relationships or&#xA;household ids." Deprecated="False" filter="0" group="General" />
                    <Tunable type="sim_filter" name="sim_filter" class="TunableReference" display="Sim Filter" muid="E42115F482F229F5" allow_none="False" Deprecated="False" filter="0" group="General" />
                    <TunableVariant type="None" name="threshold_matched" class="OptionalTunable" default="disabled" display="Threshold Matched" muid="B5BC8BA4D9477625" description="If enabled, we will require the number of Sims that match the&#xA;filter pass the threshold requirement. Otherwise we require all&#xA;Sims that the filter runs on to match.&#xA;&#xA;This is useful if you only need one or a number of Sims to match&#xA;the filter." Deprecated="False" filter="0" group="General">
                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="546A5AA3DB057A8C" />
                        <TunableTuple name="enabled" class="TunableThreshold" display="Enabled" muid="F235A07152E4A9A7" description="A threshold of how many sims should match the filter." Deprecated="False" filter="0" group="General">
                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="49D55E4E9DBD2E78" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                            <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="7CA512A202E78667" min="0" max="None" description="The number that describes the threshold for how many Sims&#xA;should match the filter." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                        </TunableTuple>
                    </TunableVariant>
                </TunableTuple>
                <TunableTuple name="sim_info" class="TunableSimInfoTest" display="Sim Info" muid="FADDCED3336081DF" description="The SimInfo tests some of the basic aspects of a Sim, such as their age,&#xA;gender, or species." Deprecated="False" filter="0" group="General">
                    <TunableVariant type="None" name="ages" class="OptionalTunable" default="unspecified" display="Ages" muid="141143900B8B8964" description="The Sim must be one of the specified ages." Deprecated="False" filter="0" group="General">
                        <TunableList name="specified" class="TunableEnumSet" default="TEEN,YOUNGADULT,ADULT,ELDER" display="Specified" muid="AC8E6C82776194C9" description="The Sim must be one of the specified ages." Deprecated="False" filter="0" group="General" unique_entries="true">
                            <TunableEnum type="Age" class="TunableEnumEntry" default="ADULT" muid="F732EBA355BB85E6" static_entries="sims-sim_info_types.Age" Deprecated="False" filter="0" group="General" />
                        </TunableList>
                        <Tunable name="unspecified" class="TunableExistance" display="Unspecified" muid="4B0B0E000DFF9ED4" />
                    </TunableVariant>
                    <TunableVariant type="None" name="can_age_up" class="OptionalTunable" default="unspecified" display="Can Age Up" muid="48F6D514659DBEFD" description="Whether the Sim is eligible to advance to the next age." Deprecated="False" filter="0" group="General">
                        <Tunable type="bool" name="specified" class="Tunable" default="None" display="Specified" muid="A0B4CFF571C3D366" description="Whether the Sim is eligible to advance to the next age." Deprecated="False" filter="0" group="General" />
                        <Tunable name="unspecified" class="TunableExistance" display="Unspecified" muid="573ADEF4E86CD7D5" />
                    </TunableVariant>
                    <TunableVariant type="None" name="gender" class="OptionalTunable" default="unspecified" display="Gender" muid="4EA3CFF421855642" description="The Sim must be of the specified gender." Deprecated="False" filter="0" group="General">
                        <TunableEnum type="Gender" name="specified" class="TunableEnumEntry" default="None" display="Specified" muid="B46FD1B4D9316C41" static_entries="sims-sim_info_types.Gender" description="The Sim must be of the specified gender." Deprecated="False" filter="0" group="General" />
                        <Tunable name="unspecified" class="TunableExistance" display="Unspecified" muid="296618100948ED11" />
                    </TunableVariant>
                    <TunableVariant type="None" name="has_been_played" class="OptionalTunable" default="disabled" display="Has Been Played" muid="8D0780BFE045E36B" description="Whether the Sim has ever been played as a Playable Sim.&#xA;If enabled and true, the Sim must have been played by the player.&#xA;If enabled and false, the Sim must never have been played.&#xA;If disabled, this portion of the Sim Info test will be ignored." Deprecated="False" filter="0" group="General">
                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="4973595DF5E32EE0" />
                        <Tunable type="bool" name="enabled" class="Tunable" default="False" display="Enabled" muid="3F0BABC5923D4B" description="Whether the Sim has ever been played as a Playable Sim.&#xA;If enabled and true, the Sim must have been played by the player.&#xA;If enabled and false, the Sim must never have been played.&#xA;If disabled, this portion of the Sim Info test will be ignored." Deprecated="False" filter="0" group="General" />
                    </TunableVariant>
                    <TunableVariant type="None" name="is_active_sim" class="OptionalTunable" default="disabled" display="Is Active Sim" muid="4985F5689EE71FC5" description="Whether the Sim must be the active selected Sim.&#xA;If enabled and true, the sim must active for this test to pass.&#xA;If enabled and false, the sim must not be active for this test to pass.&#xA;If disabled, this portion of the Sim Info test will be ignored." Deprecated="False" filter="0" group="General">
                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="D73B6FBB88110146" />
                        <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="115F3530B0059700" description="Whether the Sim must be the active selected Sim.&#xA;If enabled and true, the sim must active for this test to pass.&#xA;If enabled and false, the sim must not be active for this test to pass.&#xA;If disabled, this portion of the Sim Info test will be ignored." Deprecated="False" filter="0" group="General" />
                    </TunableVariant>
                    <TunableEnum type="MatchType" name="match_type" class="TunableEnumEntry" default="MATCH_ALL" display="Match Type" muid="5C910513DD781071" static_entries="sims-sim_info_tests.MatchType" description="When testing multiple participants if MATCH_ALL is set, then all the&#xA;participants need to pass the test.&#xA; &#xA;If MATCH_ANY is set, test will pass as soon as one of them meet the&#xA;criteria" Deprecated="False" filter="0" group="General" />
                    <TunableVariant type="None" name="npc" class="OptionalTunable" default="disabled" display="Npc" muid="A8BABE3B8ABC48AC" description="Whether the Sim must be an NPC or Playable Sim.&#xA;If enabled and true, the sim must be an NPC for this test to pass.&#xA;If enabled and false, the sim must be playable, non-NPC sim for this test to pass.&#xA;If disabled, this portion of the Sim Info test will be ignored.&#xA;&#xA;Note: NPC in this case means a Sim that is not currently&#xA;controllable (selectable), or Not Player Controllable. If you&#xA;need to know if the Sim has ever been played, use 'Has Been&#xA;Played'" Deprecated="False" filter="0" group="General">
                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="12EE9D6924A68F5D" />
                        <Tunable type="bool" name="enabled" class="Tunable" default="False" display="Enabled" muid="42A81C750D33991E" description="Whether the Sim must be an NPC or Playable Sim.&#xA;If enabled and true, the sim must be an NPC for this test to pass.&#xA;If enabled and false, the sim must be playable, non-NPC sim for this test to pass.&#xA;If disabled, this portion of the Sim Info test will be ignored.&#xA;&#xA;Note: NPC in this case means a Sim that is not currently&#xA;controllable (selectable), or Not Player Controllable. If you&#xA;need to know if the Sim has ever been played, use 'Has Been&#xA;Played'" Deprecated="False" filter="0" group="General" />
                    </TunableVariant>
                    <TunableVariant type="None" name="species" class="TunableVariant" default="unspecified" display="Species" muid="299176FA74967AA8" Deprecated="False" filter="0" group="General">
                        <TunableTuple name="specified" class="Tunable_SpeciesTestSpecies" display="Specified" muid="DA3DAE32A268B13F" description="The Sim must be one of the specified species. Species are consolidated, e.g.&#xA;large/small dog are both DOG." Deprecated="False" filter="0" group="General">
                            <TunableList name="species" class="TunableEnumSet" display="Species" muid="22EC2A582DCC9B39" description="The Sim must be one of the specified species. Species are&#xA;consolidated, e.g. large/small dog are both DOG." Deprecated="False" filter="0" group="General" unique_entries="true">
                                <TunableEnum type="Species" class="TunableEnumEntry" default="HUMAN" muid="309B291415E03D22" static_entries="sims-sim_info_types.Species" Deprecated="False" filter="0" group="General" invalid_entries="INVALID" />
                            </TunableList>
                        </TunableTuple>
                        <TunableTuple name="specified_extended" class="Tunable_SpeciesTestExtendedSpecies" display="Specified Extended" muid="572553B2008F8B25" description="The Sim must be one of the specified species. Species are *not* consolidated,&#xA;e.g. large/small dog are different species." Deprecated="False" filter="0" group="General">
                            <TunableList name="species" class="TunableEnumSet" display="Species" muid="22328FCB04936225" description="The Sim must be one of the specified species. Species are *not*&#xA;consolidated, e.g. large/small dog are different species." Deprecated="False" filter="0" group="General" unique_entries="true">
                                <TunableEnum type="SpeciesExtended" class="TunableEnumEntry" default="Species.HUMAN" muid="627FA7BF76CECCD" static_entries="sims-sim_info_types.SpeciesExtended" Deprecated="False" filter="0" group="General" invalid_entries="INVALID" />
                            </TunableList>
                        </TunableTuple>
                        <Tunable name="unspecified" class="TunableExistance" display="Unspecified" muid="BF8466F457566919" />
                    </TunableVariant>
                </TunableTuple>
                <TunableTuple name="situation_job" class="TunableSituationJobTest" display="Situation Job" muid="EDE0CD1FC50B3B4E" description="Require the tuned participant to have a specific situation job.&#xA;If multiple participants, ALL participants must have the required&#xA;job to pass." Deprecated="False" filter="0" group="General">
                    <Tunable type="bool" name="negate" class="Tunable" default="False" display="Negate" muid="8A22781663950126" description="If checked then the test result will be reversed, so it will&#xA;test to see if they are not in a job or not in role state&#xA;that has matching tags." Deprecated="False" filter="0" group="General" />
                    <TunableList name="role_tags" class="TunableSet" display="Role Tags" muid="63AA7830297B4006" description="The  participant must have a job that matches the role_tags or&#xA;have the situation_job." Deprecated="False" filter="0" group="General" unique_entries="true">
                        <TunableEnum type="Tag" class="TunableEnumEntry" default="INVALID" muid="F7A5BEEC86D58A89" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" Deprecated="False" filter="0" group="General" pack_safe="True" />
                    </TunableList>
                    <TunableList name="situation_jobs" class="TunableSet" display="Situation Jobs" muid="535D1EBBF82C6730" description="The participant must have this job in this list or a job that&#xA;matches the role_tags." Deprecated="False" filter="0" group="General" unique_entries="true">
                        <Tunable type="situation_job" class="TunableReference" muid="D29F1B7AEC454661" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                    </TunableList>
                </TunableTuple>
                <TunableTuple name="skill_tag" class="TunableSkillTagThresholdTest" display="Skill Tag" muid="A174202590B99DB1" description="A tunable test method that checks the TAGS of ALL THE PARTICIPANTS SKILLS each against a threshold." Deprecated="False" filter="0" group="General">
                    <Tunable type="int" name="skill_quantity" class="Tunable" default="0" display="Skill Quantity" muid="23140B4AEF26C0F8" description="The minimum number of skills at or above this level required to pass." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                    <TunableEnum type="Tag" name="skill_tag" class="TunableEnumEntry" default="INVALID" display="Skill Tag" muid="8923C2C0455D85B0" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="What tag to test for." Deprecated="False" filter="0" group="General" invalid_entries="INVALID" />
                    <TunableTuple name="skill_threshold" class="TunableThreshold" display="Skill Threshold" muid="BEA75D585EDFDFF0" description="The threshold level to test of each skill." Deprecated="False" filter="0" group="General">
                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="56FA56B13EA0B55" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                        <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="3512D814E119D22" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                    </TunableTuple>
                    <Tunable type="bool" name="test_only_changed_skill" class="Tunable" default="False" display="Test Only Changed Skill" muid="2EACECFACE140A9B" description="If checked then we will only test the skill that actually changed." Deprecated="False" filter="0" group="General" />
                </TunableTuple>
                <TunableTuple name="skill_test" class="TunableSkillRangeTest" display="Skill Test" muid="494E6D627406660B" description="A test requiring a Sim to have a skill that is either above a threshold or&#xA;within an interval." Deprecated="False" filter="0" group="General">
                    <Tunable type="statistic" name="skill" class="TunableReference" display="Skill" muid="FFE8424B3EF00C1D" description="The skill to test against. &#xA;&#xA;Should the Sim not have the specified skill, or should the skill not&#xA;be available because of pack restrictions, this Sim will be&#xA;considered at level 0." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="Skill" />
                    <TunableVariant type="None" name="skill_range" class="TunableVariant" default="interval" display="Skill Range" muid="65EE76A4E2776F7E" description="A skill range defined by either an interval or a threshold." Deprecated="False" filter="0" group="General">
                        <TunableTuple name="interval" class="TunableSkillInterval" display="Interval" muid="C49E151E98B843BF" description="A TunableThreshold that is specifically used in Skill Range Tests to determine if a skill meets the required skill level." Deprecated="False" filter="0" group="General">
                            <TunableTuple name="skill_interval" class="TunableInterval" display="Skill Interval" muid="AE9E115EDFD20DFB" description="The range (inclusive) a skill level must be in to pass this test." Deprecated="False" filter="0" group="General">
                                <Tunable type="int" name="lower_bound" class="TunableRange" default="1" display="Lower Bound" muid="1A544A61A6EA767E" min="0" max="None" description="The lower bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                <Tunable type="int" name="upper_bound" class="TunableRange" default="10" display="Upper Bound" muid="B4F97563A3997416" min="None" max="20" description="The upper bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                            </TunableTuple>
                        </TunableTuple>
                        <TunableTuple name="threshold" class="TunableSkillThreshold" display="Threshold" muid="FB5DD81E42D7E9B" description="A TunableThreshold that is specifically used in Skill Range Tests to determine if a skill meets the required skill level.&quot; " Deprecated="False" filter="0" group="General">
                            <TunableTuple name="skill_threshold" class="TunableThreshold" display="Skill Threshold" muid="C6CF95D220D4F57D" description="The Threshold for the skill level to be valid." Deprecated="False" filter="0" group="General">
                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="33377E3B05AA77EE" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                <Tunable type="int" name="value" class="Tunable" default="0" display="Value" muid="BC0A10E0548B83A0" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                            </TunableTuple>
                        </TunableTuple>
                    </TunableVariant>
                    <TunableEnum type="ParticipantType" name="subject" class="TunableEnumEntry" default="Actor" display="Subject" muid="744122AA203BBB8" static_entries="interactions.ParticipantType" description="The subject of this test." Deprecated="False" filter="0" group="General" />
                    <Tunable type="bool" name="use_effective_skill_level" class="Tunable" default="False" display="Use Effective Skill Level" muid="FA2BA7125C04483F" description="If checked, then instead of using the skill's actual level, the test&#xA;will use the skill's effective level for the purpose of satisfying&#xA;the specified criteria." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                </TunableTuple>
                <TunableTuple name="statistic" class="TunableStatThresholdTest" display="Statistic" muid="FA3D89348B377AF7" description="A test that checks whether or not a statistic is at a certain threshold for&#xA;a given participant. It can also test whether or not the participant has the&#xA;statistic explicitly added on them." Deprecated="False" filter="0" group="General">
                    <Tunable type="bool" name="must_have_stat" class="Tunable" default="False" display="Must Have Stat" muid="9152C6DD6D10E9A6" description="Setting this to True (checked) will ensure that this test only&#xA;passes if the tested Sim actually has the statistic referenced. If&#xA;left False (unchecked), this test will evaluate as if the Sim had&#xA;the statistic at the value of 0" Deprecated="False" filter="0" group="General" />
                    <TunableVariant type="None" name="score_to_use" class="TunableVariant" default="user_value" display="Score To Use" muid="9BFF62A1327B257A" description="Depending on the choice, this decides what value to use for the &#xA;threshold comparison." Deprecated="False" filter="0" group="General">
                        <TunableTuple name="points" class="Tunable_PointsValue" display="Points" muid="BC34AE9534F9B47B" description="Use the raw points for the comparison in the test." Deprecated="False" filter="0" group="General" />
                        <TunableTuple name="rank" class="Tunable_RankValue" display="Rank" muid="6EE511B6D3FF721" description="Use the rank value for the comparison in the test." Deprecated="False" filter="0" group="General" />
                        <TunableTuple name="user_value" class="Tunable_UserValue" display="User Value" muid="A27CAC686FEEA774" description="Use the user value for the comparison in the test." Deprecated="False" filter="0" group="General">
                            <Tunable type="bool" name="highest_level_reached_instead" class="Tunable" default="False" display="Highest Level Reached Instead" muid="2B12CCE7A79D2503" description="If checked this will test against the highest level reached. This&#xA;currently only works with Ranked Statistics. Other statistics do&#xA;not have a notion of highest level reached. If we are using&#xA;something that doesn't support highest level reached it will &#xA;test against the current level instead." Deprecated="False" filter="0" group="General" />
                        </TunableTuple>
                    </TunableVariant>
                    <Tunable type="statistic" name="stat" class="TunableReference" display="Stat" muid="5C851762EA4D73A4" description="The stat we are operating on." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                    <TunableVariant type="None" name="threshold" class="TunableVariant" default="value_threshold" display="Threshold" muid="A4F21F239711A097" description="The value or state threshold to test against." Deprecated="False" filter="0" group="General">
                        <TunableTuple name="state_value_threshold" class="TunableObjectStateValueThreshold" display="State Value Threshold" muid="EB013DDB9C8E4B76" description="Value/comparison pair used to define a Threshold." Deprecated="False" filter="0" group="General">
                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="1F00CDC3FF46C583" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                            <Tunable type="object_state" name="value" class="TunableReference" display="Value" muid="C3066CC07161A47F" description="The state threshold for this test." allow_none="False" Deprecated="False" filter="0" group="General" restrict="ObjectStateValue" />
                        </TunableTuple>
                        <TunableTuple name="value_threshold" class="TunableThreshold" display="Value Threshold" muid="F117A7D507447B3B" description="The threshold to control availability based on the statistic's&#xA;value." Deprecated="False" filter="0" group="General">
                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="2E8A0C7A1986F117" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                            <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="A56BA9D664D0336E" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                        </TunableTuple>
                    </TunableVariant>
                </TunableTuple>
                <TunableTuple name="trait" class="TunableTraitTest" display="Trait" muid="7058A0095A14CCF" description="Test to require a Sim to have or not have certain specific traits." Deprecated="False" filter="0" group="General">
                    <Tunable type="bool" name="apply_thresholds_on_individual_basis" class="Tunable" default="True" display="Apply Thresholds On Individual Basis" muid="6E7705E6C5225B32" description="If checked then Num Whitelist Required and Num Blacklist Allowed&#xA;will be applied to each individual participant from the subject.&#xA;If unchecked then it will apply the values to the total whitelist&#xA;and blacklist matches on the group.&#xA;&#xA;IMPORTANT!!!&#xA;In the case of objectives this should probably be set to false&#xA;since we know that this is coming from only one sim and that we&#xA;want to use the value that comes out of the test result numeric.&#xA;This isn't just locked to being this value since there are valid&#xA;cases within that system when you are looking at a group of sims&#xA;and could want to test that one of your sims passes.  Ex. Having&#xA;a ghost sim in the household." Deprecated="False" filter="0" group="General" />
                    <TunableList name="blacklist_trait_types" class="TunableEnumSet" display="Blacklist Trait Types" muid="26CC5D9713A58B0E" description="The Sim is required to not have traits of these types to pass this &#xA;test. Should Num Blacklist Allowed be specified, then the Sim is &#xA;allowed to have up to that amount of blacklisted traits before &#xA;failing this test." Deprecated="False" filter="0" group="General" unique_entries="true">
                        <TunableEnum type="TraitType" class="TunableEnumEntry" default="PERSONALITY" muid="64662C884D26B2EA" static_entries="traits-trait_type.TraitType" Deprecated="False" filter="0" group="General" />
                    </TunableList>
                    <TunableList name="blacklist_traits" class="TunableList" display="Blacklist Traits" muid="E79BAA182C81E23A" description="The is required to not have traits from this list in order to pass&#xA;this test. Should num_blacklist_allowed be specified, then the Sim&#xA;is allowed to have up to that amount of blacklisted traits before&#xA;failing this test." Deprecated="False" filter="0" group="General">
                        <Tunable type="trait" class="TunableReference" muid="25BA83BAC138C122" description="A blacklist trait." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                    </TunableList>
                    <Tunable type="int" name="num_blacklist_allowed" class="Tunable" default="0" display="Num Blacklist Allowed" muid="A0A300D8D6E852B9" description="The threshold of blacklist traits owned by the specified Sim that&#xA;will trigger a test failure." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                    <Tunable type="int" name="num_whitelist_required" class="Tunable" default="1" display="Num Whitelist Required" muid="21A2CF51CC57F238" description="The number of whitelist traits that the specified Sim is required to&#xA;have in order to pass this test." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                    <TunableList name="whitelist_trait_types" class="TunableEnumSet" display="Whitelist Trait Types" muid="CC1DAE0090E23AB1" description="The Sim is required to have the specified number of traits with &#xA;these types in order to pass the test." Deprecated="False" filter="0" group="General" unique_entries="true">
                        <TunableEnum type="TraitType" class="TunableEnumEntry" default="PERSONALITY" muid="2C60D65BF8512930" static_entries="traits-trait_type.TraitType" Deprecated="False" filter="0" group="General" />
                    </TunableList>
                    <TunableList name="whitelist_traits" class="TunableList" display="Whitelist Traits" muid="779538104E959117" description="The Sim is required to have the specified number of traits from this&#xA;list in order to pass the test." Deprecated="False" filter="0" group="General">
                        <Tunable type="trait" class="TunableReference" muid="3765BD2291B11227" description="A whitelist trait. Please note: for pack-safe entries that are&#xA;not loaded, the game will behave as if the entry doesn't exist.&#xA;This allows you to specify a pack trait and required count of 1&#xA;and always fail the test should the appropriate pack not be&#xA;installed." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                    </TunableList>
                </TunableTuple>
                <TunableTuple name="zone" class="TunableZoneTest" display="Zone" muid="371788D99193D3" description="A tunable factory that tests properties of a particular zone." Deprecated="False" filter="0" group="General">
                    <TunableVariant type="None" name="zone_source" class="TunableVariant" default="use_current_zone" display="Zone Source" muid="4CCCFA578B42C157" description="Which zone we want to test." Deprecated="False" filter="0" group="General">
                        <TunableTuple name="use_current_zone" class="TunableActiveZone" display="Use Current Zone" muid="E5CEB25F23494767" description="Get the active zone." Deprecated="False" filter="0" group="General" />
                        <TunableTuple name="use_participant_home_zone" class="TunableParticipantHomeZone" display="Use Participant Home Zone" muid="D957FCF3EC0930F0" description="Get a participant's home zone. Can be None if they don't have one." Deprecated="False" filter="0" group="General">
                            <TunableEnum type="ParticipantTypeSingleSim" name="participant" class="TunableEnumEntry" default="Actor" display="Participant" muid="28C8A1A16CC79A8E" static_entries="interactions.ParticipantTypeSingleSim" description="Test against the participant's home zone. Townies' home zone will&#xA;be None." Deprecated="False" filter="0" group="General" />
                        </TunableTuple>
                        <TunableTuple name="use_pick_info" class="TunablePickInfoZone" display="Use Pick Info" muid="EB931CD1BAD20909" description="Get the zone of the lot the user clicked on." Deprecated="False" filter="0" group="General" />
                        <TunableTuple name="use_picked_zone_ids" class="TunablePickedZoneIds" display="Use Picked Zone Ids" muid="1FDD1945FFAFD81F" description="Get the zone from the interaction's picked_zone_ids participant. Usually&#xA;comes from a picker." Deprecated="False" filter="0" group="General" />
                    </TunableVariant>
                    <TunableTuple name="zone_tests" class="TunableTuple" display="Zone Tests" muid="F872E7CF764E6C9A" description="The tests we wish to run on the zone in question." Deprecated="False" filter="0" group="General">
                        <TunableVariant type="None" name="business_tests" class="OptionalTunable" default="Don't_Test" display="Business Tests" muid="B65CD725FFA5928A" description="If enabled, test if the specified zone is a business or not." Deprecated="False" filter="0" group="General">
                            <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="64F5F1DEDA4FFA2E" />
                            <TunableVariant type="None" name="enabled" class="TunableVariant" default="is_business" display="Enabled" muid="5560BE8EDE2F37EC" description="Test if the zone is a business, an open business, or a&#xA;closed business." Deprecated="False" filter="0" group="General">
                                <TunableTuple name="is_business" class="Tunable_IsBusinessTest" display="Is Business" muid="5692F8B999FC8EE8" description="Test if the zone specified by the zone id is a business or not." Deprecated="False" filter="0" group="General" />
                                <TunableTuple name="is_business_open" class="Tunable_IsBusinessOpenTest" display="Is Business Open" muid="3C2C51B5913F5948" description="Test if the zone specified by the zone id is an open business." Deprecated="False" filter="0" group="General" />
                            </TunableVariant>
                        </TunableVariant>
                        <TunableVariant type="None" name="is_apartment" class="OptionalTunable" default="Don't_Test" display="Is Apartment" muid="175221517ACA4324" description="If checked, test will pass if the zone is an apartment. If&#xA;unchecked, test passes if the zone is NOT an apartment. Useful&#xA; in aspiration tuning, to discriminate between property&#xA;types in tests of lot value. Allows &quot;Own a House worth X&quot; and&#xA;&quot;Own an Apartment worth X&quot;" Deprecated="False" filter="0" group="General">
                            <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="355C1F5727C88812" />
                            <TunableTuple name="Is_or_is_not_apartment_zone" class="TunableTuple" display="Is Or Is Not Apartment Zone" muid="F991FA0D5D2DE2EE" description="Test whether the zone is an apartment or not." Deprecated="False" filter="0" group="General">
                                <Tunable type="bool" name="consider_penthouse_an_apartment" class="Tunable" default="True" display="Consider Penthouse An Apartment" muid="940522809CDA209A" description="If enabled, we will consider penthouses to be&#xA;apartments when testing them against the apartment&#xA;check." Deprecated="False" filter="0" group="General" />
                                <Tunable type="bool" name="is_apartment" class="Tunable" default="True" display="Is Apartment" muid="4D76D4C4661BF5FD" description="If checked, test will pass if the zone is an apartment.&#xA;If unchecked, test passes if the zone is NOT an&#xA;apartment." Deprecated="False" filter="0" group="General" />
                            </TunableTuple>
                        </TunableVariant>
                        <TunableVariant type="None" name="is_penthouse" class="OptionalTunable" default="disabled" display="Is Penthouse" muid="E8E953F114DC4B7" description="If enabled, test whether or not the current zone is a penthouse." Deprecated="False" filter="0" group="General">
                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="3DDAEA667156F21D" />
                            <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="8B731D2665400D18" description="If checked, the zone must be a penthouse. If unchecked, the&#xA;zone cannot be a penthouse." Deprecated="False" filter="0" group="General" />
                        </TunableVariant>
                        <Tunable type="bool" name="use_source_venue" class="Tunable" default="False" display="Use Source Venue" muid="8E3C5DA4D251DB7F" description="If enabled, the test will test the source venue instead of the active&#xA;venue.  For example, the Community Lot instead of the active Marketplace.&#xA;Testing the active venue is the default." Deprecated="False" filter="0" group="General" />
                        <TunableVariant type="None" name="venue_tier" class="OptionalTunable" default="disabled" display="Venue Tier" muid="DD0D8A2E4FD584A8" description="If checked, will verify that the zone's venue is at the tuned &#xA;tier. If &quot;no valid tier&quot; is selected, this test will be True&#xA;if either the current venue doesn't have tiers or if it does but&#xA;it doesn't currently meet any of their requirements." Deprecated="False" filter="0" group="General">
                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="5738733B319D2885" />
                            <TunableVariant type="None" name="enabled" class="TunableVariant" default="none" display="Enabled" muid="846CFAA95D798239" description="                    " Deprecated="False" filter="0" group="General">
                                <Tunable name="no_valid_tier" class="TunableExistance" display="No Valid Tier" muid="14CA19370F98948C" />
                                <Tunable name="none" class="TunableExistance" display="None" muid="C307FF4479B3057B" />
                                <Tunable type="int" name="tier_number" class="TunableRange" default="0" display="Tier Number" muid="339150FDE9B01032" min="0" max="None" description="The index of the tier to test. This test will return&#xA;true if this tier is active and false otherwise. This&#xA;should be the index of the tier in the tier list and not&#xA;any player-facing index. For instance, if a tier list&#xA;had a single tier, that tier would be 0, and if a second&#xA;tier were added, that second tier would be 1." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                            </TunableVariant>
                        </TunableVariant>
                        <TunableVariant type="None" name="venue_type" class="OptionalTunable" default="Don't_Test" display="Venue Type" muid="BF11C5DE00D2D24A" description="If checked, will verify the zone's venue type is allowed or&#xA;disallowed." Deprecated="False" filter="0" group="General">
                            <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="611FCFF81D034FFE" />
                            <TunableTuple name="enabled" class="TunableWhiteBlackList" display="Enabled" muid="22F1E31F644B3725" description="The zone's venue type must pass the whitelist and blacklist&#xA;to pass the test." Deprecated="False" filter="0" group="General">
                                <TunableVariant type="None" name="blacklist" class="OptionalTunable" default="nothing" display="Blacklist" muid="EA02C17C8A823450" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is not in the blacklist. If no blacklist is&#xA;specified, no items are disallowed." Deprecated="False" filter="0" group="General">
                                    <Tunable name="nothing" class="TunableExistance" display="Nothing" muid="8931CA2338891C0F" />
                                    <TunableTuple name="specify" class="TunableBlacklist" display="Specify" muid="B2838D1C1E7CE398" description="A tunable blacklist." Deprecated="False" filter="0" group="General">
                                        <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="21CC6694A3E1B0CB" description="Blacklisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                            <Tunable type="venue" class="TunableReference" muid="859FE9395A683156" description="Allowed and disallowed venue types." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                        </TunableList>
                                        <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="56AED61CB70D62E" description="Tunable option for how many items must be in the blacklist&#xA;for the blacklist to fail when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                            <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="5005E21DCFD354C2" />
                                            <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="FF8CB9E017773791" description="When testing a collection of items, the number of items in&#xA;that collection that are in the blacklist must pass this&#xA;threshold test for the blacklist to disallow them all." Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="126798A5C7094117" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="73856007878045BC" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                        </TunableVariant>
                                    </TunableTuple>
                                </TunableVariant>
                                <TunableVariant type="None" name="whitelist" class="OptionalTunable" default="everything" display="Whitelist" muid="F4363A7E2E37116D" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is in the whitelist. If no whitelist is&#xA;specified, all items are allowed." Deprecated="False" filter="0" group="General">
                                    <Tunable name="everything" class="TunableExistance" display="Everything" muid="32CBDA3F34C57F87" />
                                    <TunableTuple name="specify" class="TunableWhitelist" display="Specify" muid="85D92ABE4BECFCFA" description="A tunable whitelist." Deprecated="False" filter="0" group="General">
                                        <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="A37880753B58536A" description="Tunable option for how many items must be in the whitelist&#xA;for the whitelist to pass when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                            <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="7D7882A3FD4027B0" />
                                            <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="DD7C0B33AE4BEA9C" description="When testing a collection of items, the number of items in&#xA;that collection that are in the whitelist must pass this&#xA;threshold test for the whitelist to allow them all." Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="443C1EF3321191A4" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="89589618C048774" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                        </TunableVariant>
                                        <TunableList name="whitelist" class="TunableSet" display="Whitelist" muid="E5555836DB534B" description="Whitelisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                            <Tunable type="venue" class="TunableReference" muid="71A7BC5CE6681169" description="Allowed and disallowed venue types." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                        </TunableList>
                                    </TunableTuple>
                                </TunableVariant>
                            </TunableTuple>
                        </TunableVariant>
                        <TunableVariant type="None" name="was_owner_household_changed" class="OptionalTunable" default="Don't_Test" display="Was Owner Household Changed" muid="18C8AF0C56CA0C7F" description="If enabled, test if the lot owner household for the specified zone &#xA;was changed between when the zone was saved and when it was loaded." Deprecated="False" filter="0" group="General">
                            <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="33AD33A774F30C33" />
                            <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="ABF7F144ACFDF586" description="If checked,  test will pass if the zone's owner household was changed &#xA;between when the zone was saved and when it was loaded. &#xA;If unchecked, test will pass if the zone's owner household was NOT changed &#xA;between when the zone was saved and when it was loaded. " Deprecated="False" filter="0" group="General" />
                        </TunableVariant>
                        <TunableVariant type="None" name="world_tests" class="OptionalTunable" default="disabled" display="World Tests" muid="C257EAC3A09E2474" description="If enabled, we test if specified zone is or is not in the specified world(s)" Deprecated="False" filter="0" group="General">
                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="3940367B7A5BE7AD" />
                            <TunableTuple name="enabled" class="TunableWhiteBlackList" display="Enabled" muid="2567B310B82B86B6" description="Pass if zone is in one of the worlds in the whitelist,&#xA;or fail if it is any of the worlds in the blacklist." Deprecated="False" filter="0" group="General">
                                <TunableVariant type="None" name="blacklist" class="OptionalTunable" default="nothing" display="Blacklist" muid="4345101D47CE8423" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is not in the blacklist. If no blacklist is&#xA;specified, no items are disallowed." Deprecated="False" filter="0" group="General">
                                    <Tunable name="nothing" class="TunableExistance" display="Nothing" muid="2E602FD41202425A" />
                                    <TunableTuple name="specify" class="TunableBlacklist" display="Specify" muid="8B06A9D1A4321E6A" description="A tunable blacklist." Deprecated="False" filter="0" group="General">
                                        <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="9778EFCACF340C80" description="Blacklisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                            <Tunable type="worlddescription" class="TunableReference" muid="6CFB7D8219FFF648" description="World to check against." Deprecated="False" filter="0" group="General" pack_safe="True" />
                                        </TunableList>
                                        <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="3CE0DBBE86BEFB98" description="Tunable option for how many items must be in the blacklist&#xA;for the blacklist to fail when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                            <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="8738D37227A5049A" />
                                            <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="683AD17965B2541F" description="When testing a collection of items, the number of items in&#xA;that collection that are in the blacklist must pass this&#xA;threshold test for the blacklist to disallow them all." Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="F97BC63B367774DE" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="F3700E9498F18E48" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                        </TunableVariant>
                                    </TunableTuple>
                                </TunableVariant>
                                <TunableVariant type="None" name="whitelist" class="OptionalTunable" default="everything" display="Whitelist" muid="188AFA539EA1DED9" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is in the whitelist. If no whitelist is&#xA;specified, all items are allowed." Deprecated="False" filter="0" group="General">
                                    <Tunable name="everything" class="TunableExistance" display="Everything" muid="3E4DFC41D8DE4CFB" />
                                    <TunableTuple name="specify" class="TunableWhitelist" display="Specify" muid="617E54650E067E03" description="A tunable whitelist." Deprecated="False" filter="0" group="General">
                                        <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="6B0C1247EBBDADDC" description="Tunable option for how many items must be in the whitelist&#xA;for the whitelist to pass when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                            <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="A65C669AB9F93A3A" />
                                            <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="8FC18AE699F1344D" description="When testing a collection of items, the number of items in&#xA;that collection that are in the whitelist must pass this&#xA;threshold test for the whitelist to allow them all." Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="96DD3A30F69E4537" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="E82C05F2D9C8AC65" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                        </TunableVariant>
                                        <TunableList name="whitelist" class="TunableSet" display="Whitelist" muid="6674AD837EE43BB" description="Whitelisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                            <Tunable type="worlddescription" class="TunableReference" muid="14C59A0CEF094A9D" description="World to check against." Deprecated="False" filter="0" group="General" pack_safe="True" />
                                        </TunableList>
                                    </TunableTuple>
                                </TunableVariant>
                            </TunableTuple>
                        </TunableVariant>
                        <TunableVariant type="None" name="zone_modifiers" class="OptionalTunable" default="Don't_Test" display="Zone Modifiers" muid="BEFD6BDC5FEA5DB" description="if enabled, we test the zone modifiers allowed or disallowed." Deprecated="False" filter="0" group="General">
                            <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="E966B70234379B8D" />
                            <TunableTuple name="enabled" class="TunableWhiteBlackList" display="Enabled" muid="DD98C6A9CFB6E7E7" description="The zone's modifiers must pass this whitelist and blacklist for the&#xA;test to pass." Deprecated="False" filter="0" group="General">
                                <TunableVariant type="None" name="blacklist" class="OptionalTunable" default="nothing" display="Blacklist" muid="12D2033EF32206B2" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is not in the blacklist. If no blacklist is&#xA;specified, no items are disallowed." Deprecated="False" filter="0" group="General">
                                    <Tunable name="nothing" class="TunableExistance" display="Nothing" muid="1D9532132E839C8E" />
                                    <TunableTuple name="specify" class="TunableBlacklist" display="Specify" muid="7EEB4B2C056C7E16" description="A tunable blacklist." Deprecated="False" filter="0" group="General">
                                        <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="E59510A9BA48D1A2" description="Blacklisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                            <Tunable type="zone_modifier" class="TunableReference" muid="F70F27E0AB859AF" description="Allowed and disallowed zone modifiers." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                        </TunableList>
                                        <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="7F35FDA6552C81F0" description="Tunable option for how many items must be in the blacklist&#xA;for the blacklist to fail when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                            <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="1EF3D08D62D15D46" />
                                            <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="5F02C373D34E0A3A" description="When testing a collection of items, the number of items in&#xA;that collection that are in the blacklist must pass this&#xA;threshold test for the blacklist to disallow them all." Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="98BDEFB02A88EBB0" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="1EB09A4F66C0B878" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                        </TunableVariant>
                                    </TunableTuple>
                                </TunableVariant>
                                <TunableVariant type="None" name="whitelist" class="OptionalTunable" default="everything" display="Whitelist" muid="958D69216B48CE51" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is in the whitelist. If no whitelist is&#xA;specified, all items are allowed." Deprecated="False" filter="0" group="General">
                                    <Tunable name="everything" class="TunableExistance" display="Everything" muid="B056B218A13A165B" />
                                    <TunableTuple name="specify" class="TunableWhitelist" display="Specify" muid="4DB1BB01492F0133" description="A tunable whitelist." Deprecated="False" filter="0" group="General">
                                        <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="D0A767E6FF179248" description="Tunable option for how many items must be in the whitelist&#xA;for the whitelist to pass when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                            <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="95713C3C4DC079BB" />
                                            <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="E2EAE1BC1D07DDC5" description="When testing a collection of items, the number of items in&#xA;that collection that are in the whitelist must pass this&#xA;threshold test for the whitelist to allow them all." Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="714FB5B457558D18" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="4D80D3F96C335151" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                        </TunableVariant>
                                        <TunableList name="whitelist" class="TunableSet" display="Whitelist" muid="4967579AAD939FB6" description="Whitelisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                            <Tunable type="zone_modifier" class="TunableReference" muid="CCE7EF5478D055AE" description="Allowed and disallowed zone modifiers." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                        </TunableList>
                                    </TunableTuple>
                                </TunableVariant>
                            </TunableTuple>
                        </TunableVariant>
                    </TunableTuple>
                </TunableTuple>
            </TunableVariant>
        </TunableList>

        <TunableTuple name="crafted_item_test" class="TunableCraftedItemTest" display="Crafted Item Test" muid="6E6D7CD03C0F9112" description="A test to run to determine if the player can have this goal. If crafted_tagged_item &#xA;is set, the player may craft any item that has the specified tag." Deprecated="False" filter="0" group="Tests">
            <TunableVariant type="None" name="masterwork_threshold" class="OptionalTunable" default="disabled" display="Masterwork Threshold" muid="197B988ED310C568" description="If enabled, require the item to match a certain masterwork&#xA;threshold." Deprecated="False" filter="0" group="General">
                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="9192EA904C6B8D4" />
                <TunableTuple name="enabled" class="TunableObjectStateValueThreshold" display="Enabled" muid="9BEC80C95D583101" description="Value/comparison pair used to define a Threshold." Deprecated="False" filter="0" group="General">
                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="CA7B5753777EF7C6" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                    <Tunable type="object_state" name="value" class="TunableReference" display="Value" muid="42ACADAF7B6CDB19" description="The masterwork threshold to satisfy." allow_none="False" Deprecated="False" filter="0" group="General" restrict="ObjectStateValue" />
                </TunableTuple>
            </TunableVariant>
            <TunableVariant type="None" name="quality_threshold" class="OptionalTunable" default="disabled" display="Quality Threshold" muid="E26032E26A1C6125" description="If enabled, require the item to match a certain quality threshold." Deprecated="False" filter="0" group="General">
                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="F328533A149B5516" />
                <TunableTuple name="enabled" class="TunableObjectStateValueThreshold" display="Enabled" muid="E9AB69F0D870B417" description="Value/comparison pair used to define a Threshold." Deprecated="False" filter="0" group="General">
                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="BB23D93FEF2D32FC" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                    <Tunable type="object_state" name="value" class="TunableReference" display="Value" muid="D5BFCB954AEF0953" description="The quality threshold to satisfy." allow_none="False" Deprecated="False" filter="0" group="General" restrict="ObjectStateValue" />
                </TunableTuple>
            </TunableVariant>
            <TunableVariant type="None" name="skill_or_item" class="TunableVariant" default="crafted_with_skill" display="Skill Or Item" muid="45333957DA0D081" description="Whether to test for a specific item or use of a skill for the item." Deprecated="False" filter="0" group="General">
                <TunableTuple name="crafted_actual_item" class="CraftActualItemFactory" display="Crafted Actual Item" muid="7467DA9DBC16B1BD" description="This option tests crafted item against a list of possible items" Deprecated="False" filter="0" group="General">
                    <TunableList name="items_to_check" class="TunableList" display="Items To Check" muid="9FD25A803E7C7297" Deprecated="False" filter="0" group="General">
                        <Tunable type="object" class="TunableReference" muid="4690A0214980DC9" description="Object that qualifies for this check." allow_none="False" Deprecated="False" filter="0" group="General" />
                    </TunableList>
                </TunableTuple>
                <TunableTuple name="crafted_tagged_item" class="CraftTaggedItemFactory" display="Crafted Tagged Item" muid="A36287EA7B7C59C6" description="This option tests crafted item's tags against a list of possible tags" Deprecated="False" filter="0" group="General">
                    <TunableList name="tag_set" class="TunableSet" display="Tag Set" muid="B713F6D78B6897EB" description="The tag of objects we want to test ownership of" Deprecated="False" filter="0" group="General" unique_entries="true">
                        <TunableEnum type="Tag" class="TunableEnumEntry" default="INVALID" muid="3C14D06E2F3E0235" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="What tag to test for" Deprecated="False" filter="0" group="General" pack_safe="True" />
                    </TunableList>
                    <TunableEnum type="TagTestType" name="test_type" class="TunableEnumEntry" default="CONTAINS_ANY_TAG_IN_SET" display="Test Type" muid="B2BACC5DBC695BDA" static_entries="objects-object_tests.TagTestType" description="How to test the tags in the tag set against the objects on the lot." Deprecated="False" filter="0" group="General" />
                </TunableTuple>
                <TunableTuple name="crafted_with_skill" class="CraftedWithSkillFactory" display="Crafted With Skill" muid="DCC87C65FC8439C" description="This option tests for an item craft with the selected skill" Deprecated="False" filter="0" group="General">
                    <Tunable type="statistic" name="skill_to_test" class="TunableReference" display="Skill To Test" muid="94165A80C54018C7" description="Skills needed to pass amount on." allow_none="False" Deprecated="False" filter="0" group="General" />
                </TunableTuple>
            </TunableVariant>
            <TunableVariant type="None" name="tooltip" class="OptionalTunable" default="disabled" display="Tooltip" muid="DF065040B521F70D" description="Reason of failure." Deprecated="False" filter="0" group="General">
                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="64C2E079B4F2F565" />
                <Tunable type="int" name="enabled" class="TunableLocalizedString" default="0x0" display="Enabled" muid="353197BB4D9C5116" description="Reason of failure." Deprecated="False" filter="0" group="General" />
            </TunableVariant>
        </TunableTuple>
    </Instance>

    <VersionHistory>
        <ActionList>
            <Action type="kRemove" old_muid="A99B07C6E19F7480" />
        </ActionList>

        <ActionList>
            <Action type="kRemove" old_muid="E81F3CF716B41251" />
        </ActionList>
    </VersionHistory>
</TuningRoot>