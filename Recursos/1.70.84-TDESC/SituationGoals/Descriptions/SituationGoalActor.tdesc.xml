<?xml version="1.0" encoding="iso-8859-1"?>

<TuningRoot>
    <Instance instance_type="situation_goal" class="SituationGoalActor" module="situations.situation_goal_actor" muid="A2C647FB43D2E35B" description="Situation Goal for test events on changes to the actor that do not require any additional data from outside the tuned tests.&#xA;The tuned data is sufficient to determine if the goal has been achieved." instance_needs_reference="True" instance_subclasses_only="False" parents="SituationGoal" path="SituationGoals\Descriptions" use_guid_for_reference="True">
        <TunableVariant type="None" name="_goal_test" class="TunableVariant" default="buff" display="Goal Test" muid="D32EDB9BA8A139FC" description="Primary test which triggers evaluation of goal completion." Deprecated="False" filter="0" group="Tests">
            <TunableTuple name="buff" class="TunableBuffTest" display="Buff" muid="F4FD2DB9BE932023" description="Test whether or not a participant has or doesn't have specific buffs." Deprecated="False" filter="0" group="General">
                <Tunable type="bool" name="apply_whitelist_on_individual_basis" class="Tunable" default="True" display="Apply Whitelist On Individual Basis" muid="BB8A5A8993F463B0" description="If checked, will require that each target has at least one&#xA;whitelisted buff. If unchecked, will require only a single target to&#xA;have at least one whitelisted trait." Deprecated="False" filter="0" group="General" />
                <TunableVariant type="None" name="whitelist" class="OptionalTunable" default="disabled" display="Whitelist" muid="DDDD4EA8E69D3BF" description="If enabled, participant will test for buff's on the whitelist." Deprecated="False" filter="0" group="General">
                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="A4BB385852817FFD" />
                    <TunableList name="enabled" class="TunableSet" display="Enabled" muid="23F289F444F156BD" description="The participant must have at least one buff in this list to pass the&#xA;test." Deprecated="False" filter="0" group="General" unique_entries="true">
                        <Tunable type="buff" class="TunableReference" muid="67A6DDB79A432EB5" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                    </TunableList>
                </TunableVariant>
            </TunableTuple>
            <TunableTuple name="career" class="TunableTunableCareerTest" display="Career" muid="8609350CDB1BF647" description="Tunable test for what careers a Sim has.&#xA;&#xA;subjects: A ParticipantType used for choosing whom to run the test on.&#xA;test_type: A variant of the different tunable tests that handle testing&#xA;        for careers." Deprecated="False" filter="0" group="General">
                <Tunable type="bool" name="negate" class="Tunable" default="False" display="Negate" muid="2625113605BD7071" description="If this is true then it will negate &#xA;the result of the test type. For instance if this is true and the test&#xA;would return true for whether or not a sim has a particular career&#xA;False will be returned instead." Deprecated="False" filter="0" group="General" />
                <TunableEnum type="ParticipantType" name="subjects" class="TunableEnumEntry" default="Actor" display="Subjects" muid="C594355182B674A6" static_entries="interactions.ParticipantType" description="The participant to run the career test on." Deprecated="False" filter="0" group="General" />
                <TunableVariant type="None" name="test_type" class="TunableCareerTestVariant" default="career_reference" display="Test Type" muid="648B5EAE02B30A61" Deprecated="False" filter="0" group="General">
                    <TunableTuple name="attended_first_day" class="TunableCareerAttendedFirstDay" display="Attended First Day" muid="9D06B15B899E3758" description="Test for whether or not the Sim has gone to work at all for the career." Deprecated="False" filter="0" group="General">
                        <Tunable type="career" name="career" class="TunableReference" display="Career" muid="AE4E965784667B38" description="The career to see if the Sim has gone to work for." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                        <TunableVariant type="None" name="tooltip" class="OptionalTunable" default="disabled" display="Tooltip" muid="47146E81087CC321" description="Reason of failure." Deprecated="False" filter="0" group="General">
                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="276197FA3BAFD289" />
                            <Tunable type="int" name="enabled" class="TunableLocalizedString" default="0x0" display="Enabled" muid="273F60BA7390717A" description="Reason of failure." Deprecated="False" filter="0" group="General" />
                        </TunableVariant>
                    </TunableTuple>
                    <TunableTuple name="can_join_career" class="TunableCareerAvailabilityTestFactory" display="Can Join Career" muid="173B1E04E07A7021" description="A test for whether a sim can join a tunable number threshold of the tuned&#xA;careers. This requires that the career be valid for the sim and that the sim&#xA;not already be in the career." Deprecated="False" filter="0" group="General">
                        <TunableTuple name="careers_to_consider" class="TunableWhiteBlackList" display="Careers To Consider" muid="4DBDDC6BF2D8CBD2" description="The set of careers to consider and the threshold for passing." Deprecated="False" filter="0" group="General">
                            <TunableVariant type="None" name="blacklist" class="OptionalTunable" default="nothing" display="Blacklist" muid="1F235DB4E683FDC" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is not in the blacklist. If no blacklist is&#xA;specified, no items are disallowed." Deprecated="False" filter="0" group="General">
                                <Tunable name="nothing" class="TunableExistance" display="Nothing" muid="849FE464EFE3EB95" />
                                <TunableTuple name="specify" class="TunableBlacklist" display="Specify" muid="33CEFAFC8DF816A7" description="A tunable blacklist." Deprecated="False" filter="0" group="General">
                                    <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="37E692B33F9CB119" description="Blacklisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                        <Tunable type="career" class="TunableReference" muid="5F3A0B3F086179F5" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                    </TunableList>
                                    <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="195D30FE238537D4" description="Tunable option for how many items must be in the blacklist&#xA;for the blacklist to fail when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                        <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="EF323D364769CEBB" />
                                        <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="2B2496845531E240" description="When testing a collection of items, the number of items in&#xA;that collection that are in the blacklist must pass this&#xA;threshold test for the blacklist to disallow them all." Deprecated="False" filter="0" group="General">
                                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="EC10AFB3BFFA88A6" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                            <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="E1A6B3B58863B5B1" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                    </TunableVariant>
                                </TunableTuple>
                            </TunableVariant>
                            <TunableVariant type="None" name="whitelist" class="OptionalTunable" default="everything" display="Whitelist" muid="9378AC294610F1A5" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is in the whitelist. If no whitelist is&#xA;specified, all items are allowed." Deprecated="False" filter="0" group="General">
                                <Tunable name="everything" class="TunableExistance" display="Everything" muid="81B6874981A50C45" />
                                <TunableTuple name="specify" class="TunableWhitelist" display="Specify" muid="92F225D4AFF39A9D" description="A tunable whitelist." Deprecated="False" filter="0" group="General">
                                    <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="DA0D85929A32D20" description="Tunable option for how many items must be in the whitelist&#xA;for the whitelist to pass when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                        <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="D51C79B3AEB14A1" />
                                        <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="A10570E299DC548C" description="When testing a collection of items, the number of items in&#xA;that collection that are in the whitelist must pass this&#xA;threshold test for the whitelist to allow them all." Deprecated="False" filter="0" group="General">
                                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="150A9487FB45884A" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                            <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="EAD79C3A60A3889B" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                    </TunableVariant>
                                    <TunableList name="whitelist" class="TunableSet" display="Whitelist" muid="5418AC4AB7C97E6E" description="Whitelisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                        <Tunable type="career" class="TunableReference" muid="D6BB8766184A0BFE" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                    </TunableList>
                                </TunableTuple>
                            </TunableVariant>
                        </TunableTuple>
                    </TunableTuple>
                    <TunableTuple name="career_level" class="TunableCareerLevelTestFactory" display="Career Level" muid="F6E306E694791A5F" description="Test to see if the participants have a career at the specified level." Deprecated="False" filter="0" group="General">
                        <Tunable type="career_level" name="career_level" class="TunableReference" display="Career Level" muid="728D6E30C59EB70D" description="A reference to career level tuning that each subject must have in &#xA;at least one career in order for this test to pass." tuning_state="NeedsTuning" allow_none="False" Deprecated="False" filter="0" group="General" />
                    </TunableTuple>
                    <TunableTuple name="career_reference" class="TunableCareerReferenceTestFactory" display="Career Reference" muid="5DA4C6D214B7DDCA" description="A test for whether or not the specified subjects have the specified career,&#xA;career user level, or both." Deprecated="False" filter="0" group="General">
                        <Tunable type="bool" name="allow_invisible_careers" class="Tunable" default="False" display="Allow Invisible Careers" muid="213ABB89ECADD57" description="If checked, this test will also allow non-visible careers (such as&#xA;Odd Jobs) to tested against." Deprecated="False" filter="0" group="General" />
                        <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="59EC61D8347CE0C0" description="Should be called &quot;Ignore List&quot;.  Set of careers that will be ignored&#xA;on the Sim.  If the Sim only had these careers, it would be like having no careers." Deprecated="False" filter="0" group="General" unique_entries="true">
                            <Tunable type="career" class="TunableReference" muid="DDD2063253181D89" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                        </TunableList>
                        <TunableVariant type="None" name="career" class="OptionalTunable" default="all_careers" display="Career" muid="F1A3A82C982E8F5" description="The career to test for on the Sim. When set by itself it will pass&#xA;if the subject simply has this career. When set with user level it&#xA;will only pass if the subjects user level passes the threshold&#xA;test." Deprecated="False" filter="0" group="General">
                            <Tunable name="all_careers" class="TunableExistance" display="All Careers" muid="D2A8DF487C52EECE" />
                            <Tunable type="career" name="specific_career" class="TunableReference" display="Specific Career" muid="287F4B58ADD586DF" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                        </TunableVariant>
                        <TunableVariant type="None" name="user_level" class="OptionalTunable" default="disabled" display="User Level" muid="17FCF2B68439908F" description="Threshold test for the current user value of a career. If user_level&#xA;is set without career then it will pass if any of their careers &#xA;pass the threshold test. If set along with career then it will only&#xA;pass if the specified career passes the threshold test for user &#xA;level. &#xA;&#xA;The min and max for the user level are inclusive. So the Sim&#xA;can have any career level that meets the following equation and it&#xA;will pass.&#xA;&#xA;min &lt;= current career level &lt;= max." Deprecated="False" filter="0" group="General">
                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="3C524409D116AB67" />
                            <TunableTuple name="enabled" class="TunableInterval" display="Enabled" muid="FEBAF3E0E0D5E1E7" description="Threshold test for the current user value of a career. If user_level&#xA;is set without career then it will pass if any of their careers &#xA;pass the threshold test. If set along with career then it will only&#xA;pass if the specified career passes the threshold test for user &#xA;level. &#xA;&#xA;The min and max for the user level are inclusive. So the Sim&#xA;can have any career level that meets the following equation and it&#xA;will pass.&#xA;&#xA;min &lt;= current career level &lt;= max." Deprecated="False" filter="0" group="General">
                                <Tunable type="int" name="lower_bound" class="TunableRange" default="1" display="Lower Bound" muid="7F2B476F9EE8FA5A" min="0" max="None" description="The lower bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                <Tunable type="int" name="upper_bound" class="TunableRange" default="11" display="Upper Bound" muid="AAA4A518BC26748A" min="None" max="11" description="The upper bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                            </TunableTuple>
                        </TunableVariant>
                    </TunableTuple>
                    <TunableTuple name="career_track" class="TunableCareerTrackTestFactory" display="Career Track" muid="4CA235746D9DB16B" description="Test for whether the specified subjects have a career currently on the &#xA;track specified." Deprecated="False" filter="0" group="General">
                        <Tunable type="career_track" name="career_track" class="TunableReference" display="Career Track" muid="E69561592044EBA3" description="A reference to the career track that each subject must have in at&#xA;least one career in order for this test to pass." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                        <TunableVariant type="None" name="user_level" class="OptionalTunable" default="disabled" display="User Level" muid="685AF4D0FF1A39BF" description="Interval test for the current user value of a career. Career track&#xA;must also be specified for this check to work properly." Deprecated="False" filter="0" group="General">
                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="EE19242FFFCAB3CB" />
                            <TunableTuple name="enabled" class="TunableInterval" display="Enabled" muid="25DA231F7A159AB9" description="Interval test for the current user value of a career. Career track&#xA;must also be specified for this check to work properly." Deprecated="False" filter="0" group="General">
                                <Tunable type="int" name="lower_bound" class="TunableRange" default="1" display="Lower Bound" muid="DF2150A3B2646F45" min="0" max="None" description="The lower bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                <Tunable type="int" name="upper_bound" class="TunableRange" default="10" display="Upper Bound" muid="CBA2893E1CFCD237" min="None" max="10" description="The upper bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                            </TunableTuple>
                        </TunableVariant>
                    </TunableTuple>
                    <TunableTuple name="common_career" class="TunableCareerCommonTestFactory" display="Common Career" muid="B437C5C42054B40" description="Test used to see if multiple participants have a career in common." Deprecated="False" filter="0" group="General">
                        <TunableList name="targets" class="TunableEnumFlags" default="Listeners" display="Targets" muid="252F3429E352085C" description="tuning for the targets to check for the same common career on." Deprecated="False" filter="0" group="General" unique_entries="true">
                            <TunableEnum type="ParticipantType" class="TunableEnumEntry" default="Invalid" muid="83064939761BF802" static_entries="interactions.ParticipantType" Deprecated="False" filter="0" group="General" />
                        </TunableList>
                        <TunableVariant type="None" name="test_type" class="TunableCommonCareerTestsVariant" default="career_reference" display="Test Type" muid="DB8129D4E6556D9E" Deprecated="False" filter="0" group="General">
                            <TunableTuple name="career_level" class="TunableCareerLevelTestFactory" display="Career Level" muid="628E9357CA2DC3DD" description="Test to see if the participants have a career at the specified level." Deprecated="False" filter="0" group="General">
                                <Tunable type="career_level" name="career_level" class="TunableReference" display="Career Level" muid="70272668A9F8A1C0" description="A reference to career level tuning that each subject must have in &#xA;at least one career in order for this test to pass." tuning_state="NeedsTuning" allow_none="False" Deprecated="False" filter="0" group="General" />
                            </TunableTuple>
                            <TunableTuple name="career_reference" class="TunableCareerReferenceTestFactory" display="Career Reference" muid="35208B4D2EF1945" description="A test for whether or not the specified subjects have the specified career,&#xA;career user level, or both." Deprecated="False" filter="0" group="General">
                                <Tunable type="bool" name="allow_invisible_careers" class="Tunable" default="False" display="Allow Invisible Careers" muid="AE6245196DEC6C8D" description="If checked, this test will also allow non-visible careers (such as&#xA;Odd Jobs) to tested against." Deprecated="False" filter="0" group="General" />
                                <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="163487AC2273A2DC" description="Should be called &quot;Ignore List&quot;.  Set of careers that will be ignored&#xA;on the Sim.  If the Sim only had these careers, it would be like having no careers." Deprecated="False" filter="0" group="General" unique_entries="true">
                                    <Tunable type="career" class="TunableReference" muid="68FD11CF62FFAE4B" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                </TunableList>
                                <TunableVariant type="None" name="career" class="OptionalTunable" default="all_careers" display="Career" muid="A5178F01D2D91118" description="The career to test for on the Sim. When set by itself it will pass&#xA;if the subject simply has this career. When set with user level it&#xA;will only pass if the subjects user level passes the threshold&#xA;test." Deprecated="False" filter="0" group="General">
                                    <Tunable name="all_careers" class="TunableExistance" display="All Careers" muid="A4F63ABDC4AE69E7" />
                                    <Tunable type="career" name="specific_career" class="TunableReference" display="Specific Career" muid="8194D13762B27472" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                </TunableVariant>
                                <TunableVariant type="None" name="user_level" class="OptionalTunable" default="disabled" display="User Level" muid="2EF8F29BD514A370" description="Threshold test for the current user value of a career. If user_level&#xA;is set without career then it will pass if any of their careers &#xA;pass the threshold test. If set along with career then it will only&#xA;pass if the specified career passes the threshold test for user &#xA;level. &#xA;&#xA;The min and max for the user level are inclusive. So the Sim&#xA;can have any career level that meets the following equation and it&#xA;will pass.&#xA;&#xA;min &lt;= current career level &lt;= max." Deprecated="False" filter="0" group="General">
                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="4570BFA9D7E05626" />
                                    <TunableTuple name="enabled" class="TunableInterval" display="Enabled" muid="474B6128A57BF002" description="Threshold test for the current user value of a career. If user_level&#xA;is set without career then it will pass if any of their careers &#xA;pass the threshold test. If set along with career then it will only&#xA;pass if the specified career passes the threshold test for user &#xA;level. &#xA;&#xA;The min and max for the user level are inclusive. So the Sim&#xA;can have any career level that meets the following equation and it&#xA;will pass.&#xA;&#xA;min &lt;= current career level &lt;= max." Deprecated="False" filter="0" group="General">
                                        <Tunable type="int" name="lower_bound" class="TunableRange" default="1" display="Lower Bound" muid="E5DB555E4074345" min="0" max="None" description="The lower bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        <Tunable type="int" name="upper_bound" class="TunableRange" default="11" display="Upper Bound" muid="D2149C2CCC795927" min="None" max="11" description="The upper bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                </TunableVariant>
                            </TunableTuple>
                            <TunableTuple name="career_track" class="TunableCareerTrackTestFactory" display="Career Track" muid="D98D3E2AC4D4ECEC" description="Test for whether the specified subjects have a career currently on the &#xA;track specified." Deprecated="False" filter="0" group="General">
                                <Tunable type="career_track" name="career_track" class="TunableReference" display="Career Track" muid="6106671C691200EA" description="A reference to the career track that each subject must have in at&#xA;least one career in order for this test to pass." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                <TunableVariant type="None" name="user_level" class="OptionalTunable" default="disabled" display="User Level" muid="7673B44E14EE6CD5" description="Interval test for the current user value of a career. Career track&#xA;must also be specified for this check to work properly." Deprecated="False" filter="0" group="General">
                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="2B28D93226D770AB" />
                                    <TunableTuple name="enabled" class="TunableInterval" display="Enabled" muid="EF31CCFC299739FA" description="Interval test for the current user value of a career. Career track&#xA;must also be specified for this check to work properly." Deprecated="False" filter="0" group="General">
                                        <Tunable type="int" name="lower_bound" class="TunableRange" default="1" display="Lower Bound" muid="DBEAB71AB3642B69" min="0" max="None" description="The lower bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        <Tunable type="int" name="upper_bound" class="TunableRange" default="10" display="Upper Bound" muid="11C71A78F909A8B0" min="None" max="10" description="The upper bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                </TunableVariant>
                            </TunableTuple>
                            <TunableTuple name="same_career_at_user_level" class="TunableSameCareerAtUserLevelTestFactory" display="Same Career At User Level" muid="8132EC9AA36CCC52" description="Test to see if the participants share any career that they have the same&#xA;user level." Deprecated="False" filter="0" group="General">
                                <TunableTuple name="user_level" class="TunableThreshold" display="User Level" muid="2217AA03F1669668" description="User level to test for." Deprecated="False" filter="0" group="General">
                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="18CB8DDDA88473C8" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                    <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="353CC4E442D20B91" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                </TunableTuple>
                            </TunableTuple>
                        </TunableVariant>
                    </TunableTuple>
                    <TunableTuple name="days_worked" class="TunableCareerDaysWorked" display="Days Worked" muid="7948078B66CE6BD3" description="Test for how many days the Sim has worked for a career." Deprecated="False" filter="0" group="General">
                        <Tunable type="bool" name="active_only" class="Tunable" default="True" display="Active Only" muid="E1FA7F09E38B95DB" description="If checked, only workdays that the player has actively played will&#xA;count." Deprecated="False" filter="0" group="General" />
                        <Tunable type="career" name="career" class="TunableReference" display="Career" muid="D15E2D5430F89D9E" description="The career to test against." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                        <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="F5C48083E6F8414A" description="Threshold test for days worked." Deprecated="False" filter="0" group="General">
                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="4381F3751B7EBA04" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                            <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="96C26EDF8B201A10" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                        </TunableTuple>
                        <TunableVariant type="None" name="tooltip" class="OptionalTunable" default="disabled" display="Tooltip" muid="F12B81CA44B734B5" description="Reason of failure." Deprecated="False" filter="0" group="General">
                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="242AACD1CAB02D13" />
                            <Tunable type="int" name="enabled" class="TunableLocalizedString" default="0x0" display="Enabled" muid="346306CE8E88ECDD" description="Reason of failure." Deprecated="False" filter="0" group="General" />
                        </TunableVariant>
                    </TunableTuple>
                    <TunableTuple name="has_available_assignment" class="TunableCareerHasAssignmentTestFactory" display="Has Available Assignment" muid="400C578AA4AE3D6D" description="A test for whether or not the specified subjects has an available assignment&#xA;in the specified career" Deprecated="False" filter="0" group="General">
                        <Tunable type="career" name="career" class="TunableReference" display="Career" muid="E010394C425B9A1" description="The career to test for having an available assignment.&#xA;&#xA;If None, will expect career passed in via PickedItemIds (i.e. via picker)." allow_none="True" Deprecated="False" filter="0" group="General" />
                    </TunableTuple>
                    <TunableTuple name="has_career" class="TunableHasCareerTestFactory" display="Has Career" muid="94CE5214A8345DAE" description="Test for whether or not the specified subjects have a career or not." Deprecated="False" filter="0" group="General">
                        <Tunable type="bool" name="has_career" class="Tunable" default="True" display="Has Career" muid="77B54C234E304DFE" description="If true all subjects must have a &#xA;career for the test to pass. If False then none of the subjects &#xA;can have a career for the test to pass." Deprecated="False" filter="0" group="General" />
                        <TunableVariant type="None" name="tooltip" class="OptionalTunable" default="disabled" display="Tooltip" muid="3F8CADFC8E12FFEB" description="Reason of failure." Deprecated="False" filter="0" group="General">
                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="D0562E5ED021DF0D" />
                            <Tunable type="int" name="enabled" class="TunableLocalizedString" default="0x0" display="Enabled" muid="6AB3622EC5B7B102" description="Reason of failure." Deprecated="False" filter="0" group="General" />
                        </TunableVariant>
                    </TunableTuple>
                    <TunableTuple name="has_career_outfit" class="TunableHasCareerOutfit" display="Has Career Outfit" muid="9BE0C0F6AC1DD11" description="Test for if the subjects have a career outfit." Deprecated="False" filter="0" group="General" />
                    <TunableTuple name="has_quittable_career" class="TunableQuittableCareerTestFactory" display="Has Quittable Career" muid="135A5E736899647F" description="Test for whether or not the specified subjects have a quittable career or not." Deprecated="False" filter="0" group="General">
                        <Tunable type="bool" name="has_quittable_career" class="Tunable" default="True" display="Has Quittable Career" muid="67A7CBC9347D0AC0" description="If True then all of the subjects must have a quittable career in &#xA;order for the test to pass. If False then none of the subjects &#xA;can have a quittable career in order to pass." Deprecated="False" filter="0" group="General" />
                    </TunableTuple>
                    <TunableTuple name="highest_level_achieved" class="TunableCareerHighestLevelAchievedTest" display="Highest Level Achieved" muid="E72652C3FD6135B8" description="Test looking at the highest level ever achieved of a specific career." Deprecated="False" filter="0" group="General">
                        <TunableList name="career_blacklist" class="TunableSet" display="Career Blacklist" muid="EFBB96DFD7E53069" description="A set of careers that will not be looked at." Deprecated="False" filter="0" group="General" unique_entries="true">
                            <Tunable type="career" class="TunableReference" muid="7AC60D16EF600BF" description="The career we will not check." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                        </TunableList>
                        <TunableVariant type="None" name="careers_to_check" class="OptionalTunable" default="disabled" display="Careers To Check" muid="66A889D7346BA3E" description="If enabled then we will only look at the careers listed in this.&#xA;set.  Otherwise will will look at all careers." Deprecated="False" filter="0" group="General">
                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="8711AB2CAEF5811E" />
                            <TunableList name="enabled" class="TunableSet" display="Enabled" muid="C7865D39B81AB0E7" description="A set of careers that will be looked at." Deprecated="False" filter="0" group="General" unique_entries="true">
                                <Tunable type="career" class="TunableReference" muid="E0AA52EE320F4720" description="The career we will check." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                            </TunableList>
                        </TunableVariant>
                        <Tunable type="int" name="careers_to_find" class="TunableRange" default="1" display="Careers To Find" muid="8CE72373CDDA313C" min="1" max="None" description="The number of careers that need to match the passing threshold for&#xA;this test to pass." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                        <TunableTuple name="passing_threshold" class="TunableThreshold" display="Passing Threshold" muid="70D983F7A07DCD21" description="Threshold for determining if a career is considered passing for&#xA;this test." Deprecated="False" filter="0" group="General">
                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="84800DF87A5F6300" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                            <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="1F2E551FE6FA9A67" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                        </TunableTuple>
                        <TunableVariant type="None" name="tooltip" class="OptionalTunable" default="disabled" display="Tooltip" muid="688513F0CE0F60F5" description="Reason of failure." Deprecated="False" filter="0" group="General">
                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="C17100BB226C2F1C" />
                            <Tunable type="int" name="enabled" class="TunableLocalizedString" default="0x0" display="Enabled" muid="538C7FF5728A86AF" description="Reason of failure." Deprecated="False" filter="0" group="General" />
                        </TunableVariant>
                    </TunableTuple>
                    <TunableTuple name="is_elective_course" class="TunableCareerIsElectiveCourseTest" display="Is Elective Course" muid="DF52722114F0A084" description="Test used to see if a career slot for a sim's university course is associated with an &#xA;elective Univerity course." Deprecated="False" filter="0" group="General">
                        <Tunable type="career" name="career" class="TunableReference" display="Career" muid="F06B1E28B1A6D507" description="The career slot to test for associated elective course data on the &#xA;subjects. " allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="UniversityCourseCareerSlot" />
                    </TunableTuple>
                    <TunableTuple name="is_retired" class="TunableIsRetiredTestFactory" display="Is Retired" muid="3828417CC537D6D9" description="Test for whether or not the specified subjects retired from a career." Deprecated="False" filter="0" group="General">
                        <Tunable type="career" name="career" class="TunableReference" display="Career" muid="62FA0B5763F65107" description="The retired career to test for on the subjects. If left unset, the&#xA;test will pass if the Sim is retired from any career." allow_none="False" Deprecated="False" filter="0" group="General" />
                    </TunableTuple>
                    <TunableTuple name="pto_amount" class="TunableCareerPTOAmountTestFactory" display="Pto Amount" muid="F46EE06D5ABA2AC7" description="A test for whether or not the specified subjects has the requested amount&#xA;of PTO available in the specified career" Deprecated="False" filter="0" group="General">
                        <Tunable type="career" name="career" class="TunableReference" display="Career" muid="B6C0D6EDF28CFE2F" description="The career to test for how much PTO the sim has.&#xA;&#xA;If None, will expect career passed in via PickedItemIds (i.e. via picker)." allow_none="True" Deprecated="False" filter="0" group="General" />
                        <TunableTuple name="required_pto_available" class="TunableThreshold" display="Required Pto Available" muid="1FEB6502661CE4EA" description="Threshold test for how much PTO is required" Deprecated="False" filter="0" group="General">
                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="D1973C61D1CEAB88" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                            <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="873FB7D8C87532D8" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                        </TunableTuple>
                    </TunableTuple>
                    <TunableTuple name="time_off" class="TunableCareerTimeOffTest" display="Time Off" muid="A3182E72E54AFD32" description="Require a Sim to be in a career that does not have requested time off for&#xA;the any reason." Deprecated="False" filter="0" group="General">
                        <TunableVariant type="None" name="tooltip" class="OptionalTunable" default="disabled" display="Tooltip" muid="4D096A3500F8BA30" description="Reason of failure." Deprecated="False" filter="0" group="General">
                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="8D037EAF52AB482C" />
                            <Tunable type="int" name="enabled" class="TunableLocalizedString" default="0x0" display="Enabled" muid="2953D01C83030FB3" description="Reason of failure." Deprecated="False" filter="0" group="General" />
                        </TunableVariant>
                    </TunableTuple>
                    <TunableTuple name="time_until_work" class="TunableCareerTimeUntilWorkTestFactory" display="Time Until Work" muid="ADF440FA58018295" description="A test for whether or not the specified subjects has the specified career,&#xA;And that their next work day starts within the specified number of hours" Deprecated="False" filter="0" group="General">
                        <Tunable type="career" name="career" class="TunableReference" display="Career" muid="C676152CF05D53A" description="The career to test the next start time of.&#xA;&#xA;If None, will expect career passed in via PickedItemIds (i.e. via picker)." allow_none="True" Deprecated="False" filter="0" group="General" />
                        <Tunable type="bool" name="check_all_careers" class="Tunable" default="False" display="Check All Careers" muid="E16207B05047B863" description="If checked then we will check all careers rather than just the one defined&#xA;in the career tunable.  The test will fail if any career fails." Deprecated="False" filter="0" group="General" />
                        <TunableTuple name="hours_till_work" class="TunableInterval" display="Hours Till Work" muid="26CE1D3DA65E5EF2" description="Threshold test for how long 'till the &quot;next&quot; start time.  It will&#xA;test up to one hour past the start time, at which point it will test&#xA;against the next start time." Deprecated="False" filter="0" group="General">
                            <Tunable type="float" name="lower_bound" class="TunableRange" default="-1" display="Lower Bound" muid="72CD51B921637ED4" min="-23" max="None" description="The lower bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                            <Tunable type="float" name="upper_bound" class="TunableRange" default="23" display="Upper Bound" muid="CF6B65AE4F5614E3" min="None" max="168" description="The upper bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                        </TunableTuple>
                    </TunableTuple>
                </TunableVariant>
            </TunableTuple>
            <TunableTuple name="club" class="TunableClubTest" display="Club" muid="EA7D31DB05B19934" description="A tunable factory that tests against Clubs.&#xA;&#xA;For use only with ClubSuperInteractions and ClubMixerInteractions." Deprecated="False" filter="0" group="General">
                <TunableVariant type="None" name="affordance_rule" class="OptionalTunable" default="disabled" display="Affordance Rule" muid="29D190A54DA75C64" description="If set, then the affordance being tested (should one exist) must&#xA;satisfy this rule requirement." Deprecated="False" filter="0" group="General">
                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="C7883EA03C43423D" />
                    <TunableVariant type="None" name="enabled" class="TunableVariant" default="is_encouraged" display="Enabled" muid="150DEF241C7E56DA" description="The rule requirement that the affordance must satisfy." Deprecated="False" filter="0" group="General">
                        <Tunable name="is_discouraged" class="TunableExistance" display="Is Discouraged" muid="DABA524631C98AC8" />
                        <Tunable name="is_encouraged" class="TunableExistance" display="Is Encouraged" muid="F9E621CC4190E9FB" />
                        <Tunable name="is_not_discouraged" class="TunableExistance" display="Is Not Discouraged" muid="7BBBC40959543BA8" />
                        <Tunable name="is_not_encouraged" class="TunableExistance" display="Is Not Encouraged" muid="CE66358F1675FFE7" />
                    </TunableVariant>
                </TunableVariant>
                <TunableVariant type="None" name="club_status" class="OptionalTunable" default="disabled" display="Club Status" muid="28800E94033D67DA" description="In enabled, require the tuned &quot;subject&quot; to either be or not be a&#xA;member of this interaction's associated Club." Deprecated="False" filter="0" group="General">
                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="74331FC7A3D2D811" />
                    <TunableVariant type="None" name="enabled" class="TunableVariant" default="none" display="Enabled" muid="C4526D46FC9E1A15" description="In enabled, require the tuned &quot;subject&quot; to either be or not be a&#xA;member of this interaction's associated Club." Deprecated="False" filter="0" group="General">
                        <Tunable name="Leader" class="TunableExistance" display="Leader" muid="BFAEE2CF011E7008" />
                        <Tunable name="Member" class="TunableExistance" display="Member" muid="E89B146F5860A7AA" />
                        <Tunable name="none" class="TunableExistance" display="None" muid="B6452DAE97D22ADA" />
                        <Tunable name="Not Leader" class="TunableExistance" display="Not Leader" muid="180E3FB1E9F1D89" />
                        <Tunable name="Not Member" class="TunableExistance" display="Not Member" muid="A920765590C3CAAA" />
                    </TunableVariant>
                </TunableVariant>
                <TunableVariant type="None" name="invite_only" class="OptionalTunable" default="disabled" display="Invite Only" muid="390CFAEA3165499" description="If enabled, require the associated Club to either be invite only or&#xA;be open to everyone." Deprecated="False" filter="0" group="General">
                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="DC0E57F3E350EE1F" />
                    <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="6652C7754D99E171" description="If enabled, require the associated Club to either be invite only or&#xA;be open to everyone." Deprecated="False" filter="0" group="General" />
                </TunableVariant>
                <Tunable type="bool" name="pass_if_any_clubs_pass" class="Tunable" default="False" display="Pass If Any Clubs Pass" muid="445C5727A01957DD" description="If checked then this test will pass if any of the clubs match the&#xA;requirements otherwise we require all clubs to meet the&#xA;requirements." Deprecated="False" filter="0" group="General" />
                <TunableVariant type="None" name="recent_member_status" class="OptionalTunable" default="disabled" display="Recent Member Status" muid="EAE679D283861A4E" description="If specified, the Sim must satisfy recent member status&#xA;requirements." Deprecated="False" filter="0" group="General">
                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="400221568551BA9A" />
                    <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="A7D504D3B52CFF4A" description="Whether or not the Sim must be a recent member of the Club in&#xA;order to pass this test." Deprecated="False" filter="0" group="General" />
                </TunableVariant>
                <TunableVariant type="None" name="require_common_club" class="OptionalTunable" default="disabled" display="Require Common Club" muid="F07318088208ABA8" description="If enabled, then there must be a common Club that both the subject&#xA;Sim and this specified Sim are in. If the club type is set to &quot;Use&#xA;Club from Resolver&quot;, then both Sims must be in that Club. If the&#xA;club type is set to &quot;Use Any Club&quot;, then there must be one club both&#xA;the subject Sim and this Sim are in." Deprecated="False" filter="0" group="General">
                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="BA6D36F993D98DD7" />
                    <TunableEnum type="ParticipantType" name="enabled" class="TunableEnumEntry" default="TargetSim" display="Enabled" muid="E606CE25E0F490A6" static_entries="interactions.ParticipantType" description="The Sim to test against for a common Club. If a multi-Sim&#xA;participant is specified, the union of their clubs is&#xA;considered, i.e. the test passes if at least one Sim satisfies&#xA;the requirements." Deprecated="False" filter="0" group="General" />
                </TunableVariant>
                <TunableVariant type="None" name="required_sim_count" class="OptionalTunable" default="disabled" display="Required Sim Count" muid="363FDB6A56565A7B" description="If enabled then this test will only pass if the group has a number &#xA;of members that passes the tuned threshold." Deprecated="False" filter="0" group="General">
                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="231E78DE5E1ACC65" />
                    <TunableTuple name="enabled" class="TunableThreshold" display="Enabled" muid="4774CC1827407EFD" description="The member requirement for this test to pass." Deprecated="False" filter="0" group="General">
                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="3E48FF8244A041EB" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                        <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="22C2CD484D159DDA" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                    </TunableTuple>
                </TunableVariant>
                <TunableVariant type="None" name="room_for_new_members" class="OptionalTunable" default="disabled" display="Room For New Members" muid="AFC89F30C01419FB" description="If enabled, require the associated Club to either have room for new&#xA;members or not have room for new members." Deprecated="False" filter="0" group="General">
                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="E7BE7DF300402423" />
                    <TunableVariant type="None" name="enabled" class="TunableVariant" default="none" display="Enabled" muid="A0BE8EDC7A3A43B7" description="If enabled, require the associated Club to either have room for new&#xA;members or not have room for new members." Deprecated="False" filter="0" group="General">
                        <Tunable name="Has No Room" class="TunableExistance" display="Has No Room" muid="CA1A251522AF50AE" />
                        <Tunable name="Has Room" class="TunableExistance" display="Has Room" muid="E2AE6FC45BAE36" />
                        <Tunable name="none" class="TunableExistance" display="None" muid="2450D62BEE040F2D" />
                    </TunableVariant>
                </TunableVariant>
                <TunableVariant type="None" name="subject_can_join_more_clubs" class="OptionalTunable" default="disabled" display="Subject Can Join More Clubs" muid="9AC9A3E193474FD9" description="If enabled, require the tuned &quot;subject&quot; to be allowed to join more&#xA;Clubs or not.&#xA;&#xA;The maximum number of Clubs per Sim is set in&#xA;club_tuning.ClubTunables in the &quot;MAX_CLUBS_PER_SIM&quot; tunable." Deprecated="False" filter="0" group="General">
                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="CBFE84D402E91EEF" />
                    <TunableVariant type="None" name="enabled" class="TunableVariant" default="none" display="Enabled" muid="2795E87565B28276" description="If enabled, require the tuned &quot;subject&quot; to be allowed to join more&#xA;Clubs or not.&#xA;&#xA;The maximum number of Clubs per Sim is set in&#xA;club_tuning.ClubTunables in the &quot;MAX_CLUBS_PER_SIM&quot; tunable." Deprecated="False" filter="0" group="General">
                        <Tunable name="Can Join More Clubs" class="TunableExistance" display="Can Join More Clubs" muid="D438148588CEA277" />
                        <Tunable name="Cannot Join More Clubs" class="TunableExistance" display="Cannot Join More Clubs" muid="B5C399E8E3D9FBAB" />
                        <Tunable name="none" class="TunableExistance" display="None" muid="13532A951C083EFD" />
                    </TunableVariant>
                </TunableVariant>
                <TunableVariant type="None" name="subject_passes_membership_criteria" class="OptionalTunable" default="disabled" display="Subject Passes Membership Criteria" muid="79FF9CFE513D46B4" description="If enabled, require the tuned &quot;subject&quot; to either pass this&#xA;associated Club's membership criteria or not pass the membership&#xA;criteria." Deprecated="False" filter="0" group="General">
                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="D9E3A25D2060DF04" />
                    <TunableVariant type="None" name="enabled" class="TunableVariant" default="none" display="Enabled" muid="EF3B6BBDA4FD80BA" description="If enabled, require the tuned &quot;subject&quot; to either pass this&#xA;associated Club's membership criteria or not pass the membership&#xA;criteria." Deprecated="False" filter="0" group="General">
                        <Tunable name="Does Not Pass Criteria" class="TunableExistance" display="Does Not Pass Criteria" muid="9E3999D3A9BC53FF" />
                        <Tunable name="none" class="TunableExistance" display="None" muid="352DE2F71195E601" />
                        <Tunable name="Passes Criteria" class="TunableExistance" display="Passes Criteria" muid="E12C0603E383631F" />
                    </TunableVariant>
                </TunableVariant>
                <TunableVariant type="None" name="subject_relationship_with_leader" class="OptionalTunable" default="disabled" display="Subject Relationship With Leader" muid="5518CECE0D97BFB3" description="If enabled, the tuned subject is required to have a specific&#xA;relationship with the leader. If the subject and the leader match,&#xA;the test fails." Deprecated="False" filter="0" group="General">
                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="D8F1994D2BE78D31" />
                    <TunableTuple name="enabled" class="TunableRelationshipTest" display="Enabled" muid="D8AAE8D029A11941" description="Gate availability by a relationship status." Deprecated="False" filter="0" group="General">
                        <Tunable type="bool" name="invert_num_relations" class="Tunable" default="False" display="Invert Num Relations" muid="E71C17BA876841A2" description="If checked then we will check that your Num Relations is less than or&#xA;equal to the value rather than the other way around." Deprecated="False" filter="0" group="General" />
                        <TunableTuple name="prohibited_relationship_bits" class="TunableTuple" display="Prohibited Relationship Bits" muid="55C95F05B6D66BCB" Deprecated="False" filter="0" group="General">
                            <TunableList name="match_all" class="TunableSet" display="Match All" muid="D434E28B02DC2B3A" description="All of these relationship bits must match to fail the test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                <Tunable type="relbit" class="TunableReference" muid="571BFEB53050E27E" allow_none="False" Deprecated="False" filter="0" group="General" />
                            </TunableList>
                            <TunableList name="match_any" class="TunableSet" display="Match Any" muid="C527C2FD4CB977B5" description="If any of these relationship bits match the test will fail." Deprecated="False" filter="0" group="General" unique_entries="true">
                                <Tunable type="relbit" class="TunableReference" muid="B04D80002F349982" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                            </TunableList>
                        </TunableTuple>
                        <TunableTuple name="relationship_score_interval" class="TunableInterval" display="Relationship Score Interval" muid="22C761DA1B6475F2" description="The range that the relationship score must be within in order for&#xA;this test to pass." Deprecated="False" filter="0" group="General">
                            <Tunable type="float" name="lower_bound" class="TunableRange" default="-100.0" display="Lower Bound" muid="24AEBD2AF6A92421" min="-100.0" max="None" description="The lower bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                            <Tunable type="float" name="upper_bound" class="TunableRange" default="100.0" display="Upper Bound" muid="534E2C92429A5E2D" min="None" max="100.0" description="The upper bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                        </TunableTuple>
                        <TunableTuple name="required_relationship_bits" class="TunableTuple" display="Required Relationship Bits" muid="287AA2670F2B7994" Deprecated="False" filter="0" group="General">
                            <TunableList name="match_all" class="TunableSet" display="Match All" muid="81A7BDAE6B2EA265" description="All of these relationship bits must be present to pass the&#xA;test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                <Tunable type="relbit" class="TunableReference" muid="E35E6796897B8C50" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                            </TunableList>
                            <TunableList name="match_any" class="TunableSet" display="Match Any" muid="D1C0FA7D88877590" description="Any of these relationship bits will pass the test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                <Tunable type="relbit" class="TunableReference" muid="20D7287E8DC22A0" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                            </TunableList>
                        </TunableTuple>
                        <TunableEnum type="RelationshipTestEvents" name="test_event" class="TunableEnumEntry" default="AllRelationshipEvents" display="Test Event" muid="E9080215A1DFF897" static_entries="relationships-relationship_tests.RelationshipTestEvents" description="The event that we want to trigger this instance of the tuned test&#xA;on." Deprecated="False" filter="0" group="General" />
                        <TunableVariant type="None" name="test_incest" class="TunableVariant" default="disabled" display="Test Incest" muid="C87EA09E22064AED" description="Test for incest status. Test passes if this matches the two Sim's&#xA;incest status." Deprecated="False" filter="0" group="General">
                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="C8845403B54B3F36" />
                            <Tunable name="is incestuous" class="TunableExistance" display="Is Incestuous" muid="81F20D8763928FF1" />
                            <Tunable name="is not incestuous" class="TunableExistance" display="Is Not Incestuous" muid="BFFF80CD38B0DD20" />
                        </TunableVariant>
                        <Tunable type="statistic" name="track" class="TunableReference" display="Track" muid="1263C98AC824DC6A" description="If set, the test will use the relationship score between sims for&#xA;this track. If unset, the track defaults to the global module&#xA;tunable REL_INSPECTOR_TRACK." allow_none="True" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="RelationshipTrack" />
                    </TunableTuple>
                </TunableVariant>
            </TunableTuple>
            <TunableTuple name="collected_single_item" class="TunableCollectedItemTest" display="Collected Single Item" muid="5D105790CC06C55F" description="A tunable test method that checks a single item being collected." Deprecated="False" filter="0" group="General">
                <TunableVariant type="None" name="test_type" class="TunableVariant" default="collection_type" display="Test Type" muid="B26789D6C2DF25A8" description="The type of test that will be run." Deprecated="False" filter="0" group="General">
                    <TunableTuple name="collection_type" class="TunableTuple" display="Collection Type" muid="8D13C83FA05555FF" description="If selected we will check that the collected item is from the&#xA;collection that we are looking for." Deprecated="False" filter="0" group="General">
                        <TunableList name="collection_types" class="TunableList" display="Collection Types" muid="A06008F8B9CAAB92" description="A list of collections to check against.  The test will pass if it&#xA;is a part of any of them.  If this list is empty, then it will pass if&#xA;it is part of any collection." Deprecated="False" filter="0" group="General">
                            <TunableEnum type="CollectionIdentifier" class="TunableEnumEntry" default="Unindentified" muid="FAADCE91A5179601" dynamic_entries="objects-collection_manager.CollectionIdentifier._elements" static_entries="objects-collection_manager.CollectionIdentifier" description="The collection we are checking against." Deprecated="False" filter="0" group="General" invalid_entries="Unindentified" />
                        </TunableList>
                    </TunableTuple>
                    <TunableTuple name="specific_items" class="TunableTuple" display="Specific Items" muid="E1D9A991FE364F58" description="If selected we will check that the collected item is from a&#xA;specific list of collectable items that we are looking for." Deprecated="False" filter="0" group="General">
                        <TunableList name="specific_items" class="TunableList" display="Specific Items" muid="B0A4FCFD0E8F5F60" description="List of allowed objects within a collection that we want to&#xA;check." Deprecated="False" filter="0" group="General">
                            <Tunable type="object" class="TunableReference" muid="AEF70F98ED0C37C" description="Object reference to each collectible object." allow_none="False" Deprecated="False" filter="0" group="General" />
                        </TunableList>
                    </TunableTuple>
                </TunableVariant>
            </TunableTuple>
            <TunableTuple name="collection" class="TunableCollectionThresholdTest" display="Collection" muid="CE25EFF548E1883" description="Tests for a provided amount of a given collection type." Deprecated="False" filter="0" group="General">
                <TunableEnum type="CollectionIdentifier" name="collection_type" class="TunableEnumEntry" default="Unindentified" display="Collection Type" muid="32D92D84ABAE6BDA" dynamic_entries="objects-collection_manager.CollectionIdentifier._elements" static_entries="objects-collection_manager.CollectionIdentifier" description="The collection we are checking on.  If collection type is&#xA;unidentified then we will look through all collections." Deprecated="False" filter="0" group="General" />
                <Tunable type="bool" name="complete_collection" class="Tunable" default="False" display="Complete Collection" muid="CF57D9E00F6AD4DC" description="Setting this to True (checked) will override the threshold and&#xA;check for collection completed" Deprecated="False" filter="0" group="General" />
                <TunableVariant type="None" name="specific_items" class="OptionalTunable" default="disabled" display="Specific Items" muid="2B37D93896EB78DD" description="If enabled then the collection threshold test will check for&#xA;specific items within the collection.  When enabled both the&#xA;Collection Type and Complete Collection tuning will be ignored." Deprecated="False" filter="0" group="General">
                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="B6D8B2162DB3D9BC" />
                    <TunableList name="enabled" class="TunableList" display="Enabled" muid="A64EE11B8DE6A613" description="List of allowed objects within a collection that we want to&#xA;check." Deprecated="False" filter="0" group="General">
                        <Tunable type="object" class="TunableReference" muid="29DDFB391641A699" description="Object reference to each collectible object." allow_none="False" Deprecated="False" filter="0" group="General" />
                    </TunableList>
                </TunableVariant>
                <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="1806683D334EBC4A" description="Threshold for which the Sim experiences motive failure" Deprecated="False" filter="0" group="General">
                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="6FD1A627D64BEFBB" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                    <Tunable type="int" name="value" class="Tunable" default="1" display="Value" muid="EC6B67F08A28B529" description="The value of the threshold that the collection is compared&#xA;against." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                </TunableTuple>
            </TunableTuple>
            <TunableTuple name="inventory" class="TunableInventoryTest" display="Inventory" muid="DCAFAE15A9FF2B16" description="A test to check on the contents of either a sim inventory or&#xA;an object inventory." Deprecated="False" filter="0" group="General">
                <TunableVariant type="None" name="contents_check" class="TunableVariant" default="has_anything" display="Contents Check" muid="5BC375BDA8ED067" description="Checks to run on each object of the specified inventory" Deprecated="False" filter="0" group="General">
                    <Tunable name="has_anything" class="TunableExistance" display="Has Anything" muid="AA049850A47C1143" />
                    <TunableTuple name="has_object_of_participant_type" class="TunableTuple" display="Has Object Of Participant Type" muid="FC95E86400128C8E" description="Participant type we want to test if its in the selected&#xA;inventory." Deprecated="False" filter="0" group="General">
                        <TunableEnum type="ParticipantType" name="participant" class="TunableEnumEntry" default="Object" display="Participant" muid="D05A726F6E45BA0C" static_entries="interactions.ParticipantType" description="Which participant of the interaction do we want to validate&#xA;on the inventory. " Deprecated="False" filter="0" group="General" />
                    </TunableTuple>
                    <TunableTuple name="has_object_with_def" class="TunableTuple" display="Has Object With Def" muid="38CA0955CB117E9E" Deprecated="False" filter="0" group="General">
                        <Tunable type="object" name="definition" class="TunableReference" display="Definition" muid="6C971F55286F304B" description="The object definition to look for inside inventory." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                    </TunableTuple>
                    <TunableTuple name="has_object_with_states" class="BasicStateCheckFactory" display="Has Object With States" muid="CFFB5DBFA65D7C27" description="This option tests crafted item's tags against a list of possible&#xA;tags." Deprecated="False" filter="0" group="General">
                        <TunableVariant type="None" name="object_requirement" class="TunableVariant" default="any_object" display="Object Requirement" muid="CC3C4B6F21B62F1" Deprecated="False" filter="0" group="General">
                            <Tunable name="any_object" class="TunableExistance" display="Any Object" muid="AE8B17A1FAE21BF" />
                            <TunableTuple name="definition" class="TunableTuple" display="Definition" muid="B6F8A59454AD2D4B" Deprecated="False" filter="0" group="General">
                                <Tunable type="object" name="definition" class="TunableReference" display="Definition" muid="ED1EC018A3BF04B2" description="The object must have this definition." allow_none="False" Deprecated="False" filter="0" group="General" />
                            </TunableTuple>
                            <TunableTuple name="tag" class="TunableTuple" display="Tag" muid="714919F45290E645" Deprecated="False" filter="0" group="General">
                                <TunableTuple name="tag" class="CraftTaggedItemFactory" display="Tag" muid="D1157CD2A751349B" description="The object must have this tag." Deprecated="False" filter="0" group="General">
                                    <TunableList name="tag_set" class="TunableSet" display="Tag Set" muid="AB22A67211911541" description="The tag of objects we want to test ownership of" Deprecated="False" filter="0" group="General" unique_entries="true">
                                        <TunableEnum type="Tag" class="TunableEnumEntry" default="INVALID" muid="8739C75933DDC0E" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="What tag to test for" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                    </TunableList>
                                    <TunableEnum type="TagTestType" name="test_type" class="TunableEnumEntry" default="CONTAINS_ANY_TAG_IN_SET" display="Test Type" muid="410F4CF4BD413321" static_entries="objects-object_tests.TagTestType" description="How to test the tags in the tag set against the objects on the lot." Deprecated="False" filter="0" group="General" />
                                </TunableTuple>
                            </TunableTuple>
                        </TunableVariant>
                        <TunableList name="state_set" class="TunableSet" display="State Set" muid="39AC64A91CE16DD0" Deprecated="False" filter="0" group="General" unique_entries="true">
                            <Tunable type="object_state" class="TunableReference" muid="35AA1DDAD459279D" description="What state to test for." allow_none="False" Deprecated="False" filter="0" group="General" />
                        </TunableList>
                        <TunableEnum type="StateTestType" name="test_type" class="TunableEnumEntry" default="CONTAINS_ANY_STATE_IN_SET" display="Test Type" muid="E851A688FBC95106" static_entries="objects-object_tests.StateTestType" description="How to test the states in the state set against the objects in&#xA;the inventory." Deprecated="False" filter="0" group="General" />
                    </TunableTuple>
                    <TunableTuple name="has_object_with_tag" class="CraftTaggedItemFactory" display="Has Object With Tag" muid="A624448B10B15453" description="This option tests crafted item's tags against a list of possible tags" Deprecated="False" filter="0" group="General">
                        <TunableList name="tag_set" class="TunableSet" display="Tag Set" muid="B2EBB113B420F991" description="The tag of objects we want to test ownership of" Deprecated="False" filter="0" group="General" unique_entries="true">
                            <TunableEnum type="Tag" class="TunableEnumEntry" default="INVALID" muid="6F7C7DF16D3C69CF" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="What tag to test for" Deprecated="False" filter="0" group="General" pack_safe="True" />
                        </TunableList>
                        <TunableEnum type="TagTestType" name="test_type" class="TunableEnumEntry" default="CONTAINS_ANY_TAG_IN_SET" display="Test Type" muid="E344D1A5FB6B6DFC" static_entries="objects-object_tests.TagTestType" description="How to test the tags in the tag set against the objects on the lot." Deprecated="False" filter="0" group="General" />
                    </TunableTuple>
                </TunableVariant>
                <TunableVariant type="None" name="inventory_location" class="TunableVariant" default="participant_inventory" display="Inventory Location" muid="C4739CC96F0E0163" description="Who owns the inventory. Either look in the inventory of a &#xA;participant or specify an object inventory type directly.&#xA;&#xA;If participant returns multiple inventory owners, the test will &#xA;pass only if ALL of those owners pass the inventory content test." Deprecated="False" filter="0" group="General">
                    <TunableTuple name="hidden_inventory_objects" class="TunableTuple" display="Hidden Inventory Objects" muid="72BFF400E482E8DC" Deprecated="False" filter="0" group="General">
                        <TunableEnum type="InventoryType" name="inventory" class="TunableEnumEntry" default="UNDEFINED" display="Inventory" muid="55D4B0C8732C5C03" dynamic_entries="objects-components-inventory_enums.InventoryType._elements" static_entries="objects-components-inventory_enums.InventoryType" description="Check in the hidden inventory for objects that can go into the&#xA;specified inventory type. EX: check that there are mailbox&#xA;objects in the hidden inventory" Deprecated="False" filter="0" group="General" />
                    </TunableTuple>
                    <TunableTuple name="object_inventory_type" class="TunableTuple" display="Object Inventory Type" muid="25ABE8DCEBCF317D" Deprecated="False" filter="0" group="General">
                        <TunableEnum type="InventoryType" name="inventory" class="TunableEnumEntry" default="UNDEFINED" display="Inventory" muid="F0C68D26A5C1B4F" dynamic_entries="objects-components-inventory_enums.InventoryType._elements" static_entries="objects-components-inventory_enums.InventoryType" description="Check the global Object inventory that has the specified type.&#xA;EX: check in the global fridge inventory that exists for all&#xA;fridges" Deprecated="False" filter="0" group="General" />
                    </TunableTuple>
                    <TunableTuple name="participant_inventory" class="TunableTuple" display="Participant Inventory" muid="C25A48348CD8348A" Deprecated="False" filter="0" group="General">
                        <TunableEnum type="ParticipantType" name="inventory" class="TunableEnumEntry" default="Actor" display="Inventory" muid="1F857D094477EE7D" static_entries="interactions.ParticipantType" description="The owner of the inventory" Deprecated="False" filter="0" group="General" />
                    </TunableTuple>
                </TunableVariant>
                <TunableTuple name="required_count" class="TunableThreshold" display="Required Count" muid="C670E65EBB14055" description="The inventory must have a tunable threshold of objects that&#xA;pass the contents check test.&#xA;&#xA;EX: test is object definition of type pizza. required count is enabled&#xA;and has a threshold of &gt;= 5. That means this test will pass if you&#xA;have 5 or more pizzas in your inventory. To check if any objects&#xA;exist, use required count &gt;= 1" Deprecated="False" filter="0" group="General">
                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="2C70B7AC5862E726" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                    <Tunable type="int" name="value" class="Tunable" default="1" display="Value" muid="8561CE20166AEC1A" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                </TunableTuple>
                <TunableEnum type="TestHiddenInventories" name="test_hidden" class="TunableEnumEntry" default="ANY" display="Test Hidden" muid="68C43ABCD735C7C9" static_entries="objects-object_tests.InventoryTest.TestHiddenInventories" description="Optionally restrict to only hidden or non-hidden inventories." Deprecated="False" filter="0" group="General" />
            </TunableTuple>
            <TunableTuple name="mood" class="TunableMoodTest" display="Mood" muid="DF13FEDB08F81827" description="A test to run to determine if the player has attained a specific mood." Deprecated="False" filter="0" group="General">
                <Tunable type="bool" name="disallow" class="Tunable" default="False" display="Disallow" muid="CDD57C9D420EC6C1" description="If True, this test will pass if the Sim's mood does NOT match the tuned mood reference." Deprecated="False" filter="0" group="General" />
                <Tunable type="mood" name="mood" class="TunableReference" display="Mood" muid="805521B9E8551E0C" description="The mood that must be active (or must be inactive, if 'Disallow' is&#xA;checked)." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                <TunableVariant type="None" name="tooltip" class="OptionalTunable" default="disabled" display="Tooltip" muid="D8899F8758C31971" description="Reason of failure." Deprecated="False" filter="0" group="General">
                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="857FEECB9B3CE89E" />
                    <Tunable type="int" name="enabled" class="TunableLocalizedString" default="0x0" display="Enabled" muid="C024E01EB2393F99" description="Reason of failure." Deprecated="False" filter="0" group="General" />
                </TunableVariant>
            </TunableTuple>
            <TunableTuple name="ranked_statistic" class="TunableRankedStatThresholdTest" display="Ranked Statistic" muid="6CAA9A7EF11CE79E" description="A test that checks whether or not a statistic is at a certain threshold for&#xA;a given participant." Deprecated="False" filter="0" group="General">
                <Tunable type="bool" name="must_have_ranked_stat" class="Tunable" default="False" display="Must Have Ranked Stat" muid="F889E05903E68EA8" description="Setting this to True (checked) will ensure that this test only&#xA;passes if the tested Sim actually has the ranked statistic &#xA;referenced. If left False (unchecked), this test will evaluate &#xA;as if the Sim had the ranked statistic at the value of 0" Deprecated="False" filter="0" group="General" />
                <TunableVariant type="None" name="num_participants" class="OptionalTunable" default="all_participants" display="Num Participants" muid="C08FF1DECBBE2BCA" description="If disabled, all participants must pass this stat test.&#xA;If enabled, we test against this number for the number of participants&#xA;that need this value of stat to pass. " Deprecated="False" filter="0" group="General">
                    <Tunable name="all_participants" class="TunableExistance" display="All Participants" muid="93705E2C7BF48A3B" />
                    <TunableTuple name="enabled" class="TunableThreshold" display="Enabled" muid="72DF4125439CC5EF" description="The threshold of the number of participants who must meet the &#xA;criteria individually." Deprecated="False" filter="0" group="General">
                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="EA1DE9457ED8EE34" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                        <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="E8BC44143CFFE812" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                    </TunableTuple>
                </TunableVariant>
                <Tunable type="statistic" name="ranked_stat" class="TunableReference" display="Ranked Stat" muid="1181A7396012CCD7" description="The ranked stat we are operating on." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                <Tunable type="bool" name="test_against_highest_rank" class="Tunable" default="False" display="Test Against Highest Rank" muid="A41E7F7F0E5DEBD0" description="When checked this test will only return True is the highest rank&#xA;achieved is in the threshold specified, and not the current rank." Deprecated="False" filter="0" group="General" />
                <TunableVariant type="None" name="threshold" class="TunableVariant" default="value_threshold" display="Threshold" muid="8A1F2F7D1894FD1A" description="The value or state threshold to test against." Deprecated="False" filter="0" group="General">
                    <TunableTuple name="state_value_threshold" class="TunableObjectStateValueThreshold" display="State Value Threshold" muid="C908208082C6E5AE" description="Value/comparison pair used to define a Threshold." Deprecated="False" filter="0" group="General">
                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="185300A53CDEB24B" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                        <Tunable type="object_state" name="value" class="TunableReference" display="Value" muid="5643ECE67B26561E" description="The state threshold for this test." allow_none="False" Deprecated="False" filter="0" group="General" restrict="ObjectStateValue" />
                    </TunableTuple>
                    <TunableTuple name="value_threshold" class="TunableThreshold" display="Value Threshold" muid="393EFB58783B26BE" description="The threshold to control availability based on the ranked&#xA;statistic's value." Deprecated="False" filter="0" group="General">
                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="1683A3A89451759A" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                        <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="A2123C76062A56AC" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                    </TunableTuple>
                </TunableVariant>
            </TunableTuple>
            <TunableTuple name="situation_running" class="TunableSituationRunningTest" display="Situation Running" muid="2982BB3922AB42F4" description="A test to see if the participant is part of any situations that are&#xA;running that satisfy the conditions of the test." Deprecated="False" filter="0" group="General">
                <Tunable type="bool" name="check_for_initiating_sim" class="Tunable" default="False" display="Check For Initiating Sim" muid="6409D3A5B69F161" description="If checked, the situation must be initiated by the tuned Participant." Deprecated="False" filter="0" group="General" />
                <TunableVariant type="None" name="level" class="OptionalTunable" default="disabled" display="Level" muid="147E35D5089A7640" description="A check for the level of the situation we are checking." Deprecated="False" filter="0" group="General">
                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="21084AF8FD6FF444" />
                    <TunableTuple name="enabled" class="TunableThreshold" display="Enabled" muid="4C11E331B67CD34A" description="A check for the level of the situation we are checking." Deprecated="False" filter="0" group="General">
                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="646C90752D7BD3CC" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                        <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="9B48772E4948BC1E" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                    </TunableTuple>
                </TunableVariant>
                <TunableVariant type="None" name="participant" class="OptionalTunable" default="disabled" display="Participant" muid="C809BA400F320E4E" description="The subject of this situation test." Deprecated="False" filter="0" group="General">
                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="13503C17A9AA219C" />
                    <TunableEnum type="ParticipantType" name="enabled" class="TunableEnumEntry" default="Actor" display="Enabled" muid="4C8F65F89FC1F20C" static_entries="interactions.ParticipantType" description="The subject of this situation test." Deprecated="False" filter="0" group="General" />
                </TunableVariant>
                <TunableVariant type="None" name="situation_blacklist" class="OptionalTunable" default="disabled" display="Situation Blacklist" muid="2621EE8E7B5F5A30" description="Blacklisted situations, specified by this set of references or by&#xA;tag in Tag Blacklist, will cause this test to fail." Deprecated="False" filter="0" group="General">
                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="A55F23ADCA8E231D" />
                    <TunableList name="enabled" class="TunableSet" display="Enabled" muid="30AA9FB10316F0A0" Deprecated="False" filter="0" group="General" unique_entries="true">
                        <Tunable type="situation" class="TunableReference" muid="FE5384C5EA99D99C" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                    </TunableList>
                </TunableVariant>
                <TunableVariant type="None" name="situation_whitelist" class="OptionalTunable" default="disabled" display="Situation Whitelist" muid="8C6608450028C66B" description="Only whitelisted situations, specified by this set of references or&#xA;by tags in Tag Whitelist, can cause this test to pass. If no&#xA;situations are specified in this whitelist, all situations are&#xA;considered whitelisted." Deprecated="False" filter="0" group="General">
                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="C6B73D9C317E0D1" />
                    <TunableList name="enabled" class="TunableSet" display="Enabled" muid="795B2A3ACC9242FB" description="Only whitelisted situations, specified by this set of references or&#xA;by tags in Tag Whitelist, can cause this test to pass. If no&#xA;situations are specified in this whitelist, all situations are&#xA;considered whitelisted." Deprecated="False" filter="0" group="General" unique_entries="true">
                        <Tunable type="situation" class="TunableReference" muid="63604DB9259D3E47" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                    </TunableList>
                </TunableVariant>
                <TunableList name="tag_blacklist" class="TunableSet" display="Tag Blacklist" muid="BF1246D814C178B8" description="Blacklisted situations, specified by this set of tags or by&#xA;references in Situation Tag Blacklist, will cause this test to&#xA;fail." Deprecated="False" filter="0" group="General" unique_entries="true">
                    <TunableEnum type="Tag" class="TunableEnumWithFilter" default="INVALID" muid="DC7ABB099CBB1D45" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" Deprecated="False" dynamic_entries_prefix="situation" filter="0" group="General" pack_safe="True" />
                </TunableList>
                <TunableVariant type="None" name="tag_whitelist" class="OptionalTunable" default="disabled" display="Tag Whitelist" muid="DF30FC684360D7BA" description="Only whitelisted situations, specified by this set of tags or by&#xA;references in Situation Whitelist, can cause this test to pass. If&#xA;this whitelist is not enabled, all situations are considered&#xA;whitelisted." Deprecated="False" filter="0" group="General">
                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="E072BFDFC5A3F72A" />
                    <TunableList name="enabled" class="TunableSet" display="Enabled" muid="4CA72B73AD154B14" Deprecated="False" filter="0" group="General" unique_entries="true">
                        <TunableEnum type="Tag" class="TunableEnumWithFilter" default="INVALID" muid="3A05C3B8ABE419B4" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" Deprecated="False" dynamic_entries_prefix="situation" filter="0" group="General" pack_safe="True" />
                    </TunableList>
                </TunableVariant>
                <TunableEnum type="SituationRunningTestEvents" name="test_event" class="TunableEnumEntry" default="SituationEnded" display="Test Event" muid="C2B3D8A294E13D0" static_entries="event_testing-test_variants.SituationRunningTestEvents" description="The test event that this test will run on when tuned within an&#xA;objective or the main goal trigger of a sitaution.&#xA;&#xA;If you are tuning this on an interaction then it will do nothing." Deprecated="False" filter="0" group="General" />
                <TunableVariant type="None" name="tooltip" class="OptionalTunable" default="disabled" display="Tooltip" muid="BB11204D182384BD" description="Reason of failure." Deprecated="False" filter="0" group="General">
                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="52C83B5DD67B302B" />
                    <Tunable type="int" name="enabled" class="TunableLocalizedString" default="0x0" display="Enabled" muid="7FB3A7769653045D" description="Reason of failure." Deprecated="False" filter="0" group="General" />
                </TunableVariant>
            </TunableTuple>
            <TunableTuple name="skill_tag" class="TunableSkillTagThresholdTest" display="Skill Tag" muid="5F3982C6D775C2BE" description="A tunable test method that checks the TAGS of ALL THE PARTICIPANTS SKILLS each against a threshold." Deprecated="False" filter="0" group="General">
                <Tunable type="int" name="skill_quantity" class="Tunable" default="0" display="Skill Quantity" muid="385A33D35FF8A0BD" description="The minimum number of skills at or above this level required to pass." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                <TunableEnum type="Tag" name="skill_tag" class="TunableEnumEntry" default="INVALID" display="Skill Tag" muid="40CBAA70A1349D57" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="What tag to test for." Deprecated="False" filter="0" group="General" invalid_entries="INVALID" />
                <TunableTuple name="skill_threshold" class="TunableThreshold" display="Skill Threshold" muid="38D4AD35720D9FFA" description="The threshold level to test of each skill." Deprecated="False" filter="0" group="General">
                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="C0196F181E171F73" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                    <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="607F76912F519245" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                </TunableTuple>
                <Tunable type="bool" name="test_only_changed_skill" class="Tunable" default="False" display="Test Only Changed Skill" muid="8C5869A0DADB372C" description="If checked then we will only test the skill that actually changed." Deprecated="False" filter="0" group="General" />
            </TunableTuple>
            <TunableTuple name="statistic" class="TunableStatThresholdTest" display="Statistic" muid="A57F8300AD8E9B9F" description="A test that checks whether or not a statistic is at a certain threshold for&#xA;a given participant. It can also test whether or not the participant has the&#xA;statistic explicitly added on them." Deprecated="False" filter="0" group="General">
                <Tunable type="bool" name="must_have_stat" class="Tunable" default="False" display="Must Have Stat" muid="D2575C8D502D90E2" description="Setting this to True (checked) will ensure that this test only&#xA;passes if the tested Sim actually has the statistic referenced. If&#xA;left False (unchecked), this test will evaluate as if the Sim had&#xA;the statistic at the value of 0" Deprecated="False" filter="0" group="General" />
                <TunableVariant type="None" name="score_to_use" class="TunableVariant" default="user_value" display="Score To Use" muid="732044BE8AE7ADBD" description="Depending on the choice, this decides what value to use for the &#xA;threshold comparison." Deprecated="False" filter="0" group="General">
                    <TunableTuple name="points" class="Tunable_PointsValue" display="Points" muid="9C65FF2E04A44B83" description="Use the raw points for the comparison in the test." Deprecated="False" filter="0" group="General" />
                    <TunableTuple name="rank" class="Tunable_RankValue" display="Rank" muid="8D7FC003D7C01F3C" description="Use the rank value for the comparison in the test." Deprecated="False" filter="0" group="General" />
                    <TunableTuple name="user_value" class="Tunable_UserValue" display="User Value" muid="742C081A4322A0F3" description="Use the user value for the comparison in the test." Deprecated="False" filter="0" group="General">
                        <Tunable type="bool" name="highest_level_reached_instead" class="Tunable" default="False" display="Highest Level Reached Instead" muid="49994BA7EC0698E" description="If checked this will test against the highest level reached. This&#xA;currently only works with Ranked Statistics. Other statistics do&#xA;not have a notion of highest level reached. If we are using&#xA;something that doesn't support highest level reached it will &#xA;test against the current level instead." Deprecated="False" filter="0" group="General" />
                    </TunableTuple>
                </TunableVariant>
                <Tunable type="statistic" name="stat" class="TunableReference" display="Stat" muid="772DA388147AE30C" description="The stat we are operating on." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="Statistic,Skill" />
                <TunableVariant type="None" name="threshold" class="TunableVariant" default="value_threshold" display="Threshold" muid="3059A3D2A0BA8380" description="The value or state threshold to test against." Deprecated="False" filter="0" group="General">
                    <TunableTuple name="state_value_threshold" class="TunableObjectStateValueThreshold" display="State Value Threshold" muid="8A4037082957606A" description="Value/comparison pair used to define a Threshold." Deprecated="False" filter="0" group="General">
                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="1CA4D7DAA6417706" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                        <Tunable type="object_state" name="value" class="TunableReference" display="Value" muid="4837ED70E0C2534F" description="The state threshold for this test." allow_none="False" Deprecated="False" filter="0" group="General" restrict="ObjectStateValue" />
                    </TunableTuple>
                    <TunableTuple name="value_threshold" class="TunableThreshold" display="Value Threshold" muid="97DD24984CC984AD" description="The threshold to control availability based on the statistic's&#xA;value." Deprecated="False" filter="0" group="General">
                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="6110B383393BFBC9" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                        <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="D2CB0CD782DB379D" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                    </TunableTuple>
                </TunableVariant>
            </TunableTuple>
            <TunableTuple name="took_photo" class="TunableTookPhotoTest" display="Took Photo" muid="E825AB9F7F15CB86" description="Objective completion test that fires when the player takes a photo and&#xA;allows photo specific tests." Deprecated="False" filter="0" group="General">
                <TdescFragTag name="tests" class="TunableTestSet" display="Tests" muid="A2950E2AE863FE67" description="A set of tests that are run with the photographer as the actor,&#xA;and the photograph as the object and PhotographyTargets as the&#xA;subjects." filter="0" group="General" />
                <TunableVariant type="None" name="tooltip" class="OptionalTunable" default="disabled" display="Tooltip" muid="950622B34E03B4DF" description="Reason of failure." Deprecated="False" filter="0" group="General">
                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="2CF2E2D6F1AD7122" />
                    <Tunable type="int" name="enabled" class="TunableLocalizedString" default="0x0" display="Enabled" muid="9CDBBB34EB4F2448" description="Reason of failure." Deprecated="False" filter="0" group="General" />
                </TunableVariant>
            </TunableTuple>
        </TunableVariant>

        <TunableList name="_post_tests" class="TunableSituationGoalActorPostTestSet" display="Post Tests" muid="D16B10E501CCC9DB" description="               A set of tests that must all pass when the player satisfies the goal_test &#xA;               for the goal to be consider completed.&#xA;These test can only consider the &#xA;               actor and the environment. &#xA;e.g. Practice in front of mirror while drunk.&#xA;               " Deprecated="False" filter="0" group="Tests">
            <TunableVariant type="None" class="TunableSituationGoalActorPostTestVariant" default="none" muid="2EE1A30D14852EBE" description="A single tunable test." Deprecated="False" filter="0" group="General">
                <TunableTuple name="buff" class="TunableBuffTest" display="Buff" muid="D5F1575D687BCE9A" description="Test whether or not a participant has or doesn't have specific buffs." Deprecated="False" filter="0" group="General">
                    <Tunable type="bool" name="apply_whitelist_on_individual_basis" class="Tunable" default="True" display="Apply Whitelist On Individual Basis" muid="9544444E61DF7609" description="If checked, will require that each target has at least one&#xA;whitelisted buff. If unchecked, will require only a single target to&#xA;have at least one whitelisted trait." Deprecated="False" filter="0" group="General" />
                    <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="BED9F750145E543C" description="The Sim must not have any buff in this list to pass the test." Deprecated="False" filter="0" group="General" unique_entries="true">
                        <Tunable type="buff" class="TunableReference" muid="B5131428969B8594" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                    </TunableList>
                    <TunableVariant type="None" name="whitelist" class="OptionalTunable" default="disabled" display="Whitelist" muid="4CBF2826A382FCA0" description="If enabled, participant will test for buff's on the whitelist." Deprecated="False" filter="0" group="General">
                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="CC74E8F1DC78F672" />
                        <TunableList name="enabled" class="TunableSet" display="Enabled" muid="39C16BACD8099B0C" description="The participant must have at least one buff in this list to pass the&#xA;test." Deprecated="False" filter="0" group="General" unique_entries="true">
                            <Tunable type="buff" class="TunableReference" muid="6E16CBEEDABA3C24" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                        </TunableList>
                    </TunableVariant>
                </TunableTuple>
                <TunableTuple name="career" class="TunableTunableCareerTest" display="Career" muid="5149DA5FEDEB6A95" description="Tunable test for what careers a Sim has.&#xA;&#xA;subjects: A ParticipantType used for choosing whom to run the test on.&#xA;test_type: A variant of the different tunable tests that handle testing&#xA;        for careers." Deprecated="False" filter="0" group="General">
                    <Tunable type="bool" name="negate" class="Tunable" default="False" display="Negate" muid="B423C99954A4C430" description="If this is true then it will negate &#xA;the result of the test type. For instance if this is true and the test&#xA;would return true for whether or not a sim has a particular career&#xA;False will be returned instead." Deprecated="False" filter="0" group="General" />
                    <TunableVariant type="None" name="test_type" class="TunableCareerTestVariant" default="career_reference" display="Test Type" muid="136E560FB8333661" Deprecated="False" filter="0" group="General">
                        <TunableTuple name="attended_first_day" class="TunableCareerAttendedFirstDay" display="Attended First Day" muid="CFFBD4429C9AD5E2" description="Test for whether or not the Sim has gone to work at all for the career." Deprecated="False" filter="0" group="General">
                            <Tunable type="career" name="career" class="TunableReference" display="Career" muid="9BCCB6347361F3E0" description="The career to see if the Sim has gone to work for." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                            <TunableVariant type="None" name="tooltip" class="OptionalTunable" default="disabled" display="Tooltip" muid="B04D6135F1805C08" description="Reason of failure." Deprecated="False" filter="0" group="General">
                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="22781C80A84EE2EA" />
                                <Tunable type="int" name="enabled" class="TunableLocalizedString" default="0x0" display="Enabled" muid="5CB8802E72141BDE" description="Reason of failure." Deprecated="False" filter="0" group="General" />
                            </TunableVariant>
                        </TunableTuple>
                        <TunableTuple name="can_join_career" class="TunableCareerAvailabilityTestFactory" display="Can Join Career" muid="A50735D1D2ECA8ED" description="A test for whether a sim can join a tunable number threshold of the tuned&#xA;careers. This requires that the career be valid for the sim and that the sim&#xA;not already be in the career." Deprecated="False" filter="0" group="General">
                            <TunableTuple name="careers_to_consider" class="TunableWhiteBlackList" display="Careers To Consider" muid="17AE5117E9C2E815" description="The set of careers to consider and the threshold for passing." Deprecated="False" filter="0" group="General">
                                <TunableVariant type="None" name="blacklist" class="OptionalTunable" default="nothing" display="Blacklist" muid="6DE18DAB171EE065" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is not in the blacklist. If no blacklist is&#xA;specified, no items are disallowed." Deprecated="False" filter="0" group="General">
                                    <Tunable name="nothing" class="TunableExistance" display="Nothing" muid="29BC8465F513BF27" />
                                    <TunableTuple name="specify" class="TunableBlacklist" display="Specify" muid="A563F948F5238F06" description="A tunable blacklist." Deprecated="False" filter="0" group="General">
                                        <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="78932B0C0DC1E7DC" description="Blacklisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                            <Tunable type="career" class="TunableReference" muid="7603CEB5CF722FDD" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                        </TunableList>
                                        <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="55316D3647749E17" description="Tunable option for how many items must be in the blacklist&#xA;for the blacklist to fail when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                            <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="6BCA229B61DE1043" />
                                            <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="AA793717E0BEED28" description="When testing a collection of items, the number of items in&#xA;that collection that are in the blacklist must pass this&#xA;threshold test for the blacklist to disallow them all." Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="FCED7166C56C846C" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="834E52A4504A2DAA" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                        </TunableVariant>
                                    </TunableTuple>
                                </TunableVariant>
                                <TunableVariant type="None" name="whitelist" class="OptionalTunable" default="everything" display="Whitelist" muid="55BAFD0F8AB1A1E7" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is in the whitelist. If no whitelist is&#xA;specified, all items are allowed." Deprecated="False" filter="0" group="General">
                                    <Tunable name="everything" class="TunableExistance" display="Everything" muid="1DBC55AF97714C5F" />
                                    <TunableTuple name="specify" class="TunableWhitelist" display="Specify" muid="E4498C34A0BE7C04" description="A tunable whitelist." Deprecated="False" filter="0" group="General">
                                        <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="3571691F2664C755" description="Tunable option for how many items must be in the whitelist&#xA;for the whitelist to pass when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                            <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="83D12C218A2665F9" />
                                            <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="7DD9A90CDE2A03FE" description="When testing a collection of items, the number of items in&#xA;that collection that are in the whitelist must pass this&#xA;threshold test for the whitelist to allow them all." Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="3E14B97B20385626" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="8545C8A5C1DAAEE8" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                        </TunableVariant>
                                        <TunableList name="whitelist" class="TunableSet" display="Whitelist" muid="DE834E852FB4D64D" description="Whitelisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                            <Tunable type="career" class="TunableReference" muid="B3B148A03C50F0E7" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                        </TunableList>
                                    </TunableTuple>
                                </TunableVariant>
                            </TunableTuple>
                        </TunableTuple>
                        <TunableTuple name="career_level" class="TunableCareerLevelTestFactory" display="Career Level" muid="E004EA42D5A88ACF" description="Test to see if the participants have a career at the specified level." Deprecated="False" filter="0" group="General">
                            <Tunable type="career_level" name="career_level" class="TunableReference" display="Career Level" muid="202B4CB85DC71F96" description="A reference to career level tuning that each subject must have in &#xA;at least one career in order for this test to pass." tuning_state="NeedsTuning" allow_none="False" Deprecated="False" filter="0" group="General" />
                        </TunableTuple>
                        <TunableTuple name="career_reference" class="TunableCareerReferenceTestFactory" display="Career Reference" muid="46FDABDE3484ED14" description="A test for whether or not the specified subjects have the specified career,&#xA;career user level, or both." Deprecated="False" filter="0" group="General">
                            <Tunable type="bool" name="allow_invisible_careers" class="Tunable" default="False" display="Allow Invisible Careers" muid="5669F7AE11D5C50F" description="If checked, this test will also allow non-visible careers (such as&#xA;Odd Jobs) to tested against." Deprecated="False" filter="0" group="General" />
                            <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="BDD2F281634EA282" description="Should be called &quot;Ignore List&quot;.  Set of careers that will be ignored&#xA;on the Sim.  If the Sim only had these careers, it would be like having no careers." Deprecated="False" filter="0" group="General" unique_entries="true">
                                <Tunable type="career" class="TunableReference" muid="71FF298FC3FC872D" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                            </TunableList>
                            <TunableVariant type="None" name="career" class="OptionalTunable" default="all_careers" display="Career" muid="150EEB530978BE87" description="The career to test for on the Sim. When set by itself it will pass&#xA;if the subject simply has this career. When set with user level it&#xA;will only pass if the subjects user level passes the threshold&#xA;test." Deprecated="False" filter="0" group="General">
                                <Tunable name="all_careers" class="TunableExistance" display="All Careers" muid="7EE89003243F12AE" />
                                <Tunable type="career" name="specific_career" class="TunableReference" display="Specific Career" muid="CE3CC2397D114021" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                            </TunableVariant>
                            <TunableVariant type="None" name="user_level" class="OptionalTunable" default="disabled" display="User Level" muid="EA4F69EF770C924E" description="Threshold test for the current user value of a career. If user_level&#xA;is set without career then it will pass if any of their careers &#xA;pass the threshold test. If set along with career then it will only&#xA;pass if the specified career passes the threshold test for user &#xA;level. &#xA;&#xA;The min and max for the user level are inclusive. So the Sim&#xA;can have any career level that meets the following equation and it&#xA;will pass.&#xA;&#xA;min &lt;= current career level &lt;= max." Deprecated="False" filter="0" group="General">
                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="81FAAE154FBC32B0" />
                                <TunableTuple name="enabled" class="TunableInterval" display="Enabled" muid="F33A07AF62F12E40" description="Threshold test for the current user value of a career. If user_level&#xA;is set without career then it will pass if any of their careers &#xA;pass the threshold test. If set along with career then it will only&#xA;pass if the specified career passes the threshold test for user &#xA;level. &#xA;&#xA;The min and max for the user level are inclusive. So the Sim&#xA;can have any career level that meets the following equation and it&#xA;will pass.&#xA;&#xA;min &lt;= current career level &lt;= max." Deprecated="False" filter="0" group="General">
                                    <Tunable type="int" name="lower_bound" class="TunableRange" default="1" display="Lower Bound" muid="318863FD60D194E3" min="0" max="None" description="The lower bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                    <Tunable type="int" name="upper_bound" class="TunableRange" default="11" display="Upper Bound" muid="9A185CE1C0186F22" min="None" max="11" description="The upper bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                </TunableTuple>
                            </TunableVariant>
                        </TunableTuple>
                        <TunableTuple name="career_track" class="TunableCareerTrackTestFactory" display="Career Track" muid="99263D4B5462AF7A" description="Test for whether the specified subjects have a career currently on the &#xA;track specified." Deprecated="False" filter="0" group="General">
                            <Tunable type="career_track" name="career_track" class="TunableReference" display="Career Track" muid="FB34F7D52725A645" description="A reference to the career track that each subject must have in at&#xA;least one career in order for this test to pass." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                            <TunableVariant type="None" name="user_level" class="OptionalTunable" default="disabled" display="User Level" muid="887AACDFB8066606" description="Interval test for the current user value of a career. Career track&#xA;must also be specified for this check to work properly." Deprecated="False" filter="0" group="General">
                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="5B88C3345CB1137D" />
                                <TunableTuple name="enabled" class="TunableInterval" display="Enabled" muid="F3BA0A536868C7BE" description="Interval test for the current user value of a career. Career track&#xA;must also be specified for this check to work properly." Deprecated="False" filter="0" group="General">
                                    <Tunable type="int" name="lower_bound" class="TunableRange" default="1" display="Lower Bound" muid="19C69D023AED8A24" min="0" max="None" description="The lower bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                    <Tunable type="int" name="upper_bound" class="TunableRange" default="10" display="Upper Bound" muid="84E34723C3EF17F1" min="None" max="10" description="The upper bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                </TunableTuple>
                            </TunableVariant>
                        </TunableTuple>
                        <TunableTuple name="common_career" class="TunableCareerCommonTestFactory" display="Common Career" muid="7C2F0E99C7F48FE0" description="Test used to see if multiple participants have a career in common." Deprecated="False" filter="0" group="General">
                            <TunableList name="targets" class="TunableEnumFlags" default="Listeners" display="Targets" muid="F08DCE229FECA2A3" description="tuning for the targets to check for the same common career on." Deprecated="False" filter="0" group="General" unique_entries="true">
                                <TunableEnum type="ParticipantType" class="TunableEnumEntry" default="Invalid" muid="E217E76710942717" static_entries="interactions.ParticipantType" Deprecated="False" filter="0" group="General" />
                            </TunableList>
                            <TunableVariant type="None" name="test_type" class="TunableCommonCareerTestsVariant" default="career_reference" display="Test Type" muid="B69823660E695850" Deprecated="False" filter="0" group="General">
                                <TunableTuple name="career_level" class="TunableCareerLevelTestFactory" display="Career Level" muid="202C5D5A0A3E9F37" description="Test to see if the participants have a career at the specified level." Deprecated="False" filter="0" group="General">
                                    <Tunable type="career_level" name="career_level" class="TunableReference" display="Career Level" muid="421A1C931A83ED71" description="A reference to career level tuning that each subject must have in &#xA;at least one career in order for this test to pass." tuning_state="NeedsTuning" allow_none="False" Deprecated="False" filter="0" group="General" />
                                </TunableTuple>
                                <TunableTuple name="career_reference" class="TunableCareerReferenceTestFactory" display="Career Reference" muid="E5A0D60AD2DBF957" description="A test for whether or not the specified subjects have the specified career,&#xA;career user level, or both." Deprecated="False" filter="0" group="General">
                                    <Tunable type="bool" name="allow_invisible_careers" class="Tunable" default="False" display="Allow Invisible Careers" muid="966C2611A8821B32" description="If checked, this test will also allow non-visible careers (such as&#xA;Odd Jobs) to tested against." Deprecated="False" filter="0" group="General" />
                                    <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="24BBAEA6B8FBD322" description="Should be called &quot;Ignore List&quot;.  Set of careers that will be ignored&#xA;on the Sim.  If the Sim only had these careers, it would be like having no careers." Deprecated="False" filter="0" group="General" unique_entries="true">
                                        <Tunable type="career" class="TunableReference" muid="27080D979F2FA1A3" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                    </TunableList>
                                    <TunableVariant type="None" name="career" class="OptionalTunable" default="all_careers" display="Career" muid="7D2666D69ACB194D" description="The career to test for on the Sim. When set by itself it will pass&#xA;if the subject simply has this career. When set with user level it&#xA;will only pass if the subjects user level passes the threshold&#xA;test." Deprecated="False" filter="0" group="General">
                                        <Tunable name="all_careers" class="TunableExistance" display="All Careers" muid="4B66E07812BB5013" />
                                        <Tunable type="career" name="specific_career" class="TunableReference" display="Specific Career" muid="F7C68DD5771756AE" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                    </TunableVariant>
                                    <TunableVariant type="None" name="user_level" class="OptionalTunable" default="disabled" display="User Level" muid="10B360E3B050BB9" description="Threshold test for the current user value of a career. If user_level&#xA;is set without career then it will pass if any of their careers &#xA;pass the threshold test. If set along with career then it will only&#xA;pass if the specified career passes the threshold test for user &#xA;level. &#xA;&#xA;The min and max for the user level are inclusive. So the Sim&#xA;can have any career level that meets the following equation and it&#xA;will pass.&#xA;&#xA;min &lt;= current career level &lt;= max." Deprecated="False" filter="0" group="General">
                                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="57941451FA8FB0B3" />
                                        <TunableTuple name="enabled" class="TunableInterval" display="Enabled" muid="681EFCDDE2B66E5F" description="Threshold test for the current user value of a career. If user_level&#xA;is set without career then it will pass if any of their careers &#xA;pass the threshold test. If set along with career then it will only&#xA;pass if the specified career passes the threshold test for user &#xA;level. &#xA;&#xA;The min and max for the user level are inclusive. So the Sim&#xA;can have any career level that meets the following equation and it&#xA;will pass.&#xA;&#xA;min &lt;= current career level &lt;= max." Deprecated="False" filter="0" group="General">
                                            <Tunable type="int" name="lower_bound" class="TunableRange" default="1" display="Lower Bound" muid="56D168E2BAC88732" min="0" max="None" description="The lower bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            <Tunable type="int" name="upper_bound" class="TunableRange" default="11" display="Upper Bound" muid="DF3E5D7626AB41A7" min="None" max="11" description="The upper bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                    </TunableVariant>
                                </TunableTuple>
                                <TunableTuple name="career_track" class="TunableCareerTrackTestFactory" display="Career Track" muid="A0745F88F712833F" description="Test for whether the specified subjects have a career currently on the &#xA;track specified." Deprecated="False" filter="0" group="General">
                                    <Tunable type="career_track" name="career_track" class="TunableReference" display="Career Track" muid="9BA6690EE1690B98" description="A reference to the career track that each subject must have in at&#xA;least one career in order for this test to pass." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                    <TunableVariant type="None" name="user_level" class="OptionalTunable" default="disabled" display="User Level" muid="B6235EB889BFAB50" description="Interval test for the current user value of a career. Career track&#xA;must also be specified for this check to work properly." Deprecated="False" filter="0" group="General">
                                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="BA7A4F7F5F5F3781" />
                                        <TunableTuple name="enabled" class="TunableInterval" display="Enabled" muid="D92CD0597CF7D02C" description="Interval test for the current user value of a career. Career track&#xA;must also be specified for this check to work properly." Deprecated="False" filter="0" group="General">
                                            <Tunable type="int" name="lower_bound" class="TunableRange" default="1" display="Lower Bound" muid="DB2E8BFD87AC3127" min="0" max="None" description="The lower bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            <Tunable type="int" name="upper_bound" class="TunableRange" default="10" display="Upper Bound" muid="1E6A30D9324C9942" min="None" max="10" description="The upper bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                    </TunableVariant>
                                </TunableTuple>
                                <TunableTuple name="same_career_at_user_level" class="TunableSameCareerAtUserLevelTestFactory" display="Same Career At User Level" muid="88FDDAD9D414AD8" description="Test to see if the participants share any career that they have the same&#xA;user level." Deprecated="False" filter="0" group="General">
                                    <TunableTuple name="user_level" class="TunableThreshold" display="User Level" muid="C60781E22C7F5E2B" description="User level to test for." Deprecated="False" filter="0" group="General">
                                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="AB0EEF6EF5448226" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="DADCAE459C577EF5" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                </TunableTuple>
                            </TunableVariant>
                        </TunableTuple>
                        <TunableTuple name="days_worked" class="TunableCareerDaysWorked" display="Days Worked" muid="82D6E349790685E6" description="Test for how many days the Sim has worked for a career." Deprecated="False" filter="0" group="General">
                            <Tunable type="bool" name="active_only" class="Tunable" default="True" display="Active Only" muid="73E108D5C72C2FE5" description="If checked, only workdays that the player has actively played will&#xA;count." Deprecated="False" filter="0" group="General" />
                            <Tunable type="career" name="career" class="TunableReference" display="Career" muid="87F41FBF10EAB07F" description="The career to test against." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                            <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="50FF955C38FED1ED" description="Threshold test for days worked." Deprecated="False" filter="0" group="General">
                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="EA46BCD41650D06" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="599544691E49763E" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                            </TunableTuple>
                            <TunableVariant type="None" name="tooltip" class="OptionalTunable" default="disabled" display="Tooltip" muid="3B4A02D8623A6717" description="Reason of failure." Deprecated="False" filter="0" group="General">
                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="5D0A4A377B9C4795" />
                                <Tunable type="int" name="enabled" class="TunableLocalizedString" default="0x0" display="Enabled" muid="E4C73EB189D3A45" description="Reason of failure." Deprecated="False" filter="0" group="General" />
                            </TunableVariant>
                        </TunableTuple>
                        <TunableTuple name="has_available_assignment" class="TunableCareerHasAssignmentTestFactory" display="Has Available Assignment" muid="91CA2AB1CD79A412" description="A test for whether or not the specified subjects has an available assignment&#xA;in the specified career" Deprecated="False" filter="0" group="General">
                            <Tunable type="career" name="career" class="TunableReference" display="Career" muid="E1ABC18995A59BDA" description="The career to test for having an available assignment.&#xA;&#xA;If None, will expect career passed in via PickedItemIds (i.e. via picker)." allow_none="True" Deprecated="False" filter="0" group="General" />
                        </TunableTuple>
                        <TunableTuple name="has_career" class="TunableHasCareerTestFactory" display="Has Career" muid="BCBA1D9B58C3706F" description="Test for whether or not the specified subjects have a career or not." Deprecated="False" filter="0" group="General">
                            <Tunable type="bool" name="has_career" class="Tunable" default="True" display="Has Career" muid="B09E2B3614173EAF" description="If true all subjects must have a &#xA;career for the test to pass. If False then none of the subjects &#xA;can have a career for the test to pass." Deprecated="False" filter="0" group="General" />
                            <TunableVariant type="None" name="tooltip" class="OptionalTunable" default="disabled" display="Tooltip" muid="32EDAC1037DD72B2" description="Reason of failure." Deprecated="False" filter="0" group="General">
                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="CE9A2459CDB4C81B" />
                                <Tunable type="int" name="enabled" class="TunableLocalizedString" default="0x0" display="Enabled" muid="19AD2974AE647F45" description="Reason of failure." Deprecated="False" filter="0" group="General" />
                            </TunableVariant>
                        </TunableTuple>
                        <TunableTuple name="has_career_outfit" class="TunableHasCareerOutfit" display="Has Career Outfit" muid="A2B8979B1799C09E" description="Test for if the subjects have a career outfit." Deprecated="False" filter="0" group="General" />
                        <TunableTuple name="has_quittable_career" class="TunableQuittableCareerTestFactory" display="Has Quittable Career" muid="442F7EF5F8E4C23A" description="Test for whether or not the specified subjects have a quittable career or not." Deprecated="False" filter="0" group="General">
                            <Tunable type="bool" name="has_quittable_career" class="Tunable" default="True" display="Has Quittable Career" muid="620ED42EE12F68D4" description="If True then all of the subjects must have a quittable career in &#xA;order for the test to pass. If False then none of the subjects &#xA;can have a quittable career in order to pass." Deprecated="False" filter="0" group="General" />
                        </TunableTuple>
                        <TunableTuple name="highest_level_achieved" class="TunableCareerHighestLevelAchievedTest" display="Highest Level Achieved" muid="A31B231CD1B37355" description="Test looking at the highest level ever achieved of a specific career." Deprecated="False" filter="0" group="General">
                            <TunableList name="career_blacklist" class="TunableSet" display="Career Blacklist" muid="76C84B5F7BBA76DC" description="A set of careers that will not be looked at." Deprecated="False" filter="0" group="General" unique_entries="true">
                                <Tunable type="career" class="TunableReference" muid="85CA0DB9F1E906EF" description="The career we will not check." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                            </TunableList>
                            <TunableVariant type="None" name="careers_to_check" class="OptionalTunable" default="disabled" display="Careers To Check" muid="A1DEFD8C12E55A81" description="If enabled then we will only look at the careers listed in this.&#xA;set.  Otherwise will will look at all careers." Deprecated="False" filter="0" group="General">
                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="2C47E5F20A954883" />
                                <TunableList name="enabled" class="TunableSet" display="Enabled" muid="F37E6838AF1211DF" description="A set of careers that will be looked at." Deprecated="False" filter="0" group="General" unique_entries="true">
                                    <Tunable type="career" class="TunableReference" muid="98A1375BC36E3FC0" description="The career we will check." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                </TunableList>
                            </TunableVariant>
                            <Tunable type="int" name="careers_to_find" class="TunableRange" default="1" display="Careers To Find" muid="FEF96407499C7FAB" min="1" max="None" description="The number of careers that need to match the passing threshold for&#xA;this test to pass." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                            <TunableTuple name="passing_threshold" class="TunableThreshold" display="Passing Threshold" muid="94C277FBE545FDD3" description="Threshold for determining if a career is considered passing for&#xA;this test." Deprecated="False" filter="0" group="General">
                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="82691F4F7CB69C03" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="54FB64AD99A501FC" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                            </TunableTuple>
                            <TunableVariant type="None" name="tooltip" class="OptionalTunable" default="disabled" display="Tooltip" muid="9A4B9EB6838AA214" description="Reason of failure." Deprecated="False" filter="0" group="General">
                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="66E6BB520535B22" />
                                <Tunable type="int" name="enabled" class="TunableLocalizedString" default="0x0" display="Enabled" muid="1F80C6423DF45867" description="Reason of failure." Deprecated="False" filter="0" group="General" />
                            </TunableVariant>
                        </TunableTuple>
                        <TunableTuple name="is_elective_course" class="TunableCareerIsElectiveCourseTest" display="Is Elective Course" muid="19B741F63A7FFD98" description="Test used to see if a career slot for a sim's university course is associated with an &#xA;elective Univerity course." Deprecated="False" filter="0" group="General">
                            <Tunable type="career" name="career" class="TunableReference" display="Career" muid="BCF3D5B400FDF4FA" description="The career slot to test for associated elective course data on the &#xA;subjects. " allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="UniversityCourseCareerSlot" />
                        </TunableTuple>
                        <TunableTuple name="is_retired" class="TunableIsRetiredTestFactory" display="Is Retired" muid="207D8EF78D2789EF" description="Test for whether or not the specified subjects retired from a career." Deprecated="False" filter="0" group="General">
                            <Tunable type="career" name="career" class="TunableReference" display="Career" muid="9B60911E8ADA5665" description="The retired career to test for on the subjects. If left unset, the&#xA;test will pass if the Sim is retired from any career." allow_none="False" Deprecated="False" filter="0" group="General" />
                        </TunableTuple>
                        <TunableTuple name="pto_amount" class="TunableCareerPTOAmountTestFactory" display="Pto Amount" muid="750D1E91650A9E61" description="A test for whether or not the specified subjects has the requested amount&#xA;of PTO available in the specified career" Deprecated="False" filter="0" group="General">
                            <Tunable type="career" name="career" class="TunableReference" display="Career" muid="534CE8C6D1484E81" description="The career to test for how much PTO the sim has.&#xA;&#xA;If None, will expect career passed in via PickedItemIds (i.e. via picker)." allow_none="True" Deprecated="False" filter="0" group="General" />
                            <TunableTuple name="required_pto_available" class="TunableThreshold" display="Required Pto Available" muid="7B09B5D2A0EDAB4A" description="Threshold test for how much PTO is required" Deprecated="False" filter="0" group="General">
                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="106F7F2A864B89B6" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="272E41A60B5F7B37" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                            </TunableTuple>
                        </TunableTuple>
                        <TunableTuple name="time_off" class="TunableCareerTimeOffTest" display="Time Off" muid="A75DC2723D6C5374" description="Require a Sim to be in a career that does not have requested time off for&#xA;the any reason." Deprecated="False" filter="0" group="General">
                            <TunableVariant type="None" name="tooltip" class="OptionalTunable" default="disabled" display="Tooltip" muid="8C4E7BB7CB0D563C" description="Reason of failure." Deprecated="False" filter="0" group="General">
                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="CEE970FF277925BB" />
                                <Tunable type="int" name="enabled" class="TunableLocalizedString" default="0x0" display="Enabled" muid="D2F2385CF7C64C74" description="Reason of failure." Deprecated="False" filter="0" group="General" />
                            </TunableVariant>
                        </TunableTuple>
                        <TunableTuple name="time_until_work" class="TunableCareerTimeUntilWorkTestFactory" display="Time Until Work" muid="DA661AD4F740CC0D" description="A test for whether or not the specified subjects has the specified career,&#xA;And that their next work day starts within the specified number of hours" Deprecated="False" filter="0" group="General">
                            <Tunable type="career" name="career" class="TunableReference" display="Career" muid="1E647BF8B66E43C7" description="The career to test the next start time of.&#xA;&#xA;If None, will expect career passed in via PickedItemIds (i.e. via picker)." allow_none="True" Deprecated="False" filter="0" group="General" />
                            <Tunable type="bool" name="check_all_careers" class="Tunable" default="False" display="Check All Careers" muid="C3D6ACE04F23C36B" description="If checked then we will check all careers rather than just the one defined&#xA;in the career tunable.  The test will fail if any career fails." Deprecated="False" filter="0" group="General" />
                            <TunableTuple name="hours_till_work" class="TunableInterval" display="Hours Till Work" muid="955F04BFA82D3BFD" description="Threshold test for how long 'till the &quot;next&quot; start time.  It will&#xA;test up to one hour past the start time, at which point it will test&#xA;against the next start time." Deprecated="False" filter="0" group="General">
                                <Tunable type="float" name="lower_bound" class="TunableRange" default="-1" display="Lower Bound" muid="504051493FCE7455" min="-23" max="None" description="The lower bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                <Tunable type="float" name="upper_bound" class="TunableRange" default="23" display="Upper Bound" muid="43EB9F2B4458D06D" min="None" max="168" description="The upper bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                            </TunableTuple>
                        </TunableTuple>
                    </TunableVariant>
                </TunableTuple>
                <TunableTuple name="club" class="TunableClubTest" display="Club" muid="9D8DAE1C628838FE" description="A tunable factory that tests against Clubs.&#xA;&#xA;For use only with ClubSuperInteractions and ClubMixerInteractions." Deprecated="False" filter="0" group="General">
                    <TunableVariant type="None" name="affordance_rule" class="OptionalTunable" default="disabled" display="Affordance Rule" muid="D6756A62CABE7D2C" description="If set, then the affordance being tested (should one exist) must&#xA;satisfy this rule requirement." Deprecated="False" filter="0" group="General">
                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="62127CC059B46286" />
                        <TunableVariant type="None" name="enabled" class="TunableVariant" default="is_encouraged" display="Enabled" muid="4E1394B34E436070" description="The rule requirement that the affordance must satisfy." Deprecated="False" filter="0" group="General">
                            <Tunable name="is_discouraged" class="TunableExistance" display="Is Discouraged" muid="474A22BF46EC0872" />
                            <Tunable name="is_encouraged" class="TunableExistance" display="Is Encouraged" muid="E467DC0FCF146D18" />
                            <Tunable name="is_not_discouraged" class="TunableExistance" display="Is Not Discouraged" muid="896939913D24FA90" />
                            <Tunable name="is_not_encouraged" class="TunableExistance" display="Is Not Encouraged" muid="CAEAF28350CDD997" />
                        </TunableVariant>
                    </TunableVariant>
                    <TunableVariant type="None" name="club_status" class="OptionalTunable" default="disabled" display="Club Status" muid="D15EC1EA82C605B3" description="In enabled, require the tuned &quot;subject&quot; to either be or not be a&#xA;member of this interaction's associated Club." Deprecated="False" filter="0" group="General">
                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="31349439CE25F5C" />
                        <TunableVariant type="None" name="enabled" class="TunableVariant" default="none" display="Enabled" muid="56B38DB0832FC1DE" description="In enabled, require the tuned &quot;subject&quot; to either be or not be a&#xA;member of this interaction's associated Club." Deprecated="False" filter="0" group="General">
                            <Tunable name="Leader" class="TunableExistance" display="Leader" muid="7ED0AEC7DD1CE755" />
                            <Tunable name="Member" class="TunableExistance" display="Member" muid="EDDF0E283F80B457" />
                            <Tunable name="none" class="TunableExistance" display="None" muid="FCDE57A3BEBDACAE" />
                            <Tunable name="Not Leader" class="TunableExistance" display="Not Leader" muid="DA5063B29D69746B" />
                            <Tunable name="Not Member" class="TunableExistance" display="Not Member" muid="7CD6F3640E22FDF9" />
                        </TunableVariant>
                    </TunableVariant>
                    <TunableVariant type="None" name="invite_only" class="OptionalTunable" default="disabled" display="Invite Only" muid="BB52B17E80908F10" description="If enabled, require the associated Club to either be invite only or&#xA;be open to everyone." Deprecated="False" filter="0" group="General">
                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="6D1D2C5D394E3303" />
                        <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="2794E23CFF4B7B0C" description="If enabled, require the associated Club to either be invite only or&#xA;be open to everyone." Deprecated="False" filter="0" group="General" />
                    </TunableVariant>
                    <Tunable type="bool" name="pass_if_any_clubs_pass" class="Tunable" default="False" display="Pass If Any Clubs Pass" muid="C0945C15C9005133" description="If checked then this test will pass if any of the clubs match the&#xA;requirements otherwise we require all clubs to meet the&#xA;requirements." Deprecated="False" filter="0" group="General" />
                    <TunableVariant type="None" name="recent_member_status" class="OptionalTunable" default="disabled" display="Recent Member Status" muid="21B471F6A5A750AA" description="If specified, the Sim must satisfy recent member status&#xA;requirements." Deprecated="False" filter="0" group="General">
                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="B8DA6B97856E484D" />
                        <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="3F417B8331AEB8B5" description="Whether or not the Sim must be a recent member of the Club in&#xA;order to pass this test." Deprecated="False" filter="0" group="General" />
                    </TunableVariant>
                    <TunableVariant type="None" name="require_common_club" class="OptionalTunable" default="disabled" display="Require Common Club" muid="2B09814A3620D720" description="If enabled, then there must be a common Club that both the subject&#xA;Sim and this specified Sim are in. If the club type is set to &quot;Use&#xA;Club from Resolver&quot;, then both Sims must be in that Club. If the&#xA;club type is set to &quot;Use Any Club&quot;, then there must be one club both&#xA;the subject Sim and this Sim are in." Deprecated="False" filter="0" group="General">
                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="DAB44F8B537C0AA5" />
                        <TunableEnum type="ParticipantType" name="enabled" class="TunableEnumEntry" default="TargetSim" display="Enabled" muid="2C814657A1BB8012" static_entries="interactions.ParticipantType" description="The Sim to test against for a common Club. If a multi-Sim&#xA;participant is specified, the union of their clubs is&#xA;considered, i.e. the test passes if at least one Sim satisfies&#xA;the requirements." Deprecated="False" filter="0" group="General" />
                    </TunableVariant>
                    <TunableVariant type="None" name="required_sim_count" class="OptionalTunable" default="disabled" display="Required Sim Count" muid="C563160C7A6E8287" description="If enabled then this test will only pass if the group has a number &#xA;of members that passes the tuned threshold." Deprecated="False" filter="0" group="General">
                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="8A787BD845E40864" />
                        <TunableTuple name="enabled" class="TunableThreshold" display="Enabled" muid="2F252D5D11C6BFCB" description="The member requirement for this test to pass." Deprecated="False" filter="0" group="General">
                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="72F9CCCBDAA23BB" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                            <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="4B2EFAA5021E1561" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                        </TunableTuple>
                    </TunableVariant>
                    <TunableVariant type="None" name="room_for_new_members" class="OptionalTunable" default="disabled" display="Room For New Members" muid="CAF1C132982F890" description="If enabled, require the associated Club to either have room for new&#xA;members or not have room for new members." Deprecated="False" filter="0" group="General">
                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="2565C3646911FC2A" />
                        <TunableVariant type="None" name="enabled" class="TunableVariant" default="none" display="Enabled" muid="264D8470D045C362" description="If enabled, require the associated Club to either have room for new&#xA;members or not have room for new members." Deprecated="False" filter="0" group="General">
                            <Tunable name="Has No Room" class="TunableExistance" display="Has No Room" muid="468CC3FE9E65A87F" />
                            <Tunable name="Has Room" class="TunableExistance" display="Has Room" muid="FF022965195B9701" />
                            <Tunable name="none" class="TunableExistance" display="None" muid="81C226A55418C16C" />
                        </TunableVariant>
                    </TunableVariant>
                    <TunableVariant type="None" name="subject_can_join_more_clubs" class="OptionalTunable" default="disabled" display="Subject Can Join More Clubs" muid="3A977159015B6CA9" description="If enabled, require the tuned &quot;subject&quot; to be allowed to join more&#xA;Clubs or not.&#xA;&#xA;The maximum number of Clubs per Sim is set in&#xA;club_tuning.ClubTunables in the &quot;MAX_CLUBS_PER_SIM&quot; tunable." Deprecated="False" filter="0" group="General">
                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="A3CC96515144C951" />
                        <TunableVariant type="None" name="enabled" class="TunableVariant" default="none" display="Enabled" muid="AA433D93F777FC89" description="If enabled, require the tuned &quot;subject&quot; to be allowed to join more&#xA;Clubs or not.&#xA;&#xA;The maximum number of Clubs per Sim is set in&#xA;club_tuning.ClubTunables in the &quot;MAX_CLUBS_PER_SIM&quot; tunable." Deprecated="False" filter="0" group="General">
                            <Tunable name="Can Join More Clubs" class="TunableExistance" display="Can Join More Clubs" muid="73786EC50F168DC3" />
                            <Tunable name="Cannot Join More Clubs" class="TunableExistance" display="Cannot Join More Clubs" muid="885F18823FF114E5" />
                            <Tunable name="none" class="TunableExistance" display="None" muid="5EB6EB44DBB4EC79" />
                        </TunableVariant>
                    </TunableVariant>
                    <TunableVariant type="None" name="subject_passes_membership_criteria" class="OptionalTunable" default="disabled" display="Subject Passes Membership Criteria" muid="F75F2BD29181782D" description="If enabled, require the tuned &quot;subject&quot; to either pass this&#xA;associated Club's membership criteria or not pass the membership&#xA;criteria." Deprecated="False" filter="0" group="General">
                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="7F319DAA7E0AC386" />
                        <TunableVariant type="None" name="enabled" class="TunableVariant" default="none" display="Enabled" muid="8005E75204BA3" description="If enabled, require the tuned &quot;subject&quot; to either pass this&#xA;associated Club's membership criteria or not pass the membership&#xA;criteria." Deprecated="False" filter="0" group="General">
                            <Tunable name="Does Not Pass Criteria" class="TunableExistance" display="Does Not Pass Criteria" muid="E01EC47CF460554B" />
                            <Tunable name="none" class="TunableExistance" display="None" muid="75A89559397026CF" />
                            <Tunable name="Passes Criteria" class="TunableExistance" display="Passes Criteria" muid="2572B3A217DE08D0" />
                        </TunableVariant>
                    </TunableVariant>
                    <TunableVariant type="None" name="subject_relationship_with_leader" class="OptionalTunable" default="disabled" display="Subject Relationship With Leader" muid="827CD33C35522856" description="If enabled, the tuned subject is required to have a specific&#xA;relationship with the leader. If the subject and the leader match,&#xA;the test fails." Deprecated="False" filter="0" group="General">
                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="B26CE4AA5ECEF3AC" />
                        <TunableTuple name="enabled" class="TunableRelationshipTest" display="Enabled" muid="7BCD454DFA705E7C" description="Gate availability by a relationship status." Deprecated="False" filter="0" group="General">
                            <Tunable type="bool" name="invert_num_relations" class="Tunable" default="False" display="Invert Num Relations" muid="4BAC0F9F8CB7D223" description="If checked then we will check that your Num Relations is less than or&#xA;equal to the value rather than the other way around." Deprecated="False" filter="0" group="General" />
                            <TunableTuple name="prohibited_relationship_bits" class="TunableTuple" display="Prohibited Relationship Bits" muid="821ABC3CF53C0849" Deprecated="False" filter="0" group="General">
                                <TunableList name="match_all" class="TunableSet" display="Match All" muid="4FCD5AB48903CC09" description="All of these relationship bits must match to fail the test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                    <Tunable type="relbit" class="TunableReference" muid="2F89FA5A6959C456" allow_none="False" Deprecated="False" filter="0" group="General" />
                                </TunableList>
                                <TunableList name="match_any" class="TunableSet" display="Match Any" muid="1DFE2364C3494017" description="If any of these relationship bits match the test will fail." Deprecated="False" filter="0" group="General" unique_entries="true">
                                    <Tunable type="relbit" class="TunableReference" muid="E1F1675A711EB599" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                </TunableList>
                            </TunableTuple>
                            <TunableTuple name="relationship_score_interval" class="TunableInterval" display="Relationship Score Interval" muid="3B1872F2B393499E" description="The range that the relationship score must be within in order for&#xA;this test to pass." Deprecated="False" filter="0" group="General">
                                <Tunable type="float" name="lower_bound" class="TunableRange" default="-100.0" display="Lower Bound" muid="5CD16864E25A0169" min="-100.0" max="None" description="The lower bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                <Tunable type="float" name="upper_bound" class="TunableRange" default="100.0" display="Upper Bound" muid="1A8F2246F24B7EE9" min="None" max="100.0" description="The upper bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                            </TunableTuple>
                            <TunableTuple name="required_relationship_bits" class="TunableTuple" display="Required Relationship Bits" muid="892904A503346045" Deprecated="False" filter="0" group="General">
                                <TunableList name="match_all" class="TunableSet" display="Match All" muid="1B0DE42648107805" description="All of these relationship bits must be present to pass the&#xA;test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                    <Tunable type="relbit" class="TunableReference" muid="827D0439F1FE6B5C" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                </TunableList>
                                <TunableList name="match_any" class="TunableSet" display="Match Any" muid="62F71681585C5373" description="Any of these relationship bits will pass the test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                    <Tunable type="relbit" class="TunableReference" muid="CF82C4B61C9F51E9" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                </TunableList>
                            </TunableTuple>
                            <TunableEnum type="RelationshipTestEvents" name="test_event" class="TunableEnumEntry" default="AllRelationshipEvents" display="Test Event" muid="9EEE7F4AC8AD9F87" static_entries="relationships-relationship_tests.RelationshipTestEvents" description="The event that we want to trigger this instance of the tuned test&#xA;on." Deprecated="False" filter="0" group="General" />
                            <TunableVariant type="None" name="test_incest" class="TunableVariant" default="disabled" display="Test Incest" muid="6C541DEEB7276693" description="Test for incest status. Test passes if this matches the two Sim's&#xA;incest status." Deprecated="False" filter="0" group="General">
                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="5B745FA78AF1CA51" />
                                <Tunable name="is incestuous" class="TunableExistance" display="Is Incestuous" muid="90D62E10AE0ED9CC" />
                                <Tunable name="is not incestuous" class="TunableExistance" display="Is Not Incestuous" muid="BCE7DA0AF3195D2C" />
                            </TunableVariant>
                            <Tunable type="statistic" name="track" class="TunableReference" display="Track" muid="B637A8B886CC3C29" description="If set, the test will use the relationship score between sims for&#xA;this track. If unset, the track defaults to the global module&#xA;tunable REL_INSPECTOR_TRACK." allow_none="True" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="RelationshipTrack" />
                        </TunableTuple>
                    </TunableVariant>
                </TunableTuple>
                <TunableTuple name="collection" class="TunableCollectionThresholdTest" display="Collection" muid="9A0B5DF0CDFA6270" description="Tests for a provided amount of a given collection type." Deprecated="False" filter="0" group="General">
                    <TunableEnum type="CollectionIdentifier" name="collection_type" class="TunableEnumEntry" default="Unindentified" display="Collection Type" muid="713476DC708F8148" dynamic_entries="objects-collection_manager.CollectionIdentifier._elements" static_entries="objects-collection_manager.CollectionIdentifier" description="The collection we are checking on.  If collection type is&#xA;unidentified then we will look through all collections." Deprecated="False" filter="0" group="General" />
                    <Tunable type="bool" name="complete_collection" class="Tunable" default="False" display="Complete Collection" muid="19D076C8DB5F89DE" description="Setting this to True (checked) will override the threshold and&#xA;check for collection completed" Deprecated="False" filter="0" group="General" />
                    <TunableVariant type="None" name="specific_items" class="OptionalTunable" default="disabled" display="Specific Items" muid="CB6B035DAA82CA90" description="If enabled then the collection threshold test will check for&#xA;specific items within the collection.  When enabled both the&#xA;Collection Type and Complete Collection tuning will be ignored." Deprecated="False" filter="0" group="General">
                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="D21C43B0AE2F29D8" />
                        <TunableList name="enabled" class="TunableList" display="Enabled" muid="63D33D0B8A99CE1B" description="List of allowed objects within a collection that we want to&#xA;check." Deprecated="False" filter="0" group="General">
                            <Tunable type="object" class="TunableReference" muid="A49E1AAA1A0D12ED" description="Object reference to each collectible object." allow_none="False" Deprecated="False" filter="0" group="General" />
                        </TunableList>
                    </TunableVariant>
                    <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="38259B93A0B4B441" description="Threshold for which the Sim experiences motive failure" Deprecated="False" filter="0" group="General">
                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="618453DE8302F68A" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                        <Tunable type="int" name="value" class="Tunable" default="1" display="Value" muid="BF482C7727D7E07D" description="The value of the threshold that the collection is compared&#xA;against." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                    </TunableTuple>
                </TunableTuple>
                <TunableTuple name="location" class="TunableLocationTest" display="Location" muid="88803CCE865C8752" description="Tests for object locations.&#xA;Outside: Check if an object is on the inside or outside (has a roof over&#xA;its head)&#xA;Natural ground: Checks the floor tiles where the object is to see if it &#xA;qualifies as natural ground" Deprecated="False" filter="0" group="General">
                    <TunableTuple name="location_tests" class="TunableTuple" display="Location Tests" muid="4DDDC93715707482" Deprecated="False" filter="0" group="General">
                        <TunableVariant type="None" name="has_terrain_tag" class="OptionalTunable" default="Don't_Test" display="Has Terrain Tag" muid="2D14AB9DD5C871BB" description="If checked, will verify the subject of the test is currently on&#xA;the tuned terrain tag." Deprecated="False" filter="0" group="General">
                            <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="AAA6F5DDFE1855A7" />
                            <TunableTuple name="enabled" class="TunableTuple" display="Enabled" muid="61731EDA029E5BE1" description=",&#xA;A set of terrain tags required for this test to pass." Deprecated="False" filter="0" group="General">
                                <Tunable type="bool" name="negate" class="Tunable" default="False" display="Negate" muid="5FAF22A3347D2E49" description="If checked, the test will be inverted. In other words,&#xA;the test will fail if at least one tag is detected at&#xA;this location." Deprecated="False" filter="0" group="General" />
                                <TunableList name="terrain_tags" class="TunableEnumSet" display="Terrain Tags" muid="149E69B2E1C12C6F" description="A set of terrain tags. Only one of these tags needs to be&#xA;present at this location. Although it is not tunable, there&#xA;is a threshold weight underneath which a terrain tag will&#xA;not appear to be present." Deprecated="False" filter="0" group="General" unique_entries="true">
                                    <TunableEnum type="TerrainTag" class="TunableEnumEntry" default="INVALID" muid="4704BB08D6166B6D" static_entries="world-terrain_enums.TerrainTag" Deprecated="False" filter="0" group="General" />
                                </TunableList>
                                <Tunable type="bool" name="test_floor_tiles" class="Tunable" default="False" display="Test Floor Tiles" muid="D268929E9BCE4C5F" description="If checked, floor tiles will be tested. Otherwise, &#xA;it'll only check the terrain and will ignore the &#xA;floor tiles on the terrain." Deprecated="False" filter="0" group="General" />
                            </TunableTuple>
                        </TunableVariant>
                        <TunableVariant type="None" name="in_common_area" class="OptionalTunable" default="Don't_Test" display="In Common Area" muid="76AB821AF02D470E" description="If checked, will verify the subject is in the common area&#xA;of an apartment.  If unchecked will verify the subject is not." Deprecated="False" filter="0" group="General">
                            <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="86E679FFDE115B55" />
                            <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="D7556F4FFC131E71" Deprecated="False" filter="0" group="General" />
                        </TunableVariant>
                        <TunableVariant type="None" name="is_fire_allowed" class="OptionalTunable" default="Don't_Test" display="Is Fire Allowed" muid="AA6650AD97205793" description="If checked, will verify if fire is possible at the subject's position. &#xA;If unchecked, will pass if fire is not possible.&#xA;If not enabled, doesn't care either way." Deprecated="False" filter="0" group="General">
                            <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="B7FD1828A333CF9F" />
                            <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="38E1F29B5E5C2068" Deprecated="False" filter="0" group="General" />
                        </TunableVariant>
                        <TunableVariant type="None" name="is_in_slot" class="OptionalTunable" default="Don't_Test" display="Is In Slot" muid="2E8DEE3AA1D0436D" description="If enabled will test if the object is attacked/deattached to&#xA;any of possible tuned slots.&#xA;If you tune a slot type set the test will test if the object &#xA;is slotted or not slotted into into any of those types. " Deprecated="False" filter="0" group="General">
                            <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="9401E0AF449C62E8" />
                            <TunableTuple name="enabled" class="TunableTuple" display="Enabled" muid="1F5BF932F4C4A957" description="Test if an object is current slotted in any of a possible&#xA;list of slot types.&#xA;Empty slot type set is allowed for testing for slotted or&#xA;not slotted only." Deprecated="False" filter="0" group="General">
                                <TunableVariant type="None" name="slot_test_type" class="TunableVariant" default="any_slot" display="Slot Test Type" muid="15B6341C98ECFBC7" description="Strategy to test the slots:&#xA;Any Slot - is the object in any slot&#xA;Surface Slot - is object is in a surface slot&#xA;Specific Slot - is the object in specific list of slots" Deprecated="False" filter="0" group="General">
                                    <TunableTuple name="any_slot" class="TunableSlotTestType" display="Any Slot" muid="1A09538483EF59B7" description="Singleton factory for testing if object is slotted." Deprecated="False" filter="0" group="General">
                                        <Tunable type="bool" name="require_slotted" class="Tunable" default="True" display="Require Slotted" muid="DC7728CEFADAF3B8" description="If checked, return success if the object is slotted&#xA;If unchecked, test the absense of slotting." Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                    <TunableTuple name="specific_slot" class="TunableSpecificSlotTest" display="Specific Slot" muid="995D3948663E4DDE" description="Subclass of SlotTestType that can check against a specific&#xA;slot set." Deprecated="False" filter="0" group="General">
                                        <Tunable type="bool" name="require_slotted" class="Tunable" default="True" display="Require Slotted" muid="A3C307D838D5C466" description="If checked, return success if the object is slotted&#xA;If unchecked, test the absense of slotting." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="slot_type_set" name="specific_slot_set" class="TunableReference" display="Specific Slot Set" muid="282D50AA0F9A0E82" description="Set of slots the object may be attached to." allow_none="False" Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                    <TunableTuple name="surface_slot" class="TunableSurfaceSlotTest" display="Surface Slot" muid="CF13D546E33F79C2" description="Subclass of SlotTestType that checks that a slot has&#xA;is_surface set to true." Deprecated="False" filter="0" group="General">
                                        <Tunable type="bool" name="require_slotted" class="Tunable" default="True" display="Require Slotted" muid="6ABE8018B9932F20" description="If checked, return success if the object is slotted&#xA;If unchecked, test the absense of slotting." Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                </TunableVariant>
                            </TunableTuple>
                        </TunableVariant>
                        <TunableVariant type="None" name="is_inside_building" class="OptionalTunable" default="Don't_Test" display="Is Inside Building" muid="175873BC9D1EAB3E" description="If checked, will verify if the subject of the test is inside a&#xA;building. This uses a client function that checks if the block&#xA;the sim is mostly enclosed by walls or if not, if the adjoining&#xA;blocks are themselves enclosed. This should be used when we&#xA;want to test if a subject is inside a normally constructed &#xA;building. If we simply want to test whether the subject is &#xA;covered / has a roof over them, use is_outside. See comment on&#xA;is_outside for more details. If unchecked, will negate this &#xA;test." Deprecated="False" filter="0" group="General">
                            <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="C865888A2DC1F6D3" />
                            <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="DADB7BBC1078BAB2" Deprecated="False" filter="0" group="General" />
                        </TunableVariant>
                        <TunableVariant type="None" name="is_natural_ground" class="OptionalTunable" default="Don't_Test" display="Is Natural Ground" muid="EF7C363C288D74B0" description="If checked, will verify the subject of the test is on natural &#xA;ground (no floor tiles are under him).&#xA;Otherwise, will verify the subject of the test is not on &#xA;natural ground." Deprecated="False" filter="0" group="General">
                            <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="B564DA298A6D0BB1" />
                            <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="268CBC5983408D69" Deprecated="False" filter="0" group="General" />
                        </TunableVariant>
                        <TunableVariant type="None" name="is_on_active_lot" class="OptionalTunable" default="Don't_Test" display="Is On Active Lot" muid="3C281734BE248437" description="If disabled the test will not be used.&#xA;If enabled and checked, the test will pass if the subject is&#xA;on the active lot. (their center is within the lot bounds)&#xA;If enabled and not checked, the test will pass if the subject is &#xA;outside of the active lot.&#xA;&#xA;For example, Ask To Leave is tuned with this enabled and checked&#xA;for the TargetSim. You can only ask someone to leave if they&#xA;are actually on the active lot, but not if they are wandering&#xA;around in the open streets." Deprecated="False" filter="0" group="General">
                            <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="A923D4908EDB2F6D" />
                            <TunableTuple name="Is_or_is_not_on_active_lot" class="TunableTuple" display="Is Or Is Not On Active Lot" muid="9452FC7E860CCB38" Deprecated="False" filter="0" group="General">
                                <Tunable type="bool" name="include_spawn_point" class="Tunable" default="False" display="Include Spawn Point" muid="926081FEF9490A4F" description="If set to true, we will consider the lot's spawn point as part of the active lot." Deprecated="False" filter="0" group="General" />
                                <Tunable type="bool" name="is_or_is_not_on_active_lot" class="Tunable" default="True" display="Is Or Is Not On Active Lot" muid="F25FEAC0F1E40AC6" description="If checked then the test will pass if the subject is on&#xA;the active lot." Deprecated="False" filter="0" group="General" />
                                <TunableVariant type="None" name="tolerance" class="TunableVariant" default="explicit" display="Tolerance" muid="737F1445F89A604A" Deprecated="False" filter="0" group="General">
                                    <Tunable type="int" name="explicit" class="Tunable" default="0" display="Explicit" muid="8A701B649483331E" description="The tolerance from the edge of the lot that the&#xA;location test will use in order to determine if the&#xA;test target is considered on lot or not." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                    <TunableTuple name="use_default_tolerance" class="UseDefaultOfflotToleranceFactory" display="Use Default Tolerance" muid="2F7E841A5FBF6514" description="Use the default tuned global offlot tolerance tuned&#xA;in objects.components.statistic_component.Default Off Lot." Deprecated="False" filter="0" group="General" />
                                </TunableVariant>
                            </TunableTuple>
                        </TunableVariant>
                        <TunableVariant type="None" name="is_on_level" class="OptionalTunable" default="Don't_Test" display="Is On Level" muid="8B1EF43B44E0C6DD" description="If enabled, we check the participant's current level against&#xA;the tuned threshold.  In the case of sims in pools, the effective&#xA;level will be that of the surface of the pool, not the bottom." Deprecated="False" filter="0" group="General">
                            <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="8860CDD1274A20BB" />
                            <TunableTuple name="enabled" class="TunableThreshold" display="Enabled" muid="CB0C2E6ABD96CBE4" description="Value/comparison pair used to define a Threshold." Deprecated="False" filter="0" group="General">
                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="5C38683305D2A381" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                <Tunable type="int" name="value" class="Tunable" default="0" display="Value" muid="1BD5C59D6675251B" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                            </TunableTuple>
                        </TunableVariant>
                        <TunableVariant type="None" name="is_outside" class="OptionalTunable" default="Don't_Test" display="Is Outside" muid="D61BE15CB47892CF" description="PLEASE BE AWARE. If checked, will verify if the subject of the&#xA;test does not have a roof over their head. If unchecked, will &#xA;test if the subject has a roof over their head. If the &#xA;intention is to determine if a subject is in/not in a building, &#xA;this test is deprecated in favor of is_inside_building. If you &#xA;would like to test if a subject is inside a building, but also &#xA;need to test if they have a roof over their head, please use &#xA;both options." Deprecated="False" filter="0" group="General">
                            <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="FA0409E5E2787346" />
                            <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="F50CCE2744C179CA" Deprecated="False" filter="0" group="General" />
                        </TunableVariant>
                        <TunableVariant type="None" name="is_venue_type" class="OptionalTunable" default="Don't_Test" display="Is Venue Type" muid="8DF77D2B1847434C" description="If checked, will verify if the subject is at a venue of the&#xA;specified type." Deprecated="False" filter="0" group="General">
                            <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="62D534E6034AC88F" />
                            <TunableTuple name="enabled" class="TunableTuple" display="Enabled" muid="580A8CD0C5853EE5" description="Venue type required for this test to pass." Deprecated="False" filter="0" group="General">
                                <Tunable type="bool" name="negate" class="Tunable" default="False" display="Negate" muid="F929655E6DF13CE3" description="If enabled, the test will return true if the subject&#xA;IS NOT at a venue of the specified type." Deprecated="False" filter="0" group="General" />
                                <Tunable type="bool" name="use_source_venue" class="Tunable" default="False" display="Use Source Venue" muid="240FDA45FDD5CC2B" description="If enabled, the test will test the source venue instead of the active&#xA;venue.  For example, the Community Lot instead of the active Marketplace.&#xA;Testing the active venue is the default." Deprecated="False" filter="0" group="General" />
                                <Tunable type="venue" name="venue_type" class="TunableReference" display="Venue Type" muid="490ED18BE8671F82" description="Venue type to test against." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                            </TunableTuple>
                        </TunableVariant>
                        <TunableVariant type="None" name="valid_surface_types" class="OptionalTunable" default="Don't_Test" display="Valid Surface Types" muid="43E738CF5CCCB064" description="If enabled, we will test the surface type of the subject&#xA;against prohibited or required surface types." Deprecated="False" filter="0" group="General">
                            <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="F32FAC5497A838DC" />
                            <TunableTuple name="Test_Surface_Types" class="TunableWhiteBlackList" display="Test Surface Types" muid="E9CF86490B77C23F" description="Required and Prohibited Surface Types. " Deprecated="False" filter="0" group="General">
                                <TunableVariant type="None" name="blacklist" class="OptionalTunable" default="nothing" display="Blacklist" muid="8A1F8D14BDCBA21D" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is not in the blacklist. If no blacklist is&#xA;specified, no items are disallowed." Deprecated="False" filter="0" group="General">
                                    <Tunable name="nothing" class="TunableExistance" display="Nothing" muid="53C2EA57745CEF40" />
                                    <TunableTuple name="specify" class="TunableBlacklist" display="Specify" muid="946716DAB4C64F81" description="A tunable blacklist." Deprecated="False" filter="0" group="General">
                                        <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="E45F2B6AE9D0BC24" description="Blacklisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                            <TunableEnum type="SurfaceType" class="TunableEnumEntry" default="SURFACETYPE_WORLD" muid="B68D82DA143B1993" static_entries="routing.SurfaceType" description="Surface Type the object is placed on." Deprecated="False" filter="0" group="General" invalid_entries="SURFACETYPE_UNKNOWN" />
                                        </TunableList>
                                        <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="3EB1B7D2A48E1C8B" description="Tunable option for how many items must be in the blacklist&#xA;for the blacklist to fail when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                            <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="BBC36B6FA8BF21B7" />
                                            <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="BEAE94566E5EBE89" description="When testing a collection of items, the number of items in&#xA;that collection that are in the blacklist must pass this&#xA;threshold test for the blacklist to disallow them all." Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="28C0198643F46FF4" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="343AD4CB602B45E6" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                        </TunableVariant>
                                    </TunableTuple>
                                </TunableVariant>
                                <TunableVariant type="None" name="whitelist" class="OptionalTunable" default="everything" display="Whitelist" muid="F756A3AD635736C3" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is in the whitelist. If no whitelist is&#xA;specified, all items are allowed." Deprecated="False" filter="0" group="General">
                                    <Tunable name="everything" class="TunableExistance" display="Everything" muid="563A98AE49FA24EC" />
                                    <TunableTuple name="specify" class="TunableWhitelist" display="Specify" muid="8B72BC5477772DE7" description="A tunable whitelist." Deprecated="False" filter="0" group="General">
                                        <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="9A4D6F8A94C210AA" description="Tunable option for how many items must be in the whitelist&#xA;for the whitelist to pass when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                            <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="3A7AECC0FD823D5B" />
                                            <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="3BD53F5A63D830CA" description="When testing a collection of items, the number of items in&#xA;that collection that are in the whitelist must pass this&#xA;threshold test for the whitelist to allow them all." Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="3D0DD389B2A2ECD8" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="101D1F66B297CA5" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                        </TunableVariant>
                                        <TunableList name="whitelist" class="TunableSet" display="Whitelist" muid="3EEAA11B5929657" description="Whitelisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                            <TunableEnum type="SurfaceType" class="TunableEnumEntry" default="SURFACETYPE_WORLD" muid="EABF934A62E621B1" static_entries="routing.SurfaceType" description="Surface Type the object is placed on." Deprecated="False" filter="0" group="General" invalid_entries="SURFACETYPE_UNKNOWN" />
                                        </TunableList>
                                    </TunableTuple>
                                </TunableVariant>
                            </TunableTuple>
                        </TunableVariant>
                    </TunableTuple>
                </TunableTuple>
                <TunableTuple name="lot_owner" class="TunableLotOwnerTest" display="Lot Owner" muid="C98B239BC34C636D" description="Gate availability by whether a sim owns the lot the object is on or not." Deprecated="False" filter="0" group="General">
                    <Tunable type="bool" name="consider_business_lot_as_owned" class="Tunable" default="True" display="Consider Business Lot As Owned" muid="3883D7DF7FA2C7D2" description="If checked, business lots are considered owned. If unchecked, business&#xA;lots are considered unowned." Deprecated="False" filter="0" group="General" />
                    <Tunable type="bool" name="consider_rented_lot_as_owned" class="Tunable" default="True" display="Consider Rented Lot As Owned" muid="1E9296D6FD5B078F" description="If checked, rented lots are considered owned. If unchecked, rented&#xA;lots are considered unowned." Deprecated="False" filter="0" group="General" />
                    <Tunable type="bool" name="invert" class="Tunable" default="False" display="Invert" muid="A149106DA3C25CE" description="If checked, this test will return the opposite of what it's tuned to&#xA;return. For instance, if this test is tuned to return True if the&#xA;active household owns the lot, but &quot;Invert&quot; is checked, it will&#xA;actually return False." Deprecated="False" filter="0" group="General" />
                    <Tunable type="bool" name="owns_lot" class="Tunable" default="True" display="Owns Lot" muid="D0946D339C677FB6" description="If checked and subject owns the current lot then this test will&#xA;pass. If unchecked, subject does not own lot, this test will pass." Deprecated="False" filter="0" group="General" />
                </TunableTuple>
                <TunableTuple name="mood" class="TunableMoodTest" display="Mood" muid="F83919A1D3F76043" description="A tunable test that tests if a Sim has the requested mood." Deprecated="False" filter="0" group="General">
                    <Tunable type="bool" name="disallow" class="Tunable" default="False" display="Disallow" muid="861C68766A75A3C6" description="If True, this test will pass if the Sim's mood does NOT match the tuned mood reference." Deprecated="False" filter="0" group="General" />
                    <Tunable type="mood" name="mood" class="TunableReference" display="Mood" muid="BFECEAED41D57980" description="The mood that must be active (or must be inactive, if 'Disallow' is&#xA;checked)." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                </TunableTuple>
                <TunableTuple name="motive" class="TunableMotiveThresholdTest" display="Motive" muid="9933A9D2BA483FE4" description="A tunable test method that checks one or many statistics against a threshold." Deprecated="False" filter="0" group="General">
                    <TunableList name="stats" class="TunableList" display="Stats" muid="C01451CB5303F3B" description="The stat we are operating on." Deprecated="False" filter="0" group="General">
                        <Tunable type="statistic" class="TunableReference" muid="BFA60A1F1FA1381" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                    </TunableList>
                    <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="5C81B70B1A116811" description="The threshold to control availability based on the statistic's value." Deprecated="False" filter="0" group="General">
                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="F48964E7944714AC" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                        <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="770E0BAAB87D59FF" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                    </TunableTuple>
                </TunableTuple>
                <Tunable name="none" class="TunableExistance" display="None" muid="F76DEC5788CC7192" />
                <TunableTuple name="ranked_statistic" class="TunableRankedStatThresholdTest" display="Ranked Statistic" muid="43EAD492E35E0DB2" description="A test that checks whether or not a statistic is at a certain threshold for&#xA;a given participant." Deprecated="False" filter="0" group="General">
                    <Tunable type="bool" name="must_have_ranked_stat" class="Tunable" default="False" display="Must Have Ranked Stat" muid="2CA9EB2E04A54951" description="Setting this to True (checked) will ensure that this test only&#xA;passes if the tested Sim actually has the ranked statistic &#xA;referenced. If left False (unchecked), this test will evaluate &#xA;as if the Sim had the ranked statistic at the value of 0" Deprecated="False" filter="0" group="General" />
                    <TunableVariant type="None" name="num_participants" class="OptionalTunable" default="all_participants" display="Num Participants" muid="56C32C722506AF44" description="If disabled, all participants must pass this stat test.&#xA;If enabled, we test against this number for the number of participants&#xA;that need this value of stat to pass. " Deprecated="False" filter="0" group="General">
                        <Tunable name="all_participants" class="TunableExistance" display="All Participants" muid="BD293D182261606F" />
                        <TunableTuple name="enabled" class="TunableThreshold" display="Enabled" muid="564C08E52CEDF279" description="The threshold of the number of participants who must meet the &#xA;criteria individually." Deprecated="False" filter="0" group="General">
                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="BAD5B6D525BD048D" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                            <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="6DCC252FFF91626F" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                        </TunableTuple>
                    </TunableVariant>
                    <Tunable type="statistic" name="ranked_stat" class="TunableReference" display="Ranked Stat" muid="7C8E8F1ABD805FEB" description="The ranked stat we are operating on." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                    <Tunable type="bool" name="test_against_highest_rank" class="Tunable" default="False" display="Test Against Highest Rank" muid="FFAB5AE8AEF9ACF4" description="When checked this test will only return True is the highest rank&#xA;achieved is in the threshold specified, and not the current rank." Deprecated="False" filter="0" group="General" />
                    <TunableVariant type="None" name="threshold" class="TunableVariant" default="value_threshold" display="Threshold" muid="73BF9085632AB362" description="The value or state threshold to test against." Deprecated="False" filter="0" group="General">
                        <TunableTuple name="state_value_threshold" class="TunableObjectStateValueThreshold" display="State Value Threshold" muid="90B2197855EF8ADB" description="Value/comparison pair used to define a Threshold." Deprecated="False" filter="0" group="General">
                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="C1C5485701F36F9" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                            <Tunable type="object_state" name="value" class="TunableReference" display="Value" muid="F7CA592D3AD7DDF0" description="The state threshold for this test." allow_none="False" Deprecated="False" filter="0" group="General" restrict="ObjectStateValue" />
                        </TunableTuple>
                        <TunableTuple name="value_threshold" class="TunableThreshold" display="Value Threshold" muid="B8577B3B1195F918" description="The threshold to control availability based on the ranked&#xA;statistic's value." Deprecated="False" filter="0" group="General">
                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="1BF2A00FB05DD106" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                            <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="BDD3D85DCA410E8" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                        </TunableTuple>
                    </TunableVariant>
                </TunableTuple>
                <TunableTuple name="sim_filter" class="TunableFilterTest" display="Sim Filter" muid="E39F986245E508A4" description="A tunable test that checks to see if a sim matches a given filter." Deprecated="False" filter="0" group="General">
                    <Tunable type="float" name="duration_available" class="TunableSimMinute" default="120" display="Duration Available" muid="B8AE384C1A1FC69A" min="0" max="None" description="The duration from now that will be used for the start&#xA;and end time of the filter request." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                    <TunableEnum type="ParticipantType" name="relative_sim" class="TunableEnumEntry" default="Actor" display="Relative Sim" muid="F995CBB722D5FB8D" static_entries="interactions.ParticipantType" description="The sim that will be the relative sim that the filter will&#xA;check against for relative checks such as relationships or&#xA;household ids." Deprecated="False" filter="0" group="General" />
                    <Tunable type="sim_filter" name="sim_filter" class="TunableReference" display="Sim Filter" muid="C6E4E95AE41E3E49" allow_none="False" Deprecated="False" filter="0" group="General" />
                    <TunableVariant type="None" name="threshold_matched" class="OptionalTunable" default="disabled" display="Threshold Matched" muid="FB78A405A02F6636" description="If enabled, we will require the number of Sims that match the&#xA;filter pass the threshold requirement. Otherwise we require all&#xA;Sims that the filter runs on to match.&#xA;&#xA;This is useful if you only need one or a number of Sims to match&#xA;the filter." Deprecated="False" filter="0" group="General">
                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="A3280C72C2E91F9E" />
                        <TunableTuple name="enabled" class="TunableThreshold" display="Enabled" muid="9E884572F2CB7896" description="A threshold of how many sims should match the filter." Deprecated="False" filter="0" group="General">
                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="B3761B6C870C69D1" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                            <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="AD90278A243F88A" min="0" max="None" description="The number that describes the threshold for how many Sims&#xA;should match the filter." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                        </TunableTuple>
                    </TunableVariant>
                </TunableTuple>
                <TunableTuple name="sim_info" class="TunableSimInfoTest" display="Sim Info" muid="68A4A2B9698BA079" description="The SimInfo tests some of the basic aspects of a Sim, such as their age,&#xA;gender, or species." Deprecated="False" filter="0" group="General">
                    <TunableVariant type="None" name="ages" class="OptionalTunable" default="unspecified" display="Ages" muid="9E858686DE1539AA" description="The Sim must be one of the specified ages." Deprecated="False" filter="0" group="General">
                        <TunableList name="specified" class="TunableEnumSet" default="TEEN,YOUNGADULT,ADULT,ELDER" display="Specified" muid="1466AA17B06C08B" description="The Sim must be one of the specified ages." Deprecated="False" filter="0" group="General" unique_entries="true">
                            <TunableEnum type="Age" class="TunableEnumEntry" default="ADULT" muid="9A049E5017064399" static_entries="sims-sim_info_types.Age" Deprecated="False" filter="0" group="General" />
                        </TunableList>
                        <Tunable name="unspecified" class="TunableExistance" display="Unspecified" muid="4B7E0D164152FE17" />
                    </TunableVariant>
                    <TunableVariant type="None" name="can_age_up" class="OptionalTunable" default="unspecified" display="Can Age Up" muid="2FF808ABA6FBAC76" description="Whether the Sim is eligible to advance to the next age." Deprecated="False" filter="0" group="General">
                        <Tunable type="bool" name="specified" class="Tunable" default="None" display="Specified" muid="272E76EA73D272EC" description="Whether the Sim is eligible to advance to the next age." Deprecated="False" filter="0" group="General" />
                        <Tunable name="unspecified" class="TunableExistance" display="Unspecified" muid="84904B7503AEB5FD" />
                    </TunableVariant>
                    <TunableVariant type="None" name="gender" class="OptionalTunable" default="unspecified" display="Gender" muid="997934185EE8487B" description="The Sim must be of the specified gender." Deprecated="False" filter="0" group="General">
                        <TunableEnum type="Gender" name="specified" class="TunableEnumEntry" default="None" display="Specified" muid="8A50C77563BFC0BB" static_entries="sims-sim_info_types.Gender" description="The Sim must be of the specified gender." Deprecated="False" filter="0" group="General" />
                        <Tunable name="unspecified" class="TunableExistance" display="Unspecified" muid="EFB552AF2F39C2E9" />
                    </TunableVariant>
                    <TunableVariant type="None" name="has_been_played" class="OptionalTunable" default="disabled" display="Has Been Played" muid="1E2A39ABA5D9C86F" description="Whether the Sim has ever been played as a Playable Sim.&#xA;If enabled and true, the Sim must have been played by the player.&#xA;If enabled and false, the Sim must never have been played.&#xA;If disabled, this portion of the Sim Info test will be ignored." Deprecated="False" filter="0" group="General">
                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="59319FC371948A4B" />
                        <Tunable type="bool" name="enabled" class="Tunable" default="False" display="Enabled" muid="4F946A90681DCC49" description="Whether the Sim has ever been played as a Playable Sim.&#xA;If enabled and true, the Sim must have been played by the player.&#xA;If enabled and false, the Sim must never have been played.&#xA;If disabled, this portion of the Sim Info test will be ignored." Deprecated="False" filter="0" group="General" />
                    </TunableVariant>
                    <TunableVariant type="None" name="is_active_sim" class="OptionalTunable" default="disabled" display="Is Active Sim" muid="87F11443605E3B08" description="Whether the Sim must be the active selected Sim.&#xA;If enabled and true, the sim must active for this test to pass.&#xA;If enabled and false, the sim must not be active for this test to pass.&#xA;If disabled, this portion of the Sim Info test will be ignored." Deprecated="False" filter="0" group="General">
                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="D8051D3EC222ACEA" />
                        <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="BC1D954601D76663" description="Whether the Sim must be the active selected Sim.&#xA;If enabled and true, the sim must active for this test to pass.&#xA;If enabled and false, the sim must not be active for this test to pass.&#xA;If disabled, this portion of the Sim Info test will be ignored." Deprecated="False" filter="0" group="General" />
                    </TunableVariant>
                    <TunableEnum type="MatchType" name="match_type" class="TunableEnumEntry" default="MATCH_ALL" display="Match Type" muid="FB53683A9F1E41A2" static_entries="sims-sim_info_tests.MatchType" description="When testing multiple participants if MATCH_ALL is set, then all the&#xA;participants need to pass the test.&#xA; &#xA;If MATCH_ANY is set, test will pass as soon as one of them meet the&#xA;criteria" Deprecated="False" filter="0" group="General" />
                    <TunableVariant type="None" name="npc" class="OptionalTunable" default="disabled" display="Npc" muid="9CCEBF93D8C454B" description="Whether the Sim must be an NPC or Playable Sim.&#xA;If enabled and true, the sim must be an NPC for this test to pass.&#xA;If enabled and false, the sim must be playable, non-NPC sim for this test to pass.&#xA;If disabled, this portion of the Sim Info test will be ignored.&#xA;&#xA;Note: NPC in this case means a Sim that is not currently&#xA;controllable (selectable), or Not Player Controllable. If you&#xA;need to know if the Sim has ever been played, use 'Has Been&#xA;Played'" Deprecated="False" filter="0" group="General">
                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="C8A59511818DF832" />
                        <Tunable type="bool" name="enabled" class="Tunable" default="False" display="Enabled" muid="32875B41DBFA5FC4" description="Whether the Sim must be an NPC or Playable Sim.&#xA;If enabled and true, the sim must be an NPC for this test to pass.&#xA;If enabled and false, the sim must be playable, non-NPC sim for this test to pass.&#xA;If disabled, this portion of the Sim Info test will be ignored.&#xA;&#xA;Note: NPC in this case means a Sim that is not currently&#xA;controllable (selectable), or Not Player Controllable. If you&#xA;need to know if the Sim has ever been played, use 'Has Been&#xA;Played'" Deprecated="False" filter="0" group="General" />
                    </TunableVariant>
                    <TunableVariant type="None" name="species" class="TunableVariant" default="unspecified" display="Species" muid="FC0E433E341AD2C0" Deprecated="False" filter="0" group="General">
                        <TunableTuple name="specified" class="Tunable_SpeciesTestSpecies" display="Specified" muid="ECA3A3C5D35FB399" description="The Sim must be one of the specified species. Species are consolidated, e.g.&#xA;large/small dog are both DOG." Deprecated="False" filter="0" group="General">
                            <TunableList name="species" class="TunableEnumSet" display="Species" muid="61A6BA22EC2C706C" description="The Sim must be one of the specified species. Species are&#xA;consolidated, e.g. large/small dog are both DOG." Deprecated="False" filter="0" group="General" unique_entries="true">
                                <TunableEnum type="Species" class="TunableEnumEntry" default="HUMAN" muid="E0136C45BAF46BB4" static_entries="sims-sim_info_types.Species" Deprecated="False" filter="0" group="General" invalid_entries="INVALID" />
                            </TunableList>
                        </TunableTuple>
                        <TunableTuple name="specified_extended" class="Tunable_SpeciesTestExtendedSpecies" display="Specified Extended" muid="6F2C66573842BB8E" description="The Sim must be one of the specified species. Species are *not* consolidated,&#xA;e.g. large/small dog are different species." Deprecated="False" filter="0" group="General">
                            <TunableList name="species" class="TunableEnumSet" display="Species" muid="A4BAC91E1C855785" description="The Sim must be one of the specified species. Species are *not*&#xA;consolidated, e.g. large/small dog are different species." Deprecated="False" filter="0" group="General" unique_entries="true">
                                <TunableEnum type="SpeciesExtended" class="TunableEnumEntry" default="Species.HUMAN" muid="FF63EF83D619C8F5" static_entries="sims-sim_info_types.SpeciesExtended" Deprecated="False" filter="0" group="General" invalid_entries="INVALID" />
                            </TunableList>
                        </TunableTuple>
                        <Tunable name="unspecified" class="TunableExistance" display="Unspecified" muid="4E8F76566AD0485" />
                    </TunableVariant>
                </TunableTuple>
                <TunableTuple name="situation_job" class="TunableSituationJobTest" display="Situation Job" muid="CB5896971C977F6" description="Require the tuned participant to have a specific situation job.&#xA;If multiple participants, ALL participants must have the required&#xA;job to pass." Deprecated="False" filter="0" group="General">
                    <Tunable type="bool" name="negate" class="Tunable" default="False" display="Negate" muid="33DA7DC4CDC0FF71" description="If checked then the test result will be reversed, so it will&#xA;test to see if they are not in a job or not in role state&#xA;that has matching tags." Deprecated="False" filter="0" group="General" />
                    <TunableList name="role_tags" class="TunableSet" display="Role Tags" muid="77BBD1BB0AA27302" description="The  participant must have a job that matches the role_tags or&#xA;have the situation_job." Deprecated="False" filter="0" group="General" unique_entries="true">
                        <TunableEnum type="Tag" class="TunableEnumEntry" default="INVALID" muid="63240B5C223B437C" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" Deprecated="False" filter="0" group="General" pack_safe="True" />
                    </TunableList>
                    <TunableList name="situation_jobs" class="TunableSet" display="Situation Jobs" muid="ADD5F7A39FC8F005" description="The participant must have this job in this list or a job that&#xA;matches the role_tags." Deprecated="False" filter="0" group="General" unique_entries="true">
                        <Tunable type="situation_job" class="TunableReference" muid="81A34931485FAA8B" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                    </TunableList>
                </TunableTuple>
                <TunableTuple name="skill_tag" class="TunableSkillTagThresholdTest" display="Skill Tag" muid="B8DC72451886D137" description="A tunable test method that checks the TAGS of ALL THE PARTICIPANTS SKILLS each against a threshold." Deprecated="False" filter="0" group="General">
                    <Tunable type="int" name="skill_quantity" class="Tunable" default="0" display="Skill Quantity" muid="A7F0F3089EC165F7" description="The minimum number of skills at or above this level required to pass." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                    <TunableEnum type="Tag" name="skill_tag" class="TunableEnumEntry" default="INVALID" display="Skill Tag" muid="87BBF77D7C92078" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="What tag to test for." Deprecated="False" filter="0" group="General" invalid_entries="INVALID" />
                    <TunableTuple name="skill_threshold" class="TunableThreshold" display="Skill Threshold" muid="DB31C9326BAE6F84" description="The threshold level to test of each skill." Deprecated="False" filter="0" group="General">
                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="12919E2877BA4745" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                        <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="BD307F98831C65EE" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                    </TunableTuple>
                    <Tunable type="bool" name="test_only_changed_skill" class="Tunable" default="False" display="Test Only Changed Skill" muid="E65C7DCC704ADDB4" description="If checked then we will only test the skill that actually changed." Deprecated="False" filter="0" group="General" />
                </TunableTuple>
                <TunableTuple name="skill_test" class="TunableSkillRangeTest" display="Skill Test" muid="3F267B2FD214C8A5" description="A test requiring a Sim to have a skill that is either above a threshold or&#xA;within an interval." Deprecated="False" filter="0" group="General">
                    <Tunable type="statistic" name="skill" class="TunableReference" display="Skill" muid="F91054549C992D0D" description="The skill to test against. &#xA;&#xA;Should the Sim not have the specified skill, or should the skill not&#xA;be available because of pack restrictions, this Sim will be&#xA;considered at level 0." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="Skill" />
                    <TunableVariant type="None" name="skill_range" class="TunableVariant" default="interval" display="Skill Range" muid="5DF0E896097243FA" description="A skill range defined by either an interval or a threshold." Deprecated="False" filter="0" group="General">
                        <TunableTuple name="interval" class="TunableSkillInterval" display="Interval" muid="D710FA263F9652A9" description="A TunableThreshold that is specifically used in Skill Range Tests to determine if a skill meets the required skill level." Deprecated="False" filter="0" group="General">
                            <TunableTuple name="skill_interval" class="TunableInterval" display="Skill Interval" muid="16F87822C7FAF64" description="The range (inclusive) a skill level must be in to pass this test." Deprecated="False" filter="0" group="General">
                                <Tunable type="int" name="lower_bound" class="TunableRange" default="1" display="Lower Bound" muid="D7DD9BE89471B855" min="0" max="None" description="The lower bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                <Tunable type="int" name="upper_bound" class="TunableRange" default="10" display="Upper Bound" muid="70B8E53FEADD862" min="None" max="20" description="The upper bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                            </TunableTuple>
                        </TunableTuple>
                        <TunableTuple name="threshold" class="TunableSkillThreshold" display="Threshold" muid="918FC582566D1105" description="A TunableThreshold that is specifically used in Skill Range Tests to determine if a skill meets the required skill level.&quot; " Deprecated="False" filter="0" group="General">
                            <TunableTuple name="skill_threshold" class="TunableThreshold" display="Skill Threshold" muid="CA72F559EEB93CCE" description="The Threshold for the skill level to be valid." Deprecated="False" filter="0" group="General">
                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="752E2E01388E0E79" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                <Tunable type="int" name="value" class="Tunable" default="0" display="Value" muid="D1C67E1B785ACB8E" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                            </TunableTuple>
                        </TunableTuple>
                    </TunableVariant>
                    <TunableEnum type="ParticipantType" name="subject" class="TunableEnumEntry" default="Actor" display="Subject" muid="FAAD8D8607A90384" static_entries="interactions.ParticipantType" description="The subject of this test." Deprecated="False" filter="0" group="General" />
                    <Tunable type="bool" name="use_effective_skill_level" class="Tunable" default="False" display="Use Effective Skill Level" muid="B6141DC653296CD6" description="If checked, then instead of using the skill's actual level, the test&#xA;will use the skill's effective level for the purpose of satisfying&#xA;the specified criteria." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                </TunableTuple>
                <TunableTuple name="statistic" class="TunableStatThresholdTest" display="Statistic" muid="15B2731A8E0A652A" description="A test that checks whether or not a statistic is at a certain threshold for&#xA;a given participant. It can also test whether or not the participant has the&#xA;statistic explicitly added on them." Deprecated="False" filter="0" group="General">
                    <Tunable type="bool" name="must_have_stat" class="Tunable" default="False" display="Must Have Stat" muid="B2330ED395BD50F1" description="Setting this to True (checked) will ensure that this test only&#xA;passes if the tested Sim actually has the statistic referenced. If&#xA;left False (unchecked), this test will evaluate as if the Sim had&#xA;the statistic at the value of 0" Deprecated="False" filter="0" group="General" />
                    <TunableVariant type="None" name="score_to_use" class="TunableVariant" default="user_value" display="Score To Use" muid="F230CDC0D6EC475B" description="Depending on the choice, this decides what value to use for the &#xA;threshold comparison." Deprecated="False" filter="0" group="General">
                        <TunableTuple name="points" class="Tunable_PointsValue" display="Points" muid="2C733DE7B940EBA2" description="Use the raw points for the comparison in the test." Deprecated="False" filter="0" group="General" />
                        <TunableTuple name="rank" class="Tunable_RankValue" display="Rank" muid="DAFF619960A4501" description="Use the rank value for the comparison in the test." Deprecated="False" filter="0" group="General" />
                        <TunableTuple name="user_value" class="Tunable_UserValue" display="User Value" muid="E3B067FF6BA135A" description="Use the user value for the comparison in the test." Deprecated="False" filter="0" group="General">
                            <Tunable type="bool" name="highest_level_reached_instead" class="Tunable" default="False" display="Highest Level Reached Instead" muid="D5F50B8FAAB3A8F6" description="If checked this will test against the highest level reached. This&#xA;currently only works with Ranked Statistics. Other statistics do&#xA;not have a notion of highest level reached. If we are using&#xA;something that doesn't support highest level reached it will &#xA;test against the current level instead." Deprecated="False" filter="0" group="General" />
                        </TunableTuple>
                    </TunableVariant>
                    <Tunable type="statistic" name="stat" class="TunableReference" display="Stat" muid="6A7BC9B65E118FFD" description="The stat we are operating on." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                    <TunableVariant type="None" name="threshold" class="TunableVariant" default="value_threshold" display="Threshold" muid="459BC4B7429336B0" description="The value or state threshold to test against." Deprecated="False" filter="0" group="General">
                        <TunableTuple name="state_value_threshold" class="TunableObjectStateValueThreshold" display="State Value Threshold" muid="98648E045A923E41" description="Value/comparison pair used to define a Threshold." Deprecated="False" filter="0" group="General">
                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="5B4CE8F13707F988" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                            <Tunable type="object_state" name="value" class="TunableReference" display="Value" muid="75ECE0429AFDD5CA" description="The state threshold for this test." allow_none="False" Deprecated="False" filter="0" group="General" restrict="ObjectStateValue" />
                        </TunableTuple>
                        <TunableTuple name="value_threshold" class="TunableThreshold" display="Value Threshold" muid="EF5B6A258798652A" description="The threshold to control availability based on the statistic's&#xA;value." Deprecated="False" filter="0" group="General">
                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="16F1E84A1E8B599E" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                            <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="66EC2490BA91151E" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                        </TunableTuple>
                    </TunableVariant>
                </TunableTuple>
                <TunableTuple name="trait" class="TunableTraitTest" display="Trait" muid="DB88DF1A61758970" description="Test to require a Sim to have or not have certain specific traits." Deprecated="False" filter="0" group="General">
                    <Tunable type="bool" name="apply_thresholds_on_individual_basis" class="Tunable" default="True" display="Apply Thresholds On Individual Basis" muid="18ECE397BC297E45" description="If checked then Num Whitelist Required and Num Blacklist Allowed&#xA;will be applied to each individual participant from the subject.&#xA;If unchecked then it will apply the values to the total whitelist&#xA;and blacklist matches on the group.&#xA;&#xA;IMPORTANT!!!&#xA;In the case of objectives this should probably be set to false&#xA;since we know that this is coming from only one sim and that we&#xA;want to use the value that comes out of the test result numeric.&#xA;This isn't just locked to being this value since there are valid&#xA;cases within that system when you are looking at a group of sims&#xA;and could want to test that one of your sims passes.  Ex. Having&#xA;a ghost sim in the household." Deprecated="False" filter="0" group="General" />
                    <TunableList name="blacklist_trait_types" class="TunableEnumSet" display="Blacklist Trait Types" muid="48166E0212066E13" description="The Sim is required to not have traits of these types to pass this &#xA;test. Should Num Blacklist Allowed be specified, then the Sim is &#xA;allowed to have up to that amount of blacklisted traits before &#xA;failing this test." Deprecated="False" filter="0" group="General" unique_entries="true">
                        <TunableEnum type="TraitType" class="TunableEnumEntry" default="PERSONALITY" muid="4D125FC84955E78F" static_entries="traits-trait_type.TraitType" Deprecated="False" filter="0" group="General" />
                    </TunableList>
                    <TunableList name="blacklist_traits" class="TunableList" display="Blacklist Traits" muid="746A7A2996643819" description="The is required to not have traits from this list in order to pass&#xA;this test. Should num_blacklist_allowed be specified, then the Sim&#xA;is allowed to have up to that amount of blacklisted traits before&#xA;failing this test." Deprecated="False" filter="0" group="General">
                        <Tunable type="trait" class="TunableReference" muid="871F9DE491020CC0" description="A blacklist trait." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                    </TunableList>
                    <Tunable type="int" name="num_blacklist_allowed" class="Tunable" default="0" display="Num Blacklist Allowed" muid="6B7FE096EA9CAA7F" description="The threshold of blacklist traits owned by the specified Sim that&#xA;will trigger a test failure." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                    <Tunable type="int" name="num_whitelist_required" class="Tunable" default="1" display="Num Whitelist Required" muid="C15615CF35BAF5AC" description="The number of whitelist traits that the specified Sim is required to&#xA;have in order to pass this test." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                    <TunableList name="whitelist_trait_types" class="TunableEnumSet" display="Whitelist Trait Types" muid="3A4E3528E8A559DC" description="The Sim is required to have the specified number of traits with &#xA;these types in order to pass the test." Deprecated="False" filter="0" group="General" unique_entries="true">
                        <TunableEnum type="TraitType" class="TunableEnumEntry" default="PERSONALITY" muid="7A0902E7C0AC3EC8" static_entries="traits-trait_type.TraitType" Deprecated="False" filter="0" group="General" />
                    </TunableList>
                    <TunableList name="whitelist_traits" class="TunableList" display="Whitelist Traits" muid="D50D0761FBED690" description="The Sim is required to have the specified number of traits from this&#xA;list in order to pass the test." Deprecated="False" filter="0" group="General">
                        <Tunable type="trait" class="TunableReference" muid="24FFA5FFAF663545" description="A whitelist trait. Please note: for pack-safe entries that are&#xA;not loaded, the game will behave as if the entry doesn't exist.&#xA;This allows you to specify a pack trait and required count of 1&#xA;and always fail the test should the appropriate pack not be&#xA;installed." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                    </TunableList>
                </TunableTuple>
                <TunableTuple name="zone" class="TunableZoneTest" display="Zone" muid="A146D0827DAC6861" description="A tunable factory that tests properties of a particular zone." Deprecated="False" filter="0" group="General">
                    <TunableVariant type="None" name="zone_source" class="TunableVariant" default="use_current_zone" display="Zone Source" muid="B4D6C5CF0C8D2561" description="Which zone we want to test." Deprecated="False" filter="0" group="General">
                        <TunableTuple name="use_current_zone" class="TunableActiveZone" display="Use Current Zone" muid="42D387523E705C50" description="Get the active zone." Deprecated="False" filter="0" group="General" />
                        <TunableTuple name="use_participant_home_zone" class="TunableParticipantHomeZone" display="Use Participant Home Zone" muid="DD84FD98195E6CC1" description="Get a participant's home zone. Can be None if they don't have one." Deprecated="False" filter="0" group="General">
                            <TunableEnum type="ParticipantTypeSingleSim" name="participant" class="TunableEnumEntry" default="Actor" display="Participant" muid="6354BE00F8441228" static_entries="interactions.ParticipantTypeSingleSim" description="Test against the participant's home zone. Townies' home zone will&#xA;be None." Deprecated="False" filter="0" group="General" />
                        </TunableTuple>
                        <TunableTuple name="use_pick_info" class="TunablePickInfoZone" display="Use Pick Info" muid="BFF25FC0B150A67D" description="Get the zone of the lot the user clicked on." Deprecated="False" filter="0" group="General" />
                        <TunableTuple name="use_picked_zone_ids" class="TunablePickedZoneIds" display="Use Picked Zone Ids" muid="61BD5C9B723A3CEB" description="Get the zone from the interaction's picked_zone_ids participant. Usually&#xA;comes from a picker." Deprecated="False" filter="0" group="General" />
                    </TunableVariant>
                    <TunableTuple name="zone_tests" class="TunableTuple" display="Zone Tests" muid="9A8923BE281EBCBC" description="The tests we wish to run on the zone in question." Deprecated="False" filter="0" group="General">
                        <TunableVariant type="None" name="business_tests" class="OptionalTunable" default="Don't_Test" display="Business Tests" muid="56BA82D85F60AA7B" description="If enabled, test if the specified zone is a business or not." Deprecated="False" filter="0" group="General">
                            <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="7D134413F32B44AE" />
                            <TunableVariant type="None" name="enabled" class="TunableVariant" default="is_business" display="Enabled" muid="16635FA5C12B00BD" description="Test if the zone is a business, an open business, or a&#xA;closed business." Deprecated="False" filter="0" group="General">
                                <TunableTuple name="is_business" class="Tunable_IsBusinessTest" display="Is Business" muid="44D5E1CD16E8B9AD" description="Test if the zone specified by the zone id is a business or not." Deprecated="False" filter="0" group="General" />
                                <TunableTuple name="is_business_open" class="Tunable_IsBusinessOpenTest" display="Is Business Open" muid="6165D2D1ACE5F2BF" description="Test if the zone specified by the zone id is an open business." Deprecated="False" filter="0" group="General" />
                            </TunableVariant>
                        </TunableVariant>
                        <TunableVariant type="None" name="is_apartment" class="OptionalTunable" default="Don't_Test" display="Is Apartment" muid="5C31C24C0B8719CC" description="If checked, test will pass if the zone is an apartment. If&#xA;unchecked, test passes if the zone is NOT an apartment. Useful&#xA; in aspiration tuning, to discriminate between property&#xA;types in tests of lot value. Allows &quot;Own a House worth X&quot; and&#xA;&quot;Own an Apartment worth X&quot;" Deprecated="False" filter="0" group="General">
                            <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="BB08003BE55A03D3" />
                            <TunableTuple name="Is_or_is_not_apartment_zone" class="TunableTuple" display="Is Or Is Not Apartment Zone" muid="C8FC7FDFA779AC19" description="Test whether the zone is an apartment or not." Deprecated="False" filter="0" group="General">
                                <Tunable type="bool" name="consider_penthouse_an_apartment" class="Tunable" default="True" display="Consider Penthouse An Apartment" muid="BD63B2C20E249EB7" description="If enabled, we will consider penthouses to be&#xA;apartments when testing them against the apartment&#xA;check." Deprecated="False" filter="0" group="General" />
                                <Tunable type="bool" name="is_apartment" class="Tunable" default="True" display="Is Apartment" muid="BE5F508C62042D36" description="If checked, test will pass if the zone is an apartment.&#xA;If unchecked, test passes if the zone is NOT an&#xA;apartment." Deprecated="False" filter="0" group="General" />
                            </TunableTuple>
                        </TunableVariant>
                        <TunableVariant type="None" name="is_penthouse" class="OptionalTunable" default="disabled" display="Is Penthouse" muid="70BF29533870BF78" description="If enabled, test whether or not the current zone is a penthouse." Deprecated="False" filter="0" group="General">
                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="FD780D8B639DBD9" />
                            <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="1E4EB01302B08D6E" description="If checked, the zone must be a penthouse. If unchecked, the&#xA;zone cannot be a penthouse." Deprecated="False" filter="0" group="General" />
                        </TunableVariant>
                        <Tunable type="bool" name="use_source_venue" class="Tunable" default="False" display="Use Source Venue" muid="5946063B76FC77BD" description="If enabled, the test will test the source venue instead of the active&#xA;venue.  For example, the Community Lot instead of the active Marketplace.&#xA;Testing the active venue is the default." Deprecated="False" filter="0" group="General" />
                        <TunableVariant type="None" name="venue_tier" class="OptionalTunable" default="disabled" display="Venue Tier" muid="3A4196492D51ED35" description="If checked, will verify that the zone's venue is at the tuned &#xA;tier. If &quot;no valid tier&quot; is selected, this test will be True&#xA;if either the current venue doesn't have tiers or if it does but&#xA;it doesn't currently meet any of their requirements." Deprecated="False" filter="0" group="General">
                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="AF779B4425F1813C" />
                            <TunableVariant type="None" name="enabled" class="TunableVariant" default="none" display="Enabled" muid="22D9FEB262254AC8" description="                    " Deprecated="False" filter="0" group="General">
                                <Tunable name="no_valid_tier" class="TunableExistance" display="No Valid Tier" muid="4683D1ED59FCB760" />
                                <Tunable name="none" class="TunableExistance" display="None" muid="78D190D1B53D37D" />
                                <Tunable type="int" name="tier_number" class="TunableRange" default="0" display="Tier Number" muid="A6CC8C34CAC7ABA4" min="0" max="None" description="The index of the tier to test. This test will return&#xA;true if this tier is active and false otherwise. This&#xA;should be the index of the tier in the tier list and not&#xA;any player-facing index. For instance, if a tier list&#xA;had a single tier, that tier would be 0, and if a second&#xA;tier were added, that second tier would be 1." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                            </TunableVariant>
                        </TunableVariant>
                        <TunableVariant type="None" name="venue_type" class="OptionalTunable" default="Don't_Test" display="Venue Type" muid="FCA44CF276C0555B" description="If checked, will verify the zone's venue type is allowed or&#xA;disallowed." Deprecated="False" filter="0" group="General">
                            <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="76B065C068ECCAC" />
                            <TunableTuple name="enabled" class="TunableWhiteBlackList" display="Enabled" muid="32286015CDED026F" description="The zone's venue type must pass the whitelist and blacklist&#xA;to pass the test." Deprecated="False" filter="0" group="General">
                                <TunableVariant type="None" name="blacklist" class="OptionalTunable" default="nothing" display="Blacklist" muid="1A20E5AA693BF733" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is not in the blacklist. If no blacklist is&#xA;specified, no items are disallowed." Deprecated="False" filter="0" group="General">
                                    <Tunable name="nothing" class="TunableExistance" display="Nothing" muid="576DE587F57284D6" />
                                    <TunableTuple name="specify" class="TunableBlacklist" display="Specify" muid="1C05CDB16DDBB6A1" description="A tunable blacklist." Deprecated="False" filter="0" group="General">
                                        <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="EE8D480BFDBBEBE4" description="Blacklisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                            <Tunable type="venue" class="TunableReference" muid="5BDEB349642B4C1F" description="Allowed and disallowed venue types." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                        </TunableList>
                                        <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="3AC194B8219E0634" description="Tunable option for how many items must be in the blacklist&#xA;for the blacklist to fail when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                            <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="5BADFF2F91AD341D" />
                                            <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="DB0B44E3A247DAB1" description="When testing a collection of items, the number of items in&#xA;that collection that are in the blacklist must pass this&#xA;threshold test for the blacklist to disallow them all." Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="3422856F1A38CDDD" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="465777CA27A38B36" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                        </TunableVariant>
                                    </TunableTuple>
                                </TunableVariant>
                                <TunableVariant type="None" name="whitelist" class="OptionalTunable" default="everything" display="Whitelist" muid="6322FFB43D52007C" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is in the whitelist. If no whitelist is&#xA;specified, all items are allowed." Deprecated="False" filter="0" group="General">
                                    <Tunable name="everything" class="TunableExistance" display="Everything" muid="30E2870E47CA1578" />
                                    <TunableTuple name="specify" class="TunableWhitelist" display="Specify" muid="B082A96515EBAE38" description="A tunable whitelist." Deprecated="False" filter="0" group="General">
                                        <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="CD3DC6361FA773E0" description="Tunable option for how many items must be in the whitelist&#xA;for the whitelist to pass when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                            <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="7CB9F01CCD44AC52" />
                                            <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="57C1DC7AE90D1F0B" description="When testing a collection of items, the number of items in&#xA;that collection that are in the whitelist must pass this&#xA;threshold test for the whitelist to allow them all." Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="A12365FE176503B6" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="442B8ED2F92B30F4" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                        </TunableVariant>
                                        <TunableList name="whitelist" class="TunableSet" display="Whitelist" muid="AAF02CF053932EF0" description="Whitelisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                            <Tunable type="venue" class="TunableReference" muid="4F9C259A987E0CFD" description="Allowed and disallowed venue types." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                        </TunableList>
                                    </TunableTuple>
                                </TunableVariant>
                            </TunableTuple>
                        </TunableVariant>
                        <TunableVariant type="None" name="was_owner_household_changed" class="OptionalTunable" default="Don't_Test" display="Was Owner Household Changed" muid="665778640ED9FC4D" description="If enabled, test if the lot owner household for the specified zone &#xA;was changed between when the zone was saved and when it was loaded." Deprecated="False" filter="0" group="General">
                            <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="4F724D9AC123F98D" />
                            <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="42F3CABBA83626B6" description="If checked,  test will pass if the zone's owner household was changed &#xA;between when the zone was saved and when it was loaded. &#xA;If unchecked, test will pass if the zone's owner household was NOT changed &#xA;between when the zone was saved and when it was loaded. " Deprecated="False" filter="0" group="General" />
                        </TunableVariant>
                        <TunableVariant type="None" name="world_tests" class="OptionalTunable" default="disabled" display="World Tests" muid="4ADDDE1AF2A1EAD0" description="If enabled, we test if specified zone is or is not in the specified world(s)" Deprecated="False" filter="0" group="General">
                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="6A28EC3DBE6AE8CC" />
                            <TunableTuple name="enabled" class="TunableWhiteBlackList" display="Enabled" muid="C9711F46AE21F902" description="Pass if zone is in one of the worlds in the whitelist,&#xA;or fail if it is any of the worlds in the blacklist." Deprecated="False" filter="0" group="General">
                                <TunableVariant type="None" name="blacklist" class="OptionalTunable" default="nothing" display="Blacklist" muid="722A9C3BBB636E13" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is not in the blacklist. If no blacklist is&#xA;specified, no items are disallowed." Deprecated="False" filter="0" group="General">
                                    <Tunable name="nothing" class="TunableExistance" display="Nothing" muid="7FA14BD17A7CE7EE" />
                                    <TunableTuple name="specify" class="TunableBlacklist" display="Specify" muid="488DB12A57C15B99" description="A tunable blacklist." Deprecated="False" filter="0" group="General">
                                        <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="4505CC54312669EB" description="Blacklisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                            <Tunable type="worlddescription" class="TunableReference" muid="662452E1130412B1" description="World to check against." Deprecated="False" filter="0" group="General" pack_safe="True" />
                                        </TunableList>
                                        <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="854820BF9C505696" description="Tunable option for how many items must be in the blacklist&#xA;for the blacklist to fail when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                            <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="2182F46D2A5C36EE" />
                                            <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="27C1E936E358E520" description="When testing a collection of items, the number of items in&#xA;that collection that are in the blacklist must pass this&#xA;threshold test for the blacklist to disallow them all." Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="4869FF9545F579F4" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="4D679184BD92445C" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                        </TunableVariant>
                                    </TunableTuple>
                                </TunableVariant>
                                <TunableVariant type="None" name="whitelist" class="OptionalTunable" default="everything" display="Whitelist" muid="8D9AA32362FAF537" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is in the whitelist. If no whitelist is&#xA;specified, all items are allowed." Deprecated="False" filter="0" group="General">
                                    <Tunable name="everything" class="TunableExistance" display="Everything" muid="65B9EAFEB9CC9E26" />
                                    <TunableTuple name="specify" class="TunableWhitelist" display="Specify" muid="63C533EAEE43F918" description="A tunable whitelist." Deprecated="False" filter="0" group="General">
                                        <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="3EE0965574F7B49F" description="Tunable option for how many items must be in the whitelist&#xA;for the whitelist to pass when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                            <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="F607BAC610BCD2C5" />
                                            <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="C57EF1A30365448F" description="When testing a collection of items, the number of items in&#xA;that collection that are in the whitelist must pass this&#xA;threshold test for the whitelist to allow them all." Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="52012BBF9FB24526" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="4AE7D51C6DE58EC8" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                        </TunableVariant>
                                        <TunableList name="whitelist" class="TunableSet" display="Whitelist" muid="23CA6F1B185F480E" description="Whitelisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                            <Tunable type="worlddescription" class="TunableReference" muid="1B5BD9C8A293B7C0" description="World to check against." Deprecated="False" filter="0" group="General" pack_safe="True" />
                                        </TunableList>
                                    </TunableTuple>
                                </TunableVariant>
                            </TunableTuple>
                        </TunableVariant>
                        <TunableVariant type="None" name="zone_modifiers" class="OptionalTunable" default="Don't_Test" display="Zone Modifiers" muid="F1618D1C904C174D" description="if enabled, we test the zone modifiers allowed or disallowed." Deprecated="False" filter="0" group="General">
                            <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="A577AC573C951242" />
                            <TunableTuple name="enabled" class="TunableWhiteBlackList" display="Enabled" muid="5958676786102BBD" description="The zone's modifiers must pass this whitelist and blacklist for the&#xA;test to pass." Deprecated="False" filter="0" group="General">
                                <TunableVariant type="None" name="blacklist" class="OptionalTunable" default="nothing" display="Blacklist" muid="D70A18C080615913" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is not in the blacklist. If no blacklist is&#xA;specified, no items are disallowed." Deprecated="False" filter="0" group="General">
                                    <Tunable name="nothing" class="TunableExistance" display="Nothing" muid="C65C5A6E9B799506" />
                                    <TunableTuple name="specify" class="TunableBlacklist" display="Specify" muid="E5F128E29F1C4172" description="A tunable blacklist." Deprecated="False" filter="0" group="General">
                                        <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="7715453C98615CB2" description="Blacklisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                            <Tunable type="zone_modifier" class="TunableReference" muid="B7C145A4CFF07E10" description="Allowed and disallowed zone modifiers." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                        </TunableList>
                                        <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="BD8F560203302519" description="Tunable option for how many items must be in the blacklist&#xA;for the blacklist to fail when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                            <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="5B2402DFB4E4E5BB" />
                                            <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="69A3476E7BEACE2" description="When testing a collection of items, the number of items in&#xA;that collection that are in the blacklist must pass this&#xA;threshold test for the blacklist to disallow them all." Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="796E08D8E6872A76" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="DD756F6E743F2BDA" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                        </TunableVariant>
                                    </TunableTuple>
                                </TunableVariant>
                                <TunableVariant type="None" name="whitelist" class="OptionalTunable" default="everything" display="Whitelist" muid="401CC0F0E09123D0" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is in the whitelist. If no whitelist is&#xA;specified, all items are allowed." Deprecated="False" filter="0" group="General">
                                    <Tunable name="everything" class="TunableExistance" display="Everything" muid="52FB732EAD157E0F" />
                                    <TunableTuple name="specify" class="TunableWhitelist" display="Specify" muid="ED777C4B87EA43AB" description="A tunable whitelist." Deprecated="False" filter="0" group="General">
                                        <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="C3E5A85B9AA0854" description="Tunable option for how many items must be in the whitelist&#xA;for the whitelist to pass when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                            <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="963D889825E8C085" />
                                            <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="B1952E1FE12BB88D" description="When testing a collection of items, the number of items in&#xA;that collection that are in the whitelist must pass this&#xA;threshold test for the whitelist to allow them all." Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="2EABC82CAAAA06F0" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="6692D61F9E1397B5" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                        </TunableVariant>
                                        <TunableList name="whitelist" class="TunableSet" display="Whitelist" muid="5C2C699C063B634F" description="Whitelisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                            <Tunable type="zone_modifier" class="TunableReference" muid="87F418C479FC4BEC" description="Allowed and disallowed zone modifiers." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                        </TunableList>
                                    </TunableTuple>
                                </TunableVariant>
                            </TunableTuple>
                        </TunableVariant>
                    </TunableTuple>
                </TunableTuple>
            </TunableVariant>
        </TunableList>

        <Tunable type="bool" name="ignore_goal_precheck" class="Tunable" default="False" display="Ignore Goal Precheck" muid="E4F73AF635753293" description="Checking this box will skip the normal goal pre-check in the case that other tuning makes the goal&#xA;continue to be valid. For example, for a collection test, we may want to give the goal to collect&#xA;an additional object even though the test that we have collected this object before will already&#xA;pass. This allows us to tune a more specific pre-test to check for the amount we want to collect." Deprecated="False" filter="0" group="General" />
    </Instance>

    <VersionHistory>
        <ActionList>
            <Action type="kRemove" old_muid="376779B52A8E0B" />
        </ActionList>

        <ActionList>
            <Action type="kRemove" old_muid="B946809431A11FD4" />
        </ActionList>

        <ActionList>
            <Action type="kRename" old_muid="FE26D80CA02EC55A" new_muid="FAADCE91A5179601" />
        </ActionList>
    </VersionHistory>
</TuningRoot>