<?xml version="1.0" encoding="iso-8859-1"?>

<TuningRoot>
    <Instance instance_type="situation_goal" class="SituationGoalObjectInteraction" module="situations.situation_goal_object_interaction" muid="C154C6BF5FC82575" description="Situation Goal for actor running an interaction on an object." instance_needs_reference="True" instance_subclasses_only="False" parents="SituationGoal" path="SituationGoals\Descriptions" use_guid_for_reference="True">
        <TunableTuple name="_goal_test" class="TunableParticipantRanInteractionTest" display="Goal Test" muid="715960A72AA7BFC4" description="Check to see if the Sim ran an affordance as a particular actor" Deprecated="False" filter="0" group="Tests">
            <TunableList name="affordance_lists" class="TunableSet" display="Affordance Lists" muid="6CDE273D1556D23E" description="The Sim must have run either any affordance or have a proxied affordance&#xA;in Affordances or these Affordance Lists, or an interaction matching&#xA;one of the tags in this tunable's Tags field." Deprecated="False" filter="0" group="General" unique_entries="true">
                <Tunable type="snippet" class="TunableReference" muid="BA719E4714952CFF" description="A reference to a AffordanceList tuning snippet." allow_none="False" Deprecated="False" filter="0" group="General" restrict="AffordanceList" />
            </TunableList>
            <TunableList name="affordances" class="TunableSet" display="Affordances" muid="1717C502B1BA682E" description="The Sim must have run either any affordance or have a proxied affordance&#xA;in this list or Affordance Lists, or an interaction matching&#xA;one of the tags in this tunable's Tags field." Deprecated="False" filter="0" group="General" unique_entries="true">
                <Tunable type="interaction" class="TunableReference" muid="DF641B95EBEBFFB9" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
            </TunableList>
            <Tunable type="bool" name="consider_all_cancelled_as_failure" class="Tunable" default="False" display="Consider All Cancelled As Failure" muid="2EBA52FD4BB28762" description="If True, test will consider the interaction outcome to be Failure if&#xA;canceled for any reason. If this box is checked and&#xA;consider_user_cancelled_as_failure is not checked, user cancel's&#xA;will still be treated as failures." Deprecated="False" filter="0" group="General" />
            <Tunable type="bool" name="consider_user_cancelled_as_failure" class="Tunable" default="True" display="Consider User Cancelled As Failure" muid="4E9E017E584C220F" description="If True, test will consider the interaction outcome to be Failure if&#xA;canceled by the user." Deprecated="False" filter="0" group="General" />
            <TunableVariant type="None" name="interaction_outcome" class="OptionalTunable" default="disabled" display="Interaction Outcome" muid="9536D425CDB9F2FB" description="The interaction's outcome must match the outcome tuned here to pass this test." Deprecated="False" filter="0" group="General">
                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="E4488A5CC0C37D92" />
                <TunableEnum type="OutcomeResult" name="enabled" class="TunableEnumEntry" default="NONE" display="Enabled" muid="73559D58BAFDFEEC" dynamic_entries="interactions-utils-outcome_enums.OutcomeResult._elements" static_entries="interactions-utils-outcome_enums.OutcomeResult" Deprecated="False" filter="0" group="General" />
            </TunableVariant>
            <TunableVariant type="None" name="running_time" class="OptionalTunable" default="disabled" display="Running Time" muid="F249E786984CE304" description="Amount of time in sim minutes that this interaction needs to&#xA;have been running for for this test to pass true. This time is how&#xA;long the interaction has been in the SI State.&#xA;&#xA;If your setting this, you probably want Test Event to be set to&#xA;InteractionUpdate." Deprecated="False" filter="0" group="General">
                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="D3774A7D7671232C" />
                <Tunable type="float" name="enabled" class="TunableSimMinute" default="10" display="Enabled" muid="4E29553D51DAA579" min="0" max="None" description="Amount of time in sim minutes that this interaction needs to&#xA;have been running for for this test to pass true. This time is how&#xA;long the interaction has been in the SI State.&#xA;&#xA;If your setting this, you probably want Test Event to be set to&#xA;InteractionUpdate." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
            </TunableVariant>
            <TunableList name="skill_tags" class="TunableSet" display="Skill Tags" muid="5B004F627ABECBD8" description="Skill tags to check against skill attached to the interaction,&#xA;determined by if the interaction identifies it in skill  &#xA;loot data, or if it is an associated skill in the outcome.&#xA;&#xA;If you are setting this and are not using affordances or lists &#xA;for filtering, you probably want to ensure that you set&#xA;interaction tags that are more or equally restrictive to either &#xA;one of Interaction_Super or Interaction_Mixer.  And do not&#xA;use Interaction_All, unless you really want to trigger &#xA;for both mixers and super interactions." Deprecated="False" filter="0" group="General" unique_entries="true">
                <TunableEnum type="Tag" class="TunableEnumWithFilter" default="INVALID" muid="F3AAEC8E2CBD7D63" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" Deprecated="False" dynamic_entries_prefix="skill" filter="0" group="General" />
            </TunableList>
            <TunableList name="tags" class="TunableSet" display="Tags" muid="B9CA4D86D350278E" description="The Sim must have run either an interaction matching one of these Tags &#xA;or an affordance from the list of Affordances in this tunable." Deprecated="False" filter="0" group="General" unique_entries="true">
                <TunableEnum type="Tag" class="TunableEnumEntry" default="INVALID" muid="3AC0B984D61B4787" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" Deprecated="False" filter="0" group="General" />
            </TunableList>
            <TunableTuple name="target_filters" class="TunableTuple" display="Target Filters" muid="B8D91894F703C72A" description="Restrictions on the target of this interaction." Deprecated="False" filter="0" group="General">
                <TunableVariant type="None" name="object_states" class="OptionalTunable" default="disabled" display="Object States" muid="D48FF18FCD748756" description="Limit test success only to target objects that are in certain states" Deprecated="False" filter="0" group="General">
                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="D7F2B585F5966E72" />
                    <TunableTuple name="enabled" class="BasicStateCheckFactory" display="Enabled" muid="9C3A40CBCD7DA428" description="This option tests crafted item's tags against a list of possible&#xA;tags." Deprecated="False" filter="0" group="General">
                        <TunableVariant type="None" name="object_requirement" class="TunableVariant" default="any_object" display="Object Requirement" muid="7ED388BFA6DC6CE" Deprecated="False" filter="0" group="General">
                            <Tunable name="any_object" class="TunableExistance" display="Any Object" muid="EE25870BA6CB82EE" />
                            <TunableTuple name="definition" class="TunableTuple" display="Definition" muid="88CB05B0FFD7FFED" Deprecated="False" filter="0" group="General">
                                <Tunable type="object" name="definition" class="TunableReference" display="Definition" muid="734E405C43F5E686" description="The object must have this definition." allow_none="False" Deprecated="False" filter="0" group="General" />
                            </TunableTuple>
                            <TunableTuple name="tag" class="TunableTuple" display="Tag" muid="2DCF3EDF1E60F157" Deprecated="False" filter="0" group="General">
                                <TunableTuple name="tag" class="CraftTaggedItemFactory" display="Tag" muid="67A00C065ED1199E" description="The object must have this tag." Deprecated="False" filter="0" group="General">
                                    <TunableList name="tag_set" class="TunableSet" display="Tag Set" muid="70164BCE7ABD65EC" description="The tag of objects we want to test ownership of" Deprecated="False" filter="0" group="General" unique_entries="true">
                                        <TunableEnum type="Tag" class="TunableEnumEntry" default="INVALID" muid="C5056C093B0F18B6" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="What tag to test for" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                    </TunableList>
                                    <TunableEnum type="TagTestType" name="test_type" class="TunableEnumEntry" default="CONTAINS_ANY_TAG_IN_SET" display="Test Type" muid="84F69D11275ED3E6" static_entries="objects-object_tests.TagTestType" description="How to test the tags in the tag set against the objects on the lot." Deprecated="False" filter="0" group="General" />
                                </TunableTuple>
                            </TunableTuple>
                        </TunableVariant>
                        <TunableList name="state_set" class="TunableSet" display="State Set" muid="DC257E74A5BBA8EB" Deprecated="False" filter="0" group="General" unique_entries="true">
                            <Tunable type="object_state" class="TunableReference" muid="8D88C6E63F890897" description="What state to test for." allow_none="False" Deprecated="False" filter="0" group="General" />
                        </TunableList>
                        <TunableEnum type="StateTestType" name="test_type" class="TunableEnumEntry" default="CONTAINS_ANY_STATE_IN_SET" display="Test Type" muid="3CBF7059E1495463" static_entries="objects-object_tests.StateTestType" description="How to test the states in the state set against the objects in&#xA;the inventory." Deprecated="False" filter="0" group="General" />
                    </TunableTuple>
                </TunableVariant>
                <TunableVariant type="None" name="object_tags" class="OptionalTunable" default="disabled" display="Object Tags" muid="D7D44AE1ABD5634F" description="Object tags for limiting test success to a subset of target &#xA;objects." Deprecated="False" filter="0" group="General">
                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="1A2962371809ED25" />
                    <TunableTuple name="enabled" class="TunableTuple" display="Enabled" muid="D1856BFB4242B180" description="Target object tags and how they are tested." Deprecated="False" filter="0" group="General">
                        <TunableList name="tag_set" class="TunableSet" display="Tag Set" muid="A2B45CB40133121D" description="A set of tags to test the target object for." Deprecated="False" filter="0" group="General" unique_entries="true">
                            <TunableEnum type="Tag" class="TunableEnumEntry" default="INVALID" muid="BBF2D191857C4ECC" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="A tag to test the target object for." Deprecated="False" filter="0" group="General" />
                        </TunableList>
                        <TunableEnum type="TagTestType" name="test_type" class="TunableEnumEntry" default="CONTAINS_ANY_TAG_IN_SET" display="Test Type" muid="E27ADA4ACE6B18A7" static_entries="objects-object_tests.TagTestType" description="How to test the tags in the tag set against the &#xA;target object." Deprecated="False" filter="0" group="General" />
                    </TunableTuple>
                </TunableVariant>
            </TunableTuple>
            <TunableEnum type="InteractionTestEvents" name="test_event" class="TunableEnumEntry" default="InteractionComplete" display="Test Event" muid="C77707091745922B" static_entries="event_testing-tests_with_data.InteractionTestEvents" description="The event that we want to trigger this instance of the tuned&#xA;test on.&#xA;InteractionStart: Triggers when the interaction starts.&#xA;InteractionComplete: Triggers when the interaction ends. This is best&#xA;used with a one shot interaction. It will not get called if an interaction&#xA;is canceled. If you have a Sim parked in an interaction that you can&#xA;only exit via cancel, you will not hit this.&#xA;InteractionUpdate: Triggers on a 15 sim minute cadence from the&#xA;start of the interaction.  If the interaction ends before a cycle&#xA;is up it does not trigger.  Do not use this for short interactions&#xA;as it has a possibility of never getting an update for an&#xA;interaction." Deprecated="False" filter="0" group="General" />
        </TunableTuple>

        <TunableList name="_post_tests" class="TunableSituationGoalActorObjectPostTestSet" display="Post Tests" muid="AE7013F4BCD72B0" description="A set of tests that must all pass when the player satisfies the goal_test &#xA;for the goal to be consider completed." Deprecated="False" filter="0" group="Tests">
            <TunableVariant type="None" class="TunableSituationGoalActorObjectPostTestVariant" default="none" muid="19EBAC2556DA4C19" description="A single tunable test." Deprecated="False" filter="0" group="General">
                <TunableTuple name="buff" class="TunableBuffTest" display="Buff" muid="9D256AEDDC54449C" description="Test whether or not a participant has or doesn't have specific buffs." Deprecated="False" filter="0" group="General">
                    <Tunable type="bool" name="apply_whitelist_on_individual_basis" class="Tunable" default="True" display="Apply Whitelist On Individual Basis" muid="6F7B86C3B2BDF919" description="If checked, will require that each target has at least one&#xA;whitelisted buff. If unchecked, will require only a single target to&#xA;have at least one whitelisted trait." Deprecated="False" filter="0" group="General" />
                    <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="5E42E7BE764852F2" description="The Sim must not have any buff in this list to pass the test." Deprecated="False" filter="0" group="General" unique_entries="true">
                        <Tunable type="buff" class="TunableReference" muid="D59AA0791CD76112" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                    </TunableList>
                    <TunableVariant type="None" name="whitelist" class="OptionalTunable" default="disabled" display="Whitelist" muid="85451FB4D9A0CAE8" description="If enabled, participant will test for buff's on the whitelist." Deprecated="False" filter="0" group="General">
                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="86BA70F416F0D604" />
                        <TunableList name="enabled" class="TunableSet" display="Enabled" muid="2E292D498D3588CE" description="The participant must have at least one buff in this list to pass the&#xA;test." Deprecated="False" filter="0" group="General" unique_entries="true">
                            <Tunable type="buff" class="TunableReference" muid="9219EDCB947FD116" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                        </TunableList>
                    </TunableVariant>
                </TunableTuple>
                <TunableTuple name="location" class="TunableLocationTest" display="Location" muid="56822211A6D0AE3A" description="Tests for object locations.&#xA;Outside: Check if an object is on the inside or outside (has a roof over&#xA;its head)&#xA;Natural ground: Checks the floor tiles where the object is to see if it &#xA;qualifies as natural ground" Deprecated="False" filter="0" group="General">
                    <TunableTuple name="location_tests" class="TunableTuple" display="Location Tests" muid="AE3B21BA49F90A66" Deprecated="False" filter="0" group="General">
                        <TunableVariant type="None" name="has_terrain_tag" class="OptionalTunable" default="Don't_Test" display="Has Terrain Tag" muid="C283671B6E77C563" description="If checked, will verify the subject of the test is currently on&#xA;the tuned terrain tag." Deprecated="False" filter="0" group="General">
                            <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="253529DD0CC1ABCB" />
                            <TunableTuple name="enabled" class="TunableTuple" display="Enabled" muid="8AAAEFA1C0332853" description=",&#xA;A set of terrain tags required for this test to pass." Deprecated="False" filter="0" group="General">
                                <Tunable type="bool" name="negate" class="Tunable" default="False" display="Negate" muid="E3B1E5E1A63AB5DD" description="If checked, the test will be inverted. In other words,&#xA;the test will fail if at least one tag is detected at&#xA;this location." Deprecated="False" filter="0" group="General" />
                                <TunableList name="terrain_tags" class="TunableEnumSet" display="Terrain Tags" muid="E7C2972F94D5F2E7" description="A set of terrain tags. Only one of these tags needs to be&#xA;present at this location. Although it is not tunable, there&#xA;is a threshold weight underneath which a terrain tag will&#xA;not appear to be present." Deprecated="False" filter="0" group="General" unique_entries="true">
                                    <TunableEnum type="TerrainTag" class="TunableEnumEntry" default="INVALID" muid="CEBE10BA72B853A0" static_entries="world-terrain_enums.TerrainTag" Deprecated="False" filter="0" group="General" />
                                </TunableList>
                                <Tunable type="bool" name="test_floor_tiles" class="Tunable" default="False" display="Test Floor Tiles" muid="1A7787EEFC85E0A9" description="If checked, floor tiles will be tested. Otherwise, &#xA;it'll only check the terrain and will ignore the &#xA;floor tiles on the terrain." Deprecated="False" filter="0" group="General" />
                            </TunableTuple>
                        </TunableVariant>
                        <TunableVariant type="None" name="in_common_area" class="OptionalTunable" default="Don't_Test" display="In Common Area" muid="AFE72928A8260F91" description="If checked, will verify the subject is in the common area&#xA;of an apartment.  If unchecked will verify the subject is not." Deprecated="False" filter="0" group="General">
                            <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="8498A513168EFD8" />
                            <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="746FF120A0AF5452" Deprecated="False" filter="0" group="General" />
                        </TunableVariant>
                        <TunableVariant type="None" name="is_fire_allowed" class="OptionalTunable" default="Don't_Test" display="Is Fire Allowed" muid="1E2A1D30B4DDD445" description="If checked, will verify if fire is possible at the subject's position. &#xA;If unchecked, will pass if fire is not possible.&#xA;If not enabled, doesn't care either way." Deprecated="False" filter="0" group="General">
                            <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="33244142260D61F1" />
                            <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="733663AB0DF215FF" Deprecated="False" filter="0" group="General" />
                        </TunableVariant>
                        <TunableVariant type="None" name="is_in_slot" class="OptionalTunable" default="Don't_Test" display="Is In Slot" muid="CF2069FC7BB111B9" description="If enabled will test if the object is attacked/deattached to&#xA;any of possible tuned slots.&#xA;If you tune a slot type set the test will test if the object &#xA;is slotted or not slotted into into any of those types. " Deprecated="False" filter="0" group="General">
                            <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="5FF27B958C1A134B" />
                            <TunableTuple name="enabled" class="TunableTuple" display="Enabled" muid="3548CCE92081E564" description="Test if an object is current slotted in any of a possible&#xA;list of slot types.&#xA;Empty slot type set is allowed for testing for slotted or&#xA;not slotted only." Deprecated="False" filter="0" group="General">
                                <TunableVariant type="None" name="slot_test_type" class="TunableVariant" default="any_slot" display="Slot Test Type" muid="B91BD687D4C81AB6" description="Strategy to test the slots:&#xA;Any Slot - is the object in any slot&#xA;Surface Slot - is object is in a surface slot&#xA;Specific Slot - is the object in specific list of slots" Deprecated="False" filter="0" group="General">
                                    <TunableTuple name="any_slot" class="TunableSlotTestType" display="Any Slot" muid="E4CCA5FA5DB408D7" description="Singleton factory for testing if object is slotted." Deprecated="False" filter="0" group="General">
                                        <Tunable type="bool" name="require_slotted" class="Tunable" default="True" display="Require Slotted" muid="E4FA870729440F57" description="If checked, return success if the object is slotted&#xA;If unchecked, test the absense of slotting." Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                    <TunableTuple name="specific_slot" class="TunableSpecificSlotTest" display="Specific Slot" muid="3EA4AAF8F70A68B8" description="Subclass of SlotTestType that can check against a specific&#xA;slot set." Deprecated="False" filter="0" group="General">
                                        <Tunable type="bool" name="require_slotted" class="Tunable" default="True" display="Require Slotted" muid="C462C27B79118597" description="If checked, return success if the object is slotted&#xA;If unchecked, test the absense of slotting." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="slot_type_set" name="specific_slot_set" class="TunableReference" display="Specific Slot Set" muid="F07AC024696F783B" description="Set of slots the object may be attached to." allow_none="False" Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                    <TunableTuple name="surface_slot" class="TunableSurfaceSlotTest" display="Surface Slot" muid="C7FF2FBC9E1690C3" description="Subclass of SlotTestType that checks that a slot has&#xA;is_surface set to true." Deprecated="False" filter="0" group="General">
                                        <Tunable type="bool" name="require_slotted" class="Tunable" default="True" display="Require Slotted" muid="CB8F8DDF758AD540" description="If checked, return success if the object is slotted&#xA;If unchecked, test the absense of slotting." Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                </TunableVariant>
                            </TunableTuple>
                        </TunableVariant>
                        <TunableVariant type="None" name="is_inside_building" class="OptionalTunable" default="Don't_Test" display="Is Inside Building" muid="587F555780A4E82" description="If checked, will verify if the subject of the test is inside a&#xA;building. This uses a client function that checks if the block&#xA;the sim is mostly enclosed by walls or if not, if the adjoining&#xA;blocks are themselves enclosed. This should be used when we&#xA;want to test if a subject is inside a normally constructed &#xA;building. If we simply want to test whether the subject is &#xA;covered / has a roof over them, use is_outside. See comment on&#xA;is_outside for more details. If unchecked, will negate this &#xA;test." Deprecated="False" filter="0" group="General">
                            <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="CFA7388B9248E7CD" />
                            <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="B9243C189E30DEC6" Deprecated="False" filter="0" group="General" />
                        </TunableVariant>
                        <TunableVariant type="None" name="is_natural_ground" class="OptionalTunable" default="Don't_Test" display="Is Natural Ground" muid="E5DB772434ADA3DE" description="If checked, will verify the subject of the test is on natural &#xA;ground (no floor tiles are under him).&#xA;Otherwise, will verify the subject of the test is not on &#xA;natural ground." Deprecated="False" filter="0" group="General">
                            <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="6B2B7448EAD2EAAF" />
                            <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="20AF1BCE9EDE1758" Deprecated="False" filter="0" group="General" />
                        </TunableVariant>
                        <TunableVariant type="None" name="is_on_active_lot" class="OptionalTunable" default="Don't_Test" display="Is On Active Lot" muid="5AE0EDA3CEA08BD7" description="If disabled the test will not be used.&#xA;If enabled and checked, the test will pass if the subject is&#xA;on the active lot. (their center is within the lot bounds)&#xA;If enabled and not checked, the test will pass if the subject is &#xA;outside of the active lot.&#xA;&#xA;For example, Ask To Leave is tuned with this enabled and checked&#xA;for the TargetSim. You can only ask someone to leave if they&#xA;are actually on the active lot, but not if they are wandering&#xA;around in the open streets." Deprecated="False" filter="0" group="General">
                            <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="4BF81800448D8AB" />
                            <TunableTuple name="Is_or_is_not_on_active_lot" class="TunableTuple" display="Is Or Is Not On Active Lot" muid="CD283F551EC8D2FC" Deprecated="False" filter="0" group="General">
                                <Tunable type="bool" name="include_spawn_point" class="Tunable" default="False" display="Include Spawn Point" muid="C0E426C7FAE8C74B" description="If set to true, we will consider the lot's spawn point as part of the active lot." Deprecated="False" filter="0" group="General" />
                                <Tunable type="bool" name="is_or_is_not_on_active_lot" class="Tunable" default="True" display="Is Or Is Not On Active Lot" muid="1A8EB4BDB053741" description="If checked then the test will pass if the subject is on&#xA;the active lot." Deprecated="False" filter="0" group="General" />
                                <TunableVariant type="None" name="tolerance" class="TunableVariant" default="explicit" display="Tolerance" muid="DB0930A3450248B3" Deprecated="False" filter="0" group="General">
                                    <Tunable type="int" name="explicit" class="Tunable" default="0" display="Explicit" muid="DD25388C3AAAF43C" description="The tolerance from the edge of the lot that the&#xA;location test will use in order to determine if the&#xA;test target is considered on lot or not." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                    <TunableTuple name="use_default_tolerance" class="UseDefaultOfflotToleranceFactory" display="Use Default Tolerance" muid="A020C433FFBB0C52" description="Use the default tuned global offlot tolerance tuned&#xA;in objects.components.statistic_component.Default Off Lot." Deprecated="False" filter="0" group="General" />
                                </TunableVariant>
                            </TunableTuple>
                        </TunableVariant>
                        <TunableVariant type="None" name="is_on_level" class="OptionalTunable" default="Don't_Test" display="Is On Level" muid="F7C7B158E98542E5" description="If enabled, we check the participant's current level against&#xA;the tuned threshold.  In the case of sims in pools, the effective&#xA;level will be that of the surface of the pool, not the bottom." Deprecated="False" filter="0" group="General">
                            <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="E8E8C289349FD207" />
                            <TunableTuple name="enabled" class="TunableThreshold" display="Enabled" muid="B10B028BDA557778" description="Value/comparison pair used to define a Threshold." Deprecated="False" filter="0" group="General">
                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="FB97A9D151FF5B61" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                <Tunable type="int" name="value" class="Tunable" default="0" display="Value" muid="7E0DB92DDB4D21ED" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                            </TunableTuple>
                        </TunableVariant>
                        <TunableVariant type="None" name="is_outside" class="OptionalTunable" default="Don't_Test" display="Is Outside" muid="85D00942561D535C" description="PLEASE BE AWARE. If checked, will verify if the subject of the&#xA;test does not have a roof over their head. If unchecked, will &#xA;test if the subject has a roof over their head. If the &#xA;intention is to determine if a subject is in/not in a building, &#xA;this test is deprecated in favor of is_inside_building. If you &#xA;would like to test if a subject is inside a building, but also &#xA;need to test if they have a roof over their head, please use &#xA;both options." Deprecated="False" filter="0" group="General">
                            <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="D1C265FF64840896" />
                            <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="74493319D96F8DCB" Deprecated="False" filter="0" group="General" />
                        </TunableVariant>
                        <TunableVariant type="None" name="is_venue_type" class="OptionalTunable" default="Don't_Test" display="Is Venue Type" muid="1A02CEC9F7A15E43" description="If checked, will verify if the subject is at a venue of the&#xA;specified type." Deprecated="False" filter="0" group="General">
                            <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="EE01CFFD810714D9" />
                            <TunableTuple name="enabled" class="TunableTuple" display="Enabled" muid="9F3624D32EC01371" description="Venue type required for this test to pass." Deprecated="False" filter="0" group="General">
                                <Tunable type="bool" name="negate" class="Tunable" default="False" display="Negate" muid="8531F0F63BFA06A1" description="If enabled, the test will return true if the subject&#xA;IS NOT at a venue of the specified type." Deprecated="False" filter="0" group="General" />
                                <Tunable type="bool" name="use_source_venue" class="Tunable" default="False" display="Use Source Venue" muid="9242CAF086AB88CF" description="If enabled, the test will test the source venue instead of the active&#xA;venue.  For example, the Community Lot instead of the active Marketplace.&#xA;Testing the active venue is the default." Deprecated="False" filter="0" group="General" />
                                <Tunable type="venue" name="venue_type" class="TunableReference" display="Venue Type" muid="A43F851B6BD26817" description="Venue type to test against." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                            </TunableTuple>
                        </TunableVariant>
                        <TunableVariant type="None" name="valid_surface_types" class="OptionalTunable" default="Don't_Test" display="Valid Surface Types" muid="9B0D5A3007551307" description="If enabled, we will test the surface type of the subject&#xA;against prohibited or required surface types." Deprecated="False" filter="0" group="General">
                            <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="1897B6DF4B3451E1" />
                            <TunableTuple name="Test_Surface_Types" class="TunableWhiteBlackList" display="Test Surface Types" muid="5806B8372D42CAAF" description="Required and Prohibited Surface Types. " Deprecated="False" filter="0" group="General">
                                <TunableVariant type="None" name="blacklist" class="OptionalTunable" default="nothing" display="Blacklist" muid="8FBEC6113C9D82D8" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is not in the blacklist. If no blacklist is&#xA;specified, no items are disallowed." Deprecated="False" filter="0" group="General">
                                    <Tunable name="nothing" class="TunableExistance" display="Nothing" muid="6EEBE426A38DEB04" />
                                    <TunableTuple name="specify" class="TunableBlacklist" display="Specify" muid="548359EE8013FE31" description="A tunable blacklist." Deprecated="False" filter="0" group="General">
                                        <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="44D6047A2B7474AC" description="Blacklisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                            <TunableEnum type="SurfaceType" class="TunableEnumEntry" default="SURFACETYPE_WORLD" muid="A6FC887C4CB4B33F" static_entries="routing.SurfaceType" description="Surface Type the object is placed on." Deprecated="False" filter="0" group="General" invalid_entries="SURFACETYPE_UNKNOWN" />
                                        </TunableList>
                                        <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="85FD4C228B6271D4" description="Tunable option for how many items must be in the blacklist&#xA;for the blacklist to fail when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                            <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="CE10A071A8B40481" />
                                            <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="9E9398C336A64F91" description="When testing a collection of items, the number of items in&#xA;that collection that are in the blacklist must pass this&#xA;threshold test for the blacklist to disallow them all." Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="E902A7CA83AF20E8" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="A77B1F701A636726" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                        </TunableVariant>
                                    </TunableTuple>
                                </TunableVariant>
                                <TunableVariant type="None" name="whitelist" class="OptionalTunable" default="everything" display="Whitelist" muid="D73C419375C9122F" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is in the whitelist. If no whitelist is&#xA;specified, all items are allowed." Deprecated="False" filter="0" group="General">
                                    <Tunable name="everything" class="TunableExistance" display="Everything" muid="7C55E296511DD8CC" />
                                    <TunableTuple name="specify" class="TunableWhitelist" display="Specify" muid="84FE5B0F239142C" description="A tunable whitelist." Deprecated="False" filter="0" group="General">
                                        <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="4CF244AC14A7A161" description="Tunable option for how many items must be in the whitelist&#xA;for the whitelist to pass when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                            <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="F4F6A9575F64DD4" />
                                            <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="1B74316DAB54ABA3" description="When testing a collection of items, the number of items in&#xA;that collection that are in the whitelist must pass this&#xA;threshold test for the whitelist to allow them all." Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="86CA278CB6BD4C86" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="784D37217FFCF3DC" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                        </TunableVariant>
                                        <TunableList name="whitelist" class="TunableSet" display="Whitelist" muid="E824CC338CBA9E89" description="Whitelisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                            <TunableEnum type="SurfaceType" class="TunableEnumEntry" default="SURFACETYPE_WORLD" muid="F98626A1C2CF6D26" static_entries="routing.SurfaceType" description="Surface Type the object is placed on." Deprecated="False" filter="0" group="General" invalid_entries="SURFACETYPE_UNKNOWN" />
                                        </TunableList>
                                    </TunableTuple>
                                </TunableVariant>
                            </TunableTuple>
                        </TunableVariant>
                    </TunableTuple>
                </TunableTuple>
                <TunableTuple name="mood" class="TunableMoodTest" display="Mood" muid="B73FCDBE97393013" description="A tunable test that tests if a Sim has the requested mood." Deprecated="False" filter="0" group="General">
                    <Tunable type="bool" name="disallow" class="Tunable" default="False" display="Disallow" muid="412FCC0548B7C30F" description="If True, this test will pass if the Sim's mood does NOT match the tuned mood reference." Deprecated="False" filter="0" group="General" />
                    <Tunable type="mood" name="mood" class="TunableReference" display="Mood" muid="E2271843D7571090" description="The mood that must be active (or must be inactive, if 'Disallow' is&#xA;checked)." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                </TunableTuple>
                <TunableTuple name="motive" class="TunableMotiveThresholdTest" display="Motive" muid="273A52D49FB14ADC" description="A tunable test method that checks one or many statistics against a threshold." Deprecated="False" filter="0" group="General">
                    <TunableList name="stats" class="TunableList" display="Stats" muid="740BEF0D541E0107" description="The stat we are operating on." Deprecated="False" filter="0" group="General">
                        <Tunable type="statistic" class="TunableReference" muid="DE2DF460EE8E2A1A" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                    </TunableList>
                    <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="2B269FA7877E538D" description="The threshold to control availability based on the statistic's value." Deprecated="False" filter="0" group="General">
                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="F70380BE9F244285" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                        <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="7530BE1A59CE1938" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                    </TunableTuple>
                </TunableTuple>
                <Tunable name="none" class="TunableExistance" display="None" muid="49F11BA43A6CECE4" />
                <TunableTuple name="object_criteria" class="TunableObjectCriteriaTest" display="Object Criteria" muid="D4DC5051A7B86D59" description="A test to look at all the objects and compare them to the tuned criteria." Deprecated="False" filter="0" group="General">
                    <Tunable type="bool" name="completed" class="Tunable" default="False" display="Completed" muid="11C7D5EAF812496" description="If checked, any craftable object (such as a painting) must be finished&#xA;for it to be considered." Deprecated="False" filter="0" group="General" />
                    <TunableVariant type="None" name="desired_state_threshold" class="OptionalTunable" default="disabled" display="Desired State Threshold" muid="859D5A68D0EF91C7" description="A state threshold that the object must satisfy for this test to pass" Deprecated="False" filter="0" group="General">
                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="A28B1C1201BF00B5" />
                        <TunableTuple name="enabled" class="TunableThreshold" display="Enabled" muid="E2F368F46D83FE58" description="A state threshold that the object must satisfy for this test to pass" Deprecated="False" filter="0" group="General">
                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="54A94C97C6C3FCDC" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                            <Tunable type="object_state" name="value" class="TunableReference" display="Value" muid="8E2BD9D9C132362F" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="ObjectStateValue" />
                        </TunableTuple>
                    </TunableVariant>
                    <TunableVariant type="None" name="identity_test" class="TunableVariant" default="no_identity_test" display="Identity Test" muid="6D2E7BF9D481F3FE" description="Which test to run on the object in order to determine &#xA;if it matches or not." Deprecated="False" filter="0" group="General">
                        <TunableTuple name="definition_id" class="TunableObjectTypeFactory" display="Definition Id" muid="BFA9FED179E172B9" Deprecated="False" filter="0" group="General">
                            <Tunable type="object" name="actual_object" class="TunableReference" display="Actual Object" muid="9DF2734F3CDE1D11" description="The object we want to test ownership of" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                        </TunableTuple>
                        <Tunable name="no_identity_test" class="TunableExistance" display="No Identity Test" muid="1B73CE0B51877835" />
                        <TunableTuple name="tags" class="TunableObjectTagFactory" display="Tags" muid="B13B8A88343339D4" Deprecated="False" filter="0" group="General">
                            <TunableList name="tag_set" class="TunableSet" display="Tag Set" muid="7659815171CE6182" Deprecated="False" filter="0" group="General" unique_entries="true">
                                <TunableEnum type="Tag" class="TunableEnumEntry" default="INVALID" muid="7D89F4B38FC91563" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="What tag to test for." Deprecated="False" filter="0" group="General" pack_safe="True" />
                            </TunableList>
                            <TunableEnum type="TagTestType" name="test_type" class="TunableEnumEntry" default="CONTAINS_ANY_TAG_IN_SET" display="Test Type" muid="FC5C0718FABB087A" static_entries="objects-object_tests.TagTestType" description="How to test the tags in the tag set against the objects on the lot." Deprecated="False" filter="0" group="General" />
                        </TunableTuple>
                        <TunableTuple name="trending" class="TunableObjectTrendingFactory" display="Trending" muid="504164C6FFD2EF8F" Deprecated="False" filter="0" group="General" />
                    </TunableVariant>
                    <Tunable type="bool" name="on_active_lot" class="Tunable" default="False" display="On Active Lot" muid="A77E96127D28EBB3" description="If checked, test whether or not the object is on the active&#xA;lot. If unchecked the object can be either on the active lot or&#xA;in the open streets area, we don't really care." Deprecated="False" filter="0" group="General" />
                    <Tunable type="bool" name="owned" class="Tunable" default="True" display="Owned" muid="F3FF703E5E661418" description="If checked will test if the object is owned by the active &#xA;household. If unchecked it doesn't matter who owns the object or&#xA;if it is owned at all." Deprecated="False" filter="0" group="General" />
                    <TunableVariant type="None" name="positional_relationship_test" class="TunableVariant" default="no_positional_relationship_test" display="Positional Relationship Test" muid="D0844EA77F2CAD9B" description="The type of positional relationship test to run on the object with respect to &#xA;another object." Deprecated="False" filter="0" group="General">
                        <Tunable name="no_positional_relationship_test" class="TunableExistance" display="No Positional Relationship Test" muid="227BE6AEE4C7EAC8" />
                        <TunableTuple name="radius_test" class="Tunable_RadiusFactory" display="Radius Test" muid="3B9D68FF441BC1C3" description="The object must be within a certain radius of a&#xA;tuned participant in order for the test to pass." Deprecated="False" filter="0" group="General">
                            <Tunable type="float" name="radius" class="TunableDistanceSquared" default="5.0" display="Radius" muid="82C1148FEEB97C7D" description="The radius, with the radius actor's position, that defines&#xA;the area within which the object is valid." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                            <TunableEnum type="ParticipantType" name="radius_actor" class="TunableEnumEntry" default="ParticipantTypeSingle.Object" display="Radius Actor" muid="75E30AF05AADF234" static_entries="interactions.ParticipantType" description="The actor whose position, with the radius, defines the&#xA;area within which the object is valid." Deprecated="False" filter="0" group="General" />
                        </TunableTuple>
                        <TunableTuple name="tagged_object_on_same_level_test" class="Tunable_TaggedObjectOnSameLevelFactory" display="Tagged Object On Same Level Test" muid="27E6F77A812BEE14" description="The object must has at least one object with a tuned tag on the&#xA;same level as a tuned participant in order for the test to pass." Deprecated="False" filter="0" group="General">
                            <TunableEnum type="ParticipantType" name="subject" class="TunableEnumEntry" default="ParticipantTypeSingle.Object" display="Subject" muid="26E281A44A27D58E" static_entries="interactions.ParticipantType" description="The participant to test against. " Deprecated="False" filter="0" group="General" />
                            <TunableEnum type="Tag" name="tag" class="TunableTag" default="INVALID" display="Tag" muid="AA3BE6C1A6DCC417" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="A single tag to find an object matching to test against the participant. " Deprecated="False" dynamic_entries_prefix="" filter="0" group="General" invalid_entries="INVALID" pack_safe="True" />
                        </TunableTuple>
                    </TunableVariant>
                    <TunableVariant type="None" name="sim_ownership" class="OptionalTunable" default="disabled" display="Sim Ownership" muid="DEC839FCDCAF1BA3" description="If enabled, test whether or not the object is owned by the active &#xA;Sim.  If checked, test will pass if the Sim owns the object." Deprecated="False" filter="0" group="General">
                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="A8899C1F268FF890" />
                        <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="A883277C6FC03C81" Deprecated="False" filter="0" group="General" />
                    </TunableVariant>
                    <TunableVariant type="None" name="subject_specific_tests" class="TunableVariant" default="all_objects" display="Subject Specific Tests" muid="18CF74F19205F533" Deprecated="False" filter="0" group="General">
                        <TunableTuple name="all_objects" class="TunableTuple" display="All Objects" muid="EE56618C5DEF09D" Deprecated="False" filter="0" group="General">
                            <TunableTuple name="quantity" class="TunableThreshold" display="Quantity" muid="C9E5D5200EF3E0BC" description="The number of objects that meet the tuned critera needed to pass this&#xA;test. quantity is run after a list of matching objects is created&#xA;using the tuned criteria." Deprecated="False" filter="0" group="General">
                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="AA3374952ACAEC45" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                <Tunable type="float" name="value" class="Tunable" default="1" display="Value" muid="E97F80DF019A418B" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                            </TunableTuple>
                            <TunableVariant type="None" name="total_value" class="OptionalTunable" default="disabled" display="Total Value" muid="58B7C0870FBCDDCA" description="If set, the total monetary value of all the objects that meet the tuned &#xA;criteria needed in order to pass this test. total_value is run after &#xA;a list of matching objects is created using the tuned criteria." Deprecated="False" filter="0" group="General">
                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="843BAEF776B6561E" />
                                <TunableTuple name="enabled" class="TunableThreshold" display="Enabled" muid="1ED74DED5ACA6397" description="If set, the total monetary value of all the objects that meet the tuned &#xA;criteria needed in order to pass this test. total_value is run after &#xA;a list of matching objects is created using the tuned criteria." Deprecated="False" filter="0" group="General">
                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="616E62CE7801E768" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                    <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="6A1D92F18B321621" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                </TunableTuple>
                            </TunableVariant>
                        </TunableTuple>
                        <TunableTuple name="single_object" class="TunableTuple" display="Single Object" muid="5ABED319EAAF25F6" Deprecated="False" filter="0" group="General">
                            <TunableEnum type="ParticipantType" name="target" class="TunableEnumEntry" default="Object" display="Target" muid="581984AE1D4B2795" static_entries="interactions.ParticipantType" description="If set this test will loop through the specified participants and&#xA;run the object identity and criteria tests on them instead of all&#xA;of the objects on the lot." Deprecated="False" filter="0" group="General" />
                        </TunableTuple>
                    </TunableVariant>
                    <TunableList name="test_events" class="TunableList" display="Test Events" muid="8197C7ADB72D767F" description="The list of events that trigger this instance of the tuned test on.&#xA;&#xA;If you pick ObjectStateChange, the test will be registered with&#xA;EventManager for every ObjectStateValue managed by ObjectState&#xA;controlling the desired_state_threshold. E.g. if the test cares&#xA;about BrokenState_Broken, we will register tolisten for events for&#xA;state changes of BrokenState_Broken, BrokenState_Unbroken,&#xA;BrokenState_Repairing, etc." Deprecated="False" filter="0" group="General">
                        <TunableEnum type="ObjectCriteriaTestEvents" class="TunableEnumEntry" default="AllObjectEvents" muid="97C59D034CC9C097" static_entries="objects-object_tests.ObjectCriteriaTestEvents" Deprecated="False" filter="0" group="General" />
                    </TunableList>
                    <Tunable type="bool" name="use_depreciated_values" class="Tunable" default="False" display="Use Depreciated Values" muid="332F90E84B5BAEE8" description="If checked, the value consideration for each checked object will at its depreciated amount.&#xA;This affects the &quot;All Objects&quot; test type, changing the total value considered to be at the&#xA;non-depreciated amount." Deprecated="False" filter="0" group="General" />
                    <TunableVariant type="None" name="value" class="OptionalTunable" default="disabled" display="Value" muid="C02237F3BBE524F5" description="A threshold test for the monetary value of a single object in order for it&#xA;to be considered." Deprecated="False" filter="0" group="General">
                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="3289BD108AF81A51" />
                        <TunableTuple name="enabled" class="TunableTuple" display="Enabled" muid="861EAB7C8B1DF48B" Deprecated="False" filter="0" group="General">
                            <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="E7A1E603824D5FDB" description="Value/comparison pair used to define a Threshold." Deprecated="False" filter="0" group="General">
                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="65B4261082EF7209" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="FA7268D5F244857E" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                            </TunableTuple>
                            <TunableVariant type="None" name="value_to_check" class="TunableVariant" default="catalog_value" display="Value To Check" muid="C32FADFC8EBEC49C" Deprecated="False" filter="0" group="General">
                                <Tunable name="catalog_value" class="TunableExistance" display="Catalog Value" muid="912D90788CE64138" />
                                <Tunable name="current_value" class="TunableExistance" display="Current Value" muid="44AB95DD0D9A0F2F" />
                                <Tunable name="depreciated_value" class="TunableExistance" display="Depreciated Value" muid="9237BC12882BD9FB" />
                            </TunableVariant>
                        </TunableTuple>
                    </TunableVariant>
                </TunableTuple>
                <TunableTuple name="sim_info" class="TunableSimInfoTest" display="Sim Info" muid="2ABDBEC0546F0B6E" description="The SimInfo tests some of the basic aspects of a Sim, such as their age,&#xA;gender, or species." Deprecated="False" filter="0" group="General">
                    <TunableVariant type="None" name="ages" class="OptionalTunable" default="unspecified" display="Ages" muid="4752A541C0F1E157" description="The Sim must be one of the specified ages." Deprecated="False" filter="0" group="General">
                        <TunableList name="specified" class="TunableEnumSet" default="TEEN,YOUNGADULT,ADULT,ELDER" display="Specified" muid="7FBCB34618B5367E" description="The Sim must be one of the specified ages." Deprecated="False" filter="0" group="General" unique_entries="true">
                            <TunableEnum type="Age" class="TunableEnumEntry" default="ADULT" muid="D7E69253A435D7C9" static_entries="sims-sim_info_types.Age" Deprecated="False" filter="0" group="General" />
                        </TunableList>
                        <Tunable name="unspecified" class="TunableExistance" display="Unspecified" muid="4BEDAC71D645F07C" />
                    </TunableVariant>
                    <TunableVariant type="None" name="can_age_up" class="OptionalTunable" default="unspecified" display="Can Age Up" muid="F8177CBF0F3F9015" description="Whether the Sim is eligible to advance to the next age." Deprecated="False" filter="0" group="General">
                        <Tunable type="bool" name="specified" class="Tunable" default="None" display="Specified" muid="B94BD76CF790B52A" description="Whether the Sim is eligible to advance to the next age." Deprecated="False" filter="0" group="General" />
                        <Tunable name="unspecified" class="TunableExistance" display="Unspecified" muid="D949A479D8AC602E" />
                    </TunableVariant>
                    <TunableVariant type="None" name="gender" class="OptionalTunable" default="unspecified" display="Gender" muid="28F76847A571436D" description="The Sim must be of the specified gender." Deprecated="False" filter="0" group="General">
                        <TunableEnum type="Gender" name="specified" class="TunableEnumEntry" default="None" display="Specified" muid="B9BD2BD9140A50D7" static_entries="sims-sim_info_types.Gender" description="The Sim must be of the specified gender." Deprecated="False" filter="0" group="General" />
                        <Tunable name="unspecified" class="TunableExistance" display="Unspecified" muid="CF5F5AC7462BE4DC" />
                    </TunableVariant>
                    <TunableVariant type="None" name="has_been_played" class="OptionalTunable" default="disabled" display="Has Been Played" muid="81780D995882FF73" description="Whether the Sim has ever been played as a Playable Sim.&#xA;If enabled and true, the Sim must have been played by the player.&#xA;If enabled and false, the Sim must never have been played.&#xA;If disabled, this portion of the Sim Info test will be ignored." Deprecated="False" filter="0" group="General">
                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="20D559BC561FC1B4" />
                        <Tunable type="bool" name="enabled" class="Tunable" default="False" display="Enabled" muid="9FAF13849EB7EABB" description="Whether the Sim has ever been played as a Playable Sim.&#xA;If enabled and true, the Sim must have been played by the player.&#xA;If enabled and false, the Sim must never have been played.&#xA;If disabled, this portion of the Sim Info test will be ignored." Deprecated="False" filter="0" group="General" />
                    </TunableVariant>
                    <TunableVariant type="None" name="is_active_sim" class="OptionalTunable" default="disabled" display="Is Active Sim" muid="B6F2A04267976C2" description="Whether the Sim must be the active selected Sim.&#xA;If enabled and true, the sim must active for this test to pass.&#xA;If enabled and false, the sim must not be active for this test to pass.&#xA;If disabled, this portion of the Sim Info test will be ignored." Deprecated="False" filter="0" group="General">
                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="CC7931A3015D7BC9" />
                        <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="32C74AAFD23860FE" description="Whether the Sim must be the active selected Sim.&#xA;If enabled and true, the sim must active for this test to pass.&#xA;If enabled and false, the sim must not be active for this test to pass.&#xA;If disabled, this portion of the Sim Info test will be ignored." Deprecated="False" filter="0" group="General" />
                    </TunableVariant>
                    <TunableEnum type="MatchType" name="match_type" class="TunableEnumEntry" default="MATCH_ALL" display="Match Type" muid="DCE505E7BC0418C7" static_entries="sims-sim_info_tests.MatchType" description="When testing multiple participants if MATCH_ALL is set, then all the&#xA;participants need to pass the test.&#xA; &#xA;If MATCH_ANY is set, test will pass as soon as one of them meet the&#xA;criteria" Deprecated="False" filter="0" group="General" />
                    <TunableVariant type="None" name="npc" class="OptionalTunable" default="disabled" display="Npc" muid="14AC39BE74F6F623" description="Whether the Sim must be an NPC or Playable Sim.&#xA;If enabled and true, the sim must be an NPC for this test to pass.&#xA;If enabled and false, the sim must be playable, non-NPC sim for this test to pass.&#xA;If disabled, this portion of the Sim Info test will be ignored.&#xA;&#xA;Note: NPC in this case means a Sim that is not currently&#xA;controllable (selectable), or Not Player Controllable. If you&#xA;need to know if the Sim has ever been played, use 'Has Been&#xA;Played'" Deprecated="False" filter="0" group="General">
                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="A7A3F663BB391373" />
                        <Tunable type="bool" name="enabled" class="Tunable" default="False" display="Enabled" muid="EE40357E4EC2F611" description="Whether the Sim must be an NPC or Playable Sim.&#xA;If enabled and true, the sim must be an NPC for this test to pass.&#xA;If enabled and false, the sim must be playable, non-NPC sim for this test to pass.&#xA;If disabled, this portion of the Sim Info test will be ignored.&#xA;&#xA;Note: NPC in this case means a Sim that is not currently&#xA;controllable (selectable), or Not Player Controllable. If you&#xA;need to know if the Sim has ever been played, use 'Has Been&#xA;Played'" Deprecated="False" filter="0" group="General" />
                    </TunableVariant>
                    <TunableVariant type="None" name="species" class="TunableVariant" default="unspecified" display="Species" muid="D887DFAAAE148763" Deprecated="False" filter="0" group="General">
                        <TunableTuple name="specified" class="Tunable_SpeciesTestSpecies" display="Specified" muid="79B8E3013CD3F544" description="The Sim must be one of the specified species. Species are consolidated, e.g.&#xA;large/small dog are both DOG." Deprecated="False" filter="0" group="General">
                            <TunableList name="species" class="TunableEnumSet" display="Species" muid="67A3823760D2714C" description="The Sim must be one of the specified species. Species are&#xA;consolidated, e.g. large/small dog are both DOG." Deprecated="False" filter="0" group="General" unique_entries="true">
                                <TunableEnum type="Species" class="TunableEnumEntry" default="HUMAN" muid="30E66F2A5013FF9D" static_entries="sims-sim_info_types.Species" Deprecated="False" filter="0" group="General" invalid_entries="INVALID" />
                            </TunableList>
                        </TunableTuple>
                        <TunableTuple name="specified_extended" class="Tunable_SpeciesTestExtendedSpecies" display="Specified Extended" muid="FE54DB8ADC48E9AF" description="The Sim must be one of the specified species. Species are *not* consolidated,&#xA;e.g. large/small dog are different species." Deprecated="False" filter="0" group="General">
                            <TunableList name="species" class="TunableEnumSet" display="Species" muid="4589D4FCC3D7DDAE" description="The Sim must be one of the specified species. Species are *not*&#xA;consolidated, e.g. large/small dog are different species." Deprecated="False" filter="0" group="General" unique_entries="true">
                                <TunableEnum type="SpeciesExtended" class="TunableEnumEntry" default="Species.HUMAN" muid="93F30D1F6483C46D" static_entries="sims-sim_info_types.SpeciesExtended" Deprecated="False" filter="0" group="General" invalid_entries="INVALID" />
                            </TunableList>
                        </TunableTuple>
                        <Tunable name="unspecified" class="TunableExistance" display="Unspecified" muid="21B3E4D0F57D1F91" />
                    </TunableVariant>
                </TunableTuple>
                <TunableTuple name="situation_job" class="TunableSituationJobTest" display="Situation Job" muid="E642C850341A708B" description="Require the tuned participant to have a specific situation job.&#xA;If multiple participants, ALL participants must have the required&#xA;job to pass." Deprecated="False" filter="0" group="General">
                    <Tunable type="bool" name="negate" class="Tunable" default="False" display="Negate" muid="B31AA5BAD9BFBC13" description="If checked then the test result will be reversed, so it will&#xA;test to see if they are not in a job or not in role state&#xA;that has matching tags." Deprecated="False" filter="0" group="General" />
                    <TunableList name="role_tags" class="TunableSet" display="Role Tags" muid="42904D205E1F8173" description="The  participant must have a job that matches the role_tags or&#xA;have the situation_job." Deprecated="False" filter="0" group="General" unique_entries="true">
                        <TunableEnum type="Tag" class="TunableEnumEntry" default="INVALID" muid="4C8F3FB4102D26E4" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" Deprecated="False" filter="0" group="General" pack_safe="True" />
                    </TunableList>
                    <TunableList name="situation_jobs" class="TunableSet" display="Situation Jobs" muid="3CC3362657551C91" description="The participant must have this job in this list or a job that&#xA;matches the role_tags." Deprecated="False" filter="0" group="General" unique_entries="true">
                        <Tunable type="situation_job" class="TunableReference" muid="63BEB153EFD517B9" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                    </TunableList>
                </TunableTuple>
                <TunableTuple name="skill_tag" class="TunableSkillTagThresholdTest" display="Skill Tag" muid="42D5B27CA3CF72A" description="A tunable test method that checks the TAGS of ALL THE PARTICIPANTS SKILLS each against a threshold." Deprecated="False" filter="0" group="General">
                    <Tunable type="int" name="skill_quantity" class="Tunable" default="0" display="Skill Quantity" muid="F958AACC23C048A5" description="The minimum number of skills at or above this level required to pass." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                    <TunableEnum type="Tag" name="skill_tag" class="TunableEnumEntry" default="INVALID" display="Skill Tag" muid="7567D947EBF42A5A" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="What tag to test for." Deprecated="False" filter="0" group="General" invalid_entries="INVALID" />
                    <TunableTuple name="skill_threshold" class="TunableThreshold" display="Skill Threshold" muid="B62FB5F756B94F1B" description="The threshold level to test of each skill." Deprecated="False" filter="0" group="General">
                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="8F3B8F28A6252C3A" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                        <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="51057045E4D5E84A" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                    </TunableTuple>
                    <Tunable type="bool" name="test_only_changed_skill" class="Tunable" default="False" display="Test Only Changed Skill" muid="160B4AC5BA446277" description="If checked then we will only test the skill that actually changed." Deprecated="False" filter="0" group="General" />
                </TunableTuple>
                <TunableTuple name="state" class="TunableStateTest" display="State" muid="ECE7FDBB41459936" description="Gate availability by object state.  By default, the test will use the&#xA;state's linked stat as a fallback in case the target doesn't have the&#xA;state involved." Deprecated="False" filter="0" group="General">
                    <TunableVariant type="None" name="fallback_behavior" class="TunableVariant" default="always_fail" display="Fallback Behavior" muid="5FDE52FAA08D811A" description="What to do if the given object doesn't have the state in question." Deprecated="False" filter="0" group="General">
                        <Tunable name="always_fail" class="TunableExistance" display="Always Fail" muid="527CAB066541020B" />
                        <Tunable name="always_pass" class="TunableExistance" display="Always Pass" muid="325AD043F1FECFFE" />
                    </TunableVariant>
                    <TunableEnum type="Operator" name="operator" class="TunableOperator" default="EQUAL" display="Operator" muid="4C03E7A6BCD3B40" static_entries="sims4-math.Operator" description="The comparison to use." Deprecated="False" filter="0" group="General" />
                    <Tunable type="object_state" name="value" class="TunableReference" display="Value" muid="44A36FD239A9EF03" description="The value to compare to." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="ObjectStateValue" />
                </TunableTuple>
                <TunableTuple name="statistic" class="TunableStatThresholdTest" display="Statistic" muid="AB6CE3D45F807A2" description="A test that checks whether or not a statistic is at a certain threshold for&#xA;a given participant. It can also test whether or not the participant has the&#xA;statistic explicitly added on them." Deprecated="False" filter="0" group="General">
                    <Tunable type="bool" name="must_have_stat" class="Tunable" default="False" display="Must Have Stat" muid="BE3B6A85EA9BFC9E" description="Setting this to True (checked) will ensure that this test only&#xA;passes if the tested Sim actually has the statistic referenced. If&#xA;left False (unchecked), this test will evaluate as if the Sim had&#xA;the statistic at the value of 0" Deprecated="False" filter="0" group="General" />
                    <TunableVariant type="None" name="score_to_use" class="TunableVariant" default="user_value" display="Score To Use" muid="E611A008EF0DC4DD" description="Depending on the choice, this decides what value to use for the &#xA;threshold comparison." Deprecated="False" filter="0" group="General">
                        <TunableTuple name="points" class="Tunable_PointsValue" display="Points" muid="C23437966DF60581" description="Use the raw points for the comparison in the test." Deprecated="False" filter="0" group="General" />
                        <TunableTuple name="rank" class="Tunable_RankValue" display="Rank" muid="2A719C038D8B7969" description="Use the rank value for the comparison in the test." Deprecated="False" filter="0" group="General" />
                        <TunableTuple name="user_value" class="Tunable_UserValue" display="User Value" muid="6FDB3529BA6AB061" description="Use the user value for the comparison in the test." Deprecated="False" filter="0" group="General">
                            <Tunable type="bool" name="highest_level_reached_instead" class="Tunable" default="False" display="Highest Level Reached Instead" muid="F0EFA74708DD55A6" description="If checked this will test against the highest level reached. This&#xA;currently only works with Ranked Statistics. Other statistics do&#xA;not have a notion of highest level reached. If we are using&#xA;something that doesn't support highest level reached it will &#xA;test against the current level instead." Deprecated="False" filter="0" group="General" />
                        </TunableTuple>
                    </TunableVariant>
                    <Tunable type="statistic" name="stat" class="TunableReference" display="Stat" muid="F880121BF722346A" description="The stat we are operating on." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                    <TunableVariant type="None" name="threshold" class="TunableVariant" default="value_threshold" display="Threshold" muid="515B71026CD61A20" description="The value or state threshold to test against." Deprecated="False" filter="0" group="General">
                        <TunableTuple name="state_value_threshold" class="TunableObjectStateValueThreshold" display="State Value Threshold" muid="E6206F9FEB4A4F97" description="Value/comparison pair used to define a Threshold." Deprecated="False" filter="0" group="General">
                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="9269ED3C6B7AA6BC" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                            <Tunable type="object_state" name="value" class="TunableReference" display="Value" muid="DF0EB909CB7F6DD3" description="The state threshold for this test." allow_none="False" Deprecated="False" filter="0" group="General" restrict="ObjectStateValue" />
                        </TunableTuple>
                        <TunableTuple name="value_threshold" class="TunableThreshold" display="Value Threshold" muid="2AD178DE9319E730" description="The threshold to control availability based on the statistic's&#xA;value." Deprecated="False" filter="0" group="General">
                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="27904EE9DB123EAD" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                            <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="F17B868777D6F25E" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                        </TunableTuple>
                    </TunableVariant>
                </TunableTuple>
                <TunableTuple name="topic" class="TunableTopicTest" display="Topic" muid="2C077160EA096AF2" description="Gate topics of the actor or target Sim." Deprecated="False" filter="0" group="General">
                    <TunableList name="blacklist_topics" class="TunableList" display="Blacklist Topics" muid="4C6C05DDCEA594D4" description="The Sim cannot have any topic contained in this list to pass this test." Deprecated="False" filter="0" group="General">
                        <Tunable type="topic" class="TunableReference" muid="BAF7BBDFFB6144E4" allow_none="False" Deprecated="False" filter="0" group="General" />
                    </TunableList>
                    <TunableList name="whitelist_topics" class="TunableList" display="Whitelist Topics" muid="9DF116ECE3D1AA0E" description="The Sim must have any topic in this list to pass this test." Deprecated="False" filter="0" group="General">
                        <Tunable type="topic" class="TunableReference" muid="EAB92ED628CC5AA4" allow_none="False" Deprecated="False" filter="0" group="General" />
                    </TunableList>
                </TunableTuple>
                <TunableTuple name="trait" class="TunableTraitTest" display="Trait" muid="D79F61D9EF05686E" description="Test to require a Sim to have or not have certain specific traits." Deprecated="False" filter="0" group="General">
                    <Tunable type="bool" name="apply_thresholds_on_individual_basis" class="Tunable" default="True" display="Apply Thresholds On Individual Basis" muid="FB13687A37B9787F" description="If checked then Num Whitelist Required and Num Blacklist Allowed&#xA;will be applied to each individual participant from the subject.&#xA;If unchecked then it will apply the values to the total whitelist&#xA;and blacklist matches on the group.&#xA;&#xA;IMPORTANT!!!&#xA;In the case of objectives this should probably be set to false&#xA;since we know that this is coming from only one sim and that we&#xA;want to use the value that comes out of the test result numeric.&#xA;This isn't just locked to being this value since there are valid&#xA;cases within that system when you are looking at a group of sims&#xA;and could want to test that one of your sims passes.  Ex. Having&#xA;a ghost sim in the household." Deprecated="False" filter="0" group="General" />
                    <TunableList name="blacklist_trait_types" class="TunableEnumSet" display="Blacklist Trait Types" muid="4F744B7FE48A056B" description="The Sim is required to not have traits of these types to pass this &#xA;test. Should Num Blacklist Allowed be specified, then the Sim is &#xA;allowed to have up to that amount of blacklisted traits before &#xA;failing this test." Deprecated="False" filter="0" group="General" unique_entries="true">
                        <TunableEnum type="TraitType" class="TunableEnumEntry" default="PERSONALITY" muid="21327EAC6E9C88A4" static_entries="traits-trait_type.TraitType" Deprecated="False" filter="0" group="General" />
                    </TunableList>
                    <TunableList name="blacklist_traits" class="TunableList" display="Blacklist Traits" muid="E99A42B434FAB532" description="The is required to not have traits from this list in order to pass&#xA;this test. Should num_blacklist_allowed be specified, then the Sim&#xA;is allowed to have up to that amount of blacklisted traits before&#xA;failing this test." Deprecated="False" filter="0" group="General">
                        <Tunable type="trait" class="TunableReference" muid="24D5552A25F4FD01" description="A blacklist trait." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                    </TunableList>
                    <Tunable type="int" name="num_blacklist_allowed" class="Tunable" default="0" display="Num Blacklist Allowed" muid="E8A7B9CFECA5E493" description="The threshold of blacklist traits owned by the specified Sim that&#xA;will trigger a test failure." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                    <Tunable type="int" name="num_whitelist_required" class="Tunable" default="1" display="Num Whitelist Required" muid="E2B2EF83EDF22DD4" description="The number of whitelist traits that the specified Sim is required to&#xA;have in order to pass this test." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                    <TunableList name="whitelist_trait_types" class="TunableEnumSet" display="Whitelist Trait Types" muid="316F96FFB962A643" description="The Sim is required to have the specified number of traits with &#xA;these types in order to pass the test." Deprecated="False" filter="0" group="General" unique_entries="true">
                        <TunableEnum type="TraitType" class="TunableEnumEntry" default="PERSONALITY" muid="565BE25031A3888C" static_entries="traits-trait_type.TraitType" Deprecated="False" filter="0" group="General" />
                    </TunableList>
                    <TunableList name="whitelist_traits" class="TunableList" display="Whitelist Traits" muid="C95664DF7F84A318" description="The Sim is required to have the specified number of traits from this&#xA;list in order to pass the test." Deprecated="False" filter="0" group="General">
                        <Tunable type="trait" class="TunableReference" muid="9AB9BF4D52536E64" description="A whitelist trait. Please note: for pack-safe entries that are&#xA;not loaded, the game will behave as if the entry doesn't exist.&#xA;This allows you to specify a pack trait and required count of 1&#xA;and always fail the test should the appropriate pack not be&#xA;installed." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                    </TunableList>
                </TunableTuple>
            </TunableVariant>
        </TunableList>
    </Instance>

    <VersionHistory>
        <ActionList>
            <Action type="kRename" old_muid="99A153E52BAA4879" new_muid="4E9E017E584C220F" />
        </ActionList>

        <ActionList>
            <Action type="kRemove" old_muid="1416B47F8D0691FE" />
        </ActionList>
    </VersionHistory>
</TuningRoot>