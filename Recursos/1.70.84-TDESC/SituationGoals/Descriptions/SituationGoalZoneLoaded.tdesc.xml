<?xml version="1.0" encoding="iso-8859-1"?>

<TuningRoot>
    <Instance instance_type="situation_goal" class="SituationGoalZoneLoaded" module="situations.situation_goal_zone_loaded" muid="DADC0123F3B44C7F" description="Situation Goal for running post tests upon traveling to the zone, ran directly after loading screen is lifted." instance_needs_reference="True" instance_subclasses_only="False" parents="SituationGoal" path="SituationGoals\Descriptions" use_guid_for_reference="True">
        <TunableList name="_post_tests" class="TunableSituationGoalActorPostTestSet" display="Post Tests" muid="8AA0F7280D3AC8" description="A set of tests that must all pass when zone has finished loading." Deprecated="False" filter="0" group="Tests">
            <TunableVariant type="None" class="TunableSituationGoalActorPostTestVariant" default="none" muid="60FC75C18CDA88F3" description="A single tunable test." Deprecated="False" filter="0" group="General">
                <TunableTuple name="buff" class="TunableBuffTest" display="Buff" muid="32C62604B01640EA" description="Test whether or not a participant has or doesn't have specific buffs." Deprecated="False" filter="0" group="General">
                    <Tunable type="bool" name="apply_whitelist_on_individual_basis" class="Tunable" default="True" display="Apply Whitelist On Individual Basis" muid="8576836836164566" description="If checked, will require that each target has at least one&#xA;whitelisted buff. If unchecked, will require only a single target to&#xA;have at least one whitelisted trait." Deprecated="False" filter="0" group="General" />
                    <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="272562A6FF677408" description="The Sim must not have any buff in this list to pass the test." Deprecated="False" filter="0" group="General" unique_entries="true">
                        <Tunable type="buff" class="TunableReference" muid="F4EF7FDE972BD61" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                    </TunableList>
                    <TunableVariant type="None" name="whitelist" class="OptionalTunable" default="disabled" display="Whitelist" muid="5653BF1259F871A" description="If enabled, participant will test for buff's on the whitelist." Deprecated="False" filter="0" group="General">
                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="3A14AC31CE288BE3" />
                        <TunableList name="enabled" class="TunableSet" display="Enabled" muid="9D7C93876F3F50F3" description="The participant must have at least one buff in this list to pass the&#xA;test." Deprecated="False" filter="0" group="General" unique_entries="true">
                            <Tunable type="buff" class="TunableReference" muid="E7A3DD0C37656C7E" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                        </TunableList>
                    </TunableVariant>
                </TunableTuple>
                <TunableTuple name="career" class="TunableTunableCareerTest" display="Career" muid="85ADDE6340A51557" description="Tunable test for what careers a Sim has.&#xA;&#xA;subjects: A ParticipantType used for choosing whom to run the test on.&#xA;test_type: A variant of the different tunable tests that handle testing&#xA;        for careers." Deprecated="False" filter="0" group="General">
                    <Tunable type="bool" name="negate" class="Tunable" default="False" display="Negate" muid="442C2A2BD57A8C46" description="If this is true then it will negate &#xA;the result of the test type. For instance if this is true and the test&#xA;would return true for whether or not a sim has a particular career&#xA;False will be returned instead." Deprecated="False" filter="0" group="General" />
                    <TunableVariant type="None" name="test_type" class="TunableCareerTestVariant" default="career_reference" display="Test Type" muid="5ABADD61471C3AE3" Deprecated="False" filter="0" group="General">
                        <TunableTuple name="attended_first_day" class="TunableCareerAttendedFirstDay" display="Attended First Day" muid="BB650056563F6CD6" description="Test for whether or not the Sim has gone to work at all for the career." Deprecated="False" filter="0" group="General">
                            <Tunable type="career" name="career" class="TunableReference" display="Career" muid="AE71842E7472834C" description="The career to see if the Sim has gone to work for." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                            <TunableVariant type="None" name="tooltip" class="OptionalTunable" default="disabled" display="Tooltip" muid="234384641D7DF9AA" description="Reason of failure." Deprecated="False" filter="0" group="General">
                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="D15F0E4A210C3BED" />
                                <Tunable type="int" name="enabled" class="TunableLocalizedString" default="0x0" display="Enabled" muid="7227E74A5D841CB8" description="Reason of failure." Deprecated="False" filter="0" group="General" />
                            </TunableVariant>
                        </TunableTuple>
                        <TunableTuple name="can_join_career" class="TunableCareerAvailabilityTestFactory" display="Can Join Career" muid="F292FC064D9A2F1B" description="A test for whether a sim can join a tunable number threshold of the tuned&#xA;careers. This requires that the career be valid for the sim and that the sim&#xA;not already be in the career." Deprecated="False" filter="0" group="General">
                            <TunableTuple name="careers_to_consider" class="TunableWhiteBlackList" display="Careers To Consider" muid="E4B802B3819BAC6F" description="The set of careers to consider and the threshold for passing." Deprecated="False" filter="0" group="General">
                                <TunableVariant type="None" name="blacklist" class="OptionalTunable" default="nothing" display="Blacklist" muid="851FA8E4C56DEEB7" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is not in the blacklist. If no blacklist is&#xA;specified, no items are disallowed." Deprecated="False" filter="0" group="General">
                                    <Tunable name="nothing" class="TunableExistance" display="Nothing" muid="5EBB38E6968106A0" />
                                    <TunableTuple name="specify" class="TunableBlacklist" display="Specify" muid="12ABE48A9E9C6FCC" description="A tunable blacklist." Deprecated="False" filter="0" group="General">
                                        <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="BC71B4BAFF664867" description="Blacklisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                            <Tunable type="career" class="TunableReference" muid="5B7C93308EA7D22C" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                        </TunableList>
                                        <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="A0F0E930F5742835" description="Tunable option for how many items must be in the blacklist&#xA;for the blacklist to fail when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                            <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="83F929D6D23E6B7A" />
                                            <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="48BBBC60B3D58443" description="When testing a collection of items, the number of items in&#xA;that collection that are in the blacklist must pass this&#xA;threshold test for the blacklist to disallow them all." Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="5EB45035E3EE81B2" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="1FF98FFAE0A8A565" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                        </TunableVariant>
                                    </TunableTuple>
                                </TunableVariant>
                                <TunableVariant type="None" name="whitelist" class="OptionalTunable" default="everything" display="Whitelist" muid="D7360142F1B62AEF" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is in the whitelist. If no whitelist is&#xA;specified, all items are allowed." Deprecated="False" filter="0" group="General">
                                    <Tunable name="everything" class="TunableExistance" display="Everything" muid="2B9A7A098CA01C3F" />
                                    <TunableTuple name="specify" class="TunableWhitelist" display="Specify" muid="A531DA09CEBEF0C6" description="A tunable whitelist." Deprecated="False" filter="0" group="General">
                                        <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="CCAECBDA0F79E8F9" description="Tunable option for how many items must be in the whitelist&#xA;for the whitelist to pass when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                            <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="1E034E020BBD56DA" />
                                            <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="89D6342131D68329" description="When testing a collection of items, the number of items in&#xA;that collection that are in the whitelist must pass this&#xA;threshold test for the whitelist to allow them all." Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="48AC527FA51FB2DE" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="20C99BBFD1845811" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                        </TunableVariant>
                                        <TunableList name="whitelist" class="TunableSet" display="Whitelist" muid="EC9C43B102465A24" description="Whitelisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                            <Tunable type="career" class="TunableReference" muid="F0CBFDE45A145E0F" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                        </TunableList>
                                    </TunableTuple>
                                </TunableVariant>
                            </TunableTuple>
                        </TunableTuple>
                        <TunableTuple name="career_level" class="TunableCareerLevelTestFactory" display="Career Level" muid="DD16D198AB592F70" description="Test to see if the participants have a career at the specified level." Deprecated="False" filter="0" group="General">
                            <Tunable type="career_level" name="career_level" class="TunableReference" display="Career Level" muid="BA5DB72EAC82D475" description="A reference to career level tuning that each subject must have in &#xA;at least one career in order for this test to pass." tuning_state="NeedsTuning" allow_none="False" Deprecated="False" filter="0" group="General" />
                        </TunableTuple>
                        <TunableTuple name="career_reference" class="TunableCareerReferenceTestFactory" display="Career Reference" muid="223AFD2C71BDEFE5" description="A test for whether or not the specified subjects have the specified career,&#xA;career user level, or both." Deprecated="False" filter="0" group="General">
                            <Tunable type="bool" name="allow_invisible_careers" class="Tunable" default="False" display="Allow Invisible Careers" muid="B587A5FB15ED71BD" description="If checked, this test will also allow non-visible careers (such as&#xA;Odd Jobs) to tested against." Deprecated="False" filter="0" group="General" />
                            <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="5285CAAE2E3F0501" description="Should be called &quot;Ignore List&quot;.  Set of careers that will be ignored&#xA;on the Sim.  If the Sim only had these careers, it would be like having no careers." Deprecated="False" filter="0" group="General" unique_entries="true">
                                <Tunable type="career" class="TunableReference" muid="84642AB7B3398157" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                            </TunableList>
                            <TunableVariant type="None" name="career" class="OptionalTunable" default="all_careers" display="Career" muid="7DDF564B4F2D028A" description="The career to test for on the Sim. When set by itself it will pass&#xA;if the subject simply has this career. When set with user level it&#xA;will only pass if the subjects user level passes the threshold&#xA;test." Deprecated="False" filter="0" group="General">
                                <Tunable name="all_careers" class="TunableExistance" display="All Careers" muid="9803E5B683C106B2" />
                                <Tunable type="career" name="specific_career" class="TunableReference" display="Specific Career" muid="B3031D1D78E67BCC" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                            </TunableVariant>
                            <TunableVariant type="None" name="user_level" class="OptionalTunable" default="disabled" display="User Level" muid="B78D6007DE448657" description="Threshold test for the current user value of a career. If user_level&#xA;is set without career then it will pass if any of their careers &#xA;pass the threshold test. If set along with career then it will only&#xA;pass if the specified career passes the threshold test for user &#xA;level. &#xA;&#xA;The min and max for the user level are inclusive. So the Sim&#xA;can have any career level that meets the following equation and it&#xA;will pass.&#xA;&#xA;min &lt;= current career level &lt;= max." Deprecated="False" filter="0" group="General">
                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="16FDAED6AEB7A0E1" />
                                <TunableTuple name="enabled" class="TunableInterval" display="Enabled" muid="66F34D5CD2022CED" description="Threshold test for the current user value of a career. If user_level&#xA;is set without career then it will pass if any of their careers &#xA;pass the threshold test. If set along with career then it will only&#xA;pass if the specified career passes the threshold test for user &#xA;level. &#xA;&#xA;The min and max for the user level are inclusive. So the Sim&#xA;can have any career level that meets the following equation and it&#xA;will pass.&#xA;&#xA;min &lt;= current career level &lt;= max." Deprecated="False" filter="0" group="General">
                                    <Tunable type="int" name="lower_bound" class="TunableRange" default="1" display="Lower Bound" muid="433CCEFB418C5D6E" min="0" max="None" description="The lower bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                    <Tunable type="int" name="upper_bound" class="TunableRange" default="11" display="Upper Bound" muid="A0F6239802610DE1" min="None" max="11" description="The upper bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                </TunableTuple>
                            </TunableVariant>
                        </TunableTuple>
                        <TunableTuple name="career_track" class="TunableCareerTrackTestFactory" display="Career Track" muid="239087D411099C6A" description="Test for whether the specified subjects have a career currently on the &#xA;track specified." Deprecated="False" filter="0" group="General">
                            <Tunable type="career_track" name="career_track" class="TunableReference" display="Career Track" muid="2154BE395DB91789" description="A reference to the career track that each subject must have in at&#xA;least one career in order for this test to pass." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                            <TunableVariant type="None" name="user_level" class="OptionalTunable" default="disabled" display="User Level" muid="CF57A88BE9B61E55" description="Interval test for the current user value of a career. Career track&#xA;must also be specified for this check to work properly." Deprecated="False" filter="0" group="General">
                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="CB5ABE79EB122344" />
                                <TunableTuple name="enabled" class="TunableInterval" display="Enabled" muid="B42DE8CC919EC116" description="Interval test for the current user value of a career. Career track&#xA;must also be specified for this check to work properly." Deprecated="False" filter="0" group="General">
                                    <Tunable type="int" name="lower_bound" class="TunableRange" default="1" display="Lower Bound" muid="FFA5615452492825" min="0" max="None" description="The lower bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                    <Tunable type="int" name="upper_bound" class="TunableRange" default="10" display="Upper Bound" muid="285CEA5BE8FCF9B6" min="None" max="10" description="The upper bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                </TunableTuple>
                            </TunableVariant>
                        </TunableTuple>
                        <TunableTuple name="common_career" class="TunableCareerCommonTestFactory" display="Common Career" muid="9AEA22D2849E5EA3" description="Test used to see if multiple participants have a career in common." Deprecated="False" filter="0" group="General">
                            <TunableList name="targets" class="TunableEnumFlags" default="Listeners" display="Targets" muid="A5939D70322E80F9" description="tuning for the targets to check for the same common career on." Deprecated="False" filter="0" group="General" unique_entries="true">
                                <TunableEnum type="ParticipantType" class="TunableEnumEntry" default="Invalid" muid="8313A84AA37C670F" static_entries="interactions.ParticipantType" Deprecated="False" filter="0" group="General" />
                            </TunableList>
                            <TunableVariant type="None" name="test_type" class="TunableCommonCareerTestsVariant" default="career_reference" display="Test Type" muid="923E778504A01C9E" Deprecated="False" filter="0" group="General">
                                <TunableTuple name="career_level" class="TunableCareerLevelTestFactory" display="Career Level" muid="7A2D0F725B8A1AFA" description="Test to see if the participants have a career at the specified level." Deprecated="False" filter="0" group="General">
                                    <Tunable type="career_level" name="career_level" class="TunableReference" display="Career Level" muid="DF15DB00073EFD20" description="A reference to career level tuning that each subject must have in &#xA;at least one career in order for this test to pass." tuning_state="NeedsTuning" allow_none="False" Deprecated="False" filter="0" group="General" />
                                </TunableTuple>
                                <TunableTuple name="career_reference" class="TunableCareerReferenceTestFactory" display="Career Reference" muid="96DBAD2371185BD0" description="A test for whether or not the specified subjects have the specified career,&#xA;career user level, or both." Deprecated="False" filter="0" group="General">
                                    <Tunable type="bool" name="allow_invisible_careers" class="Tunable" default="False" display="Allow Invisible Careers" muid="EF797558A066D22D" description="If checked, this test will also allow non-visible careers (such as&#xA;Odd Jobs) to tested against." Deprecated="False" filter="0" group="General" />
                                    <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="8AE8BE7E99DBD048" description="Should be called &quot;Ignore List&quot;.  Set of careers that will be ignored&#xA;on the Sim.  If the Sim only had these careers, it would be like having no careers." Deprecated="False" filter="0" group="General" unique_entries="true">
                                        <Tunable type="career" class="TunableReference" muid="4AC120DF6284365D" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                    </TunableList>
                                    <TunableVariant type="None" name="career" class="OptionalTunable" default="all_careers" display="Career" muid="91615B8BBC522F2C" description="The career to test for on the Sim. When set by itself it will pass&#xA;if the subject simply has this career. When set with user level it&#xA;will only pass if the subjects user level passes the threshold&#xA;test." Deprecated="False" filter="0" group="General">
                                        <Tunable name="all_careers" class="TunableExistance" display="All Careers" muid="7BABB23149FB6DA0" />
                                        <Tunable type="career" name="specific_career" class="TunableReference" display="Specific Career" muid="C775404B042AADE5" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                    </TunableVariant>
                                    <TunableVariant type="None" name="user_level" class="OptionalTunable" default="disabled" display="User Level" muid="B860D7ED7D766E04" description="Threshold test for the current user value of a career. If user_level&#xA;is set without career then it will pass if any of their careers &#xA;pass the threshold test. If set along with career then it will only&#xA;pass if the specified career passes the threshold test for user &#xA;level. &#xA;&#xA;The min and max for the user level are inclusive. So the Sim&#xA;can have any career level that meets the following equation and it&#xA;will pass.&#xA;&#xA;min &lt;= current career level &lt;= max." Deprecated="False" filter="0" group="General">
                                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="7F49C2D66E9B81EA" />
                                        <TunableTuple name="enabled" class="TunableInterval" display="Enabled" muid="4A77018FA2528FDE" description="Threshold test for the current user value of a career. If user_level&#xA;is set without career then it will pass if any of their careers &#xA;pass the threshold test. If set along with career then it will only&#xA;pass if the specified career passes the threshold test for user &#xA;level. &#xA;&#xA;The min and max for the user level are inclusive. So the Sim&#xA;can have any career level that meets the following equation and it&#xA;will pass.&#xA;&#xA;min &lt;= current career level &lt;= max." Deprecated="False" filter="0" group="General">
                                            <Tunable type="int" name="lower_bound" class="TunableRange" default="1" display="Lower Bound" muid="778C05FB991E4CD4" min="0" max="None" description="The lower bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            <Tunable type="int" name="upper_bound" class="TunableRange" default="11" display="Upper Bound" muid="DE01292001F50FAD" min="None" max="11" description="The upper bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                    </TunableVariant>
                                </TunableTuple>
                                <TunableTuple name="career_track" class="TunableCareerTrackTestFactory" display="Career Track" muid="2147A68EA5D0F018" description="Test for whether the specified subjects have a career currently on the &#xA;track specified." Deprecated="False" filter="0" group="General">
                                    <Tunable type="career_track" name="career_track" class="TunableReference" display="Career Track" muid="43E2D8335F762A5A" description="A reference to the career track that each subject must have in at&#xA;least one career in order for this test to pass." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                    <TunableVariant type="None" name="user_level" class="OptionalTunable" default="disabled" display="User Level" muid="9F914545D48C8F68" description="Interval test for the current user value of a career. Career track&#xA;must also be specified for this check to work properly." Deprecated="False" filter="0" group="General">
                                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="15C76AD55B5C2322" />
                                        <TunableTuple name="enabled" class="TunableInterval" display="Enabled" muid="3195E9A7B2F9E4D" description="Interval test for the current user value of a career. Career track&#xA;must also be specified for this check to work properly." Deprecated="False" filter="0" group="General">
                                            <Tunable type="int" name="lower_bound" class="TunableRange" default="1" display="Lower Bound" muid="74B02504C88370A4" min="0" max="None" description="The lower bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            <Tunable type="int" name="upper_bound" class="TunableRange" default="10" display="Upper Bound" muid="F8AE15581F8FDC4B" min="None" max="10" description="The upper bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                    </TunableVariant>
                                </TunableTuple>
                                <TunableTuple name="same_career_at_user_level" class="TunableSameCareerAtUserLevelTestFactory" display="Same Career At User Level" muid="EA24E6F6BF684EB9" description="Test to see if the participants share any career that they have the same&#xA;user level." Deprecated="False" filter="0" group="General">
                                    <TunableTuple name="user_level" class="TunableThreshold" display="User Level" muid="A62A38678470CA46" description="User level to test for." Deprecated="False" filter="0" group="General">
                                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="6E539242804517D" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="1D3B696D48FA7A5D" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                </TunableTuple>
                            </TunableVariant>
                        </TunableTuple>
                        <TunableTuple name="days_worked" class="TunableCareerDaysWorked" display="Days Worked" muid="277A04376571B7ED" description="Test for how many days the Sim has worked for a career." Deprecated="False" filter="0" group="General">
                            <Tunable type="bool" name="active_only" class="Tunable" default="True" display="Active Only" muid="19B2B355BBFE9F5C" description="If checked, only workdays that the player has actively played will&#xA;count." Deprecated="False" filter="0" group="General" />
                            <Tunable type="career" name="career" class="TunableReference" display="Career" muid="4D86F84741AADAD2" description="The career to test against." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                            <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="835ACB8190FDE34D" description="Threshold test for days worked." Deprecated="False" filter="0" group="General">
                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="7A2B7CA6C1821479" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="F7C3BBF6284D4AC4" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                            </TunableTuple>
                            <TunableVariant type="None" name="tooltip" class="OptionalTunable" default="disabled" display="Tooltip" muid="44E446ECDA6FEAB6" description="Reason of failure." Deprecated="False" filter="0" group="General">
                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="6456B9C90B1E4049" />
                                <Tunable type="int" name="enabled" class="TunableLocalizedString" default="0x0" display="Enabled" muid="A9F8F1E21637D198" description="Reason of failure." Deprecated="False" filter="0" group="General" />
                            </TunableVariant>
                        </TunableTuple>
                        <TunableTuple name="has_available_assignment" class="TunableCareerHasAssignmentTestFactory" display="Has Available Assignment" muid="8FECE91E69E9F167" description="A test for whether or not the specified subjects has an available assignment&#xA;in the specified career" Deprecated="False" filter="0" group="General">
                            <Tunable type="career" name="career" class="TunableReference" display="Career" muid="575BDE92A322DF5F" description="The career to test for having an available assignment.&#xA;&#xA;If None, will expect career passed in via PickedItemIds (i.e. via picker)." allow_none="True" Deprecated="False" filter="0" group="General" />
                        </TunableTuple>
                        <TunableTuple name="has_career" class="TunableHasCareerTestFactory" display="Has Career" muid="12FE7025642552FC" description="Test for whether or not the specified subjects have a career or not." Deprecated="False" filter="0" group="General">
                            <Tunable type="bool" name="has_career" class="Tunable" default="True" display="Has Career" muid="D9C219C5799D312F" description="If true all subjects must have a &#xA;career for the test to pass. If False then none of the subjects &#xA;can have a career for the test to pass." Deprecated="False" filter="0" group="General" />
                            <TunableVariant type="None" name="tooltip" class="OptionalTunable" default="disabled" display="Tooltip" muid="CC79F532A87AFA15" description="Reason of failure." Deprecated="False" filter="0" group="General">
                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="AE480C265DB56AFF" />
                                <Tunable type="int" name="enabled" class="TunableLocalizedString" default="0x0" display="Enabled" muid="F932BDF4C63B38A7" description="Reason of failure." Deprecated="False" filter="0" group="General" />
                            </TunableVariant>
                        </TunableTuple>
                        <TunableTuple name="has_career_outfit" class="TunableHasCareerOutfit" display="Has Career Outfit" muid="ACED3B79BCA05E8C" description="Test for if the subjects have a career outfit." Deprecated="False" filter="0" group="General" />
                        <TunableTuple name="has_quittable_career" class="TunableQuittableCareerTestFactory" display="Has Quittable Career" muid="AC23E4715DEDE588" description="Test for whether or not the specified subjects have a quittable career or not." Deprecated="False" filter="0" group="General">
                            <Tunable type="bool" name="has_quittable_career" class="Tunable" default="True" display="Has Quittable Career" muid="9A00F12CEF87B9B3" description="If True then all of the subjects must have a quittable career in &#xA;order for the test to pass. If False then none of the subjects &#xA;can have a quittable career in order to pass." Deprecated="False" filter="0" group="General" />
                        </TunableTuple>
                        <TunableTuple name="highest_level_achieved" class="TunableCareerHighestLevelAchievedTest" display="Highest Level Achieved" muid="C568C41A07EEECA9" description="Test looking at the highest level ever achieved of a specific career." Deprecated="False" filter="0" group="General">
                            <TunableList name="career_blacklist" class="TunableSet" display="Career Blacklist" muid="AF569A12F4258AB6" description="A set of careers that will not be looked at." Deprecated="False" filter="0" group="General" unique_entries="true">
                                <Tunable type="career" class="TunableReference" muid="6B650C92FD797474" description="The career we will not check." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                            </TunableList>
                            <TunableVariant type="None" name="careers_to_check" class="OptionalTunable" default="disabled" display="Careers To Check" muid="F0F152F5D2D5535A" description="If enabled then we will only look at the careers listed in this.&#xA;set.  Otherwise will will look at all careers." Deprecated="False" filter="0" group="General">
                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="547D2C4CC4D267BE" />
                                <TunableList name="enabled" class="TunableSet" display="Enabled" muid="572847861BF6517A" description="A set of careers that will be looked at." Deprecated="False" filter="0" group="General" unique_entries="true">
                                    <Tunable type="career" class="TunableReference" muid="935050B21BD38438" description="The career we will check." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                </TunableList>
                            </TunableVariant>
                            <Tunable type="int" name="careers_to_find" class="TunableRange" default="1" display="Careers To Find" muid="CE5884B78BBDD7D3" min="1" max="None" description="The number of careers that need to match the passing threshold for&#xA;this test to pass." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                            <TunableTuple name="passing_threshold" class="TunableThreshold" display="Passing Threshold" muid="711C90B121A13019" description="Threshold for determining if a career is considered passing for&#xA;this test." Deprecated="False" filter="0" group="General">
                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="D5F6533F968E253A" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="41D2CA7A99A94F6A" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                            </TunableTuple>
                            <TunableVariant type="None" name="tooltip" class="OptionalTunable" default="disabled" display="Tooltip" muid="9136EC98D3422572" description="Reason of failure." Deprecated="False" filter="0" group="General">
                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="3E3B0091D56FC5D4" />
                                <Tunable type="int" name="enabled" class="TunableLocalizedString" default="0x0" display="Enabled" muid="FFE8472FCFF65BC7" description="Reason of failure." Deprecated="False" filter="0" group="General" />
                            </TunableVariant>
                        </TunableTuple>
                        <TunableTuple name="is_elective_course" class="TunableCareerIsElectiveCourseTest" display="Is Elective Course" muid="B197A62D52FB8EF6" description="Test used to see if a career slot for a sim's university course is associated with an &#xA;elective Univerity course." Deprecated="False" filter="0" group="General">
                            <Tunable type="career" name="career" class="TunableReference" display="Career" muid="60775C3033C2274C" description="The career slot to test for associated elective course data on the &#xA;subjects. " allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="UniversityCourseCareerSlot" />
                        </TunableTuple>
                        <TunableTuple name="is_retired" class="TunableIsRetiredTestFactory" display="Is Retired" muid="66ED6CAAA1D32B3F" description="Test for whether or not the specified subjects retired from a career." Deprecated="False" filter="0" group="General">
                            <Tunable type="career" name="career" class="TunableReference" display="Career" muid="EB2C4F4A27705D43" description="The retired career to test for on the subjects. If left unset, the&#xA;test will pass if the Sim is retired from any career." allow_none="False" Deprecated="False" filter="0" group="General" />
                        </TunableTuple>
                        <TunableTuple name="pto_amount" class="TunableCareerPTOAmountTestFactory" display="Pto Amount" muid="D8549E0640E5E99B" description="A test for whether or not the specified subjects has the requested amount&#xA;of PTO available in the specified career" Deprecated="False" filter="0" group="General">
                            <Tunable type="career" name="career" class="TunableReference" display="Career" muid="1876630CC6504B54" description="The career to test for how much PTO the sim has.&#xA;&#xA;If None, will expect career passed in via PickedItemIds (i.e. via picker)." allow_none="True" Deprecated="False" filter="0" group="General" />
                            <TunableTuple name="required_pto_available" class="TunableThreshold" display="Required Pto Available" muid="4E6129CEE6F5B7B8" description="Threshold test for how much PTO is required" Deprecated="False" filter="0" group="General">
                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="B92C5390698B318" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="6FA05F808009BA0A" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                            </TunableTuple>
                        </TunableTuple>
                        <TunableTuple name="time_off" class="TunableCareerTimeOffTest" display="Time Off" muid="9AEE80F9058E0400" description="Require a Sim to be in a career that does not have requested time off for&#xA;the any reason." Deprecated="False" filter="0" group="General">
                            <TunableVariant type="None" name="tooltip" class="OptionalTunable" default="disabled" display="Tooltip" muid="B9FCC8826B09A6A3" description="Reason of failure." Deprecated="False" filter="0" group="General">
                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="74ACC8672F0D2978" />
                                <Tunable type="int" name="enabled" class="TunableLocalizedString" default="0x0" display="Enabled" muid="736E5EE7B93B8053" description="Reason of failure." Deprecated="False" filter="0" group="General" />
                            </TunableVariant>
                        </TunableTuple>
                        <TunableTuple name="time_until_work" class="TunableCareerTimeUntilWorkTestFactory" display="Time Until Work" muid="E6B7CA6576C681DB" description="A test for whether or not the specified subjects has the specified career,&#xA;And that their next work day starts within the specified number of hours" Deprecated="False" filter="0" group="General">
                            <Tunable type="career" name="career" class="TunableReference" display="Career" muid="849EAA3B3455D4A7" description="The career to test the next start time of.&#xA;&#xA;If None, will expect career passed in via PickedItemIds (i.e. via picker)." allow_none="True" Deprecated="False" filter="0" group="General" />
                            <Tunable type="bool" name="check_all_careers" class="Tunable" default="False" display="Check All Careers" muid="304825CC803DC468" description="If checked then we will check all careers rather than just the one defined&#xA;in the career tunable.  The test will fail if any career fails." Deprecated="False" filter="0" group="General" />
                            <TunableTuple name="hours_till_work" class="TunableInterval" display="Hours Till Work" muid="3F09BA53643EC33A" description="Threshold test for how long 'till the &quot;next&quot; start time.  It will&#xA;test up to one hour past the start time, at which point it will test&#xA;against the next start time." Deprecated="False" filter="0" group="General">
                                <Tunable type="float" name="lower_bound" class="TunableRange" default="-1" display="Lower Bound" muid="213AE1F237AE7DED" min="-23" max="None" description="The lower bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                <Tunable type="float" name="upper_bound" class="TunableRange" default="23" display="Upper Bound" muid="1E009CBB5B8FB986" min="None" max="168" description="The upper bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                            </TunableTuple>
                        </TunableTuple>
                    </TunableVariant>
                </TunableTuple>
                <TunableTuple name="club" class="TunableClubTest" display="Club" muid="F782C3914AAEF2E4" description="A tunable factory that tests against Clubs.&#xA;&#xA;For use only with ClubSuperInteractions and ClubMixerInteractions." Deprecated="False" filter="0" group="General">
                    <TunableVariant type="None" name="affordance_rule" class="OptionalTunable" default="disabled" display="Affordance Rule" muid="A922213BA21A7595" description="If set, then the affordance being tested (should one exist) must&#xA;satisfy this rule requirement." Deprecated="False" filter="0" group="General">
                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="59C0812A5AD729F9" />
                        <TunableVariant type="None" name="enabled" class="TunableVariant" default="is_encouraged" display="Enabled" muid="E86482A0211606EF" description="The rule requirement that the affordance must satisfy." Deprecated="False" filter="0" group="General">
                            <Tunable name="is_discouraged" class="TunableExistance" display="Is Discouraged" muid="867A425229383995" />
                            <Tunable name="is_encouraged" class="TunableExistance" display="Is Encouraged" muid="1BD251CAA552589D" />
                            <Tunable name="is_not_discouraged" class="TunableExistance" display="Is Not Discouraged" muid="16D54F3155D35031" />
                            <Tunable name="is_not_encouraged" class="TunableExistance" display="Is Not Encouraged" muid="C12751254A6F5255" />
                        </TunableVariant>
                    </TunableVariant>
                    <TunableVariant type="None" name="club_status" class="OptionalTunable" default="disabled" display="Club Status" muid="8D1F459D8C91D7D9" description="In enabled, require the tuned &quot;subject&quot; to either be or not be a&#xA;member of this interaction's associated Club." Deprecated="False" filter="0" group="General">
                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="22024F799A4BAE3B" />
                        <TunableVariant type="None" name="enabled" class="TunableVariant" default="none" display="Enabled" muid="1E66CB82FBA82AEF" description="In enabled, require the tuned &quot;subject&quot; to either be or not be a&#xA;member of this interaction's associated Club." Deprecated="False" filter="0" group="General">
                            <Tunable name="Leader" class="TunableExistance" display="Leader" muid="48E86B4453A45B2D" />
                            <Tunable name="Member" class="TunableExistance" display="Member" muid="873EA370E613D1FA" />
                            <Tunable name="none" class="TunableExistance" display="None" muid="CBC5D989BB13A0D6" />
                            <Tunable name="Not Leader" class="TunableExistance" display="Not Leader" muid="91058A29DABA1B22" />
                            <Tunable name="Not Member" class="TunableExistance" display="Not Member" muid="7CDA296E886EFA9" />
                        </TunableVariant>
                    </TunableVariant>
                    <TunableVariant type="None" name="invite_only" class="OptionalTunable" default="disabled" display="Invite Only" muid="2F5AF794E9B56467" description="If enabled, require the associated Club to either be invite only or&#xA;be open to everyone." Deprecated="False" filter="0" group="General">
                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="717AE8F2685C076D" />
                        <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="C32E6842C19BB962" description="If enabled, require the associated Club to either be invite only or&#xA;be open to everyone." Deprecated="False" filter="0" group="General" />
                    </TunableVariant>
                    <Tunable type="bool" name="pass_if_any_clubs_pass" class="Tunable" default="False" display="Pass If Any Clubs Pass" muid="B1E6189FD1AE6A9F" description="If checked then this test will pass if any of the clubs match the&#xA;requirements otherwise we require all clubs to meet the&#xA;requirements." Deprecated="False" filter="0" group="General" />
                    <TunableVariant type="None" name="recent_member_status" class="OptionalTunable" default="disabled" display="Recent Member Status" muid="EFAD56FFAF53DB06" description="If specified, the Sim must satisfy recent member status&#xA;requirements." Deprecated="False" filter="0" group="General">
                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="D2A262570C8B607F" />
                        <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="FDECF9061878E33B" description="Whether or not the Sim must be a recent member of the Club in&#xA;order to pass this test." Deprecated="False" filter="0" group="General" />
                    </TunableVariant>
                    <TunableVariant type="None" name="require_common_club" class="OptionalTunable" default="disabled" display="Require Common Club" muid="6634F8C441D8A45D" description="If enabled, then there must be a common Club that both the subject&#xA;Sim and this specified Sim are in. If the club type is set to &quot;Use&#xA;Club from Resolver&quot;, then both Sims must be in that Club. If the&#xA;club type is set to &quot;Use Any Club&quot;, then there must be one club both&#xA;the subject Sim and this Sim are in." Deprecated="False" filter="0" group="General">
                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="A25F163FAD2222CB" />
                        <TunableEnum type="ParticipantType" name="enabled" class="TunableEnumEntry" default="TargetSim" display="Enabled" muid="97DD679CA03055CF" static_entries="interactions.ParticipantType" description="The Sim to test against for a common Club. If a multi-Sim&#xA;participant is specified, the union of their clubs is&#xA;considered, i.e. the test passes if at least one Sim satisfies&#xA;the requirements." Deprecated="False" filter="0" group="General" />
                    </TunableVariant>
                    <TunableVariant type="None" name="required_sim_count" class="OptionalTunable" default="disabled" display="Required Sim Count" muid="C20DE1DCB135F643" description="If enabled then this test will only pass if the group has a number &#xA;of members that passes the tuned threshold." Deprecated="False" filter="0" group="General">
                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="9D9D852BCE22272F" />
                        <TunableTuple name="enabled" class="TunableThreshold" display="Enabled" muid="5B4E3C5ACF086F27" description="The member requirement for this test to pass." Deprecated="False" filter="0" group="General">
                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="972B6D0EFDD59DEF" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                            <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="A6FAE1FCBDDC7F2F" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                        </TunableTuple>
                    </TunableVariant>
                    <TunableVariant type="None" name="room_for_new_members" class="OptionalTunable" default="disabled" display="Room For New Members" muid="2F04C4C5DBDA3706" description="If enabled, require the associated Club to either have room for new&#xA;members or not have room for new members." Deprecated="False" filter="0" group="General">
                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="3F3DD07D42F2C4AB" />
                        <TunableVariant type="None" name="enabled" class="TunableVariant" default="none" display="Enabled" muid="E07FB6FC50D4AA9E" description="If enabled, require the associated Club to either have room for new&#xA;members or not have room for new members." Deprecated="False" filter="0" group="General">
                            <Tunable name="Has No Room" class="TunableExistance" display="Has No Room" muid="58BF66BF5EB1CBAD" />
                            <Tunable name="Has Room" class="TunableExistance" display="Has Room" muid="504E0922920493FB" />
                            <Tunable name="none" class="TunableExistance" display="None" muid="210C808DBA75CD69" />
                        </TunableVariant>
                    </TunableVariant>
                    <TunableVariant type="None" name="subject_can_join_more_clubs" class="OptionalTunable" default="disabled" display="Subject Can Join More Clubs" muid="8712DA01010A049" description="If enabled, require the tuned &quot;subject&quot; to be allowed to join more&#xA;Clubs or not.&#xA;&#xA;The maximum number of Clubs per Sim is set in&#xA;club_tuning.ClubTunables in the &quot;MAX_CLUBS_PER_SIM&quot; tunable." Deprecated="False" filter="0" group="General">
                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="1387A4C2BA49EE11" />
                        <TunableVariant type="None" name="enabled" class="TunableVariant" default="none" display="Enabled" muid="537B7AA7680B2DE4" description="If enabled, require the tuned &quot;subject&quot; to be allowed to join more&#xA;Clubs or not.&#xA;&#xA;The maximum number of Clubs per Sim is set in&#xA;club_tuning.ClubTunables in the &quot;MAX_CLUBS_PER_SIM&quot; tunable." Deprecated="False" filter="0" group="General">
                            <Tunable name="Can Join More Clubs" class="TunableExistance" display="Can Join More Clubs" muid="7E1B3FCD23EB7EA6" />
                            <Tunable name="Cannot Join More Clubs" class="TunableExistance" display="Cannot Join More Clubs" muid="C646BEB68DDE4691" />
                            <Tunable name="none" class="TunableExistance" display="None" muid="DF20873A75D830C3" />
                        </TunableVariant>
                    </TunableVariant>
                    <TunableVariant type="None" name="subject_passes_membership_criteria" class="OptionalTunable" default="disabled" display="Subject Passes Membership Criteria" muid="409041C1BA7153C4" description="If enabled, require the tuned &quot;subject&quot; to either pass this&#xA;associated Club's membership criteria or not pass the membership&#xA;criteria." Deprecated="False" filter="0" group="General">
                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="C31062B3CA43A068" />
                        <TunableVariant type="None" name="enabled" class="TunableVariant" default="none" display="Enabled" muid="CD842E22666DAE4A" description="If enabled, require the tuned &quot;subject&quot; to either pass this&#xA;associated Club's membership criteria or not pass the membership&#xA;criteria." Deprecated="False" filter="0" group="General">
                            <Tunable name="Does Not Pass Criteria" class="TunableExistance" display="Does Not Pass Criteria" muid="60EC68E2DF567C4D" />
                            <Tunable name="none" class="TunableExistance" display="None" muid="70F634CD6AE7A63C" />
                            <Tunable name="Passes Criteria" class="TunableExistance" display="Passes Criteria" muid="DFEAE401A56C3E18" />
                        </TunableVariant>
                    </TunableVariant>
                    <TunableVariant type="None" name="subject_relationship_with_leader" class="OptionalTunable" default="disabled" display="Subject Relationship With Leader" muid="8E7912D3CE779E57" description="If enabled, the tuned subject is required to have a specific&#xA;relationship with the leader. If the subject and the leader match,&#xA;the test fails." Deprecated="False" filter="0" group="General">
                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="2B33C93522714072" />
                        <TunableTuple name="enabled" class="TunableRelationshipTest" display="Enabled" muid="EFEDC47E4E28730D" description="Gate availability by a relationship status." Deprecated="False" filter="0" group="General">
                            <Tunable type="bool" name="invert_num_relations" class="Tunable" default="False" display="Invert Num Relations" muid="8F49A1150B15D4AA" description="If checked then we will check that your Num Relations is less than or&#xA;equal to the value rather than the other way around." Deprecated="False" filter="0" group="General" />
                            <TunableTuple name="prohibited_relationship_bits" class="TunableTuple" display="Prohibited Relationship Bits" muid="111980D020D36B41" Deprecated="False" filter="0" group="General">
                                <TunableList name="match_all" class="TunableSet" display="Match All" muid="FC9ECE1DD2BD6774" description="All of these relationship bits must match to fail the test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                    <Tunable type="relbit" class="TunableReference" muid="1F1E1F68AAE122D" allow_none="False" Deprecated="False" filter="0" group="General" />
                                </TunableList>
                                <TunableList name="match_any" class="TunableSet" display="Match Any" muid="A777E259D387CDAA" description="If any of these relationship bits match the test will fail." Deprecated="False" filter="0" group="General" unique_entries="true">
                                    <Tunable type="relbit" class="TunableReference" muid="70BD2112133B4254" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                </TunableList>
                            </TunableTuple>
                            <TunableTuple name="relationship_score_interval" class="TunableInterval" display="Relationship Score Interval" muid="1BC5B29F075E79E6" description="The range that the relationship score must be within in order for&#xA;this test to pass." Deprecated="False" filter="0" group="General">
                                <Tunable type="float" name="lower_bound" class="TunableRange" default="-100.0" display="Lower Bound" muid="D35434B0ADF4A103" min="-100.0" max="None" description="The lower bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                <Tunable type="float" name="upper_bound" class="TunableRange" default="100.0" display="Upper Bound" muid="CC803098AEAEA6D1" min="None" max="100.0" description="The upper bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                            </TunableTuple>
                            <TunableTuple name="required_relationship_bits" class="TunableTuple" display="Required Relationship Bits" muid="E35DF9DA10FF4E24" Deprecated="False" filter="0" group="General">
                                <TunableList name="match_all" class="TunableSet" display="Match All" muid="5F334E82499D0D59" description="All of these relationship bits must be present to pass the&#xA;test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                    <Tunable type="relbit" class="TunableReference" muid="60139BA13EE7C490" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                </TunableList>
                                <TunableList name="match_any" class="TunableSet" display="Match Any" muid="75A9AB2C8ECD850D" description="Any of these relationship bits will pass the test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                    <Tunable type="relbit" class="TunableReference" muid="99D6ED99B05510CD" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                </TunableList>
                            </TunableTuple>
                            <TunableEnum type="RelationshipTestEvents" name="test_event" class="TunableEnumEntry" default="AllRelationshipEvents" display="Test Event" muid="974BA74D854DECBA" static_entries="relationships-relationship_tests.RelationshipTestEvents" description="The event that we want to trigger this instance of the tuned test&#xA;on." Deprecated="False" filter="0" group="General" />
                            <TunableVariant type="None" name="test_incest" class="TunableVariant" default="disabled" display="Test Incest" muid="6CAC2F6F2290E201" description="Test for incest status. Test passes if this matches the two Sim's&#xA;incest status." Deprecated="False" filter="0" group="General">
                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="A9C1CF4D85421C1B" />
                                <Tunable name="is incestuous" class="TunableExistance" display="Is Incestuous" muid="A86ABB8CCF5ECE23" />
                                <Tunable name="is not incestuous" class="TunableExistance" display="Is Not Incestuous" muid="DE5E0AA9A9812585" />
                            </TunableVariant>
                            <Tunable type="statistic" name="track" class="TunableReference" display="Track" muid="52D7661BCB63A855" description="If set, the test will use the relationship score between sims for&#xA;this track. If unset, the track defaults to the global module&#xA;tunable REL_INSPECTOR_TRACK." allow_none="True" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="RelationshipTrack" />
                        </TunableTuple>
                    </TunableVariant>
                </TunableTuple>
                <TunableTuple name="collection" class="TunableCollectionThresholdTest" display="Collection" muid="92E2A6D00BA1A995" description="Tests for a provided amount of a given collection type." Deprecated="False" filter="0" group="General">
                    <TunableEnum type="CollectionIdentifier" name="collection_type" class="TunableEnumEntry" default="Unindentified" display="Collection Type" muid="11558A0AF717CBF1" dynamic_entries="objects-collection_manager.CollectionIdentifier._elements" static_entries="objects-collection_manager.CollectionIdentifier" description="The collection we are checking on.  If collection type is&#xA;unidentified then we will look through all collections." Deprecated="False" filter="0" group="General" />
                    <Tunable type="bool" name="complete_collection" class="Tunable" default="False" display="Complete Collection" muid="4C82747D63DA13FF" description="Setting this to True (checked) will override the threshold and&#xA;check for collection completed" Deprecated="False" filter="0" group="General" />
                    <TunableVariant type="None" name="specific_items" class="OptionalTunable" default="disabled" display="Specific Items" muid="F06EFFE33EEC90D5" description="If enabled then the collection threshold test will check for&#xA;specific items within the collection.  When enabled both the&#xA;Collection Type and Complete Collection tuning will be ignored." Deprecated="False" filter="0" group="General">
                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="FED3CB5AFDC79FD6" />
                        <TunableList name="enabled" class="TunableList" display="Enabled" muid="7064617187B69D13" description="List of allowed objects within a collection that we want to&#xA;check." Deprecated="False" filter="0" group="General">
                            <Tunable type="object" class="TunableReference" muid="E776438FF847B0D9" description="Object reference to each collectible object." allow_none="False" Deprecated="False" filter="0" group="General" />
                        </TunableList>
                    </TunableVariant>
                    <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="35DB94BEA2D931D4" description="Threshold for which the Sim experiences motive failure" Deprecated="False" filter="0" group="General">
                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="FD40FE49CC023281" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                        <Tunable type="int" name="value" class="Tunable" default="1" display="Value" muid="9161173F21164EB6" description="The value of the threshold that the collection is compared&#xA;against." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                    </TunableTuple>
                </TunableTuple>
                <TunableTuple name="location" class="TunableLocationTest" display="Location" muid="34F70BF3AEE6CE86" description="Tests for object locations.&#xA;Outside: Check if an object is on the inside or outside (has a roof over&#xA;its head)&#xA;Natural ground: Checks the floor tiles where the object is to see if it &#xA;qualifies as natural ground" Deprecated="False" filter="0" group="General">
                    <TunableTuple name="location_tests" class="TunableTuple" display="Location Tests" muid="3AF5BDFCA9F606A5" Deprecated="False" filter="0" group="General">
                        <TunableVariant type="None" name="has_terrain_tag" class="OptionalTunable" default="Don't_Test" display="Has Terrain Tag" muid="5910AD5473F42331" description="If checked, will verify the subject of the test is currently on&#xA;the tuned terrain tag." Deprecated="False" filter="0" group="General">
                            <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="31178009E65E3FF6" />
                            <TunableTuple name="enabled" class="TunableTuple" display="Enabled" muid="1E5AD2ABE22AF7D4" description=",&#xA;A set of terrain tags required for this test to pass." Deprecated="False" filter="0" group="General">
                                <Tunable type="bool" name="negate" class="Tunable" default="False" display="Negate" muid="B3FCA4C3D9172759" description="If checked, the test will be inverted. In other words,&#xA;the test will fail if at least one tag is detected at&#xA;this location." Deprecated="False" filter="0" group="General" />
                                <TunableList name="terrain_tags" class="TunableEnumSet" display="Terrain Tags" muid="E08BCB8984275630" description="A set of terrain tags. Only one of these tags needs to be&#xA;present at this location. Although it is not tunable, there&#xA;is a threshold weight underneath which a terrain tag will&#xA;not appear to be present." Deprecated="False" filter="0" group="General" unique_entries="true">
                                    <TunableEnum type="TerrainTag" class="TunableEnumEntry" default="INVALID" muid="1AD7090A0218E446" static_entries="world-terrain_enums.TerrainTag" Deprecated="False" filter="0" group="General" />
                                </TunableList>
                                <Tunable type="bool" name="test_floor_tiles" class="Tunable" default="False" display="Test Floor Tiles" muid="84C964ADC848BB91" description="If checked, floor tiles will be tested. Otherwise, &#xA;it'll only check the terrain and will ignore the &#xA;floor tiles on the terrain." Deprecated="False" filter="0" group="General" />
                            </TunableTuple>
                        </TunableVariant>
                        <TunableVariant type="None" name="in_common_area" class="OptionalTunable" default="Don't_Test" display="In Common Area" muid="DCEB7CF175B10454" description="If checked, will verify the subject is in the common area&#xA;of an apartment.  If unchecked will verify the subject is not." Deprecated="False" filter="0" group="General">
                            <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="EB24D8A118DA1590" />
                            <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="9CCA991BA0740205" Deprecated="False" filter="0" group="General" />
                        </TunableVariant>
                        <TunableVariant type="None" name="is_fire_allowed" class="OptionalTunable" default="Don't_Test" display="Is Fire Allowed" muid="6128D9582EB18ED0" description="If checked, will verify if fire is possible at the subject's position. &#xA;If unchecked, will pass if fire is not possible.&#xA;If not enabled, doesn't care either way." Deprecated="False" filter="0" group="General">
                            <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="2C5266B08A0CC" />
                            <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="44731EB6BD822D72" Deprecated="False" filter="0" group="General" />
                        </TunableVariant>
                        <TunableVariant type="None" name="is_in_slot" class="OptionalTunable" default="Don't_Test" display="Is In Slot" muid="CC3FDD849D9B7E81" description="If enabled will test if the object is attacked/deattached to&#xA;any of possible tuned slots.&#xA;If you tune a slot type set the test will test if the object &#xA;is slotted or not slotted into into any of those types. " Deprecated="False" filter="0" group="General">
                            <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="230B132601D9C2D2" />
                            <TunableTuple name="enabled" class="TunableTuple" display="Enabled" muid="7AF85E4BEC0159FB" description="Test if an object is current slotted in any of a possible&#xA;list of slot types.&#xA;Empty slot type set is allowed for testing for slotted or&#xA;not slotted only." Deprecated="False" filter="0" group="General">
                                <TunableVariant type="None" name="slot_test_type" class="TunableVariant" default="any_slot" display="Slot Test Type" muid="9667A17698B1A67B" description="Strategy to test the slots:&#xA;Any Slot - is the object in any slot&#xA;Surface Slot - is object is in a surface slot&#xA;Specific Slot - is the object in specific list of slots" Deprecated="False" filter="0" group="General">
                                    <TunableTuple name="any_slot" class="TunableSlotTestType" display="Any Slot" muid="78A65AE374E083B1" description="Singleton factory for testing if object is slotted." Deprecated="False" filter="0" group="General">
                                        <Tunable type="bool" name="require_slotted" class="Tunable" default="True" display="Require Slotted" muid="36375111BB6565AD" description="If checked, return success if the object is slotted&#xA;If unchecked, test the absense of slotting." Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                    <TunableTuple name="specific_slot" class="TunableSpecificSlotTest" display="Specific Slot" muid="601B93BF72A064A7" description="Subclass of SlotTestType that can check against a specific&#xA;slot set." Deprecated="False" filter="0" group="General">
                                        <Tunable type="bool" name="require_slotted" class="Tunable" default="True" display="Require Slotted" muid="9C9432BBA8C2CA73" description="If checked, return success if the object is slotted&#xA;If unchecked, test the absense of slotting." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="slot_type_set" name="specific_slot_set" class="TunableReference" display="Specific Slot Set" muid="4CD9F80292648CA5" description="Set of slots the object may be attached to." allow_none="False" Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                    <TunableTuple name="surface_slot" class="TunableSurfaceSlotTest" display="Surface Slot" muid="E9FE80D8264A92AE" description="Subclass of SlotTestType that checks that a slot has&#xA;is_surface set to true." Deprecated="False" filter="0" group="General">
                                        <Tunable type="bool" name="require_slotted" class="Tunable" default="True" display="Require Slotted" muid="CDCB8F5C702B0EF5" description="If checked, return success if the object is slotted&#xA;If unchecked, test the absense of slotting." Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                </TunableVariant>
                            </TunableTuple>
                        </TunableVariant>
                        <TunableVariant type="None" name="is_inside_building" class="OptionalTunable" default="Don't_Test" display="Is Inside Building" muid="809EF0916BDE8010" description="If checked, will verify if the subject of the test is inside a&#xA;building. This uses a client function that checks if the block&#xA;the sim is mostly enclosed by walls or if not, if the adjoining&#xA;blocks are themselves enclosed. This should be used when we&#xA;want to test if a subject is inside a normally constructed &#xA;building. If we simply want to test whether the subject is &#xA;covered / has a roof over them, use is_outside. See comment on&#xA;is_outside for more details. If unchecked, will negate this &#xA;test." Deprecated="False" filter="0" group="General">
                            <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="472834F5E08ED4DF" />
                            <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="980D0B861767D16C" Deprecated="False" filter="0" group="General" />
                        </TunableVariant>
                        <TunableVariant type="None" name="is_natural_ground" class="OptionalTunable" default="Don't_Test" display="Is Natural Ground" muid="B0EF70B65B841A81" description="If checked, will verify the subject of the test is on natural &#xA;ground (no floor tiles are under him).&#xA;Otherwise, will verify the subject of the test is not on &#xA;natural ground." Deprecated="False" filter="0" group="General">
                            <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="2CA3249FBE3DA357" />
                            <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="985F6835F21539C1" Deprecated="False" filter="0" group="General" />
                        </TunableVariant>
                        <TunableVariant type="None" name="is_on_active_lot" class="OptionalTunable" default="Don't_Test" display="Is On Active Lot" muid="546C5F293AC4E547" description="If disabled the test will not be used.&#xA;If enabled and checked, the test will pass if the subject is&#xA;on the active lot. (their center is within the lot bounds)&#xA;If enabled and not checked, the test will pass if the subject is &#xA;outside of the active lot.&#xA;&#xA;For example, Ask To Leave is tuned with this enabled and checked&#xA;for the TargetSim. You can only ask someone to leave if they&#xA;are actually on the active lot, but not if they are wandering&#xA;around in the open streets." Deprecated="False" filter="0" group="General">
                            <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="99D47A065CFCCE14" />
                            <TunableTuple name="Is_or_is_not_on_active_lot" class="TunableTuple" display="Is Or Is Not On Active Lot" muid="4947AB9F61137ACD" Deprecated="False" filter="0" group="General">
                                <Tunable type="bool" name="include_spawn_point" class="Tunable" default="False" display="Include Spawn Point" muid="71DC801FD3877785" description="If set to true, we will consider the lot's spawn point as part of the active lot." Deprecated="False" filter="0" group="General" />
                                <Tunable type="bool" name="is_or_is_not_on_active_lot" class="Tunable" default="True" display="Is Or Is Not On Active Lot" muid="645F0CDCEDFCAC6F" description="If checked then the test will pass if the subject is on&#xA;the active lot." Deprecated="False" filter="0" group="General" />
                                <TunableVariant type="None" name="tolerance" class="TunableVariant" default="explicit" display="Tolerance" muid="821D84135B591FC" Deprecated="False" filter="0" group="General">
                                    <Tunable type="int" name="explicit" class="Tunable" default="0" display="Explicit" muid="75A9F6F0EC7A5293" description="The tolerance from the edge of the lot that the&#xA;location test will use in order to determine if the&#xA;test target is considered on lot or not." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                    <TunableTuple name="use_default_tolerance" class="UseDefaultOfflotToleranceFactory" display="Use Default Tolerance" muid="F505A8658E0CDBA" description="Use the default tuned global offlot tolerance tuned&#xA;in objects.components.statistic_component.Default Off Lot." Deprecated="False" filter="0" group="General" />
                                </TunableVariant>
                            </TunableTuple>
                        </TunableVariant>
                        <TunableVariant type="None" name="is_on_level" class="OptionalTunable" default="Don't_Test" display="Is On Level" muid="4E4AD5583CAC7AEE" description="If enabled, we check the participant's current level against&#xA;the tuned threshold.  In the case of sims in pools, the effective&#xA;level will be that of the surface of the pool, not the bottom." Deprecated="False" filter="0" group="General">
                            <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="6ED57D820F28D958" />
                            <TunableTuple name="enabled" class="TunableThreshold" display="Enabled" muid="B97A8F651BE25799" description="Value/comparison pair used to define a Threshold." Deprecated="False" filter="0" group="General">
                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="B0AFC3D20981445" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                <Tunable type="int" name="value" class="Tunable" default="0" display="Value" muid="6BDF8D19A342B07E" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                            </TunableTuple>
                        </TunableVariant>
                        <TunableVariant type="None" name="is_outside" class="OptionalTunable" default="Don't_Test" display="Is Outside" muid="D036FA91D91B6AAA" description="PLEASE BE AWARE. If checked, will verify if the subject of the&#xA;test does not have a roof over their head. If unchecked, will &#xA;test if the subject has a roof over their head. If the &#xA;intention is to determine if a subject is in/not in a building, &#xA;this test is deprecated in favor of is_inside_building. If you &#xA;would like to test if a subject is inside a building, but also &#xA;need to test if they have a roof over their head, please use &#xA;both options." Deprecated="False" filter="0" group="General">
                            <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="4915726464F36292" />
                            <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="A3C9E45E3371CD3D" Deprecated="False" filter="0" group="General" />
                        </TunableVariant>
                        <TunableVariant type="None" name="is_venue_type" class="OptionalTunable" default="Don't_Test" display="Is Venue Type" muid="58A8693C2759F6C1" description="If checked, will verify if the subject is at a venue of the&#xA;specified type." Deprecated="False" filter="0" group="General">
                            <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="C4DD95421ED07172" />
                            <TunableTuple name="enabled" class="TunableTuple" display="Enabled" muid="E4C3B3021858ED21" description="Venue type required for this test to pass." Deprecated="False" filter="0" group="General">
                                <Tunable type="bool" name="negate" class="Tunable" default="False" display="Negate" muid="9C0B34F770172BF" description="If enabled, the test will return true if the subject&#xA;IS NOT at a venue of the specified type." Deprecated="False" filter="0" group="General" />
                                <Tunable type="bool" name="use_source_venue" class="Tunable" default="False" display="Use Source Venue" muid="859B598D5493315E" description="If enabled, the test will test the source venue instead of the active&#xA;venue.  For example, the Community Lot instead of the active Marketplace.&#xA;Testing the active venue is the default." Deprecated="False" filter="0" group="General" />
                                <Tunable type="venue" name="venue_type" class="TunableReference" display="Venue Type" muid="FDDB204B64031A76" description="Venue type to test against." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                            </TunableTuple>
                        </TunableVariant>
                        <TunableVariant type="None" name="valid_surface_types" class="OptionalTunable" default="Don't_Test" display="Valid Surface Types" muid="29DA2FC88ABD5025" description="If enabled, we will test the surface type of the subject&#xA;against prohibited or required surface types." Deprecated="False" filter="0" group="General">
                            <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="509D3207DAB3A22E" />
                            <TunableTuple name="Test_Surface_Types" class="TunableWhiteBlackList" display="Test Surface Types" muid="494A4372077B5130" description="Required and Prohibited Surface Types. " Deprecated="False" filter="0" group="General">
                                <TunableVariant type="None" name="blacklist" class="OptionalTunable" default="nothing" display="Blacklist" muid="6C49408911FBB34F" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is not in the blacklist. If no blacklist is&#xA;specified, no items are disallowed." Deprecated="False" filter="0" group="General">
                                    <Tunable name="nothing" class="TunableExistance" display="Nothing" muid="85861B7C729A93D4" />
                                    <TunableTuple name="specify" class="TunableBlacklist" display="Specify" muid="73B0C74A27FE122" description="A tunable blacklist." Deprecated="False" filter="0" group="General">
                                        <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="8940F45BA9D3E426" description="Blacklisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                            <TunableEnum type="SurfaceType" class="TunableEnumEntry" default="SURFACETYPE_WORLD" muid="CCAF11AB4A128465" static_entries="routing.SurfaceType" description="Surface Type the object is placed on." Deprecated="False" filter="0" group="General" invalid_entries="SURFACETYPE_UNKNOWN" />
                                        </TunableList>
                                        <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="69D0F3D5B350AD51" description="Tunable option for how many items must be in the blacklist&#xA;for the blacklist to fail when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                            <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="5473809811048677" />
                                            <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="FB0AE02F78B32B8B" description="When testing a collection of items, the number of items in&#xA;that collection that are in the blacklist must pass this&#xA;threshold test for the blacklist to disallow them all." Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="5E86534412AAAECA" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="4CDC5C7901812C" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                        </TunableVariant>
                                    </TunableTuple>
                                </TunableVariant>
                                <TunableVariant type="None" name="whitelist" class="OptionalTunable" default="everything" display="Whitelist" muid="782913856FEB244C" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is in the whitelist. If no whitelist is&#xA;specified, all items are allowed." Deprecated="False" filter="0" group="General">
                                    <Tunable name="everything" class="TunableExistance" display="Everything" muid="AD19BDA02B3EA547" />
                                    <TunableTuple name="specify" class="TunableWhitelist" display="Specify" muid="E2A224E0E8B34AE9" description="A tunable whitelist." Deprecated="False" filter="0" group="General">
                                        <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="A18D14272292E4AA" description="Tunable option for how many items must be in the whitelist&#xA;for the whitelist to pass when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                            <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="9827FDCC6FE14C84" />
                                            <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="32FC5CFF1C7C140D" description="When testing a collection of items, the number of items in&#xA;that collection that are in the whitelist must pass this&#xA;threshold test for the whitelist to allow them all." Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="A3973163D4A672AA" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="F277E02AA7B79976" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                        </TunableVariant>
                                        <TunableList name="whitelist" class="TunableSet" display="Whitelist" muid="B8233B8DE66E881B" description="Whitelisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                            <TunableEnum type="SurfaceType" class="TunableEnumEntry" default="SURFACETYPE_WORLD" muid="2D8319B0571E5CA1" static_entries="routing.SurfaceType" description="Surface Type the object is placed on." Deprecated="False" filter="0" group="General" invalid_entries="SURFACETYPE_UNKNOWN" />
                                        </TunableList>
                                    </TunableTuple>
                                </TunableVariant>
                            </TunableTuple>
                        </TunableVariant>
                    </TunableTuple>
                </TunableTuple>
                <TunableTuple name="lot_owner" class="TunableLotOwnerTest" display="Lot Owner" muid="6AC21CEB9FA9DA75" description="Gate availability by whether a sim owns the lot the object is on or not." Deprecated="False" filter="0" group="General">
                    <Tunable type="bool" name="consider_business_lot_as_owned" class="Tunable" default="True" display="Consider Business Lot As Owned" muid="2B0AD38992BC13A9" description="If checked, business lots are considered owned. If unchecked, business&#xA;lots are considered unowned." Deprecated="False" filter="0" group="General" />
                    <Tunable type="bool" name="consider_rented_lot_as_owned" class="Tunable" default="True" display="Consider Rented Lot As Owned" muid="CE06B13905F19C5D" description="If checked, rented lots are considered owned. If unchecked, rented&#xA;lots are considered unowned." Deprecated="False" filter="0" group="General" />
                    <Tunable type="bool" name="invert" class="Tunable" default="False" display="Invert" muid="167233CE155609D1" description="If checked, this test will return the opposite of what it's tuned to&#xA;return. For instance, if this test is tuned to return True if the&#xA;active household owns the lot, but &quot;Invert&quot; is checked, it will&#xA;actually return False." Deprecated="False" filter="0" group="General" />
                    <Tunable type="bool" name="owns_lot" class="Tunable" default="True" display="Owns Lot" muid="B03064ABD12A83E9" description="If checked and subject owns the current lot then this test will&#xA;pass. If unchecked, subject does not own lot, this test will pass." Deprecated="False" filter="0" group="General" />
                </TunableTuple>
                <TunableTuple name="mood" class="TunableMoodTest" display="Mood" muid="C1BF3181CCEA68D6" description="A tunable test that tests if a Sim has the requested mood." Deprecated="False" filter="0" group="General">
                    <Tunable type="bool" name="disallow" class="Tunable" default="False" display="Disallow" muid="867E69D122767C4F" description="If True, this test will pass if the Sim's mood does NOT match the tuned mood reference." Deprecated="False" filter="0" group="General" />
                    <Tunable type="mood" name="mood" class="TunableReference" display="Mood" muid="6AA694192C4000BC" description="The mood that must be active (or must be inactive, if 'Disallow' is&#xA;checked)." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                </TunableTuple>
                <TunableTuple name="motive" class="TunableMotiveThresholdTest" display="Motive" muid="5C30D7C397D5C188" description="A tunable test method that checks one or many statistics against a threshold." Deprecated="False" filter="0" group="General">
                    <TunableList name="stats" class="TunableList" display="Stats" muid="E2E770551DB9229B" description="The stat we are operating on." Deprecated="False" filter="0" group="General">
                        <Tunable type="statistic" class="TunableReference" muid="30FD1C48796FCEA8" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                    </TunableList>
                    <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="5E5874170DF0348" description="The threshold to control availability based on the statistic's value." Deprecated="False" filter="0" group="General">
                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="87D501B0A6087DAD" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                        <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="1FB1BD1CD8623C43" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                    </TunableTuple>
                </TunableTuple>
                <Tunable name="none" class="TunableExistance" display="None" muid="C5EE6BC8DE626F45" />
                <TunableTuple name="ranked_statistic" class="TunableRankedStatThresholdTest" display="Ranked Statistic" muid="299770C196F39058" description="A test that checks whether or not a statistic is at a certain threshold for&#xA;a given participant." Deprecated="False" filter="0" group="General">
                    <Tunable type="bool" name="must_have_ranked_stat" class="Tunable" default="False" display="Must Have Ranked Stat" muid="E20CB21ACCECA1A7" description="Setting this to True (checked) will ensure that this test only&#xA;passes if the tested Sim actually has the ranked statistic &#xA;referenced. If left False (unchecked), this test will evaluate &#xA;as if the Sim had the ranked statistic at the value of 0" Deprecated="False" filter="0" group="General" />
                    <TunableVariant type="None" name="num_participants" class="OptionalTunable" default="all_participants" display="Num Participants" muid="E901F776521C46CF" description="If disabled, all participants must pass this stat test.&#xA;If enabled, we test against this number for the number of participants&#xA;that need this value of stat to pass. " Deprecated="False" filter="0" group="General">
                        <Tunable name="all_participants" class="TunableExistance" display="All Participants" muid="E8C779C1FA25DCC5" />
                        <TunableTuple name="enabled" class="TunableThreshold" display="Enabled" muid="3A87770005818D4C" description="The threshold of the number of participants who must meet the &#xA;criteria individually." Deprecated="False" filter="0" group="General">
                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="7A81EB0310024202" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                            <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="3E5460AC6837609" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                        </TunableTuple>
                    </TunableVariant>
                    <Tunable type="statistic" name="ranked_stat" class="TunableReference" display="Ranked Stat" muid="BB2D30674E08D624" description="The ranked stat we are operating on." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                    <Tunable type="bool" name="test_against_highest_rank" class="Tunable" default="False" display="Test Against Highest Rank" muid="AE0288ED7BE5D644" description="When checked this test will only return True is the highest rank&#xA;achieved is in the threshold specified, and not the current rank." Deprecated="False" filter="0" group="General" />
                    <TunableVariant type="None" name="threshold" class="TunableVariant" default="value_threshold" display="Threshold" muid="E42079CCC4FF975" description="The value or state threshold to test against." Deprecated="False" filter="0" group="General">
                        <TunableTuple name="state_value_threshold" class="TunableObjectStateValueThreshold" display="State Value Threshold" muid="41657F9802C59153" description="Value/comparison pair used to define a Threshold." Deprecated="False" filter="0" group="General">
                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="84702B7DDFE6302D" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                            <Tunable type="object_state" name="value" class="TunableReference" display="Value" muid="826C647EC2F40831" description="The state threshold for this test." allow_none="False" Deprecated="False" filter="0" group="General" restrict="ObjectStateValue" />
                        </TunableTuple>
                        <TunableTuple name="value_threshold" class="TunableThreshold" display="Value Threshold" muid="344DA5E3289D7A6B" description="The threshold to control availability based on the ranked&#xA;statistic's value." Deprecated="False" filter="0" group="General">
                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="C215CACC6113DDC4" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                            <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="95FB87BBC50FA15C" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                        </TunableTuple>
                    </TunableVariant>
                </TunableTuple>
                <TunableTuple name="sim_filter" class="TunableFilterTest" display="Sim Filter" muid="A684D7D797817350" description="A tunable test that checks to see if a sim matches a given filter." Deprecated="False" filter="0" group="General">
                    <Tunable type="float" name="duration_available" class="TunableSimMinute" default="120" display="Duration Available" muid="A5FB4F92C843DB2" min="0" max="None" description="The duration from now that will be used for the start&#xA;and end time of the filter request." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                    <TunableEnum type="ParticipantType" name="relative_sim" class="TunableEnumEntry" default="Actor" display="Relative Sim" muid="8F5A3609BE5A89DF" static_entries="interactions.ParticipantType" description="The sim that will be the relative sim that the filter will&#xA;check against for relative checks such as relationships or&#xA;household ids." Deprecated="False" filter="0" group="General" />
                    <Tunable type="sim_filter" name="sim_filter" class="TunableReference" display="Sim Filter" muid="2FCA473A35ED94B1" allow_none="False" Deprecated="False" filter="0" group="General" />
                    <TunableVariant type="None" name="threshold_matched" class="OptionalTunable" default="disabled" display="Threshold Matched" muid="1EED72B820AC0102" description="If enabled, we will require the number of Sims that match the&#xA;filter pass the threshold requirement. Otherwise we require all&#xA;Sims that the filter runs on to match.&#xA;&#xA;This is useful if you only need one or a number of Sims to match&#xA;the filter." Deprecated="False" filter="0" group="General">
                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="8F010774C2A4BEE4" />
                        <TunableTuple name="enabled" class="TunableThreshold" display="Enabled" muid="F0FAFAC0382A2FA" description="A threshold of how many sims should match the filter." Deprecated="False" filter="0" group="General">
                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="56AA76A67E11B5AB" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                            <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="5B6B3807714F1D2E" min="0" max="None" description="The number that describes the threshold for how many Sims&#xA;should match the filter." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                        </TunableTuple>
                    </TunableVariant>
                </TunableTuple>
                <TunableTuple name="sim_info" class="TunableSimInfoTest" display="Sim Info" muid="55971C3716398DC9" description="The SimInfo tests some of the basic aspects of a Sim, such as their age,&#xA;gender, or species." Deprecated="False" filter="0" group="General">
                    <TunableVariant type="None" name="ages" class="OptionalTunable" default="unspecified" display="Ages" muid="518BEAC0AA2265D6" description="The Sim must be one of the specified ages." Deprecated="False" filter="0" group="General">
                        <TunableList name="specified" class="TunableEnumSet" default="TEEN,YOUNGADULT,ADULT,ELDER" display="Specified" muid="7116F010AB70B0AE" description="The Sim must be one of the specified ages." Deprecated="False" filter="0" group="General" unique_entries="true">
                            <TunableEnum type="Age" class="TunableEnumEntry" default="ADULT" muid="A36B7C36D9B6EBCC" static_entries="sims-sim_info_types.Age" Deprecated="False" filter="0" group="General" />
                        </TunableList>
                        <Tunable name="unspecified" class="TunableExistance" display="Unspecified" muid="FEF887814AA574FA" />
                    </TunableVariant>
                    <TunableVariant type="None" name="can_age_up" class="OptionalTunable" default="unspecified" display="Can Age Up" muid="AA8A2CAC98243F2D" description="Whether the Sim is eligible to advance to the next age." Deprecated="False" filter="0" group="General">
                        <Tunable type="bool" name="specified" class="Tunable" default="None" display="Specified" muid="5715F313F54A76AB" description="Whether the Sim is eligible to advance to the next age." Deprecated="False" filter="0" group="General" />
                        <Tunable name="unspecified" class="TunableExistance" display="Unspecified" muid="7EB2EA5952C4991B" />
                    </TunableVariant>
                    <TunableVariant type="None" name="gender" class="OptionalTunable" default="unspecified" display="Gender" muid="DEBB8023BB807962" description="The Sim must be of the specified gender." Deprecated="False" filter="0" group="General">
                        <TunableEnum type="Gender" name="specified" class="TunableEnumEntry" default="None" display="Specified" muid="CC69EC457C17B95D" static_entries="sims-sim_info_types.Gender" description="The Sim must be of the specified gender." Deprecated="False" filter="0" group="General" />
                        <Tunable name="unspecified" class="TunableExistance" display="Unspecified" muid="4B4FA4B192BAEE57" />
                    </TunableVariant>
                    <TunableVariant type="None" name="has_been_played" class="OptionalTunable" default="disabled" display="Has Been Played" muid="D6A1D7A9E1A28AB9" description="Whether the Sim has ever been played as a Playable Sim.&#xA;If enabled and true, the Sim must have been played by the player.&#xA;If enabled and false, the Sim must never have been played.&#xA;If disabled, this portion of the Sim Info test will be ignored." Deprecated="False" filter="0" group="General">
                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="94441A8A22287606" />
                        <Tunable type="bool" name="enabled" class="Tunable" default="False" display="Enabled" muid="5BB830B4B66A3BAF" description="Whether the Sim has ever been played as a Playable Sim.&#xA;If enabled and true, the Sim must have been played by the player.&#xA;If enabled and false, the Sim must never have been played.&#xA;If disabled, this portion of the Sim Info test will be ignored." Deprecated="False" filter="0" group="General" />
                    </TunableVariant>
                    <TunableVariant type="None" name="is_active_sim" class="OptionalTunable" default="disabled" display="Is Active Sim" muid="FD505ABE5606322A" description="Whether the Sim must be the active selected Sim.&#xA;If enabled and true, the sim must active for this test to pass.&#xA;If enabled and false, the sim must not be active for this test to pass.&#xA;If disabled, this portion of the Sim Info test will be ignored." Deprecated="False" filter="0" group="General">
                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="72F880B0EB815D46" />
                        <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="A25E967D028D1244" description="Whether the Sim must be the active selected Sim.&#xA;If enabled and true, the sim must active for this test to pass.&#xA;If enabled and false, the sim must not be active for this test to pass.&#xA;If disabled, this portion of the Sim Info test will be ignored." Deprecated="False" filter="0" group="General" />
                    </TunableVariant>
                    <TunableEnum type="MatchType" name="match_type" class="TunableEnumEntry" default="MATCH_ALL" display="Match Type" muid="767A1429A186641A" static_entries="sims-sim_info_tests.MatchType" description="When testing multiple participants if MATCH_ALL is set, then all the&#xA;participants need to pass the test.&#xA; &#xA;If MATCH_ANY is set, test will pass as soon as one of them meet the&#xA;criteria" Deprecated="False" filter="0" group="General" />
                    <TunableVariant type="None" name="npc" class="OptionalTunable" default="disabled" display="Npc" muid="DAB993D27D2A89AC" description="Whether the Sim must be an NPC or Playable Sim.&#xA;If enabled and true, the sim must be an NPC for this test to pass.&#xA;If enabled and false, the sim must be playable, non-NPC sim for this test to pass.&#xA;If disabled, this portion of the Sim Info test will be ignored.&#xA;&#xA;Note: NPC in this case means a Sim that is not currently&#xA;controllable (selectable), or Not Player Controllable. If you&#xA;need to know if the Sim has ever been played, use 'Has Been&#xA;Played'" Deprecated="False" filter="0" group="General">
                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="651B18717AC6253B" />
                        <Tunable type="bool" name="enabled" class="Tunable" default="False" display="Enabled" muid="C270E7D8889F8631" description="Whether the Sim must be an NPC or Playable Sim.&#xA;If enabled and true, the sim must be an NPC for this test to pass.&#xA;If enabled and false, the sim must be playable, non-NPC sim for this test to pass.&#xA;If disabled, this portion of the Sim Info test will be ignored.&#xA;&#xA;Note: NPC in this case means a Sim that is not currently&#xA;controllable (selectable), or Not Player Controllable. If you&#xA;need to know if the Sim has ever been played, use 'Has Been&#xA;Played'" Deprecated="False" filter="0" group="General" />
                    </TunableVariant>
                    <TunableVariant type="None" name="species" class="TunableVariant" default="unspecified" display="Species" muid="B3EAA2B73184952B" Deprecated="False" filter="0" group="General">
                        <TunableTuple name="specified" class="Tunable_SpeciesTestSpecies" display="Specified" muid="D9788314B389FF7B" description="The Sim must be one of the specified species. Species are consolidated, e.g.&#xA;large/small dog are both DOG." Deprecated="False" filter="0" group="General">
                            <TunableList name="species" class="TunableEnumSet" display="Species" muid="3FF424AE11820ABE" description="The Sim must be one of the specified species. Species are&#xA;consolidated, e.g. large/small dog are both DOG." Deprecated="False" filter="0" group="General" unique_entries="true">
                                <TunableEnum type="Species" class="TunableEnumEntry" default="HUMAN" muid="E23297CE8DB4D8DD" static_entries="sims-sim_info_types.Species" Deprecated="False" filter="0" group="General" invalid_entries="INVALID" />
                            </TunableList>
                        </TunableTuple>
                        <TunableTuple name="specified_extended" class="Tunable_SpeciesTestExtendedSpecies" display="Specified Extended" muid="32DB62C4BD7B6AE2" description="The Sim must be one of the specified species. Species are *not* consolidated,&#xA;e.g. large/small dog are different species." Deprecated="False" filter="0" group="General">
                            <TunableList name="species" class="TunableEnumSet" display="Species" muid="5DBEC3D1EDFD5CDF" description="The Sim must be one of the specified species. Species are *not*&#xA;consolidated, e.g. large/small dog are different species." Deprecated="False" filter="0" group="General" unique_entries="true">
                                <TunableEnum type="SpeciesExtended" class="TunableEnumEntry" default="Species.HUMAN" muid="E38169E1905E51D7" static_entries="sims-sim_info_types.SpeciesExtended" Deprecated="False" filter="0" group="General" invalid_entries="INVALID" />
                            </TunableList>
                        </TunableTuple>
                        <Tunable name="unspecified" class="TunableExistance" display="Unspecified" muid="83CE3B0FA26E9A0" />
                    </TunableVariant>
                </TunableTuple>
                <TunableTuple name="situation_job" class="TunableSituationJobTest" display="Situation Job" muid="EA82D6882A7C3462" description="Require the tuned participant to have a specific situation job.&#xA;If multiple participants, ALL participants must have the required&#xA;job to pass." Deprecated="False" filter="0" group="General">
                    <Tunable type="bool" name="negate" class="Tunable" default="False" display="Negate" muid="41DF23ADF8139B9C" description="If checked then the test result will be reversed, so it will&#xA;test to see if they are not in a job or not in role state&#xA;that has matching tags." Deprecated="False" filter="0" group="General" />
                    <TunableList name="role_tags" class="TunableSet" display="Role Tags" muid="E8C94E61C20618AC" description="The  participant must have a job that matches the role_tags or&#xA;have the situation_job." Deprecated="False" filter="0" group="General" unique_entries="true">
                        <TunableEnum type="Tag" class="TunableEnumEntry" default="INVALID" muid="3F45496911229BA3" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" Deprecated="False" filter="0" group="General" pack_safe="True" />
                    </TunableList>
                    <TunableList name="situation_jobs" class="TunableSet" display="Situation Jobs" muid="D6165E27650CFA3" description="The participant must have this job in this list or a job that&#xA;matches the role_tags." Deprecated="False" filter="0" group="General" unique_entries="true">
                        <Tunable type="situation_job" class="TunableReference" muid="1D4AF6BBC083D9E5" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                    </TunableList>
                </TunableTuple>
                <TunableTuple name="skill_tag" class="TunableSkillTagThresholdTest" display="Skill Tag" muid="9A85C514BA7E0C94" description="A tunable test method that checks the TAGS of ALL THE PARTICIPANTS SKILLS each against a threshold." Deprecated="False" filter="0" group="General">
                    <Tunable type="int" name="skill_quantity" class="Tunable" default="0" display="Skill Quantity" muid="5D57C5F640E160F4" description="The minimum number of skills at or above this level required to pass." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                    <TunableEnum type="Tag" name="skill_tag" class="TunableEnumEntry" default="INVALID" display="Skill Tag" muid="D09D867B39C6C2EC" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="What tag to test for." Deprecated="False" filter="0" group="General" invalid_entries="INVALID" />
                    <TunableTuple name="skill_threshold" class="TunableThreshold" display="Skill Threshold" muid="79E21E76A30AC375" description="The threshold level to test of each skill." Deprecated="False" filter="0" group="General">
                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="B64A7489C8FC53F0" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                        <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="FA7ED7BD8125CC9E" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                    </TunableTuple>
                    <Tunable type="bool" name="test_only_changed_skill" class="Tunable" default="False" display="Test Only Changed Skill" muid="36D2762F0DC541DD" description="If checked then we will only test the skill that actually changed." Deprecated="False" filter="0" group="General" />
                </TunableTuple>
                <TunableTuple name="skill_test" class="TunableSkillRangeTest" display="Skill Test" muid="182EDA79DFA3CDA" description="A test requiring a Sim to have a skill that is either above a threshold or&#xA;within an interval." Deprecated="False" filter="0" group="General">
                    <Tunable type="statistic" name="skill" class="TunableReference" display="Skill" muid="D2E6482B869FA8AB" description="The skill to test against. &#xA;&#xA;Should the Sim not have the specified skill, or should the skill not&#xA;be available because of pack restrictions, this Sim will be&#xA;considered at level 0." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="Skill" />
                    <TunableVariant type="None" name="skill_range" class="TunableVariant" default="interval" display="Skill Range" muid="D63F60D50BB3CF34" description="A skill range defined by either an interval or a threshold." Deprecated="False" filter="0" group="General">
                        <TunableTuple name="interval" class="TunableSkillInterval" display="Interval" muid="9C8EBF78075D4179" description="A TunableThreshold that is specifically used in Skill Range Tests to determine if a skill meets the required skill level." Deprecated="False" filter="0" group="General">
                            <TunableTuple name="skill_interval" class="TunableInterval" display="Skill Interval" muid="F4ECA0DFE9972FCF" description="The range (inclusive) a skill level must be in to pass this test." Deprecated="False" filter="0" group="General">
                                <Tunable type="int" name="lower_bound" class="TunableRange" default="1" display="Lower Bound" muid="6FAA31824D234BDE" min="0" max="None" description="The lower bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                <Tunable type="int" name="upper_bound" class="TunableRange" default="10" display="Upper Bound" muid="B377EAC6E0141850" min="None" max="20" description="The upper bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                            </TunableTuple>
                        </TunableTuple>
                        <TunableTuple name="threshold" class="TunableSkillThreshold" display="Threshold" muid="924BA123427238EF" description="A TunableThreshold that is specifically used in Skill Range Tests to determine if a skill meets the required skill level.&quot; " Deprecated="False" filter="0" group="General">
                            <TunableTuple name="skill_threshold" class="TunableThreshold" display="Skill Threshold" muid="B7EA9E06E69EFB87" description="The Threshold for the skill level to be valid." Deprecated="False" filter="0" group="General">
                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="A04BBF7535841BB7" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                <Tunable type="int" name="value" class="Tunable" default="0" display="Value" muid="68D8EEFCC83D1629" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                            </TunableTuple>
                        </TunableTuple>
                    </TunableVariant>
                    <TunableEnum type="ParticipantType" name="subject" class="TunableEnumEntry" default="Actor" display="Subject" muid="8F9D2DDD5A5AB8FA" static_entries="interactions.ParticipantType" description="The subject of this test." Deprecated="False" filter="0" group="General" />
                    <Tunable type="bool" name="use_effective_skill_level" class="Tunable" default="False" display="Use Effective Skill Level" muid="6E064F1696722A3C" description="If checked, then instead of using the skill's actual level, the test&#xA;will use the skill's effective level for the purpose of satisfying&#xA;the specified criteria." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                </TunableTuple>
                <TunableTuple name="statistic" class="TunableStatThresholdTest" display="Statistic" muid="377629DFA9920D00" description="A test that checks whether or not a statistic is at a certain threshold for&#xA;a given participant. It can also test whether or not the participant has the&#xA;statistic explicitly added on them." Deprecated="False" filter="0" group="General">
                    <Tunable type="bool" name="must_have_stat" class="Tunable" default="False" display="Must Have Stat" muid="413336F00985A0E2" description="Setting this to True (checked) will ensure that this test only&#xA;passes if the tested Sim actually has the statistic referenced. If&#xA;left False (unchecked), this test will evaluate as if the Sim had&#xA;the statistic at the value of 0" Deprecated="False" filter="0" group="General" />
                    <TunableVariant type="None" name="score_to_use" class="TunableVariant" default="user_value" display="Score To Use" muid="5B8F04A98BF823B0" description="Depending on the choice, this decides what value to use for the &#xA;threshold comparison." Deprecated="False" filter="0" group="General">
                        <TunableTuple name="points" class="Tunable_PointsValue" display="Points" muid="E19CE0693E483749" description="Use the raw points for the comparison in the test." Deprecated="False" filter="0" group="General" />
                        <TunableTuple name="rank" class="Tunable_RankValue" display="Rank" muid="4B2133B9373A109A" description="Use the rank value for the comparison in the test." Deprecated="False" filter="0" group="General" />
                        <TunableTuple name="user_value" class="Tunable_UserValue" display="User Value" muid="B3027265EB5B9E87" description="Use the user value for the comparison in the test." Deprecated="False" filter="0" group="General">
                            <Tunable type="bool" name="highest_level_reached_instead" class="Tunable" default="False" display="Highest Level Reached Instead" muid="216437912FBDFE39" description="If checked this will test against the highest level reached. This&#xA;currently only works with Ranked Statistics. Other statistics do&#xA;not have a notion of highest level reached. If we are using&#xA;something that doesn't support highest level reached it will &#xA;test against the current level instead." Deprecated="False" filter="0" group="General" />
                        </TunableTuple>
                    </TunableVariant>
                    <Tunable type="statistic" name="stat" class="TunableReference" display="Stat" muid="970004ACCAF6CAE1" description="The stat we are operating on." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                    <TunableVariant type="None" name="threshold" class="TunableVariant" default="value_threshold" display="Threshold" muid="E99D1B9E7DF2E305" description="The value or state threshold to test against." Deprecated="False" filter="0" group="General">
                        <TunableTuple name="state_value_threshold" class="TunableObjectStateValueThreshold" display="State Value Threshold" muid="6C42D3B67C13FEFE" description="Value/comparison pair used to define a Threshold." Deprecated="False" filter="0" group="General">
                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="86382FEAE31DFA5B" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                            <Tunable type="object_state" name="value" class="TunableReference" display="Value" muid="3C7887DDB7358FD5" description="The state threshold for this test." allow_none="False" Deprecated="False" filter="0" group="General" restrict="ObjectStateValue" />
                        </TunableTuple>
                        <TunableTuple name="value_threshold" class="TunableThreshold" display="Value Threshold" muid="CCC2BDA734EC98C1" description="The threshold to control availability based on the statistic's&#xA;value." Deprecated="False" filter="0" group="General">
                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="43FE9C2E39936397" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                            <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="7217ACFE62F2D3B" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                        </TunableTuple>
                    </TunableVariant>
                </TunableTuple>
                <TunableTuple name="trait" class="TunableTraitTest" display="Trait" muid="A2B2F617A6BD53A5" description="Test to require a Sim to have or not have certain specific traits." Deprecated="False" filter="0" group="General">
                    <Tunable type="bool" name="apply_thresholds_on_individual_basis" class="Tunable" default="True" display="Apply Thresholds On Individual Basis" muid="8CFAF43BAF639E5F" description="If checked then Num Whitelist Required and Num Blacklist Allowed&#xA;will be applied to each individual participant from the subject.&#xA;If unchecked then it will apply the values to the total whitelist&#xA;and blacklist matches on the group.&#xA;&#xA;IMPORTANT!!!&#xA;In the case of objectives this should probably be set to false&#xA;since we know that this is coming from only one sim and that we&#xA;want to use the value that comes out of the test result numeric.&#xA;This isn't just locked to being this value since there are valid&#xA;cases within that system when you are looking at a group of sims&#xA;and could want to test that one of your sims passes.  Ex. Having&#xA;a ghost sim in the household." Deprecated="False" filter="0" group="General" />
                    <TunableList name="blacklist_trait_types" class="TunableEnumSet" display="Blacklist Trait Types" muid="EA6901D195E53776" description="The Sim is required to not have traits of these types to pass this &#xA;test. Should Num Blacklist Allowed be specified, then the Sim is &#xA;allowed to have up to that amount of blacklisted traits before &#xA;failing this test." Deprecated="False" filter="0" group="General" unique_entries="true">
                        <TunableEnum type="TraitType" class="TunableEnumEntry" default="PERSONALITY" muid="F4FDBCD85182E077" static_entries="traits-trait_type.TraitType" Deprecated="False" filter="0" group="General" />
                    </TunableList>
                    <TunableList name="blacklist_traits" class="TunableList" display="Blacklist Traits" muid="4FE93EFA3805B8B1" description="The is required to not have traits from this list in order to pass&#xA;this test. Should num_blacklist_allowed be specified, then the Sim&#xA;is allowed to have up to that amount of blacklisted traits before&#xA;failing this test." Deprecated="False" filter="0" group="General">
                        <Tunable type="trait" class="TunableReference" muid="5B90F73F18D98A21" description="A blacklist trait." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                    </TunableList>
                    <Tunable type="int" name="num_blacklist_allowed" class="Tunable" default="0" display="Num Blacklist Allowed" muid="B8FD8E6B5BC01094" description="The threshold of blacklist traits owned by the specified Sim that&#xA;will trigger a test failure." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                    <Tunable type="int" name="num_whitelist_required" class="Tunable" default="1" display="Num Whitelist Required" muid="B21D1F5FC67DB99A" description="The number of whitelist traits that the specified Sim is required to&#xA;have in order to pass this test." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                    <TunableList name="whitelist_trait_types" class="TunableEnumSet" display="Whitelist Trait Types" muid="4C6FC0621F9286CC" description="The Sim is required to have the specified number of traits with &#xA;these types in order to pass the test." Deprecated="False" filter="0" group="General" unique_entries="true">
                        <TunableEnum type="TraitType" class="TunableEnumEntry" default="PERSONALITY" muid="C701A5BAB6A63860" static_entries="traits-trait_type.TraitType" Deprecated="False" filter="0" group="General" />
                    </TunableList>
                    <TunableList name="whitelist_traits" class="TunableList" display="Whitelist Traits" muid="CB9CA48A68957C77" description="The Sim is required to have the specified number of traits from this&#xA;list in order to pass the test." Deprecated="False" filter="0" group="General">
                        <Tunable type="trait" class="TunableReference" muid="89635A3E37998645" description="A whitelist trait. Please note: for pack-safe entries that are&#xA;not loaded, the game will behave as if the entry doesn't exist.&#xA;This allows you to specify a pack trait and required count of 1&#xA;and always fail the test should the appropriate pack not be&#xA;installed." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                    </TunableList>
                </TunableTuple>
                <TunableTuple name="zone" class="TunableZoneTest" display="Zone" muid="F517FB84E47735D2" description="A tunable factory that tests properties of a particular zone." Deprecated="False" filter="0" group="General">
                    <TunableVariant type="None" name="zone_source" class="TunableVariant" default="use_current_zone" display="Zone Source" muid="968E3EB8D0883C8E" description="Which zone we want to test." Deprecated="False" filter="0" group="General">
                        <TunableTuple name="use_current_zone" class="TunableActiveZone" display="Use Current Zone" muid="5EE9B3BE9F477D52" description="Get the active zone." Deprecated="False" filter="0" group="General" />
                        <TunableTuple name="use_participant_home_zone" class="TunableParticipantHomeZone" display="Use Participant Home Zone" muid="A5586BCF18661633" description="Get a participant's home zone. Can be None if they don't have one." Deprecated="False" filter="0" group="General">
                            <TunableEnum type="ParticipantTypeSingleSim" name="participant" class="TunableEnumEntry" default="Actor" display="Participant" muid="A9E3FD7A06E767B9" static_entries="interactions.ParticipantTypeSingleSim" description="Test against the participant's home zone. Townies' home zone will&#xA;be None." Deprecated="False" filter="0" group="General" />
                        </TunableTuple>
                        <TunableTuple name="use_pick_info" class="TunablePickInfoZone" display="Use Pick Info" muid="EC8765EEC6D39CF9" description="Get the zone of the lot the user clicked on." Deprecated="False" filter="0" group="General" />
                        <TunableTuple name="use_picked_zone_ids" class="TunablePickedZoneIds" display="Use Picked Zone Ids" muid="C9762DF39E449538" description="Get the zone from the interaction's picked_zone_ids participant. Usually&#xA;comes from a picker." Deprecated="False" filter="0" group="General" />
                    </TunableVariant>
                    <TunableTuple name="zone_tests" class="TunableTuple" display="Zone Tests" muid="CC2C44CCBF7C8DA1" description="The tests we wish to run on the zone in question." Deprecated="False" filter="0" group="General">
                        <TunableVariant type="None" name="business_tests" class="OptionalTunable" default="Don't_Test" display="Business Tests" muid="4FF67524811601C6" description="If enabled, test if the specified zone is a business or not." Deprecated="False" filter="0" group="General">
                            <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="D407BE53BE714CA9" />
                            <TunableVariant type="None" name="enabled" class="TunableVariant" default="is_business" display="Enabled" muid="6D6D532E973BBDF5" description="Test if the zone is a business, an open business, or a&#xA;closed business." Deprecated="False" filter="0" group="General">
                                <TunableTuple name="is_business" class="Tunable_IsBusinessTest" display="Is Business" muid="8BEDE99E093B8EB8" description="Test if the zone specified by the zone id is a business or not." Deprecated="False" filter="0" group="General" />
                                <TunableTuple name="is_business_open" class="Tunable_IsBusinessOpenTest" display="Is Business Open" muid="BBA0230E023F7F78" description="Test if the zone specified by the zone id is an open business." Deprecated="False" filter="0" group="General" />
                            </TunableVariant>
                        </TunableVariant>
                        <TunableVariant type="None" name="is_apartment" class="OptionalTunable" default="Don't_Test" display="Is Apartment" muid="9B515545EE398C85" description="If checked, test will pass if the zone is an apartment. If&#xA;unchecked, test passes if the zone is NOT an apartment. Useful&#xA; in aspiration tuning, to discriminate between property&#xA;types in tests of lot value. Allows &quot;Own a House worth X&quot; and&#xA;&quot;Own an Apartment worth X&quot;" Deprecated="False" filter="0" group="General">
                            <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="749E1CACC6837E2D" />
                            <TunableTuple name="Is_or_is_not_apartment_zone" class="TunableTuple" display="Is Or Is Not Apartment Zone" muid="9A829FD139DA09DF" description="Test whether the zone is an apartment or not." Deprecated="False" filter="0" group="General">
                                <Tunable type="bool" name="consider_penthouse_an_apartment" class="Tunable" default="True" display="Consider Penthouse An Apartment" muid="16DF223042314A23" description="If enabled, we will consider penthouses to be&#xA;apartments when testing them against the apartment&#xA;check." Deprecated="False" filter="0" group="General" />
                                <Tunable type="bool" name="is_apartment" class="Tunable" default="True" display="Is Apartment" muid="6E5EB7E2EFDC634F" description="If checked, test will pass if the zone is an apartment.&#xA;If unchecked, test passes if the zone is NOT an&#xA;apartment." Deprecated="False" filter="0" group="General" />
                            </TunableTuple>
                        </TunableVariant>
                        <TunableVariant type="None" name="is_penthouse" class="OptionalTunable" default="disabled" display="Is Penthouse" muid="6B856A3DF2B78084" description="If enabled, test whether or not the current zone is a penthouse." Deprecated="False" filter="0" group="General">
                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="4B12317AA2EF0D3C" />
                            <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="4F9AC4C88089E393" description="If checked, the zone must be a penthouse. If unchecked, the&#xA;zone cannot be a penthouse." Deprecated="False" filter="0" group="General" />
                        </TunableVariant>
                        <Tunable type="bool" name="use_source_venue" class="Tunable" default="False" display="Use Source Venue" muid="B741392EC9361801" description="If enabled, the test will test the source venue instead of the active&#xA;venue.  For example, the Community Lot instead of the active Marketplace.&#xA;Testing the active venue is the default." Deprecated="False" filter="0" group="General" />
                        <TunableVariant type="None" name="venue_tier" class="OptionalTunable" default="disabled" display="Venue Tier" muid="4EA13498EA91BD35" description="If checked, will verify that the zone's venue is at the tuned &#xA;tier. If &quot;no valid tier&quot; is selected, this test will be True&#xA;if either the current venue doesn't have tiers or if it does but&#xA;it doesn't currently meet any of their requirements." Deprecated="False" filter="0" group="General">
                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="D2D6CFBDCDF1E2E9" />
                            <TunableVariant type="None" name="enabled" class="TunableVariant" default="none" display="Enabled" muid="56C8004091E5E30B" description="                    " Deprecated="False" filter="0" group="General">
                                <Tunable name="no_valid_tier" class="TunableExistance" display="No Valid Tier" muid="8E049146B6C44CCD" />
                                <Tunable name="none" class="TunableExistance" display="None" muid="BA2DD9B87851FAF4" />
                                <Tunable type="int" name="tier_number" class="TunableRange" default="0" display="Tier Number" muid="80D4F46BE2291DBF" min="0" max="None" description="The index of the tier to test. This test will return&#xA;true if this tier is active and false otherwise. This&#xA;should be the index of the tier in the tier list and not&#xA;any player-facing index. For instance, if a tier list&#xA;had a single tier, that tier would be 0, and if a second&#xA;tier were added, that second tier would be 1." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                            </TunableVariant>
                        </TunableVariant>
                        <TunableVariant type="None" name="venue_type" class="OptionalTunable" default="Don't_Test" display="Venue Type" muid="27A9A0D0128167EF" description="If checked, will verify the zone's venue type is allowed or&#xA;disallowed." Deprecated="False" filter="0" group="General">
                            <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="833E30922DB1A008" />
                            <TunableTuple name="enabled" class="TunableWhiteBlackList" display="Enabled" muid="F3A08098947B9B1B" description="The zone's venue type must pass the whitelist and blacklist&#xA;to pass the test." Deprecated="False" filter="0" group="General">
                                <TunableVariant type="None" name="blacklist" class="OptionalTunable" default="nothing" display="Blacklist" muid="948620615AB51072" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is not in the blacklist. If no blacklist is&#xA;specified, no items are disallowed." Deprecated="False" filter="0" group="General">
                                    <Tunable name="nothing" class="TunableExistance" display="Nothing" muid="471D18FD8C101657" />
                                    <TunableTuple name="specify" class="TunableBlacklist" display="Specify" muid="8B06F56E702FA570" description="A tunable blacklist." Deprecated="False" filter="0" group="General">
                                        <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="677CBE406942B270" description="Blacklisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                            <Tunable type="venue" class="TunableReference" muid="FFE1995CBED8DF05" description="Allowed and disallowed venue types." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                        </TunableList>
                                        <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="F1C050AD79B7933D" description="Tunable option for how many items must be in the blacklist&#xA;for the blacklist to fail when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                            <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="3022DA20DE836140" />
                                            <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="132218AA485B29A2" description="When testing a collection of items, the number of items in&#xA;that collection that are in the blacklist must pass this&#xA;threshold test for the blacklist to disallow them all." Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="41D1E87B2468C1E2" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="C25B09624B948A4B" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                        </TunableVariant>
                                    </TunableTuple>
                                </TunableVariant>
                                <TunableVariant type="None" name="whitelist" class="OptionalTunable" default="everything" display="Whitelist" muid="3BF8367CBB810F53" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is in the whitelist. If no whitelist is&#xA;specified, all items are allowed." Deprecated="False" filter="0" group="General">
                                    <Tunable name="everything" class="TunableExistance" display="Everything" muid="C723BA8ACA2CFDC6" />
                                    <TunableTuple name="specify" class="TunableWhitelist" display="Specify" muid="8DD781F325F651F7" description="A tunable whitelist." Deprecated="False" filter="0" group="General">
                                        <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="6D0C24A8681F3AC4" description="Tunable option for how many items must be in the whitelist&#xA;for the whitelist to pass when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                            <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="A96B4E199B5F95A4" />
                                            <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="A9075D79E313C1D0" description="When testing a collection of items, the number of items in&#xA;that collection that are in the whitelist must pass this&#xA;threshold test for the whitelist to allow them all." Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="CEB9C69BA0A05D2D" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="C3093CC3A1138B25" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                        </TunableVariant>
                                        <TunableList name="whitelist" class="TunableSet" display="Whitelist" muid="726776DCC5BC6A07" description="Whitelisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                            <Tunable type="venue" class="TunableReference" muid="BA98A60FC2C0C223" description="Allowed and disallowed venue types." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                        </TunableList>
                                    </TunableTuple>
                                </TunableVariant>
                            </TunableTuple>
                        </TunableVariant>
                        <TunableVariant type="None" name="was_owner_household_changed" class="OptionalTunable" default="Don't_Test" display="Was Owner Household Changed" muid="4B9C614A67C24BCE" description="If enabled, test if the lot owner household for the specified zone &#xA;was changed between when the zone was saved and when it was loaded." Deprecated="False" filter="0" group="General">
                            <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="1D1CFD6EC2A9EB91" />
                            <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="C9523DE3BFAE972F" description="If checked,  test will pass if the zone's owner household was changed &#xA;between when the zone was saved and when it was loaded. &#xA;If unchecked, test will pass if the zone's owner household was NOT changed &#xA;between when the zone was saved and when it was loaded. " Deprecated="False" filter="0" group="General" />
                        </TunableVariant>
                        <TunableVariant type="None" name="world_tests" class="OptionalTunable" default="disabled" display="World Tests" muid="61549375BBF54B99" description="If enabled, we test if specified zone is or is not in the specified world(s)" Deprecated="False" filter="0" group="General">
                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="4453CC759D9E9FC7" />
                            <TunableTuple name="enabled" class="TunableWhiteBlackList" display="Enabled" muid="E6324C37591D9D86" description="Pass if zone is in one of the worlds in the whitelist,&#xA;or fail if it is any of the worlds in the blacklist." Deprecated="False" filter="0" group="General">
                                <TunableVariant type="None" name="blacklist" class="OptionalTunable" default="nothing" display="Blacklist" muid="952C4122023F9C04" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is not in the blacklist. If no blacklist is&#xA;specified, no items are disallowed." Deprecated="False" filter="0" group="General">
                                    <Tunable name="nothing" class="TunableExistance" display="Nothing" muid="1A24C466BF1F35A0" />
                                    <TunableTuple name="specify" class="TunableBlacklist" display="Specify" muid="6F9B00539ED2593C" description="A tunable blacklist." Deprecated="False" filter="0" group="General">
                                        <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="CED79FD236284656" description="Blacklisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                            <Tunable type="worlddescription" class="TunableReference" muid="9924C1B72FAE5DCD" description="World to check against." Deprecated="False" filter="0" group="General" pack_safe="True" />
                                        </TunableList>
                                        <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="289D325415C0E8F6" description="Tunable option for how many items must be in the blacklist&#xA;for the blacklist to fail when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                            <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="559A29729C32CB4A" />
                                            <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="EFFF0C0542ED944D" description="When testing a collection of items, the number of items in&#xA;that collection that are in the blacklist must pass this&#xA;threshold test for the blacklist to disallow them all." Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="1BE83E673DEE173D" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="D8B38FE3F3612EEB" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                        </TunableVariant>
                                    </TunableTuple>
                                </TunableVariant>
                                <TunableVariant type="None" name="whitelist" class="OptionalTunable" default="everything" display="Whitelist" muid="2AF06BBF3F396209" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is in the whitelist. If no whitelist is&#xA;specified, all items are allowed." Deprecated="False" filter="0" group="General">
                                    <Tunable name="everything" class="TunableExistance" display="Everything" muid="7B2D56F83C88BAE9" />
                                    <TunableTuple name="specify" class="TunableWhitelist" display="Specify" muid="71ED172F6BE1D4E3" description="A tunable whitelist." Deprecated="False" filter="0" group="General">
                                        <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="FC776568F9CDA177" description="Tunable option for how many items must be in the whitelist&#xA;for the whitelist to pass when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                            <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="6C5FB189117B23C0" />
                                            <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="7263C40E3BD06075" description="When testing a collection of items, the number of items in&#xA;that collection that are in the whitelist must pass this&#xA;threshold test for the whitelist to allow them all." Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="7EDDCB26CD599F47" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="3857D4B0B0E672E9" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                        </TunableVariant>
                                        <TunableList name="whitelist" class="TunableSet" display="Whitelist" muid="3D21518834E9B99C" description="Whitelisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                            <Tunable type="worlddescription" class="TunableReference" muid="AFCAB0D561C346A6" description="World to check against." Deprecated="False" filter="0" group="General" pack_safe="True" />
                                        </TunableList>
                                    </TunableTuple>
                                </TunableVariant>
                            </TunableTuple>
                        </TunableVariant>
                        <TunableVariant type="None" name="zone_modifiers" class="OptionalTunable" default="Don't_Test" display="Zone Modifiers" muid="DCB735295556FE05" description="if enabled, we test the zone modifiers allowed or disallowed." Deprecated="False" filter="0" group="General">
                            <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="FA385091DF4DBFE9" />
                            <TunableTuple name="enabled" class="TunableWhiteBlackList" display="Enabled" muid="C7C80CB244EC9732" description="The zone's modifiers must pass this whitelist and blacklist for the&#xA;test to pass." Deprecated="False" filter="0" group="General">
                                <TunableVariant type="None" name="blacklist" class="OptionalTunable" default="nothing" display="Blacklist" muid="475C0721F98E34D2" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is not in the blacklist. If no blacklist is&#xA;specified, no items are disallowed." Deprecated="False" filter="0" group="General">
                                    <Tunable name="nothing" class="TunableExistance" display="Nothing" muid="A12F00EEB73A0188" />
                                    <TunableTuple name="specify" class="TunableBlacklist" display="Specify" muid="33251327E34D65F8" description="A tunable blacklist." Deprecated="False" filter="0" group="General">
                                        <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="DD2A3850B912031D" description="Blacklisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                            <Tunable type="zone_modifier" class="TunableReference" muid="82E8ECA6783DE3AD" description="Allowed and disallowed zone modifiers." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                        </TunableList>
                                        <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="D7B87A8BF09480EA" description="Tunable option for how many items must be in the blacklist&#xA;for the blacklist to fail when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                            <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="970F777272B1742F" />
                                            <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="924AE2776C6B40C1" description="When testing a collection of items, the number of items in&#xA;that collection that are in the blacklist must pass this&#xA;threshold test for the blacklist to disallow them all." Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="B13C1B5D3C20B501" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="602E7F66F958050F" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                        </TunableVariant>
                                    </TunableTuple>
                                </TunableVariant>
                                <TunableVariant type="None" name="whitelist" class="OptionalTunable" default="everything" display="Whitelist" muid="E62B2065D2010F91" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is in the whitelist. If no whitelist is&#xA;specified, all items are allowed." Deprecated="False" filter="0" group="General">
                                    <Tunable name="everything" class="TunableExistance" display="Everything" muid="E6F2A72489E2D038" />
                                    <TunableTuple name="specify" class="TunableWhitelist" display="Specify" muid="F0DBF4279FC88C3A" description="A tunable whitelist." Deprecated="False" filter="0" group="General">
                                        <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="D3AC9F43901D19CD" description="Tunable option for how many items must be in the whitelist&#xA;for the whitelist to pass when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                            <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="BAC671B658EC0385" />
                                            <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="537207C9B973B5B6" description="When testing a collection of items, the number of items in&#xA;that collection that are in the whitelist must pass this&#xA;threshold test for the whitelist to allow them all." Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="EF02B8804DEECD1F" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="14DACBD5E5F25BA2" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                        </TunableVariant>
                                        <TunableList name="whitelist" class="TunableSet" display="Whitelist" muid="8091183332F52174" description="Whitelisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                            <Tunable type="zone_modifier" class="TunableReference" muid="9057FE4046741407" description="Allowed and disallowed zone modifiers." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                        </TunableList>
                                    </TunableTuple>
                                </TunableVariant>
                            </TunableTuple>
                        </TunableVariant>
                    </TunableTuple>
                </TunableTuple>
            </TunableVariant>
        </TunableList>
    </Instance>

    <VersionHistory>
        <ActionList>
            <Action type="kRemove" old_muid="AC8B64C9D97E7827" />
        </ActionList>

        <ActionList>
            <Action type="kRemove" old_muid="FC5AC10F67ED3685" />
        </ActionList>
    </VersionHistory>
</TuningRoot>