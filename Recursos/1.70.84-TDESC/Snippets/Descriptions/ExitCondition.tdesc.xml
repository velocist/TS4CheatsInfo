<?xml version="1.0" encoding="iso-8859-1"?>

<TuningRoot>
    <Instance instance_type="snippet" class="ExitCondition" module="snippets" muid="8A92688E2B07C6FD" instance_needs_reference="True" instance_subclasses_only="False" path="Snippets\Descriptions" use_guid_for_reference="True">
        <TunableTuple name="value" class="TunableExitCondition" display="Value" muid="AB3FA6AD6C76DA86" Deprecated="False" filter="0" group="General">
            <TunableList name="conditions" class="TunableList" display="Conditions" muid="99F46EBE8EF4606" description="A list of conditions that all must be satisfied for the group to be considered satisfied." Deprecated="False" filter="0" group="General">
                <TunableVariant type="None" class="TunableCondition" default="stat_based" muid="7CA7935F8785B401" description="A condition for a single motive." Deprecated="False" filter="0" group="General">
                    <TunableTuple name="buff_based" class="TunableBuffCondition" display="Buff Based" muid="F29A6178359C03EE" description="A condition that is satisfied when a Sim gains or loses a buff." Deprecated="False" filter="0" group="General">
                        <Tunable type="buff" name="buff" class="TunableReference" display="Buff" muid="28BBBD3BC7D59724" description="The buff we're checking." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                        <TunableEnum type="ParticipantTypeActorTargetSim" name="participant" class="TunableEnumEntry" default="Actor" display="Participant" muid="EB9FA8199ECCEAA" static_entries="interactions.ParticipantTypeActorTargetSim" description="The participant whose buffs we're checking." Deprecated="False" filter="0" group="General" />
                        <TunableEnum type="Timing" name="timing" class="TunableEnumEntry" default="ON_ADD" display="Timing" muid="A3C4D4E8928E4969" static_entries="statistics-statistic_conditions.BuffCondition.Timing" description="When the condition satisfies.&#xA;Choices:&#xA;ON_ADD: Only check the condition on the edge of the buff being&#xA;added.  This will not satisfy if you have the buff when the&#xA;interaction starts.&#xA;ON_REMOVE: Only check the condition on the edge of the buff being&#xA;removed.  This will not satisfy if you do not have the buff when&#xA;the interaction starts.&#xA;HAS_BUFF: Check for the buff existing at any time this condition&#xA;is active.  This will satisfy if you have the buff when the&#xA;interaction starts.&#xA;NOT_HAS_BUFF: Check for the buff not existing at any time this&#xA;condition is active.  This will satisfy if you do not have the buff&#xA;when the interaction starts." Deprecated="False" filter="0" group="General" />
                    </TunableTuple>
                    <TunableTuple name="career_based" class="TunableCareerCondition" display="Career Based" muid="98DE820ED15D7EF" description="A condition that is satisfied by career data" Deprecated="False" filter="0" group="General">
                        <TunableEnum type="ParticipantType" name="who" class="TunableEnumEntry" default="Actor" display="Who" muid="470F858E8829CBAF" static_entries="interactions.ParticipantType" description="Who or what to apply this test to" Deprecated="False" filter="0" group="General" />
                    </TunableTuple>
                    <TunableTuple name="child_based" class="TunableObjectChildrenChangedCondition" display="Child Based" muid="89E31AB7F6C11C40" description="A condition that may be satisfied when a child is added or removed from a&#xA;participant, or simply based on the number of children." Deprecated="False" filter="0" group="General">
                        <TunableVariant type="None" name="condition" class="TunableVariant" default="single_child_changed" display="Condition" muid="4CFD6CD599607C96" description="The condition we want to test for." Deprecated="False" filter="0" group="General">
                            <TunableTuple name="all_or_none" class="TunableTuple" display="All Or None" muid="95EBA62253E5A290" description="Satisfied when we run out of slots of the specified types." Deprecated="False" filter="0" group="General">
                                <Tunable type="bool" name="negate" class="Tunable" default="False" display="Negate" muid="F10C86F59EF9548F" description="If checked, we will satisfy when all the slots are empty.&#xA;Otherwise we satisfy when all slots are filled." Deprecated="False" filter="0" group="General" />
                            </TunableTuple>
                            <TunableTuple name="children_count" class="TunableTuple" display="Children Count" muid="4BEA9126119622B8" description="When the number of children in the specified slot types passes&#xA;the threshold, we will satisfy the condition." Deprecated="False" filter="0" group="General">
                                <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="CC15CD41CF477909" description="The threshold against the number of children in the&#xA;specified slot types." Deprecated="False" filter="0" group="General">
                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="6E0F9C0249ED2FC2" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                    <Tunable type="int" name="value" class="Tunable" default="0" display="Value" muid="F85815B994F210DF" description="The number of objects we expect to be in the specified&#xA;slot types." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                </TunableTuple>
                            </TunableTuple>
                            <TunableTuple name="single_child_changed" class="TunableTuple" display="Single Child Changed" muid="AF697A70F0943998" description="When a child is added to the specified slot types, we&#xA;will pass the test." Deprecated="False" filter="0" group="General">
                                <Tunable type="bool" name="negate" class="Tunable" default="False" display="Negate" muid="DDF44092E31DFE4" description="If enabled, we will check for a child removed instead of&#xA;added to the slot types. Otherwise, we check for a child&#xA;added to the specified slot types." Deprecated="False" filter="0" group="General" />
                            </TunableTuple>
                        </TunableVariant>
                        <TunableEnum type="ParticipantType" name="participant" class="TunableEnumEntry" default="Object" display="Participant" muid="532F2E97819D0E60" static_entries="interactions.ParticipantType" description="The participant to be checked for a change in children." Deprecated="False" filter="0" group="General" />
                        <TunableVariant type="None" name="slot_types" class="OptionalTunable" default="disabled" display="Slot Types" muid="4FAA657E8A2EC6F8" description="If enabled, we will restrict the contition tests against slots in&#xA;this list. Otherwise we will consider all slots." Deprecated="False" filter="0" group="General">
                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="A61806CC08636C61" />
                            <TunableList name="enabled" class="TunableSet" display="Enabled" muid="17AF97DA82431BD" description="A list of slot types to restrict the test against." Deprecated="False" filter="0" group="General" unique_entries="true">
                                <Tunable type="slot_type" class="TunableReference" muid="AB3D9CFF3F450C59" description="The slot type to be tested against. This check will check to &#xA;see if there is a child in the specified slot." allow_none="False" Deprecated="False" filter="0" group="General" restrict="SlotType" />
                            </TunableList>
                        </TunableVariant>
                    </TunableTuple>
                    <TunableTuple name="constraint_based" class="TunableConstraintBasedCondition" display="Constraint Based" muid="40086B8EB9CB80D1" description="A condition that will trigger if constraints are not met. May use custom&#xA;constraints or re-use the constraints of the interaction. Only geometric&#xA;constraints will be checked." Deprecated="False" filter="0" group="General">
                        <TunableVariant type="None" name="constraints_to_use" class="OptionalTunable" default="reuse_interaction_constraints" display="Constraints To Use" muid="492117E7DDFDBEA2" description="If enabled, this condition will use custom constraints. If disabled,&#xA;it will use the geometric constraints of the interaction on which&#xA;this is tuned." Deprecated="False" filter="0" group="General">
                            <Tunable name="reuse_interaction_constraints" class="TunableExistance" display="Reuse Interaction Constraints" muid="C4167DCA5EAAA833" />
                            <TunableTuple name="use_custom_constraints" class="TunableTuple" display="Use Custom Constraints" muid="B04D3BBBF64E394F" Deprecated="False" filter="0" group="General">
                                <TunableList name="_constraints" class="TunableMapping" display="Constraints" muid="65ECE0A7A5333658" min="1" mapping_key="constrained_participant" mapping_value="constraints" description="Mapping between a participant and a set of constraints. The&#xA;participant is what we check constraints against. This&#xA;participant should rarely be the same as the relative&#xA;participant since most constraints would have no meaning (an&#xA;object is always within a radius of itself, etc).Constraints&#xA;currently only supports geometry constraints." Deprecated="False" filter="0" group="General">
                                    <TunableTuple class="TunableTuple" muid="708BB382469A7C05" Deprecated="False" filter="0" group="General">
                                        <TunableEnum type="ParticipantTypeSingle" name="constrained_participant" class="TunableEnumEntry" default="Actor" display="Constrained Participant" muid="2CF0998E48504116" static_entries="interactions.ParticipantTypeSingle" Deprecated="False" filter="0" group="General" />
                                        <TunableList name="constraints" class="TunableList" display="Constraints" muid="BEF6EBABC26E19B6" min="1" Deprecated="False" filter="0" group="General">
                                            <TunableVariant type="None" class="TunableGeometricConstraintVariant" default="circle" muid="258882A981FA395C" Deprecated="False" filter="0" group="General">
                                                <TunableTuple name="circle" class="TunableCircle" display="Circle" muid="AB36AB0EA84BB31C" description="The relative circle geometry required for a sim/posture to use the object." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="bool" name="enables_height_scoring" class="Tunable" default="False" display="Enables Height Scoring" muid="7CB83DAE4F836F12" description="If enabled, this constraint will &#xA;score goals using the height of&#xA;the surface.  The higher the goal&#xA;the cheaper it is." Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="float" name="ideal_radius" class="Tunable" default="None" display="Ideal Radius" muid="CD0981AEA9D1F98F" description="Ideal distance for this circle constraint, points &#xA;closer to the ideal distance will score higher." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="float" name="ideal_radius_width" class="Tunable" default="0" display="Ideal Radius Width" muid="EF212DB59A14ADD2" description="This creates a band around the ideal_radius that also&#xA;costs 0 instead of rising in cost. ex: If you&#xA;have a circle of radius 5, with an ideal_radius of 2.5, and a&#xA;ideal_radius_width of 0.5, all goals in the radius 2 to radius 3 range&#xA;will score optimially." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="float" name="radial_cost_weight" class="TunableRange" default="2.25" display="Radial Cost Weight" muid="9B92841F8D2839E7" min="0" max="None" description="The importance of the radial cost function.&#xA; = 0: Not used&#xA; &gt; 1: Important on surfaces&#xA; &gt; 2: Important on grass" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="float" name="radius" class="Tunable" default="1" display="Radius" muid="78017B2D82030775" description="Circle radius" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableTuple name="cone" class="TunableCone" display="Cone" muid="88EB18F4825E6B39" description="The relative cone geometry required for a sim/posture to use the object." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="float" name="angle" class="TunableAngle" default="180.0" display="Angle" muid="A64972EFE15EF0CB" min="0.0" max="360.0" description="The cone angle in degrees." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="float" name="angular_cost_weight" class="TunableRange" default="2.25" display="Angular Cost Weight" muid="BCD69B4D0150B3A4" min="0" max="None" description="The importance of the angular cost &#xA;function.&#xA; = 0: Not used&#xA; &gt; 1: Important on surfaces&#xA; &gt; 2: Important on grass" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="bool" name="enables_height_scoring" class="Tunable" default="False" display="Enables Height Scoring" muid="F3C319839F3AA653" description="If enabled, this constraint will &#xA;score goals using the height of&#xA;the surface.  The higher the goal&#xA;the cheaper it is." Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="float" name="ideal_angle" class="TunableRange" default="0.25" display="Ideal Angle" muid="CC3D6532687E58A7" min="0" max="1" description="The angular extents of an ideal &#xA;region as a fraction of angle." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="float" name="ideal_radius_max" class="TunableRange" default="0.75" display="Ideal Radius Max" muid="283052030D9309A7" min="0" max="1" description="The radial upper bound of an ideal &#xA;region as a fraction of the &#xA;difference between max_radius and &#xA;min_radius." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="float" name="ideal_radius_min" class="TunableRange" default="0.25" display="Ideal Radius Min" muid="9AF58F0A8BB958DB" min="0" max="1" description="The radial lower bound of an ideal &#xA;region as a fraction of the &#xA;difference between max_radius and &#xA;min_radius." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="float" name="max_radius" class="Tunable" default="1" display="Max Radius" muid="18E40B6D986FC582" description="The maximum cone radius." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="float" name="min_radius" class="Tunable" default="0" display="Min Radius" muid="DA89BF21F89AA173" description="The minimum cone radius." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="float" name="offset" class="TunableAngle" default="0.0" display="Offset" muid="4358DDC6E09599D3" min="0.0" max="360.0" description="An offset (rotation) in degrees.&#xA;&#xA;By default the cone will face the &#xA;forward vector of the object.  Use&#xA;an offset to rotate the cone to &#xA;face a different direction. " tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="float" name="radial_cost_weight" class="TunableRange" default="2.25" display="Radial Cost Weight" muid="74A8D42BACB1F8D7" min="0" max="None" description="The importance of the radial cost &#xA;function.&#xA; = 0: Not used&#xA; &gt; 1: Important on surfaces&#xA; &gt; 2: Important on grass" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="bool" name="require_los" class="Tunable" default="True" display="Require Los" muid="11FA8BDD8C97C7B4" description="If checked, the Sim will require line of sight to the actor.  Positions where a Sim&#xA;can't see the actor (e.g. there's a wall in the way) won't be valid.&#xA;&#xA;NOTE: This will NOT work on a&#xA;constraint that is not used to&#xA;generate routing goals such as&#xA;broadcasters and reactions, use a&#xA;Line Of Sight Constraint instead.&#xA;This will work on constraints used&#xA;to keep Sims in an interaction." Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableTuple name="facing" class="TunableFacing" display="Facing" muid="6104FE6E3B78CFA5" description="Existential tunable that requires the sim to face the object." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="float" name="inner_radius" class="Tunable" default="0.0" display="Inner Radius" muid="5B858C07A110F082" description="A radius around the center of the constraint that defines an area in which the Sim's facing is unrestricted." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="float" name="range" class="TunableAngle" default="90.0" display="Range" muid="D4F2633117AFFE64" min="0.0" max="360.0" description="The size of the angle-range that sims should use when determining facing constraints." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                    <TunableVariant type="None" name="subroot_index" class="OptionalTunable" default="disabled" display="Subroot Index" muid="8D0DED658D26D881" description="An optional subroot to use for facing." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="F071AE3C11AA9EF4" />
                                                        <Tunable type="int" name="enabled" class="Tunable" default="0" display="Enabled" muid="D0458A0DB2A94814" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                    </TunableVariant>
                                                </TunableTuple>
                                                <TunableTuple name="line_of_sight" class="TunableLineOfSight" display="Line Of Sight" muid="EC3936C9CABF54EF" description="Existential tunable that creates a line of sight constraint." Deprecated="False" filter="0" group="General">
                                                    <TunableVariant type="None" name="temporary_los" class="OptionalTunable" default="disabled" display="Temporary Los" muid="904D11708647E82" description="If enabled, a Line of Sight component will be temporarily created&#xA;when constraints are needed. This should be used if the affordance&#xA;requires LOS on an object that doesn't have an LOS component (i.e. a&#xA;Sim needs to see another Sim WooHoo to play the jealousy reactions&#xA;but Sims don't have LoS components.)" Deprecated="False" filter="0" group="General">
                                                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="656470D56E66D8FA" />
                                                        <TunableTuple name="enabled" class="TunableLineOfSightData" display="Enabled" muid="5262160D9E8C9CA5" Deprecated="False" filter="0" group="General">
                                                            <Tunable type="float" name="boundary_epsilon" class="Tunable" default="0.01" display="Boundary Epsilon" muid="EA3D4B1C3F764117" description="The LOS origin is allowed to be outside of the boundary by this&#xA;amount." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                            <Tunable type="float" name="facing_offset" class="Tunable" default="0.1" display="Facing Offset" muid="BF10085E10985301" description="The LOS origin is offset from the object origin by this amount&#xA;(mainly to avoid intersecting walls)." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                            <Tunable type="int" name="map_divisions" class="Tunable" default="30" display="Map Divisions" muid="23D7494D970116D6" description="The number of points around the object to check collision from.&#xA;More points means higher accuracy." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                            <Tunable type="float" name="max_line_of_sight_radius" class="Tunable" default="10" display="Max Line Of Sight Radius" muid="72B71405256A04D0" description="The maximum possible distance from this object than an&#xA;interaction can reach." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                            <Tunable type="float" name="simplification_ratio" class="Tunable" default="0.35" display="Simplification Ratio" muid="F1C388ADE559D495" description="A factor determining how much to combine edges in the line of&#xA;sight polygon." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                </TunableTuple>
                                                <TunableTuple name="ocean_loc" class="TunableOceanStartLocationConstraint" display="Ocean Loc" muid="BD690DE8C5EE4024" description="The circle geometry relative to the nearest ocean locator." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="bool" name="enables_height_scoring" class="Tunable" default="False" display="Enables Height Scoring" muid="1718101B38255E40" description="If enabled, this constraint will &#xA;score goals using the height of&#xA;the surface.  The higher the goal&#xA;the cheaper it is." Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="float" name="ideal_radius" class="Tunable" default="None" display="Ideal Radius" muid="13703B6043353E09" description="Ideal distance for this circle constraint, points &#xA;closer to the ideal distance will score higher." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="float" name="ideal_radius_width" class="Tunable" default="0" display="Ideal Radius Width" muid="F85CDA1AD7FE6054" description="This creates a band around the ideal_radius that also&#xA;costs 0 instead of rising in cost. ex: If you&#xA;have a circle of radius 5, with an ideal_radius of 2.5, and a&#xA;ideal_radius_width of 0.5, all goals in the radius 2 to radius 3 range&#xA;will score optimially." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                    <TunableEnum type="WaterDepthIntervals" name="interval" class="TunableEnumEntry" default="WET" display="Interval" muid="A4FE28B671A57B82" static_entries="interactions-constraints.WaterDepthIntervals" description="Select the depth for the Sim based on the water&#xA;height offset at a target location and the Sim's wading interval data." Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="float" name="radial_cost_weight" class="TunableRange" default="2.25" display="Radial Cost Weight" muid="8C792F1A6FC0BE36" min="0" max="None" description="The importance of the radial cost function.&#xA; = 0: Not used&#xA; &gt; 1: Important on surfaces&#xA; &gt; 2: Important on grass" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="float" name="radius" class="Tunable" default="1" display="Radius" muid="E7299D60D73B272D" description="Circle radius" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableTuple name="portal" class="TunablePortalConstraint" display="Portal" muid="FBC73C8B4E2B4009" description="A constraint that is relative to the location of a portal.    " Deprecated="False" filter="0" group="General">
                                                    <TunableList name="portals" class="TunableList" display="Portals" muid="105748569C44F3BA" description="List of portal data to be used in this constraint." Deprecated="False" filter="0" group="General">
                                                        <TunableTuple class="TunableTuple" muid="30B143CF8300D5ED" Deprecated="False" filter="0" group="General">
                                                            <TunableVariant type="None" name="portal_direction" class="TunableVariant" default="there" display="Portal Direction" muid="26CA6881C19A8336" description="Choose between the There and Back of the portal. This will not work&#xA;properly if the portal is missing a Back and Back is specified here." Deprecated="False" filter="0" group="General">
                                                                <Tunable name="back" class="TunableExistance" display="Back" muid="CD042665E5FA0BF1" />
                                                                <Tunable name="there" class="TunableExistance" display="There" muid="DBFF24BFD668D5AB" />
                                                            </TunableVariant>
                                                            <TunableVariant type="None" name="portal_location" class="TunableVariant" default="entry" display="Portal Location" muid="4005A1C60BF86A80" description="Choose between the entry and exit of a portal direction." Deprecated="False" filter="0" group="General">
                                                                <Tunable name="entry" class="TunableExistance" display="Entry" muid="5F692CA2763AC16" />
                                                                <Tunable name="exit" class="TunableExistance" display="Exit" muid="F57D1ACED487BAD0" />
                                                            </TunableVariant>
                                                            <Tunable type="snippet" name="portal_type" class="TunableReference" display="Portal Type" muid="53C8B8FB86D16CA1" description="A reference to the type of portal to use for the constraint." allow_none="False" Deprecated="False" filter="0" group="General" restrict="PortalData" />
                                                            <Tunable type="bool" name="require_position_los" class="Tunable" default="True" display="Require Position Los" muid="8DEC6D4F148FFB4D" description="If checked, the Sim will require line of sight to the portal location for a Position constraint.&#xA;Positions where a Sim can't see the portal (e.g. there's a wall in the way) won't be valid.&#xA;This value won't be used for any tuned sub constraints." Deprecated="False" filter="0" group="General" />
                                                            <TunableVariant type="None" name="sub_constraint" class="OptionalTunable" default="disabled" display="Sub Constraint" muid="3F1059AEAB0FA8A0" description="If enabled, specify a specific type of constraint to create at the&#xA;location of the portal.&#xA;&#xA;If disabled then the constraint will just be a location constraint&#xA;at the location of the portal." Deprecated="False" filter="0" group="General">
                                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="E44F47EB935E2369" />
                                                                <TunableVariant type="None" name="enabled" class="TunableVariant" default="circle" display="Enabled" muid="74079769A578164F" description="The types of constraints that can be created at the location&#xA;of the portal." Deprecated="False" filter="0" group="General">
                                                                    <TunableTuple name="circle" class="TunableCircle" display="Circle" muid="E300CA570348EB76" description="A circle constraint that is created at the location of the&#xA;portal." Deprecated="False" filter="0" group="General">
                                                                        <Tunable type="bool" name="enables_height_scoring" class="Tunable" default="False" display="Enables Height Scoring" muid="C701B053DC35A263" description="If enabled, this constraint will &#xA;score goals using the height of&#xA;the surface.  The higher the goal&#xA;the cheaper it is." Deprecated="False" filter="0" group="General" />
                                                                        <Tunable type="float" name="ideal_radius" class="Tunable" default="None" display="Ideal Radius" muid="FD72FBB464DD26B7" description="Ideal distance for this circle constraint, points &#xA;closer to the ideal distance will score higher." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                        <Tunable type="float" name="ideal_radius_width" class="Tunable" default="0" display="Ideal Radius Width" muid="143F6A8AF2D6D464" description="This creates a band around the ideal_radius that also&#xA;costs 0 instead of rising in cost. ex: If you&#xA;have a circle of radius 5, with an ideal_radius of 2.5, and a&#xA;ideal_radius_width of 0.5, all goals in the radius 2 to radius 3 range&#xA;will score optimially." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                        <Tunable type="bool" name="multi_surface" class="Tunable" default="False" display="Multi Surface" muid="E74BE728E9A5E44B" description="If enabled, this constraint will be considered for multiple surfaces.&#xA;&#xA;Example: You want a circle&#xA;constraint that can be both inside&#xA;and outside of a pool." Deprecated="False" filter="0" group="General" />
                                                                        <Tunable type="float" name="radial_cost_weight" class="TunableRange" default="2.25" display="Radial Cost Weight" muid="EBCB971C97769C1" min="0" max="None" description="The importance of the radial cost function.&#xA; = 0: Not used&#xA; &gt; 1: Important on surfaces&#xA; &gt; 2: Important on grass" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                        <Tunable type="float" name="radius" class="Tunable" default="3" display="Radius" muid="D5F81D5B7BC4CFAF" description="Circle radius" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                        <Tunable type="bool" name="require_los" class="Tunable" default="True" display="Require Los" muid="AE470C7AAF8C4F57" description="If checked, the Sim will require line of sight to the actor.  Positions where a Sim&#xA;can't see the actor (e.g. there's a wall in the way) won't be valid.&#xA;&#xA;NOTE: This will NOT work on a&#xA;constraint that is not used to&#xA;generate routing goals such as&#xA;broadcasters and reactions, use a&#xA;Line Of Sight Constraint instead.&#xA;This will work on constraints used&#xA;to keep Sims in an interaction." Deprecated="False" filter="0" group="General" />
                                                                    </TunableTuple>
                                                                    <TunableTuple name="cone" class="TunableCone" display="Cone" muid="984B20F24571208D" description="A cone constraint that is created at the location of the &#xA;portal." Deprecated="False" filter="0" group="General">
                                                                        <Tunable type="float" name="angle" class="TunableAngle" default="180.0" display="Angle" muid="82F9A4B3236B2D82" min="0.0" max="360.0" description="The cone angle in degrees." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                        <Tunable type="float" name="angular_cost_weight" class="TunableRange" default="2.25" display="Angular Cost Weight" muid="1758EFB11592C991" min="0" max="None" description="The importance of the angular cost &#xA;function.&#xA; = 0: Not used&#xA; &gt; 1: Important on surfaces&#xA; &gt; 2: Important on grass" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                        <Tunable type="bool" name="enables_height_scoring" class="Tunable" default="False" display="Enables Height Scoring" muid="39AE0594EBB000E2" description="If enabled, this constraint will &#xA;score goals using the height of&#xA;the surface.  The higher the goal&#xA;the cheaper it is." Deprecated="False" filter="0" group="General" />
                                                                        <Tunable type="float" name="ideal_angle" class="TunableRange" default="0.25" display="Ideal Angle" muid="5F9C5CB0FFEE8877" min="0" max="1" description="The angular extents of an ideal &#xA;region as a fraction of angle." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                        <Tunable type="float" name="ideal_radius_max" class="TunableRange" default="0.75" display="Ideal Radius Max" muid="530395AC8AC1A2E4" min="0" max="1" description="The radial upper bound of an ideal &#xA;region as a fraction of the &#xA;difference between max_radius and &#xA;min_radius." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                        <Tunable type="float" name="ideal_radius_min" class="TunableRange" default="0.25" display="Ideal Radius Min" muid="58F94B3470497CFE" min="0" max="1" description="The radial lower bound of an ideal &#xA;region as a fraction of the &#xA;difference between max_radius and &#xA;min_radius." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                        <Tunable type="float" name="max_radius" class="Tunable" default="1" display="Max Radius" muid="FFD4FB2EE60181E4" description="The maximum cone radius." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                        <Tunable type="float" name="min_radius" class="Tunable" default="0" display="Min Radius" muid="85E8D0F44216B8A5" description="The minimum cone radius." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                        <Tunable type="bool" name="multi_surface" class="Tunable" default="False" display="Multi Surface" muid="4E05C4841070CB6C" description="If enabled, this constraint will be&#xA;considered for multiple surfaces.&#xA;&#xA;Example: You want a circle&#xA;constraint that can be both inside&#xA;and outside of a pool." Deprecated="False" filter="0" group="General" />
                                                                        <Tunable type="float" name="offset" class="TunableAngle" default="0.0" display="Offset" muid="A8D3E2BBD0DF938A" min="0.0" max="360.0" description="An offset (rotation) in degrees.&#xA;&#xA;By default the cone will face the &#xA;forward vector of the object.  Use&#xA;an offset to rotate the cone to &#xA;face a different direction. " tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                        <Tunable type="float" name="radial_cost_weight" class="TunableRange" default="2.25" display="Radial Cost Weight" muid="CD8909C4F7EC0A5E" min="0" max="None" description="The importance of the radial cost &#xA;function.&#xA; = 0: Not used&#xA; &gt; 1: Important on surfaces&#xA; &gt; 2: Important on grass" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                        <Tunable type="bool" name="require_los" class="Tunable" default="True" display="Require Los" muid="66293FA85B5D1A22" description="If checked, the Sim will require line of sight to the actor.  Positions where a Sim&#xA;can't see the actor (e.g. there's a wall in the way) won't be valid.&#xA;&#xA;NOTE: This will NOT work on a&#xA;constraint that is not used to&#xA;generate routing goals such as&#xA;broadcasters and reactions, use a&#xA;Line Of Sight Constraint instead.&#xA;This will work on constraints used&#xA;to keep Sims in an interaction." Deprecated="False" filter="0" group="General" />
                                                                    </TunableTuple>
                                                                </TunableVariant>
                                                            </TunableVariant>
                                                            <TunableTuple name="sub_constraint_offset" class="TunableVector3" display="Sub Constraint Offset" muid="6A59BCDA0600AC5C" description="Translation offset applied to the sub constraint, relative to the target object." Deprecated="False" filter="0" group="General">
                                                                <Tunable type="float" name="x" class="Tunable" default="0.0" display="X" muid="8CAFB8740BC6F04B" description="x component" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                <Tunable type="float" name="y" class="Tunable" default="0.0" display="Y" muid="225C01D5EA53F17A" description="y component" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                <Tunable type="float" name="z" class="Tunable" default="0.0" display="Z" muid="8D742B46CAFDEA3A" description="z component" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                            </TunableTuple>
                                                        </TunableTuple>
                                                    </TunableList>
                                                </TunableTuple>
                                                <TunableTuple name="position" class="TunablePosition" display="Position" muid="BEED85DB2807AF51" description="The relative position geometry required for a sim/posture to use the object." Deprecated="False" filter="0" group="General">
                                                    <TunableTuple name="relative_position" class="TunableVector3" display="Relative Position" muid="AE501E103C2F6133" description="Position" Deprecated="False" filter="0" group="General">
                                                        <Tunable type="float" name="x" class="Tunable" default="0.0" display="X" muid="130D1B118A440501" description="x component" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                        <Tunable type="float" name="y" class="Tunable" default="0.0" display="Y" muid="8B258D8368961032" description="y component" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                        <Tunable type="float" name="z" class="Tunable" default="0.0" display="Z" muid="E38F95E8C9689952" description="z component" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                    </TunableTuple>
                                                </TunableTuple>
                                                <TunableTuple name="relative_circle" class="TunableRelativeCircleConstraint" display="Relative Circle" muid="CB20C9C35B02EC15" description="A circle constraint whose size is dependent on the size of the target&#xA;object." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="bool" name="enables_height_scoring" class="Tunable" default="False" display="Enables Height Scoring" muid="4668DA86D3DD78A2" description="If enabled, this constraint will score goals using the height of&#xA;the surface.  The higher the goal the cheaper it is." Deprecated="False" filter="0" group="General" />
                                                    <TunableVariant type="None" name="maximum_radius" class="OptionalTunable" default="disabled" display="Maximum Radius" muid="83A78BEEA050D03B" description="If enabled, the generated constraint will have a radius no larger&#xA;that the specified amount." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="3B8F7DF47455B9A7" />
                                                        <Tunable type="float" name="enabled" class="TunableRange" default="1" display="Enabled" muid="A217BFD71D28E6AC" min="0" max="None" description="The constraint's maximum radius." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                    </TunableVariant>
                                                    <TunableVariant type="None" name="minimum_radius" class="OptionalTunable" default="disabled" display="Minimum Radius" muid="C34141F5363E03E7" description="If enabled, the generated constraint will have a radius no smaller&#xA;than the specified amount." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="B087C168D890DBC8" />
                                                        <Tunable type="float" name="enabled" class="TunableRange" default="1" display="Enabled" muid="543E861F753093C4" min="0" max="None" description="The constraint's minimum radius." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                    </TunableVariant>
                                                    <TunableVariant type="None" name="relative_ideal_radius" class="OptionalTunable" default="disabled" display="Relative Ideal Radius" muid="4228A83E1166CC1" description="If enabled, specify an ideal radius relative to the constraint's&#xA;radius. " Deprecated="False" filter="0" group="General">
                                                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="A29D486DFF008470" />
                                                        <TunableTuple name="enabled" class="TunableTuple" display="Enabled" muid="7382E97E4A1D0F83" description="Ideal radius data." Deprecated="False" filter="0" group="General">
                                                            <Tunable type="float" name="radius" class="TunableRange" default="1" display="Radius" muid="4D2EB82B1D7C849C" min="0" max="1" description="The constraint's relative ideal radius. A value of 1 would&#xA;mean the ideal location is on the outskirt of the&#xA;constraint; values towards 0 approach the constraint's&#xA;center." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                            <Tunable type="float" name="width" class="Tunable" default="0" display="Width" muid="F1A37AC5BD42EFFC" description="This creates a band around the ideal_radius that also scores&#xA;to 1 instead of starting to fall off to 0 in scoring. ex: If&#xA;you have a circle of radius 5, with an ideal_radius of 2.5,&#xA;and a ideal_radius_width of 0.5, any goals in the radius 2&#xA;to radius 3 range will all score optimially." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                    <Tunable type="float" name="relative_radius" class="TunableRange" default="1" display="Relative Radius" muid="7BE990C9910BB61" min="1" max="None" description="The constraint's radius relative to the size of the object. This is&#xA;a simple multiplier applied to the area generated by the object's&#xA;footprint" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableTuple name="spawn_points_with_backup" class="TunableSpawnPointWithBackup" display="Spawn Points With Backup" muid="5E32F1B7FC135F1" Deprecated="False" filter="0" group="General">
                                                    <TunableVariant type="None" name="backup_tags" class="OptionalTunable" default="Spawn_Point_Tags" display="Backup Tags" muid="890BAB75B0691CFA" description="A constraint that represents primary spawn points with backup secondary ones." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="D714CB7413231B8A" />
                                                        <TunableList name="Spawn_Point_Tags" class="TunableSet" display="Spawn Point Tags" muid="D9B1376D76DBC60B" min="1" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                            <TunableEnum type="Tag" class="TunableEnumWithFilter" default="INVALID" muid="4DA9DD80552BBFDC" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" Deprecated="False" dynamic_entries_prefix="Spawn" filter="0" group="General" />
                                                        </TunableList>
                                                    </TunableVariant>
                                                    <TunableEnum type="SpawnPointRequestReason" name="spawn_point_request_reason" class="TunableEnumEntry" default="DEFAULT" display="Spawn Point Request Reason" muid="8078F283628816E" static_entries="world-spawn_point_enums.SpawnPointRequestReason" description="The reason why we want the spawn point. Certain spawn points are&#xA;only available for specific reasons, such as specific spawn&#xA;points for leaving or for spawning at." Deprecated="False" filter="0" group="General" />
                                                    <TunableVariant type="None" name="spawn_point_tags" class="TunableVariant" default="none" display="Spawn Point Tags" muid="F4126FE6E8EA5B10" description="Tags that specify the primary spawnpoints or where to get them." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="none" class="TunableExistance" display="None" muid="47AF7CFC71C763CB" />
                                                        <TunableTuple name="tags" class="Tunable_Tags" display="Tags" muid="DBA421930480B4FD" description="Tags are specified straight out." Deprecated="False" filter="0" group="General">
                                                            <TunableList name="tags" class="TunableSet" display="Tags" muid="ACA297AC692707A3" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                <TunableEnum type="Tag" class="TunableEnumWithFilter" default="INVALID" muid="D4CD43F6AEC1F9C9" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" Deprecated="False" dynamic_entries_prefix="Spawn" filter="0" group="General" />
                                                            </TunableList>
                                                        </TunableTuple>
                                                        <TunableTuple name="university_based" class="TunableUniversitySpecificSpawnPointTags" display="University Based" muid="461D0FA39FEBB820" description="Tags are specified right here (on a per university basis) " Deprecated="False" filter="0" group="General">
                                                            <TunableList name="spawn_point_tags" class="TunableMapping" display="Spawn Point Tags" muid="E24C377F770A0C04" mapping_key="key" mapping_value="value" description="University specific classroom tags." Deprecated="False" filter="0" group="General">
                                                                <TunableTuple class="TunableTuple" muid="7C44E0576CDC9214" Deprecated="False" filter="0" group="General">
                                                                    <Tunable type="university" name="key" class="TunableReference" display="Key" muid="C046859B5B13BD2D" allow_none="False" Deprecated="False" filter="0" group="General" />
                                                                    <TunableList name="value" class="TunableSet" display="Value" muid="BE4304754546496C" min="1" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                        <TunableEnum type="Tag" class="TunableEnumWithFilter" default="INVALID" muid="C07F109A88363D10" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" Deprecated="False" dynamic_entries_prefix="Spawn" filter="0" group="General" />
                                                                    </TunableList>
                                                                </TunableTuple>
                                                            </TunableList>
                                                        </TunableTuple>
                                                        <TunableTuple name="university_course_slot_career_si" class="TunableUniversityCourseCareerSISpawnPointTags" display="University Course Slot Career Si" muid="B6CBDDFE5830AFB2" description="Tags are pulled via the associated career interaction for a university &#xA;course. " Deprecated="False" filter="0" group="General" />
                                                        <TunableTuple name="university_course_slot_participant" class="TunableUniversityCourseParticipantSpawnPointTags" display="University Course Slot Participant" muid="D63BFE12A92E413D" description="Tags are pulled via the specified participant holding the id of a &#xA;university course." Deprecated="False" filter="0" group="General">
                                                            <TunableEnum type="ParticipantType" name="participant" class="TunableEnumEntry" default="PickedItemId" display="Participant" muid="EBDEEC661A0BBAD" static_entries="interactions.ParticipantType" description="The participant from which the career ID will be obtained. &#xA;Typically should be PickedItemId if this interaction comes via a &#xA;CareerPickerSuperInteraction." Deprecated="False" filter="0" group="General" />
                                                        </TunableTuple>
                                                        <TunableTuple name="university_course_slot_reference" class="TunableUniversityCourseReferenceSpawnPointTags" display="University Course Slot Reference" muid="F8ACD9E332569BD7" description="Tags are pulled via the specified university course slot." Deprecated="False" filter="0" group="General">
                                                            <Tunable type="career" name="_course_slot" class="TunableReference" display="Course Slot" muid="16CFF8EC3C962AFB" description="Course slot from which to pull the spawn point tags." allow_none="False" Deprecated="False" filter="0" group="General" restrict="UniversityCourseCareerSlot" />
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                    <Tunable type="bool" name="use_lot_id_for_backup" class="Tunable" default="True" display="Use Lot Id For Backup" muid="3BFC8B7A68EE1E8A" description="If checked then we will use the current lot id to limit spawn&#xA;points that are linked to lots to the current lot if we fall back&#xA;to the backup tags." Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableTuple name="terrain_material" class="TunableTerrainMaterialConstraint" display="Terrain Material" muid="183D0A9CAFB62DDB" description="A water depth constraint which defines only the terrain materials required." Deprecated="False" filter="0" group="General">
                                                    <TunableVariant type="None" name="terrain_tags" class="OptionalTunable" default="disabled" display="Terrain Tags" muid="9881D7915B52A7C0" description="If enabled, a set of allowed terrain tags. At least one tag must&#xA;match the terrain under each vertex of the footprint of the supplied&#xA;object." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="36DD3F44AFAC88D" />
                                                        <TunableList name="enabled" class="TunableEnumSet" display="Enabled" muid="24A6F06FEE84D732" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                            <TunableEnum type="TerrainTag" class="TunableEnumEntry" default="INVALID" muid="2ECADBFA84FEB6C9" static_entries="world-terrain_enums.TerrainTag" Deprecated="False" filter="0" group="General" invalid_entries="INVALID" />
                                                        </TunableList>
                                                    </TunableVariant>
                                                </TunableTuple>
                                                <TunableTuple name="water_depth" class="TunableWaterDepthConstraint" display="Water Depth" muid="5B608FEB010D6548" description="A water depth constraint which defines only the ocean water depth required." Deprecated="False" filter="0" group="General">
                                                    <TunableVariant type="None" name="max_water_depth" class="OptionalTunable" default="disabled" display="Max Water Depth" muid="873834C4F478370D" description="(float) If provided, each vertex of the test polygon along with its centroid will&#xA;be tested to determine whether the ocean water at the test location is at most this deep.&#xA;Values &lt;= 0 indicate placement in ocean is invalid." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="31A1D2BDD654DB75" />
                                                        <Tunable type="float" name="enabled" class="Tunable" default="1000.0" display="Enabled" muid="506A9F41FD1EA70B" description="Value of the max water depth allowed." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                    </TunableVariant>
                                                    <TunableVariant type="None" name="min_water_depth" class="OptionalTunable" default="disabled" display="Min Water Depth" muid="14EE60936FE4768F" description="(float) If provided, each vertex of the test polygon along with its centroid will&#xA;be tested to determine whether the ocean water at the test location is at least this deep.&#xA;Values &lt;= 0 indicate placement on land is valid." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="92657086D3A55F87" />
                                                        <Tunable type="float" name="enabled" class="Tunable" default="-1.0" display="Enabled" muid="28430F9F7EB8671E" description="Value of the min water depth allowed." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                    </TunableVariant>
                                                </TunableTuple>
                                                <TunableTuple name="water_depth_interval" class="TunableWaterDepthIntervalConstraint" display="Water Depth Interval" muid="F9B204E5F4386C81" description="A water depth constraint which defines only the ocean water depth required." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="WaterDepthIntervals" name="interval" class="TunableEnumEntry" default="WALK" display="Interval" muid="9D4652E2C98992EA" static_entries="interactions-constraints.WaterDepthIntervals" description="Test if a Sim should be walking, wading or swimming based on the water&#xA;height offset at a target location and the Sim's wading interval data." Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                            </TunableVariant>
                                        </TunableList>
                                    </TunableTuple>
                                </TunableList>
                                <TunableEnum type="ParticipantTypeSingle" name="relative_participant" class="TunableEnumEntry" default="Object" display="Relative Participant" muid="8B5C952C533900AF" static_entries="interactions.ParticipantTypeSingle" description="The participant that constraints will be generated&#xA;relative to. For performance reasons, it is best to choose&#xA;a participant that won't be moving during this interaction &#xA;(usually the actor) since constraints must be recalculated&#xA;whenever this participant moves." Deprecated="False" filter="0" group="General" />
                            </TunableTuple>
                        </TunableVariant>
                    </TunableTuple>
                    <TunableTuple name="daytime_state_change_based" class="TunableDaytimeStateChangeCondition" display="Daytime State Change Based" muid="610D2EC293A73D5A" description="A Tunable Condition that takes into account when the day changes state (i.e. sunrise)" Deprecated="False" filter="0" group="General">
                        <TunableEnum type="DaytimeStateChange" name="_daytime" class="TunableEnumEntry" default="Sunset" display="Daytime" muid="E49AA672E21E22C2" static_entries="world-daytime_state_change.DaytimeStateChange" description="The daytime state change (i.e. sunrise) that triggers the condition" Deprecated="False" filter="0" group="General" />
                        <TunableEnum type="ParticipantType" name="who" class="TunableEnumEntry" default="Actor" display="Who" muid="DB3130C406FCD293" static_entries="interactions.ParticipantType" description="The Sim who we're running this test on" Deprecated="False" filter="0" group="General" />
                    </TunableTuple>
                    <TunableTuple name="event_based" class="TunableEventBasedCondition" display="Event Based" muid="DEA76C965E3EAB0F" description="A condition that is satisfied by some event" Deprecated="False" filter="0" group="General">
                        <TunableEnum type="TestEvent" name="event_to_listen_for" class="TunableEnumEntry" default="Invalid" display="Event To Listen For" muid="5857A12F0EEBB128" dynamic_entries="event_testing-test_events.TestEvent._elements" static_entries="event_testing-test_events.TestEvent" description="Event that this exit condition should listen for " Deprecated="False" filter="0" group="General" />
                    </TunableTuple>
                    <TunableTuple name="group_based" class="TunableGroupBasedCondition" display="Group Based" muid="3F99749AE3DF4015" description="A condition that is satisfied when a group size crosses the threshold." Deprecated="False" filter="0" group="General">
                        <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="AD54BECC1F2652E7" description="Threshold tested against group size." Deprecated="False" filter="0" group="General">
                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="2FDB988778CD6ED4" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                            <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="59FB9D83DB5787D2" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                        </TunableTuple>
                    </TunableTuple>
                    <TunableTuple name="hidden_or_shown" class="TunableHiddenOrShownCondition" display="Hidden Or Shown" muid="13D42E4E987C4AA7" description="A condition that is satisfied when an object is hidden or shown." Deprecated="False" filter="0" group="General">
                        <TunableList name="hidden_flags" class="TunableEnumFlags" default="RABBIT_HOLE" display="Hidden Flags" muid="9AE99F976FB03D25" description="The hidden reason we care about. If any of the flags exist as&#xA;hidden reasons, we satisfy this condition. If this is empty, then&#xA;we will care about any reason that would cause the object to be&#xA;hidden, and expect zero flags remaining when the object is shown." Deprecated="False" filter="0" group="General" unique_entries="true">
                            <TunableEnum type="HiddenReasonFlag" class="TunableEnumEntry" default="NONE" muid="69C19FF3E8BD4C08" static_entries="objects.HiddenReasonFlag" Deprecated="False" filter="0" group="General" />
                        </TunableList>
                        <TunableEnum type="ParticipantTypeSingle" name="participant" class="TunableEnumEntry" default="Actor" display="Participant" muid="BBA5309542045B3E" static_entries="interactions.ParticipantTypeSingle" description="The participant whose hidden flags we are checking." Deprecated="False" filter="0" group="General" />
                        <TunableEnum type="Timing" name="timing" class="TunableEnumEntry" default="ON_HIDDEN" display="Timing" muid="B0845CFCCF6DEB59" static_entries="statistics-statistic_conditions.HiddenOrShownCondition.Timing" description="When the condition satisfies.&#xA;Choices:&#xA;ON_HIDDEN: Only check the condition on the edge of the object being&#xA;hidden. This will not satisfy if you are hidden when the&#xA;interaction starts.&#xA;ON_SHOWN: Only check the condition on the edge of the object being&#xA;shown. This will not satisfy if you are not hidden when the &#xA;interaction starts.&#xA;IS_HIDDEN: Check that the object is hidden at any time this &#xA;condition is active. This will satisfy if you are hidden when the&#xA;interaction starts.&#xA;NOT_HIDDEN: Check that the object is not hidden at any time this&#xA;condition is active. This will satisfy if you are not hidden&#xA;when the interaction starts." Deprecated="False" filter="0" group="General" />
                    </TunableTuple>
                    <TunableTuple name="in_use_based" class="TunableInUseCondition" display="In Use Based" muid="18682A6C64A138D7" description="A condition that is satisfied when an object is no longer in use,&#xA;optionally specifying an affordance that the user of the object must&#xA;be running." Deprecated="False" filter="0" group="General">
                        <TunableVariant type="None" name="affordance" class="OptionalTunable" default="Unspecified" display="Affordance" muid="3B15DFF7A8482CC3" description="If specified, then the condition is satisfied if no user of the&#xA;specified object is running this affordance. If unspecified, will&#xA;be satisfied if object is no longer in use by any Sim." Deprecated="False" filter="0" group="General">
                            <Tunable type="interaction" name="Specific_Interaction" class="TunableReference" display="Specific Interaction" muid="7940C4D13F40A6A2" description="Only looking to see if this interaction is running and stopping&#xA;when this interaction is no longer running" allow_none="False" Deprecated="False" filter="0" group="General" restrict="SuperInteraction" />
                            <Tunable name="Unspecified" class="TunableExistance" display="Unspecified" muid="EDE423097B208106" />
                        </TunableVariant>
                        <TunableEnum type="ParticipantType" name="participant" class="TunableEnumEntry" default="Object" display="Participant" muid="8030F459E87FA5BA" static_entries="interactions.ParticipantType" description="The participant of the interaction used to fetch the users against&#xA;which the condition test is run." Deprecated="False" filter="0" group="General" />
                    </TunableTuple>
                    <TunableTuple name="mood_based" class="TunableMoodBasedCondition" display="Mood Based" muid="870FCC7759D0003A" description="A condition that is satisfied when a Sim enters a specific mood." Deprecated="False" filter="0" group="General">
                        <Tunable type="bool" name="invert" class="Tunable" default="False" display="Invert" muid="B2119EB12E6A6379" description="If enabled, this condition will satisfy when the Sim is not in this&#xA;mood." Deprecated="False" filter="0" group="General" />
                        <Tunable type="mood" name="mood" class="TunableReference" display="Mood" muid="F225BD831FD3886C" description="The mood that satisfies the condition." tuning_state="NeedsTuning" allow_none="False" Deprecated="False" filter="0" group="General" restrict="Mood" />
                        <TunableEnum type="ParticipantType" name="participant" class="TunableEnumEntry" default="Actor" display="Participant" muid="ABBEE10FEA21464E" static_entries="interactions.ParticipantType" description="The Sim whose mood we're checking against." Deprecated="False" filter="0" group="General" />
                    </TunableTuple>
                    <TunableTuple name="object_relationship_based" class="TunableObjectRelationshipCondition" display="Object Relationship Based" muid="8C3CCABAD8585F4B" description="A condition that is satisfied when a Sim reaches a specific object&#xA;relationship threshold." Deprecated="False" filter="0" group="General">
                        <TunableEnum type="ParticipantType" name="object" class="TunableEnumEntry" default="Object" display="Object" muid="59F9BEE2EA9F6205" static_entries="interactions.ParticipantType" description="The object whose object relationship we're checking." Deprecated="False" filter="0" group="General" />
                        <TunableEnum type="ParticipantType" name="sim" class="TunableEnumEntry" default="Actor" display="Sim" muid="4341858CA28343C5" static_entries="interactions.ParticipantType" description="The Sim whose object relationship we're checking." Deprecated="False" filter="0" group="General" />
                        <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="42A242C1602AE98B" description="The relationship threshold that will trigger this condition." Deprecated="False" filter="0" group="General">
                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="FB73C56BFECABCA5" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                            <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="E4D40ABCEC10F97C" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                        </TunableTuple>
                    </TunableTuple>
                    <TunableTuple name="rabbit_hole_based" class="TunableRabbitHoleExitCondition" display="Rabbit Hole Based" muid="C94E74B58E27B6C4" description="An exit condition for rabbithole interactions" Deprecated="False" filter="0" group="General">
                        <Tunable type="float" name="max_time" class="TunableSimMinute" default="None" display="Max Time" muid="A9F1A95EEC971F4C" min="None" max="None" description="Maximum amount of time (in sim minutes) for this condition to be satisfied." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                        <Tunable type="float" name="min_time" class="TunableSimMinute" default="1" display="Min Time" muid="213D621CDCEEF063" min="None" max="None" description="Minimum amount of time (in sim minutes) for this condition to be satisfied." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                    </TunableTuple>
                    <TunableTuple name="sim_spawn_based" class="TunableSimSpawnCondition" display="Sim Spawn Based" muid="4C7510E06C3A2725" description="A condition that is satisfied when a Sim spawns in the world." Deprecated="False" filter="0" group="General">
                        <TunableEnum type="ParticipantType" name="participant_type" class="TunableEnumEntry" default="PickedItemId" display="Participant Type" muid="AA59351A90AD018" static_entries="interactions.ParticipantType" description="Who or what to apply this test to" Deprecated="False" filter="0" group="General" />
                    </TunableTuple>
                    <TunableTuple name="stat_based" class="TunableStatisticCondition" display="Stat Based" muid="6CAFE7FB2C5C2B4A" Deprecated="False" filter="0" group="General">
                        <Tunable type="bool" name="absolute" class="Tunable" default="True" display="Absolute" muid="DEDA279A1CE9C70E" description="True = treat the threshold value as an absolute commodity value.  Otherwise, it is relative to the Sim's start value." Deprecated="False" filter="0" group="General" />
                        <Tunable type="statistic" name="stat" class="TunableReference" display="Stat" muid="4C4FD40E4E3327E1" description="The commodity we are gaining." allow_none="False" Deprecated="False" filter="0" group="General" />
                        <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="467CA82D56F2AB8A" description="A commodity value and comparison that defines the exit condition hits (or hit commodity.maximum)." Deprecated="False" filter="0" group="General">
                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="7DAD4E61F16ACFA0" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                            <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="6D31FF6CDED19003" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                        </TunableTuple>
                        <TunableEnum type="ParticipantType" name="who" class="TunableEnumEntry" default="Actor" display="Who" muid="3B5365BACBF1F9AB" static_entries="interactions.ParticipantType" description="Who or what to apply this test to" Deprecated="False" filter="0" group="General" />
                    </TunableTuple>
                    <TunableTuple name="state_based" class="TunableStateCondition" display="State Based" muid="CE54B363C235E3DE" Deprecated="False" filter="0" group="General">
                        <TunableVariant type="None" name="state" class="TunableVariant" default="on_trigger" display="State" muid="12461C9ACCAF1C46" description="The state to check for." Deprecated="False" filter="0" group="General">
                            <TunableTuple name="on_boundary" class="TunableTuple" display="On Boundary" muid="C3DD55CA60599DD5" description="Satisfy the condition when a boundary of this stat-based state is reached" Deprecated="False" filter="0" group="General">
                                <TunableVariant type="None" name="boundary" class="TunableVariant" default="upper" display="Boundary" muid="931C98CB59C86C90" description="The boundary required to be reached for the condition to be satisfied." Deprecated="False" filter="0" group="General">
                                    <Tunable name="lower" class="TunableExistance" display="Lower" muid="70721B766354BB7A" />
                                    <Tunable name="upper" class="TunableExistance" display="Upper" muid="E7E3D24658A8A8C1" />
                                </TunableVariant>
                                <Tunable type="object_state" name="state" class="TunableReference" display="State" muid="EC9D85D18630D12D" description="The state required to satisfy the condition" allow_none="False" Deprecated="False" filter="0" group="General" restrict="CommodityBasedObjectStateValue" />
                            </TunableTuple>
                            <Tunable type="object_state" name="on_trigger" class="TunableReference" display="On Trigger" muid="92A3660E187CD1AE" description="Satisfy the condition when this state is triggered." allow_none="False" Deprecated="False" filter="0" group="General" restrict="ObjectStateValue" />
                        </TunableVariant>
                        <TunableEnum type="ParticipantType" name="subject" class="TunableEnumEntry" default="Object" display="Subject" muid="F6685F21658942D6" static_entries="interactions.ParticipantType" description="The subject to check the condition on." Deprecated="False" filter="0" group="General" />
                    </TunableTuple>
                    <TunableTuple name="time_based" class="TunableTimeRangeCondition" display="Time Based" muid="76D66338004EDDA8" description="The minimum and maximum amount of time required to satisfy this condition." Deprecated="False" filter="0" group="General">
                        <Tunable type="float" name="max_time" class="TunableSimMinute" default="None" display="Max Time" muid="2FE8A4ECB2EC0BBA" min="None" max="None" description="Maximum amount of time (in sim minutes) for this condition to be satisfied." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                        <Tunable type="float" name="min_time" class="TunableSimMinute" default="1" display="Min Time" muid="9BCB3E7D1374C61A" min="None" max="None" description="Minimum amount of time (in sim minutes) for this condition to be satisfied." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                    </TunableTuple>
                    <TunableTuple name="wakeup_time_based" class="TunableWakeupCondition" display="Wakeup Time Based" muid="70E62E8A9585CBF1" description="A condition that is satisfied by being close to the schedule time for the sims career" Deprecated="False" filter="0" group="General">
                        <Tunable type="float" name="hours_prior_to_schedule_start" class="Tunable" default="0" display="Hours Prior To Schedule Start" muid="52D70D7C72B55560" description="The number of hours prior to the schedule start to satisfy this condition." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                        <TunableEnum type="ParticipantType" name="who" class="TunableEnumEntry" default="Actor" display="Who" muid="9321BF8F26FA4042" static_entries="interactions.ParticipantType" description="Who or what to apply this test to" Deprecated="False" filter="0" group="General" />
                    </TunableTuple>
                </TunableVariant>
            </TunableList>
            <TunableEnum type="ConditionalInteractionAction" name="interaction_action" class="TunableEnumEntry" default="GO_INERTIAL" display="Interaction Action" muid="4CBBF967B7E4D5BC" static_entries="interactions-utils-statistic_element.ConditionalInteractionAction" description="This controls what happens to the interaction when all the&#xA;conditions are satisfied. Usages:&#xA;&#xA;NO_ACTION: Interaction state does not change.&#xA;&#xA;GO_INERTIAL: Interaction goes inertial.&#xA;&#xA;EXIT_NATURALLY: Interaction exits successfully. Use this&#xA;for cases where the Actor is considered to have&#xA;successfully completed the interaction. Examples:&#xA;- Use Toilet, condition on bladder motive&#xA;- Jog for X minutes: condition on time&#xA;- Read skill book that stops giving skill at level X,&#xA;  condition on skill reaching X&#xA;&#xA;EXIT_CANCEL: Interaction exits as if canceled. Use this if&#xA;the Actor did not successfully complete the interaction.&#xA;Examples:&#xA;- Object breaks.&#xA;- Sim motive fails or distresses.&#xA;&#xA;LOWER_PRIORITY: Only relevant if guaranteed and user-&#xA;directed. A guaranteed user-directed interaction with&#xA;lowered priority will still behave as if guaranteed except&#xA;that other user-directed interactions in queue can cancel&#xA;it. This should be used sparingly. A possible use of this:&#xA;- A Sim should sleep until his natural wake-up time even&#xA;  if his energy maxes out sooner. This will help maintain a&#xA;  consistent sleep schedule, and can be accomplished with&#xA;  EXIT_NATURALLY conditioned on the wake-up time. But say a&#xA;  player queues up an interaction after sleep. As it's&#xA;  awkward for that interaction to sit in queue for hours&#xA;  after energy has maxed and it's annoying to have to watch&#xA;  the Sim's motives and manually cancel Sleep, queued user-&#xA;  directed interactions should trump Sleep after energy is&#xA;  maxed. This can be accomplished with LOWER_PRIORITY&#xA;  conditioned on max energy. (Note that while GO_INERTIAL&#xA;  will also make Sleep cancel when a user-directed&#xA;  interaction is queued, it also allows autonomy to run and&#xA;  possibly boot Sleep in favor of something else, which&#xA;  will ruin the Sim's sleep schedule.)" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
            <TunableList name="loot_actions" class="TunableList" display="Loot Actions" muid="FD8260F3596728C9" description="A list of loot actions that are given when the conditional&#xA;action satisfies." Deprecated="False" filter="0" group="General">
                <Tunable type="action" class="TunableReference" muid="F0695A9FA9DCAB80" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="LootActions" />
            </TunableList>
            <TunableEnum type="ProgressBarAction" name="progress_bar_action" class="TunableEnumEntry" default="NO_ACTION" display="Progress Bar Action" muid="D54A20107B058490" static_entries="interactions-utils-statistic_element.ProgressBarAction" description="This will tell the progress bar if there is any &#xA;special behavior to be done with this exit condition.&#xA;Usages:&#xA;NO_ACTION: Progress bar will prioritize the exit conditions&#xA;as it normally does.&#xA;&#xA;IGNORE_CONDITION: Progress bar will not consider using&#xA;this exit condition in its calculations.&#xA;&#xA;FORCE_USE_CONDITION: Progress bar will use this condition&#xA;ignoring if its not an exiting exit condition, this will&#xA;be used to for special cases where we want to consider&#xA;special conditions for tracking the progress (like on &#xA;sleeping, even if energy is not an exit condition, we will&#xA;use it in the calculation by forcing it with this)." Deprecated="False" filter="0" group="General" />
            <TunableEnum type="ConditionalActionRestriction" name="restrictions" class="TunableEnumEntry" default="NO_RESTRICTIONS" display="Restrictions" muid="725DF2053622B331" static_entries="interactions-utils-statistic_element.ConditionalActionRestriction" description="By default, this condition applies to all interactions.&#xA;This option allows you to limit this condition to only&#xA;apply if the interaction was user-directed or autonomously&#xA;started." Deprecated="False" filter="0" group="General" />
            <TdescFragTag name="tests" class="TunableTestSet" display="Tests" muid="AEC81B82DCE44934" description="A set of tests to see if the condition is valid." filter="0" group="General" />
        </TunableTuple>
    </Instance>

    <VersionHistory>
        <ActionList>
            <Action type="kRename" old_muid="FFA956DA20A22BA4" new_muid="F8ACD9E332569BD7" />
            <Action type="kRename" old_muid="E07B89B46E131175" new_muid="461D0FA39FEBB820" />
        </ActionList>

        <ActionList>
            <Action type="kRemove" old_muid="858B5C501BEEF27A" />
        </ActionList>

        <ActionList>
            <Action type="kRename" old_muid="276E1A6BEED7A188" new_muid="461D0FA39FEBB820" />
            <Action type="kRename" old_muid="9D5BBB62AA65F99C" new_muid="B6CBDDFE5830AFB2" />
            <Action type="kRename" old_muid="F93FB56FE42F6D9C" new_muid="D63BFE12A92E413D" />
            <Action type="kRename" old_muid="7CF77C9FB54C5744" new_muid="16CFF8EC3C962AFB" />
            <Action type="kRename" old_muid="5DC7DBCDF3AC3E83" new_muid="F8ACD9E332569BD7" />
        </ActionList>

        <ActionList>
            <Action type="kRename" old_muid="FA0974C851B81E6F" new_muid="C94E74B58E27B6C4" />
        </ActionList>

        <ActionList>
            <Action type="kRemove" old_muid="CC49264BA21A4017" />
            <Action type="kRename" old_muid="EBA0987F00249D77" new_muid="53C8B8FB86D16CA1" />
            <Action type="kRename" old_muid="53425D68A806E93F" new_muid="6A59BCDA0600AC5C" />
            <Action type="kRename" old_muid="A4E0ED7DBB4726A0" new_muid="26CA6881C19A8336" />
            <Action type="kRename" old_muid="493F59AE64815E1F" new_muid="4005A1C60BF86A80" />
            <Action type="kRename" old_muid="538DFE191ADEA3AA" new_muid="3F1059AEAB0FA8A0" />
        </ActionList>
    </VersionHistory>
</TuningRoot>