<?xml version="1.0" encoding="iso-8859-1"?>

<TuningRoot>
    <Instance instance_type="snippet" class="ExitConditionList" module="snippets" muid="B09A0549FA694B33" instance_needs_reference="True" instance_subclasses_only="False" path="Snippets\Descriptions" use_guid_for_reference="True">
        <TunableList name="value" class="ExitConditionSnippetVariantList" display="Value" muid="E3BD38B6E7EF235" Deprecated="False" filter="0" group="General">
            <TunableVariant type="None" class="TunableExitConditionSnippet" default="literal" muid="97DFD89E4D523033" description="This may be tuned in place here using 'literal' or as a reference to a ExitCondition tuning snippet." Deprecated="False" filter="0" group="General">
                <TunableTuple name="literal" class="TunableExitCondition" display="Literal" muid="B4353D35452505DC" Deprecated="False" filter="0" group="General">
                    <TunableList name="conditions" class="TunableList" display="Conditions" muid="1C434B0CE582E772" description="A list of conditions that all must be satisfied for the group to be considered satisfied." Deprecated="False" filter="0" group="General">
                        <TunableVariant type="None" class="TunableCondition" default="stat_based" muid="D1F979033F14D6EB" description="A condition for a single motive." Deprecated="False" filter="0" group="General">
                            <TunableTuple name="buff_based" class="TunableBuffCondition" display="Buff Based" muid="9E6801A25CFB0DF" description="A condition that is satisfied when a Sim gains or loses a buff." Deprecated="False" filter="0" group="General">
                                <Tunable type="buff" name="buff" class="TunableReference" display="Buff" muid="D8C7CAB9C48075B1" description="The buff we're checking." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                <TunableEnum type="ParticipantTypeActorTargetSim" name="participant" class="TunableEnumEntry" default="Actor" display="Participant" muid="6C7B5BA423D19908" static_entries="interactions.ParticipantTypeActorTargetSim" description="The participant whose buffs we're checking." Deprecated="False" filter="0" group="General" />
                                <TunableEnum type="Timing" name="timing" class="TunableEnumEntry" default="ON_ADD" display="Timing" muid="ADB19A7F0FED21F0" static_entries="statistics-statistic_conditions.BuffCondition.Timing" description="When the condition satisfies.&#xA;Choices:&#xA;ON_ADD: Only check the condition on the edge of the buff being&#xA;added.  This will not satisfy if you have the buff when the&#xA;interaction starts.&#xA;ON_REMOVE: Only check the condition on the edge of the buff being&#xA;removed.  This will not satisfy if you do not have the buff when&#xA;the interaction starts.&#xA;HAS_BUFF: Check for the buff existing at any time this condition&#xA;is active.  This will satisfy if you have the buff when the&#xA;interaction starts.&#xA;NOT_HAS_BUFF: Check for the buff not existing at any time this&#xA;condition is active.  This will satisfy if you do not have the buff&#xA;when the interaction starts." Deprecated="False" filter="0" group="General" />
                            </TunableTuple>
                            <TunableTuple name="career_based" class="TunableCareerCondition" display="Career Based" muid="1B7C99822562EF2" description="A condition that is satisfied by career data" Deprecated="False" filter="0" group="General">
                                <TunableEnum type="ParticipantType" name="who" class="TunableEnumEntry" default="Actor" display="Who" muid="2EA852F2275E7241" static_entries="interactions.ParticipantType" description="Who or what to apply this test to" Deprecated="False" filter="0" group="General" />
                            </TunableTuple>
                            <TunableTuple name="child_based" class="TunableObjectChildrenChangedCondition" display="Child Based" muid="83232701DDF6A951" description="A condition that may be satisfied when a child is added or removed from a&#xA;participant, or simply based on the number of children." Deprecated="False" filter="0" group="General">
                                <TunableVariant type="None" name="condition" class="TunableVariant" default="single_child_changed" display="Condition" muid="6403365893EC18EC" description="The condition we want to test for." Deprecated="False" filter="0" group="General">
                                    <TunableTuple name="all_or_none" class="TunableTuple" display="All Or None" muid="F38B1324EA84C53E" description="Satisfied when we run out of slots of the specified types." Deprecated="False" filter="0" group="General">
                                        <Tunable type="bool" name="negate" class="Tunable" default="False" display="Negate" muid="7D638A89E819AD23" description="If checked, we will satisfy when all the slots are empty.&#xA;Otherwise we satisfy when all slots are filled." Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                    <TunableTuple name="children_count" class="TunableTuple" display="Children Count" muid="57FA595B5EF85B87" description="When the number of children in the specified slot types passes&#xA;the threshold, we will satisfy the condition." Deprecated="False" filter="0" group="General">
                                        <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="761B2836D06EDB86" description="The threshold against the number of children in the&#xA;specified slot types." Deprecated="False" filter="0" group="General">
                                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="A18FFA09BECEEA88" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                            <Tunable type="int" name="value" class="Tunable" default="0" display="Value" muid="BAB3CC2190C0E3A5" description="The number of objects we expect to be in the specified&#xA;slot types." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                    </TunableTuple>
                                    <TunableTuple name="single_child_changed" class="TunableTuple" display="Single Child Changed" muid="92E4FE9F28B9B585" description="When a child is added to the specified slot types, we&#xA;will pass the test." Deprecated="False" filter="0" group="General">
                                        <Tunable type="bool" name="negate" class="Tunable" default="False" display="Negate" muid="2B29A5BFF6B52D82" description="If enabled, we will check for a child removed instead of&#xA;added to the slot types. Otherwise, we check for a child&#xA;added to the specified slot types." Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                </TunableVariant>
                                <TunableEnum type="ParticipantType" name="participant" class="TunableEnumEntry" default="Object" display="Participant" muid="60392215B5C83104" static_entries="interactions.ParticipantType" description="The participant to be checked for a change in children." Deprecated="False" filter="0" group="General" />
                                <TunableVariant type="None" name="slot_types" class="OptionalTunable" default="disabled" display="Slot Types" muid="EC1215B6D0736C38" description="If enabled, we will restrict the contition tests against slots in&#xA;this list. Otherwise we will consider all slots." Deprecated="False" filter="0" group="General">
                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="AB1A75B0A93812AE" />
                                    <TunableList name="enabled" class="TunableSet" display="Enabled" muid="F849F1615368C652" description="A list of slot types to restrict the test against." Deprecated="False" filter="0" group="General" unique_entries="true">
                                        <Tunable type="slot_type" class="TunableReference" muid="311C43E9F3B4899" description="The slot type to be tested against. This check will check to &#xA;see if there is a child in the specified slot." allow_none="False" Deprecated="False" filter="0" group="General" restrict="SlotType" />
                                    </TunableList>
                                </TunableVariant>
                            </TunableTuple>
                            <TunableTuple name="constraint_based" class="TunableConstraintBasedCondition" display="Constraint Based" muid="B7186B7DE3090028" description="A condition that will trigger if constraints are not met. May use custom&#xA;constraints or re-use the constraints of the interaction. Only geometric&#xA;constraints will be checked." Deprecated="False" filter="0" group="General">
                                <TunableVariant type="None" name="constraints_to_use" class="OptionalTunable" default="reuse_interaction_constraints" display="Constraints To Use" muid="8965E6D1CC19C2E2" description="If enabled, this condition will use custom constraints. If disabled,&#xA;it will use the geometric constraints of the interaction on which&#xA;this is tuned." Deprecated="False" filter="0" group="General">
                                    <Tunable name="reuse_interaction_constraints" class="TunableExistance" display="Reuse Interaction Constraints" muid="1B9E3CA345B8BC0A" />
                                    <TunableTuple name="use_custom_constraints" class="TunableTuple" display="Use Custom Constraints" muid="34108DB913EB9EE7" Deprecated="False" filter="0" group="General">
                                        <TunableList name="_constraints" class="TunableMapping" display="Constraints" muid="6AEB42BF61B559A6" min="1" mapping_key="constrained_participant" mapping_value="constraints" description="Mapping between a participant and a set of constraints. The&#xA;participant is what we check constraints against. This&#xA;participant should rarely be the same as the relative&#xA;participant since most constraints would have no meaning (an&#xA;object is always within a radius of itself, etc).Constraints&#xA;currently only supports geometry constraints." Deprecated="False" filter="0" group="General">
                                            <TunableTuple class="TunableTuple" muid="677FD04CD4BF933" Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="ParticipantTypeSingle" name="constrained_participant" class="TunableEnumEntry" default="Actor" display="Constrained Participant" muid="D4EDF54E00D0FC14" static_entries="interactions.ParticipantTypeSingle" Deprecated="False" filter="0" group="General" />
                                                <TunableList name="constraints" class="TunableList" display="Constraints" muid="B85E3FFD1C1733B7" min="1" Deprecated="False" filter="0" group="General">
                                                    <TunableVariant type="None" class="TunableGeometricConstraintVariant" default="circle" muid="85030D336A2DC342" Deprecated="False" filter="0" group="General">
                                                        <TunableTuple name="circle" class="TunableCircle" display="Circle" muid="5074F680E28CF8FA" description="The relative circle geometry required for a sim/posture to use the object." Deprecated="False" filter="0" group="General">
                                                            <Tunable type="bool" name="enables_height_scoring" class="Tunable" default="False" display="Enables Height Scoring" muid="7FCD8678A5F05B71" description="If enabled, this constraint will &#xA;score goals using the height of&#xA;the surface.  The higher the goal&#xA;the cheaper it is." Deprecated="False" filter="0" group="General" />
                                                            <Tunable type="float" name="ideal_radius" class="Tunable" default="None" display="Ideal Radius" muid="67B0DCE2CD87F6F9" description="Ideal distance for this circle constraint, points &#xA;closer to the ideal distance will score higher." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                            <Tunable type="float" name="ideal_radius_width" class="Tunable" default="0" display="Ideal Radius Width" muid="D78375BE8271AB0D" description="This creates a band around the ideal_radius that also&#xA;costs 0 instead of rising in cost. ex: If you&#xA;have a circle of radius 5, with an ideal_radius of 2.5, and a&#xA;ideal_radius_width of 0.5, all goals in the radius 2 to radius 3 range&#xA;will score optimially." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                            <Tunable type="float" name="radial_cost_weight" class="TunableRange" default="2.25" display="Radial Cost Weight" muid="4C9B399514A4839C" min="0" max="None" description="The importance of the radial cost function.&#xA; = 0: Not used&#xA; &gt; 1: Important on surfaces&#xA; &gt; 2: Important on grass" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                            <Tunable type="float" name="radius" class="Tunable" default="1" display="Radius" muid="EA02AEB892E4BB9" description="Circle radius" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                        </TunableTuple>
                                                        <TunableTuple name="cone" class="TunableCone" display="Cone" muid="31AF2FF05F7F5122" description="The relative cone geometry required for a sim/posture to use the object." Deprecated="False" filter="0" group="General">
                                                            <Tunable type="float" name="angle" class="TunableAngle" default="180.0" display="Angle" muid="9A24ECF5A540081E" min="0.0" max="360.0" description="The cone angle in degrees." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                            <Tunable type="float" name="angular_cost_weight" class="TunableRange" default="2.25" display="Angular Cost Weight" muid="CED04058FD8CD263" min="0" max="None" description="The importance of the angular cost &#xA;function.&#xA; = 0: Not used&#xA; &gt; 1: Important on surfaces&#xA; &gt; 2: Important on grass" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                            <Tunable type="bool" name="enables_height_scoring" class="Tunable" default="False" display="Enables Height Scoring" muid="989FB2771632F724" description="If enabled, this constraint will &#xA;score goals using the height of&#xA;the surface.  The higher the goal&#xA;the cheaper it is." Deprecated="False" filter="0" group="General" />
                                                            <Tunable type="float" name="ideal_angle" class="TunableRange" default="0.25" display="Ideal Angle" muid="4865DC4C15F12209" min="0" max="1" description="The angular extents of an ideal &#xA;region as a fraction of angle." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                            <Tunable type="float" name="ideal_radius_max" class="TunableRange" default="0.75" display="Ideal Radius Max" muid="BE9C41ABA0D54C0F" min="0" max="1" description="The radial upper bound of an ideal &#xA;region as a fraction of the &#xA;difference between max_radius and &#xA;min_radius." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                            <Tunable type="float" name="ideal_radius_min" class="TunableRange" default="0.25" display="Ideal Radius Min" muid="87C6CACCD08AC119" min="0" max="1" description="The radial lower bound of an ideal &#xA;region as a fraction of the &#xA;difference between max_radius and &#xA;min_radius." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                            <Tunable type="float" name="max_radius" class="Tunable" default="1" display="Max Radius" muid="5E0B78154BEF2AF2" description="The maximum cone radius." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                            <Tunable type="float" name="min_radius" class="Tunable" default="0" display="Min Radius" muid="BBB36D9F2EA5F296" description="The minimum cone radius." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                            <Tunable type="float" name="offset" class="TunableAngle" default="0.0" display="Offset" muid="F66F3EDDA61E9C14" min="0.0" max="360.0" description="An offset (rotation) in degrees.&#xA;&#xA;By default the cone will face the &#xA;forward vector of the object.  Use&#xA;an offset to rotate the cone to &#xA;face a different direction. " tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                            <Tunable type="float" name="radial_cost_weight" class="TunableRange" default="2.25" display="Radial Cost Weight" muid="F36BAE2E17B64937" min="0" max="None" description="The importance of the radial cost &#xA;function.&#xA; = 0: Not used&#xA; &gt; 1: Important on surfaces&#xA; &gt; 2: Important on grass" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                            <Tunable type="bool" name="require_los" class="Tunable" default="True" display="Require Los" muid="D46DBF41661B94C7" description="If checked, the Sim will require line of sight to the actor.  Positions where a Sim&#xA;can't see the actor (e.g. there's a wall in the way) won't be valid.&#xA;&#xA;NOTE: This will NOT work on a&#xA;constraint that is not used to&#xA;generate routing goals such as&#xA;broadcasters and reactions, use a&#xA;Line Of Sight Constraint instead.&#xA;This will work on constraints used&#xA;to keep Sims in an interaction." Deprecated="False" filter="0" group="General" />
                                                        </TunableTuple>
                                                        <TunableTuple name="facing" class="TunableFacing" display="Facing" muid="891E860F11DF3456" description="Existential tunable that requires the sim to face the object." Deprecated="False" filter="0" group="General">
                                                            <Tunable type="float" name="inner_radius" class="Tunable" default="0.0" display="Inner Radius" muid="1A9BCB8ABE109F02" description="A radius around the center of the constraint that defines an area in which the Sim's facing is unrestricted." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                            <Tunable type="float" name="range" class="TunableAngle" default="90.0" display="Range" muid="EDA328DDE8EF0BC9" min="0.0" max="360.0" description="The size of the angle-range that sims should use when determining facing constraints." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                            <TunableVariant type="None" name="subroot_index" class="OptionalTunable" default="disabled" display="Subroot Index" muid="5F8EDE581E93707" description="An optional subroot to use for facing." Deprecated="False" filter="0" group="General">
                                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="3EE87A1FC528EFC4" />
                                                                <Tunable type="int" name="enabled" class="Tunable" default="0" display="Enabled" muid="1EE84DE6D9056E47" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                            </TunableVariant>
                                                        </TunableTuple>
                                                        <TunableTuple name="line_of_sight" class="TunableLineOfSight" display="Line Of Sight" muid="48FF43270311FD97" description="Existential tunable that creates a line of sight constraint." Deprecated="False" filter="0" group="General">
                                                            <TunableVariant type="None" name="temporary_los" class="OptionalTunable" default="disabled" display="Temporary Los" muid="EB54BE88A8F561D8" description="If enabled, a Line of Sight component will be temporarily created&#xA;when constraints are needed. This should be used if the affordance&#xA;requires LOS on an object that doesn't have an LOS component (i.e. a&#xA;Sim needs to see another Sim WooHoo to play the jealousy reactions&#xA;but Sims don't have LoS components.)" Deprecated="False" filter="0" group="General">
                                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="D1B6500A58343682" />
                                                                <TunableTuple name="enabled" class="TunableLineOfSightData" display="Enabled" muid="F44B07C006AFFF70" Deprecated="False" filter="0" group="General">
                                                                    <Tunable type="float" name="boundary_epsilon" class="Tunable" default="0.01" display="Boundary Epsilon" muid="CD04AC333846A8EC" description="The LOS origin is allowed to be outside of the boundary by this&#xA;amount." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                    <Tunable type="float" name="facing_offset" class="Tunable" default="0.1" display="Facing Offset" muid="EB99A3817914E76D" description="The LOS origin is offset from the object origin by this amount&#xA;(mainly to avoid intersecting walls)." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                    <Tunable type="int" name="map_divisions" class="Tunable" default="30" display="Map Divisions" muid="4E13FB32538FEF62" description="The number of points around the object to check collision from.&#xA;More points means higher accuracy." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                    <Tunable type="float" name="max_line_of_sight_radius" class="Tunable" default="10" display="Max Line Of Sight Radius" muid="32E6E913CE09B1AE" description="The maximum possible distance from this object than an&#xA;interaction can reach." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                    <Tunable type="float" name="simplification_ratio" class="Tunable" default="0.35" display="Simplification Ratio" muid="8D97E641FE21E1B5" description="A factor determining how much to combine edges in the line of&#xA;sight polygon." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                </TunableTuple>
                                                            </TunableVariant>
                                                        </TunableTuple>
                                                        <TunableTuple name="ocean_loc" class="TunableOceanStartLocationConstraint" display="Ocean Loc" muid="DAFB0AECBC78A3B1" description="The circle geometry relative to the nearest ocean locator." Deprecated="False" filter="0" group="General">
                                                            <Tunable type="bool" name="enables_height_scoring" class="Tunable" default="False" display="Enables Height Scoring" muid="177CE3B3F1AD3883" description="If enabled, this constraint will &#xA;score goals using the height of&#xA;the surface.  The higher the goal&#xA;the cheaper it is." Deprecated="False" filter="0" group="General" />
                                                            <Tunable type="float" name="ideal_radius" class="Tunable" default="None" display="Ideal Radius" muid="4D0B49264E06D6A8" description="Ideal distance for this circle constraint, points &#xA;closer to the ideal distance will score higher." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                            <Tunable type="float" name="ideal_radius_width" class="Tunable" default="0" display="Ideal Radius Width" muid="96D74F76BC230450" description="This creates a band around the ideal_radius that also&#xA;costs 0 instead of rising in cost. ex: If you&#xA;have a circle of radius 5, with an ideal_radius of 2.5, and a&#xA;ideal_radius_width of 0.5, all goals in the radius 2 to radius 3 range&#xA;will score optimially." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                            <TunableEnum type="WaterDepthIntervals" name="interval" class="TunableEnumEntry" default="WET" display="Interval" muid="658B88B66B6C1012" static_entries="interactions-constraints.WaterDepthIntervals" description="Select the depth for the Sim based on the water&#xA;height offset at a target location and the Sim's wading interval data." Deprecated="False" filter="0" group="General" />
                                                            <Tunable type="float" name="radial_cost_weight" class="TunableRange" default="2.25" display="Radial Cost Weight" muid="5B9A9F1EE4FB1258" min="0" max="None" description="The importance of the radial cost function.&#xA; = 0: Not used&#xA; &gt; 1: Important on surfaces&#xA; &gt; 2: Important on grass" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                            <Tunable type="float" name="radius" class="Tunable" default="1" display="Radius" muid="8FAAF6A4D246A157" description="Circle radius" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                        </TunableTuple>
                                                        <TunableTuple name="portal" class="TunablePortalConstraint" display="Portal" muid="D879F213A7BDA0C7" description="A constraint that is relative to the location of a portal.    " Deprecated="False" filter="0" group="General">
                                                            <TunableList name="portals" class="TunableList" display="Portals" muid="97C993543A92379" description="List of portal data to be used in this constraint." Deprecated="False" filter="0" group="General">
                                                                <TunableTuple class="TunableTuple" muid="516C47DF32CC12CE" Deprecated="False" filter="0" group="General">
                                                                    <TunableVariant type="None" name="portal_direction" class="TunableVariant" default="there" display="Portal Direction" muid="269B0A71E1ADC7FE" description="Choose between the There and Back of the portal. This will not work&#xA;properly if the portal is missing a Back and Back is specified here." Deprecated="False" filter="0" group="General">
                                                                        <Tunable name="back" class="TunableExistance" display="Back" muid="919388868D6BB970" />
                                                                        <Tunable name="there" class="TunableExistance" display="There" muid="B2F75E4C252BA65A" />
                                                                    </TunableVariant>
                                                                    <TunableVariant type="None" name="portal_location" class="TunableVariant" default="entry" display="Portal Location" muid="F4B66D3802D233EF" description="Choose between the entry and exit of a portal direction." Deprecated="False" filter="0" group="General">
                                                                        <Tunable name="entry" class="TunableExistance" display="Entry" muid="50FFA38AB4CCC22" />
                                                                        <Tunable name="exit" class="TunableExistance" display="Exit" muid="538FCF26100AA6C3" />
                                                                    </TunableVariant>
                                                                    <Tunable type="snippet" name="portal_type" class="TunableReference" display="Portal Type" muid="A7F1FB4DFF59BFDE" description="A reference to the type of portal to use for the constraint." allow_none="False" Deprecated="False" filter="0" group="General" restrict="PortalData" />
                                                                    <Tunable type="bool" name="require_position_los" class="Tunable" default="True" display="Require Position Los" muid="9586ECF1CA2BEEDB" description="If checked, the Sim will require line of sight to the portal location for a Position constraint.&#xA;Positions where a Sim can't see the portal (e.g. there's a wall in the way) won't be valid.&#xA;This value won't be used for any tuned sub constraints." Deprecated="False" filter="0" group="General" />
                                                                    <TunableVariant type="None" name="sub_constraint" class="OptionalTunable" default="disabled" display="Sub Constraint" muid="AFDF7B66D00D822" description="If enabled, specify a specific type of constraint to create at the&#xA;location of the portal.&#xA;&#xA;If disabled then the constraint will just be a location constraint&#xA;at the location of the portal." Deprecated="False" filter="0" group="General">
                                                                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="FF23411975CE2475" />
                                                                        <TunableVariant type="None" name="enabled" class="TunableVariant" default="circle" display="Enabled" muid="6DDB520AB111685A" description="The types of constraints that can be created at the location&#xA;of the portal." Deprecated="False" filter="0" group="General">
                                                                            <TunableTuple name="circle" class="TunableCircle" display="Circle" muid="4605D5A37ED49FC5" description="A circle constraint that is created at the location of the&#xA;portal." Deprecated="False" filter="0" group="General">
                                                                                <Tunable type="bool" name="enables_height_scoring" class="Tunable" default="False" display="Enables Height Scoring" muid="EF93010BD8CF1468" description="If enabled, this constraint will &#xA;score goals using the height of&#xA;the surface.  The higher the goal&#xA;the cheaper it is." Deprecated="False" filter="0" group="General" />
                                                                                <Tunable type="float" name="ideal_radius" class="Tunable" default="None" display="Ideal Radius" muid="40E9F70F9DC5808D" description="Ideal distance for this circle constraint, points &#xA;closer to the ideal distance will score higher." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                                <Tunable type="float" name="ideal_radius_width" class="Tunable" default="0" display="Ideal Radius Width" muid="B027E02293191303" description="This creates a band around the ideal_radius that also&#xA;costs 0 instead of rising in cost. ex: If you&#xA;have a circle of radius 5, with an ideal_radius of 2.5, and a&#xA;ideal_radius_width of 0.5, all goals in the radius 2 to radius 3 range&#xA;will score optimially." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                                <Tunable type="bool" name="multi_surface" class="Tunable" default="False" display="Multi Surface" muid="DE18B6A62D781FAB" description="If enabled, this constraint will be considered for multiple surfaces.&#xA;&#xA;Example: You want a circle&#xA;constraint that can be both inside&#xA;and outside of a pool." Deprecated="False" filter="0" group="General" />
                                                                                <Tunable type="float" name="radial_cost_weight" class="TunableRange" default="2.25" display="Radial Cost Weight" muid="5030207F9C6BD38E" min="0" max="None" description="The importance of the radial cost function.&#xA; = 0: Not used&#xA; &gt; 1: Important on surfaces&#xA; &gt; 2: Important on grass" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                                <Tunable type="float" name="radius" class="Tunable" default="3" display="Radius" muid="22D8B52A8A60D4A8" description="Circle radius" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                                <Tunable type="bool" name="require_los" class="Tunable" default="True" display="Require Los" muid="F137CF392D148DBC" description="If checked, the Sim will require line of sight to the actor.  Positions where a Sim&#xA;can't see the actor (e.g. there's a wall in the way) won't be valid.&#xA;&#xA;NOTE: This will NOT work on a&#xA;constraint that is not used to&#xA;generate routing goals such as&#xA;broadcasters and reactions, use a&#xA;Line Of Sight Constraint instead.&#xA;This will work on constraints used&#xA;to keep Sims in an interaction." Deprecated="False" filter="0" group="General" />
                                                                            </TunableTuple>
                                                                            <TunableTuple name="cone" class="TunableCone" display="Cone" muid="C1CD753E4FCED6D" description="A cone constraint that is created at the location of the &#xA;portal." Deprecated="False" filter="0" group="General">
                                                                                <Tunable type="float" name="angle" class="TunableAngle" default="180.0" display="Angle" muid="4BB7C78518D1F801" min="0.0" max="360.0" description="The cone angle in degrees." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                                <Tunable type="float" name="angular_cost_weight" class="TunableRange" default="2.25" display="Angular Cost Weight" muid="534E33E18BA1DAA7" min="0" max="None" description="The importance of the angular cost &#xA;function.&#xA; = 0: Not used&#xA; &gt; 1: Important on surfaces&#xA; &gt; 2: Important on grass" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                                <Tunable type="bool" name="enables_height_scoring" class="Tunable" default="False" display="Enables Height Scoring" muid="843CE64FDCB86834" description="If enabled, this constraint will &#xA;score goals using the height of&#xA;the surface.  The higher the goal&#xA;the cheaper it is." Deprecated="False" filter="0" group="General" />
                                                                                <Tunable type="float" name="ideal_angle" class="TunableRange" default="0.25" display="Ideal Angle" muid="2440C741D9D6526C" min="0" max="1" description="The angular extents of an ideal &#xA;region as a fraction of angle." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                                <Tunable type="float" name="ideal_radius_max" class="TunableRange" default="0.75" display="Ideal Radius Max" muid="F74F8CC3EF354C40" min="0" max="1" description="The radial upper bound of an ideal &#xA;region as a fraction of the &#xA;difference between max_radius and &#xA;min_radius." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                                <Tunable type="float" name="ideal_radius_min" class="TunableRange" default="0.25" display="Ideal Radius Min" muid="CD80CDD14E82EB65" min="0" max="1" description="The radial lower bound of an ideal &#xA;region as a fraction of the &#xA;difference between max_radius and &#xA;min_radius." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                                <Tunable type="float" name="max_radius" class="Tunable" default="1" display="Max Radius" muid="7D50E36D1B4E0F4E" description="The maximum cone radius." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                                <Tunable type="float" name="min_radius" class="Tunable" default="0" display="Min Radius" muid="CAAF653E53AF8F28" description="The minimum cone radius." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                                <Tunable type="bool" name="multi_surface" class="Tunable" default="False" display="Multi Surface" muid="A9292F1720F1CF26" description="If enabled, this constraint will be&#xA;considered for multiple surfaces.&#xA;&#xA;Example: You want a circle&#xA;constraint that can be both inside&#xA;and outside of a pool." Deprecated="False" filter="0" group="General" />
                                                                                <Tunable type="float" name="offset" class="TunableAngle" default="0.0" display="Offset" muid="A6804CC9547E3D45" min="0.0" max="360.0" description="An offset (rotation) in degrees.&#xA;&#xA;By default the cone will face the &#xA;forward vector of the object.  Use&#xA;an offset to rotate the cone to &#xA;face a different direction. " tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                                <Tunable type="float" name="radial_cost_weight" class="TunableRange" default="2.25" display="Radial Cost Weight" muid="4E55394278AC2351" min="0" max="None" description="The importance of the radial cost &#xA;function.&#xA; = 0: Not used&#xA; &gt; 1: Important on surfaces&#xA; &gt; 2: Important on grass" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                                <Tunable type="bool" name="require_los" class="Tunable" default="True" display="Require Los" muid="DE4D455A2BF23760" description="If checked, the Sim will require line of sight to the actor.  Positions where a Sim&#xA;can't see the actor (e.g. there's a wall in the way) won't be valid.&#xA;&#xA;NOTE: This will NOT work on a&#xA;constraint that is not used to&#xA;generate routing goals such as&#xA;broadcasters and reactions, use a&#xA;Line Of Sight Constraint instead.&#xA;This will work on constraints used&#xA;to keep Sims in an interaction." Deprecated="False" filter="0" group="General" />
                                                                            </TunableTuple>
                                                                        </TunableVariant>
                                                                    </TunableVariant>
                                                                    <TunableTuple name="sub_constraint_offset" class="TunableVector3" display="Sub Constraint Offset" muid="DC1AFCED51475A5E" description="Translation offset applied to the sub constraint, relative to the target object." Deprecated="False" filter="0" group="General">
                                                                        <Tunable type="float" name="x" class="Tunable" default="0.0" display="X" muid="3B587A4ACB91256" description="x component" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                        <Tunable type="float" name="y" class="Tunable" default="0.0" display="Y" muid="AC6D6CB7201A9788" description="y component" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                        <Tunable type="float" name="z" class="Tunable" default="0.0" display="Z" muid="9A3FEC3A3CF98C4B" description="z component" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                    </TunableTuple>
                                                                </TunableTuple>
                                                            </TunableList>
                                                        </TunableTuple>
                                                        <TunableTuple name="position" class="TunablePosition" display="Position" muid="D6189900BA8E4A43" description="The relative position geometry required for a sim/posture to use the object." Deprecated="False" filter="0" group="General">
                                                            <TunableTuple name="relative_position" class="TunableVector3" display="Relative Position" muid="FDF188C6927F3D3" description="Position" Deprecated="False" filter="0" group="General">
                                                                <Tunable type="float" name="x" class="Tunable" default="0.0" display="X" muid="31C2F235AD6086B3" description="x component" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                <Tunable type="float" name="y" class="Tunable" default="0.0" display="Y" muid="30BDADAC1CE2A4F4" description="y component" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                <Tunable type="float" name="z" class="Tunable" default="0.0" display="Z" muid="F5C5FC278E4BDB3F" description="z component" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                            </TunableTuple>
                                                        </TunableTuple>
                                                        <TunableTuple name="relative_circle" class="TunableRelativeCircleConstraint" display="Relative Circle" muid="A0F7B365383425F6" description="A circle constraint whose size is dependent on the size of the target&#xA;object." Deprecated="False" filter="0" group="General">
                                                            <Tunable type="bool" name="enables_height_scoring" class="Tunable" default="False" display="Enables Height Scoring" muid="67E4D136EE01B5C1" description="If enabled, this constraint will score goals using the height of&#xA;the surface.  The higher the goal the cheaper it is." Deprecated="False" filter="0" group="General" />
                                                            <TunableVariant type="None" name="maximum_radius" class="OptionalTunable" default="disabled" display="Maximum Radius" muid="5D409A4B16CEBB2C" description="If enabled, the generated constraint will have a radius no larger&#xA;that the specified amount." Deprecated="False" filter="0" group="General">
                                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="9039631C63DF726" />
                                                                <Tunable type="float" name="enabled" class="TunableRange" default="1" display="Enabled" muid="5532BFA0EEE12ADB" min="0" max="None" description="The constraint's maximum radius." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                            </TunableVariant>
                                                            <TunableVariant type="None" name="minimum_radius" class="OptionalTunable" default="disabled" display="Minimum Radius" muid="A7EC22970F0ADC3A" description="If enabled, the generated constraint will have a radius no smaller&#xA;than the specified amount." Deprecated="False" filter="0" group="General">
                                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="84874E3C5FE45272" />
                                                                <Tunable type="float" name="enabled" class="TunableRange" default="1" display="Enabled" muid="DDFAE628359ADAEF" min="0" max="None" description="The constraint's minimum radius." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                            </TunableVariant>
                                                            <TunableVariant type="None" name="relative_ideal_radius" class="OptionalTunable" default="disabled" display="Relative Ideal Radius" muid="B8B41D11F3464F9A" description="If enabled, specify an ideal radius relative to the constraint's&#xA;radius. " Deprecated="False" filter="0" group="General">
                                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="30E12471D7D4283E" />
                                                                <TunableTuple name="enabled" class="TunableTuple" display="Enabled" muid="43F4AB21550D1838" description="Ideal radius data." Deprecated="False" filter="0" group="General">
                                                                    <Tunable type="float" name="radius" class="TunableRange" default="1" display="Radius" muid="1135A72660DEF90D" min="0" max="1" description="The constraint's relative ideal radius. A value of 1 would&#xA;mean the ideal location is on the outskirt of the&#xA;constraint; values towards 0 approach the constraint's&#xA;center." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                    <Tunable type="float" name="width" class="Tunable" default="0" display="Width" muid="CA7E816DCA9FA628" description="This creates a band around the ideal_radius that also scores&#xA;to 1 instead of starting to fall off to 0 in scoring. ex: If&#xA;you have a circle of radius 5, with an ideal_radius of 2.5,&#xA;and a ideal_radius_width of 0.5, any goals in the radius 2&#xA;to radius 3 range will all score optimially." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                </TunableTuple>
                                                            </TunableVariant>
                                                            <Tunable type="float" name="relative_radius" class="TunableRange" default="1" display="Relative Radius" muid="DAFFD532F60D6E17" min="1" max="None" description="The constraint's radius relative to the size of the object. This is&#xA;a simple multiplier applied to the area generated by the object's&#xA;footprint" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                        </TunableTuple>
                                                        <TunableTuple name="spawn_points_with_backup" class="TunableSpawnPointWithBackup" display="Spawn Points With Backup" muid="D95D8A1C454D6DC5" Deprecated="False" filter="0" group="General">
                                                            <TunableVariant type="None" name="backup_tags" class="OptionalTunable" default="Spawn_Point_Tags" display="Backup Tags" muid="D17962F8C1184217" description="A constraint that represents primary spawn points with backup secondary ones." Deprecated="False" filter="0" group="General">
                                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="5EBE20495F2B25E2" />
                                                                <TunableList name="Spawn_Point_Tags" class="TunableSet" display="Spawn Point Tags" muid="C6C38EA750B618B1" min="1" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                    <TunableEnum type="Tag" class="TunableEnumWithFilter" default="INVALID" muid="54F941478EC04622" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" Deprecated="False" dynamic_entries_prefix="Spawn" filter="0" group="General" />
                                                                </TunableList>
                                                            </TunableVariant>
                                                            <TunableEnum type="SpawnPointRequestReason" name="spawn_point_request_reason" class="TunableEnumEntry" default="DEFAULT" display="Spawn Point Request Reason" muid="17F308CA2CDE8F2D" static_entries="world-spawn_point_enums.SpawnPointRequestReason" description="The reason why we want the spawn point. Certain spawn points are&#xA;only available for specific reasons, such as specific spawn&#xA;points for leaving or for spawning at." Deprecated="False" filter="0" group="General" />
                                                            <TunableVariant type="None" name="spawn_point_tags" class="TunableVariant" default="none" display="Spawn Point Tags" muid="DA3368AF0CD75FEB" description="Tags that specify the primary spawnpoints or where to get them." Deprecated="False" filter="0" group="General">
                                                                <Tunable name="none" class="TunableExistance" display="None" muid="2F8A9F037C5050A" />
                                                                <TunableTuple name="tags" class="Tunable_Tags" display="Tags" muid="E8DBC7ECD7E8AA87" description="Tags are specified straight out." Deprecated="False" filter="0" group="General">
                                                                    <TunableList name="tags" class="TunableSet" display="Tags" muid="CBFA6D9432B7E355" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                        <TunableEnum type="Tag" class="TunableEnumWithFilter" default="INVALID" muid="B5C4EC9820BD8837" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" Deprecated="False" dynamic_entries_prefix="Spawn" filter="0" group="General" />
                                                                    </TunableList>
                                                                </TunableTuple>
                                                                <TunableTuple name="university_based" class="TunableUniversitySpecificSpawnPointTags" display="University Based" muid="FB8BDE533BCAADC" description="Tags are specified right here (on a per university basis) " Deprecated="False" filter="0" group="General">
                                                                    <TunableList name="spawn_point_tags" class="TunableMapping" display="Spawn Point Tags" muid="71EB83AE445FA4C1" mapping_key="key" mapping_value="value" description="University specific classroom tags." Deprecated="False" filter="0" group="General">
                                                                        <TunableTuple class="TunableTuple" muid="9FD3F431AA9CDAD9" Deprecated="False" filter="0" group="General">
                                                                            <Tunable type="university" name="key" class="TunableReference" display="Key" muid="D2296AF289B7BB8E" allow_none="False" Deprecated="False" filter="0" group="General" />
                                                                            <TunableList name="value" class="TunableSet" display="Value" muid="BC2777F9D092A2F2" min="1" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                                <TunableEnum type="Tag" class="TunableEnumWithFilter" default="INVALID" muid="35F6AA3B709A940D" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" Deprecated="False" dynamic_entries_prefix="Spawn" filter="0" group="General" />
                                                                            </TunableList>
                                                                        </TunableTuple>
                                                                    </TunableList>
                                                                </TunableTuple>
                                                                <TunableTuple name="university_course_slot_career_si" class="TunableUniversityCourseCareerSISpawnPointTags" display="University Course Slot Career Si" muid="2012BCFB9C69FF51" description="Tags are pulled via the associated career interaction for a university &#xA;course. " Deprecated="False" filter="0" group="General" />
                                                                <TunableTuple name="university_course_slot_participant" class="TunableUniversityCourseParticipantSpawnPointTags" display="University Course Slot Participant" muid="F6040C51C9FE1B21" description="Tags are pulled via the specified participant holding the id of a &#xA;university course." Deprecated="False" filter="0" group="General">
                                                                    <TunableEnum type="ParticipantType" name="participant" class="TunableEnumEntry" default="PickedItemId" display="Participant" muid="3CB29025DB50C2FF" static_entries="interactions.ParticipantType" description="The participant from which the career ID will be obtained. &#xA;Typically should be PickedItemId if this interaction comes via a &#xA;CareerPickerSuperInteraction." Deprecated="False" filter="0" group="General" />
                                                                </TunableTuple>
                                                                <TunableTuple name="university_course_slot_reference" class="TunableUniversityCourseReferenceSpawnPointTags" display="University Course Slot Reference" muid="A99A2A7D590E5D61" description="Tags are pulled via the specified university course slot." Deprecated="False" filter="0" group="General">
                                                                    <Tunable type="career" name="_course_slot" class="TunableReference" display="Course Slot" muid="4F2759F221BF73AA" description="Course slot from which to pull the spawn point tags." allow_none="False" Deprecated="False" filter="0" group="General" restrict="UniversityCourseCareerSlot" />
                                                                </TunableTuple>
                                                            </TunableVariant>
                                                            <Tunable type="bool" name="use_lot_id_for_backup" class="Tunable" default="True" display="Use Lot Id For Backup" muid="233977A4379447E3" description="If checked then we will use the current lot id to limit spawn&#xA;points that are linked to lots to the current lot if we fall back&#xA;to the backup tags." Deprecated="False" filter="0" group="General" />
                                                        </TunableTuple>
                                                        <TunableTuple name="terrain_material" class="TunableTerrainMaterialConstraint" display="Terrain Material" muid="DAD106B952EB873D" description="A water depth constraint which defines only the terrain materials required." Deprecated="False" filter="0" group="General">
                                                            <TunableVariant type="None" name="terrain_tags" class="OptionalTunable" default="disabled" display="Terrain Tags" muid="42A64A7BAC04B89E" description="If enabled, a set of allowed terrain tags. At least one tag must&#xA;match the terrain under each vertex of the footprint of the supplied&#xA;object." Deprecated="False" filter="0" group="General">
                                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="E48F2DCB04529318" />
                                                                <TunableList name="enabled" class="TunableEnumSet" display="Enabled" muid="DE0064FE9BE5BE28" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                    <TunableEnum type="TerrainTag" class="TunableEnumEntry" default="INVALID" muid="8BEF574D29BF014B" static_entries="world-terrain_enums.TerrainTag" Deprecated="False" filter="0" group="General" invalid_entries="INVALID" />
                                                                </TunableList>
                                                            </TunableVariant>
                                                        </TunableTuple>
                                                        <TunableTuple name="water_depth" class="TunableWaterDepthConstraint" display="Water Depth" muid="A42FC3CE6C232158" description="A water depth constraint which defines only the ocean water depth required." Deprecated="False" filter="0" group="General">
                                                            <TunableVariant type="None" name="max_water_depth" class="OptionalTunable" default="disabled" display="Max Water Depth" muid="904FA871264635A6" description="(float) If provided, each vertex of the test polygon along with its centroid will&#xA;be tested to determine whether the ocean water at the test location is at most this deep.&#xA;Values &lt;= 0 indicate placement in ocean is invalid." Deprecated="False" filter="0" group="General">
                                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="151C3435D9E15B29" />
                                                                <Tunable type="float" name="enabled" class="Tunable" default="1000.0" display="Enabled" muid="C350B36CDAAADEA4" description="Value of the max water depth allowed." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                            </TunableVariant>
                                                            <TunableVariant type="None" name="min_water_depth" class="OptionalTunable" default="disabled" display="Min Water Depth" muid="3493DF10B4C048D6" description="(float) If provided, each vertex of the test polygon along with its centroid will&#xA;be tested to determine whether the ocean water at the test location is at least this deep.&#xA;Values &lt;= 0 indicate placement on land is valid." Deprecated="False" filter="0" group="General">
                                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="8ECD73BA149DC33C" />
                                                                <Tunable type="float" name="enabled" class="Tunable" default="-1.0" display="Enabled" muid="AB8B66B7CD51EAC2" description="Value of the min water depth allowed." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                            </TunableVariant>
                                                        </TunableTuple>
                                                        <TunableTuple name="water_depth_interval" class="TunableWaterDepthIntervalConstraint" display="Water Depth Interval" muid="1FA931FF24C26B1E" description="A water depth constraint which defines only the ocean water depth required." Deprecated="False" filter="0" group="General">
                                                            <TunableEnum type="WaterDepthIntervals" name="interval" class="TunableEnumEntry" default="WALK" display="Interval" muid="D077F3E64D49C58A" static_entries="interactions-constraints.WaterDepthIntervals" description="Test if a Sim should be walking, wading or swimming based on the water&#xA;height offset at a target location and the Sim's wading interval data." Deprecated="False" filter="0" group="General" />
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                </TunableList>
                                            </TunableTuple>
                                        </TunableList>
                                        <TunableEnum type="ParticipantTypeSingle" name="relative_participant" class="TunableEnumEntry" default="Object" display="Relative Participant" muid="248A348A0BA20C18" static_entries="interactions.ParticipantTypeSingle" description="The participant that constraints will be generated&#xA;relative to. For performance reasons, it is best to choose&#xA;a participant that won't be moving during this interaction &#xA;(usually the actor) since constraints must be recalculated&#xA;whenever this participant moves." Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                </TunableVariant>
                            </TunableTuple>
                            <TunableTuple name="daytime_state_change_based" class="TunableDaytimeStateChangeCondition" display="Daytime State Change Based" muid="978B63787FEEC6FD" description="A Tunable Condition that takes into account when the day changes state (i.e. sunrise)" Deprecated="False" filter="0" group="General">
                                <TunableEnum type="DaytimeStateChange" name="_daytime" class="TunableEnumEntry" default="Sunset" display="Daytime" muid="825DF1A16BCFE267" static_entries="world-daytime_state_change.DaytimeStateChange" description="The daytime state change (i.e. sunrise) that triggers the condition" Deprecated="False" filter="0" group="General" />
                                <TunableEnum type="ParticipantType" name="who" class="TunableEnumEntry" default="Actor" display="Who" muid="31A34EA999E1FB1E" static_entries="interactions.ParticipantType" description="The Sim who we're running this test on" Deprecated="False" filter="0" group="General" />
                            </TunableTuple>
                            <TunableTuple name="event_based" class="TunableEventBasedCondition" display="Event Based" muid="BA7E44CFA3867D9A" description="A condition that is satisfied by some event" Deprecated="False" filter="0" group="General">
                                <TunableEnum type="TestEvent" name="event_to_listen_for" class="TunableEnumEntry" default="Invalid" display="Event To Listen For" muid="DEFE777B021FC364" dynamic_entries="event_testing-test_events.TestEvent._elements" static_entries="event_testing-test_events.TestEvent" description="Event that this exit condition should listen for " Deprecated="False" filter="0" group="General" />
                            </TunableTuple>
                            <TunableTuple name="group_based" class="TunableGroupBasedCondition" display="Group Based" muid="134266276D53A836" description="A condition that is satisfied when a group size crosses the threshold." Deprecated="False" filter="0" group="General">
                                <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="7B24E8F9BBF531DF" description="Threshold tested against group size." Deprecated="False" filter="0" group="General">
                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="4A3F42CD33892C7F" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                    <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="8C51DE558249FAC1" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                </TunableTuple>
                            </TunableTuple>
                            <TunableTuple name="hidden_or_shown" class="TunableHiddenOrShownCondition" display="Hidden Or Shown" muid="2BD9AA8CE116D269" description="A condition that is satisfied when an object is hidden or shown." Deprecated="False" filter="0" group="General">
                                <TunableList name="hidden_flags" class="TunableEnumFlags" default="RABBIT_HOLE" display="Hidden Flags" muid="7D3B09D070197AEF" description="The hidden reason we care about. If any of the flags exist as&#xA;hidden reasons, we satisfy this condition. If this is empty, then&#xA;we will care about any reason that would cause the object to be&#xA;hidden, and expect zero flags remaining when the object is shown." Deprecated="False" filter="0" group="General" unique_entries="true">
                                    <TunableEnum type="HiddenReasonFlag" class="TunableEnumEntry" default="NONE" muid="3416F59BB67475A3" static_entries="objects.HiddenReasonFlag" Deprecated="False" filter="0" group="General" />
                                </TunableList>
                                <TunableEnum type="ParticipantTypeSingle" name="participant" class="TunableEnumEntry" default="Actor" display="Participant" muid="7A4551194140BFF3" static_entries="interactions.ParticipantTypeSingle" description="The participant whose hidden flags we are checking." Deprecated="False" filter="0" group="General" />
                                <TunableEnum type="Timing" name="timing" class="TunableEnumEntry" default="ON_HIDDEN" display="Timing" muid="C01163DC327B73A7" static_entries="statistics-statistic_conditions.HiddenOrShownCondition.Timing" description="When the condition satisfies.&#xA;Choices:&#xA;ON_HIDDEN: Only check the condition on the edge of the object being&#xA;hidden. This will not satisfy if you are hidden when the&#xA;interaction starts.&#xA;ON_SHOWN: Only check the condition on the edge of the object being&#xA;shown. This will not satisfy if you are not hidden when the &#xA;interaction starts.&#xA;IS_HIDDEN: Check that the object is hidden at any time this &#xA;condition is active. This will satisfy if you are hidden when the&#xA;interaction starts.&#xA;NOT_HIDDEN: Check that the object is not hidden at any time this&#xA;condition is active. This will satisfy if you are not hidden&#xA;when the interaction starts." Deprecated="False" filter="0" group="General" />
                            </TunableTuple>
                            <TunableTuple name="in_use_based" class="TunableInUseCondition" display="In Use Based" muid="CF7BB6934C621771" description="A condition that is satisfied when an object is no longer in use,&#xA;optionally specifying an affordance that the user of the object must&#xA;be running." Deprecated="False" filter="0" group="General">
                                <TunableVariant type="None" name="affordance" class="OptionalTunable" default="Unspecified" display="Affordance" muid="39F8CA95C9038560" description="If specified, then the condition is satisfied if no user of the&#xA;specified object is running this affordance. If unspecified, will&#xA;be satisfied if object is no longer in use by any Sim." Deprecated="False" filter="0" group="General">
                                    <Tunable type="interaction" name="Specific_Interaction" class="TunableReference" display="Specific Interaction" muid="624ED47EA7958739" description="Only looking to see if this interaction is running and stopping&#xA;when this interaction is no longer running" allow_none="False" Deprecated="False" filter="0" group="General" restrict="SuperInteraction" />
                                    <Tunable name="Unspecified" class="TunableExistance" display="Unspecified" muid="DE2628CFD9008E49" />
                                </TunableVariant>
                                <TunableEnum type="ParticipantType" name="participant" class="TunableEnumEntry" default="Object" display="Participant" muid="5A9CB675AF8C9E20" static_entries="interactions.ParticipantType" description="The participant of the interaction used to fetch the users against&#xA;which the condition test is run." Deprecated="False" filter="0" group="General" />
                            </TunableTuple>
                            <TunableTuple name="mood_based" class="TunableMoodBasedCondition" display="Mood Based" muid="6232F37D5214CDAC" description="A condition that is satisfied when a Sim enters a specific mood." Deprecated="False" filter="0" group="General">
                                <Tunable type="bool" name="invert" class="Tunable" default="False" display="Invert" muid="7FD2FE87E590F10" description="If enabled, this condition will satisfy when the Sim is not in this&#xA;mood." Deprecated="False" filter="0" group="General" />
                                <Tunable type="mood" name="mood" class="TunableReference" display="Mood" muid="5E4275C81ECD1C5B" description="The mood that satisfies the condition." tuning_state="NeedsTuning" allow_none="False" Deprecated="False" filter="0" group="General" restrict="Mood" />
                                <TunableEnum type="ParticipantType" name="participant" class="TunableEnumEntry" default="Actor" display="Participant" muid="1701603C829A073C" static_entries="interactions.ParticipantType" description="The Sim whose mood we're checking against." Deprecated="False" filter="0" group="General" />
                            </TunableTuple>
                            <TunableTuple name="object_relationship_based" class="TunableObjectRelationshipCondition" display="Object Relationship Based" muid="C44B242E6BC547C4" description="A condition that is satisfied when a Sim reaches a specific object&#xA;relationship threshold." Deprecated="False" filter="0" group="General">
                                <TunableEnum type="ParticipantType" name="object" class="TunableEnumEntry" default="Object" display="Object" muid="D58968422C4BC5A4" static_entries="interactions.ParticipantType" description="The object whose object relationship we're checking." Deprecated="False" filter="0" group="General" />
                                <TunableEnum type="ParticipantType" name="sim" class="TunableEnumEntry" default="Actor" display="Sim" muid="E605D7A6A0FC406C" static_entries="interactions.ParticipantType" description="The Sim whose object relationship we're checking." Deprecated="False" filter="0" group="General" />
                                <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="FE9CF65907949FA9" description="The relationship threshold that will trigger this condition." Deprecated="False" filter="0" group="General">
                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="B0958292D3C11F97" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                    <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="1D63866DA502EB45" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                </TunableTuple>
                            </TunableTuple>
                            <TunableTuple name="rabbit_hole_based" class="TunableRabbitHoleExitCondition" display="Rabbit Hole Based" muid="48DA51870241B02F" description="An exit condition for rabbithole interactions" Deprecated="False" filter="0" group="General">
                                <Tunable type="float" name="max_time" class="TunableSimMinute" default="None" display="Max Time" muid="24A35EA4A7E5656D" min="None" max="None" description="Maximum amount of time (in sim minutes) for this condition to be satisfied." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                <Tunable type="float" name="min_time" class="TunableSimMinute" default="1" display="Min Time" muid="967699AA4A8B7208" min="None" max="None" description="Minimum amount of time (in sim minutes) for this condition to be satisfied." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                            </TunableTuple>
                            <TunableTuple name="sim_spawn_based" class="TunableSimSpawnCondition" display="Sim Spawn Based" muid="504B9F7268E27BAA" description="A condition that is satisfied when a Sim spawns in the world." Deprecated="False" filter="0" group="General">
                                <TunableEnum type="ParticipantType" name="participant_type" class="TunableEnumEntry" default="PickedItemId" display="Participant Type" muid="7ECF8C1E6ADB7BB3" static_entries="interactions.ParticipantType" description="Who or what to apply this test to" Deprecated="False" filter="0" group="General" />
                            </TunableTuple>
                            <TunableTuple name="stat_based" class="TunableStatisticCondition" display="Stat Based" muid="4AF9A95236FB8FAC" Deprecated="False" filter="0" group="General">
                                <Tunable type="bool" name="absolute" class="Tunable" default="True" display="Absolute" muid="D637DC44563B16A6" description="True = treat the threshold value as an absolute commodity value.  Otherwise, it is relative to the Sim's start value." Deprecated="False" filter="0" group="General" />
                                <Tunable type="statistic" name="stat" class="TunableReference" display="Stat" muid="FDD2BFA425520D7D" description="The commodity we are gaining." allow_none="False" Deprecated="False" filter="0" group="General" />
                                <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="16D85CB25DA19F48" description="A commodity value and comparison that defines the exit condition hits (or hit commodity.maximum)." Deprecated="False" filter="0" group="General">
                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="D306569AAD7F03C1" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                    <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="566F8400168AE756" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                </TunableTuple>
                                <TunableEnum type="ParticipantType" name="who" class="TunableEnumEntry" default="Actor" display="Who" muid="C99C270FDDD92049" static_entries="interactions.ParticipantType" description="Who or what to apply this test to" Deprecated="False" filter="0" group="General" />
                            </TunableTuple>
                            <TunableTuple name="state_based" class="TunableStateCondition" display="State Based" muid="61E654A02C76E269" Deprecated="False" filter="0" group="General">
                                <TunableVariant type="None" name="state" class="TunableVariant" default="on_trigger" display="State" muid="929BF3B3B5C89067" description="The state to check for." Deprecated="False" filter="0" group="General">
                                    <TunableTuple name="on_boundary" class="TunableTuple" display="On Boundary" muid="F9657C09A1AD62DE" description="Satisfy the condition when a boundary of this stat-based state is reached" Deprecated="False" filter="0" group="General">
                                        <TunableVariant type="None" name="boundary" class="TunableVariant" default="upper" display="Boundary" muid="C9F5AB24B1264E74" description="The boundary required to be reached for the condition to be satisfied." Deprecated="False" filter="0" group="General">
                                            <Tunable name="lower" class="TunableExistance" display="Lower" muid="D745612B71F82CA1" />
                                            <Tunable name="upper" class="TunableExistance" display="Upper" muid="2AE03E51847E55F7" />
                                        </TunableVariant>
                                        <Tunable type="object_state" name="state" class="TunableReference" display="State" muid="EECD02EED1C7CD84" description="The state required to satisfy the condition" allow_none="False" Deprecated="False" filter="0" group="General" restrict="CommodityBasedObjectStateValue" />
                                    </TunableTuple>
                                    <Tunable type="object_state" name="on_trigger" class="TunableReference" display="On Trigger" muid="93C5F67913826631" description="Satisfy the condition when this state is triggered." allow_none="False" Deprecated="False" filter="0" group="General" restrict="ObjectStateValue" />
                                </TunableVariant>
                                <TunableEnum type="ParticipantType" name="subject" class="TunableEnumEntry" default="Object" display="Subject" muid="807C2BC3D7167414" static_entries="interactions.ParticipantType" description="The subject to check the condition on." Deprecated="False" filter="0" group="General" />
                            </TunableTuple>
                            <TunableTuple name="time_based" class="TunableTimeRangeCondition" display="Time Based" muid="21B526851CFD45CB" description="The minimum and maximum amount of time required to satisfy this condition." Deprecated="False" filter="0" group="General">
                                <Tunable type="float" name="max_time" class="TunableSimMinute" default="None" display="Max Time" muid="33CAF95C7CB05035" min="None" max="None" description="Maximum amount of time (in sim minutes) for this condition to be satisfied." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                <Tunable type="float" name="min_time" class="TunableSimMinute" default="1" display="Min Time" muid="F8FBF27DB45FDFD0" min="None" max="None" description="Minimum amount of time (in sim minutes) for this condition to be satisfied." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                            </TunableTuple>
                            <TunableTuple name="wakeup_time_based" class="TunableWakeupCondition" display="Wakeup Time Based" muid="6C3BD1071CE0C305" description="A condition that is satisfied by being close to the schedule time for the sims career" Deprecated="False" filter="0" group="General">
                                <Tunable type="float" name="hours_prior_to_schedule_start" class="Tunable" default="0" display="Hours Prior To Schedule Start" muid="3B3CB2735538F721" description="The number of hours prior to the schedule start to satisfy this condition." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                <TunableEnum type="ParticipantType" name="who" class="TunableEnumEntry" default="Actor" display="Who" muid="8435D86159F3CF76" static_entries="interactions.ParticipantType" description="Who or what to apply this test to" Deprecated="False" filter="0" group="General" />
                            </TunableTuple>
                        </TunableVariant>
                    </TunableList>
                    <TunableEnum type="ConditionalInteractionAction" name="interaction_action" class="TunableEnumEntry" default="GO_INERTIAL" display="Interaction Action" muid="DB50DFFEEE0E6D8C" static_entries="interactions-utils-statistic_element.ConditionalInteractionAction" description="This controls what happens to the interaction when all the&#xA;conditions are satisfied. Usages:&#xA;&#xA;NO_ACTION: Interaction state does not change.&#xA;&#xA;GO_INERTIAL: Interaction goes inertial.&#xA;&#xA;EXIT_NATURALLY: Interaction exits successfully. Use this&#xA;for cases where the Actor is considered to have&#xA;successfully completed the interaction. Examples:&#xA;- Use Toilet, condition on bladder motive&#xA;- Jog for X minutes: condition on time&#xA;- Read skill book that stops giving skill at level X,&#xA;  condition on skill reaching X&#xA;&#xA;EXIT_CANCEL: Interaction exits as if canceled. Use this if&#xA;the Actor did not successfully complete the interaction.&#xA;Examples:&#xA;- Object breaks.&#xA;- Sim motive fails or distresses.&#xA;&#xA;LOWER_PRIORITY: Only relevant if guaranteed and user-&#xA;directed. A guaranteed user-directed interaction with&#xA;lowered priority will still behave as if guaranteed except&#xA;that other user-directed interactions in queue can cancel&#xA;it. This should be used sparingly. A possible use of this:&#xA;- A Sim should sleep until his natural wake-up time even&#xA;  if his energy maxes out sooner. This will help maintain a&#xA;  consistent sleep schedule, and can be accomplished with&#xA;  EXIT_NATURALLY conditioned on the wake-up time. But say a&#xA;  player queues up an interaction after sleep. As it's&#xA;  awkward for that interaction to sit in queue for hours&#xA;  after energy has maxed and it's annoying to have to watch&#xA;  the Sim's motives and manually cancel Sleep, queued user-&#xA;  directed interactions should trump Sleep after energy is&#xA;  maxed. This can be accomplished with LOWER_PRIORITY&#xA;  conditioned on max energy. (Note that while GO_INERTIAL&#xA;  will also make Sleep cancel when a user-directed&#xA;  interaction is queued, it also allows autonomy to run and&#xA;  possibly boot Sleep in favor of something else, which&#xA;  will ruin the Sim's sleep schedule.)" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                    <TunableList name="loot_actions" class="TunableList" display="Loot Actions" muid="427A49F2E7DB274D" description="A list of loot actions that are given when the conditional&#xA;action satisfies." Deprecated="False" filter="0" group="General">
                        <Tunable type="action" class="TunableReference" muid="C36E257EA7873970" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="LootActions" />
                    </TunableList>
                    <TunableEnum type="ProgressBarAction" name="progress_bar_action" class="TunableEnumEntry" default="NO_ACTION" display="Progress Bar Action" muid="B173FDE8AFE575E7" static_entries="interactions-utils-statistic_element.ProgressBarAction" description="This will tell the progress bar if there is any &#xA;special behavior to be done with this exit condition.&#xA;Usages:&#xA;NO_ACTION: Progress bar will prioritize the exit conditions&#xA;as it normally does.&#xA;&#xA;IGNORE_CONDITION: Progress bar will not consider using&#xA;this exit condition in its calculations.&#xA;&#xA;FORCE_USE_CONDITION: Progress bar will use this condition&#xA;ignoring if its not an exiting exit condition, this will&#xA;be used to for special cases where we want to consider&#xA;special conditions for tracking the progress (like on &#xA;sleeping, even if energy is not an exit condition, we will&#xA;use it in the calculation by forcing it with this)." Deprecated="False" filter="0" group="General" />
                    <TunableEnum type="ConditionalActionRestriction" name="restrictions" class="TunableEnumEntry" default="NO_RESTRICTIONS" display="Restrictions" muid="557B5412DD7EF62D" static_entries="interactions-utils-statistic_element.ConditionalActionRestriction" description="By default, this condition applies to all interactions.&#xA;This option allows you to limit this condition to only&#xA;apply if the interaction was user-directed or autonomously&#xA;started." Deprecated="False" filter="0" group="General" />
                    <TdescFragTag name="tests" class="TunableTestSet" display="Tests" muid="D2C2A9B71AEA100" description="A set of tests to see if the condition is valid." filter="0" group="General" />
                </TunableTuple>
                <Tunable type="snippet" name="reference" class="TunableReference" display="Reference" muid="B6F5FA8EFE2F9FC1" description="A reference to a ExitCondition tuning snippet." allow_none="False" Deprecated="False" filter="0" group="General" restrict="ExitCondition" />
            </TunableVariant>
        </TunableList>
    </Instance>

    <VersionHistory>
        <ActionList>
            <Action type="kRename" old_muid="6380EDF767C83B70" new_muid="A99A2A7D590E5D61" />
            <Action type="kRename" old_muid="F39E6824B2EC3258" new_muid="FB8BDE533BCAADC" />
        </ActionList>

        <ActionList>
            <Action type="kRemove" old_muid="5D6D5FD91C15812D" />
        </ActionList>

        <ActionList>
            <Action type="kRename" old_muid="A94781C747731CFC" new_muid="FB8BDE533BCAADC" />
            <Action type="kRename" old_muid="6FBE00EB76253868" new_muid="2012BCFB9C69FF51" />
            <Action type="kRename" old_muid="94A6CF32171CFBDD" new_muid="F6040C51C9FE1B21" />
            <Action type="kRename" old_muid="20E9E0D81E687666" new_muid="4F2759F221BF73AA" />
            <Action type="kRename" old_muid="94A577E908A4C8BD" new_muid="A99A2A7D590E5D61" />
        </ActionList>

        <ActionList>
            <Action type="kRename" old_muid="14085D7BB929C1DF" new_muid="48DA51870241B02F" />
        </ActionList>

        <ActionList>
            <Action type="kRemove" old_muid="C8691CBA35888C42" />
            <Action type="kRename" old_muid="A92E0038482D2F6B" new_muid="A7F1FB4DFF59BFDE" />
            <Action type="kRename" old_muid="4CFC1D4095ACFFA2" new_muid="DC1AFCED51475A5E" />
            <Action type="kRename" old_muid="EC79E27EC0EA57BF" new_muid="269B0A71E1ADC7FE" />
            <Action type="kRename" old_muid="1C6E0E362D84A179" new_muid="F4B66D3802D233EF" />
            <Action type="kRename" old_muid="C71A8B8B497A9BB8" new_muid="AFDF7B66D00D822" />
        </ActionList>
    </VersionHistory>
</TuningRoot>