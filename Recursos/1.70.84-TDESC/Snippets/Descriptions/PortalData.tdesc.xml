<?xml version="1.0" encoding="iso-8859-1"?>

<TuningRoot>
    <Instance instance_type="snippet" class="PortalData" module="snippets" muid="632774B6FF648406" instance_needs_reference="True" instance_subclasses_only="False" path="Snippets\Descriptions" use_guid_for_reference="True">
        <TunableTuple name="value" class="Tunable_Portal" display="Value" muid="E792780BA96B92B4" description="A portal between two points." Deprecated="False" filter="0" group="General">
            <Tunable type="bool" name="allow_teleport_style_interaction_to_skip_portal" class="Tunable" default="True" display="Allow Teleport Style Interaction To Skip Portal" muid="7FD1D88AA5ACCC22" description="If true, a Sim can skip the portal when using a teleport style.  &#xA;If false, a Sim must use the portal rather than teleporting past it." Deprecated="False" filter="0" group="General" />
            <TunableVariant type="None" name="discouragement_flags" class="OptionalTunable" default="disabled" display="Discouragement Flags" muid="79EE10F2AF9BE612" description="If specified, only actors that have a routing context that doesn't &#xA;match these flags, will be discouraged from traversing through&#xA;the portal." Deprecated="False" filter="0" group="General">
                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="89059ED7C2743C97" />
                <TunableList name="enabled" class="TunableEnumFlags" display="Enabled" muid="4FBD99E583850104" description="Discouragement flags for this portal." Deprecated="False" filter="0" group="General" unique_entries="true">
                    <TunableEnum type="PortalFlags" class="TunableEnumEntry" default="DEFAULT" muid="69A19B9C9B0E1DE" dynamic_entries="routing-portals-portal_tuning.PortalFlags._elements" static_entries="routing-portals-portal_tuning.PortalFlags" Deprecated="False" filter="0" group="General" />
                </TunableList>
            </TunableVariant>
            <TunableVariant type="None" name="required_flags" class="OptionalTunable" default="disabled" display="Required Flags" muid="B61734C8CD78C46" description="If specified, only actors with a routing context that match&#xA;the required flags are allowed to traverse the portal." Deprecated="False" filter="0" group="General">
                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="3FE9723D8FEFA8E3" />
                <TunableList name="enabled" class="TunableEnumFlags" display="Enabled" muid="E102289500E41EED" description="Required flags for this portal." Deprecated="False" filter="0" group="General" unique_entries="true">
                    <TunableEnum type="PortalFlags" class="TunableEnumEntry" default="DEFAULT" muid="FC65E77CE0A777E8" dynamic_entries="routing-portals-portal_tuning.PortalFlags._elements" static_entries="routing-portals-portal_tuning.PortalFlags" Deprecated="False" filter="0" group="General" />
                </TunableList>
            </TunableVariant>
            <TunableVariant type="None" name="traversal_cost" class="TunablePortalCostVariant" default="traversal_length" display="Traversal Cost" muid="270973FD63E83380" description="Define how expensive it is, in meters, to traverse this portal." Deprecated="False" filter="0" group="General">
                <TunableTuple name="fixed_cost" class="TunablePortalCostFixed" display="Fixed Cost" muid="772E61DA6C920115" description="The cost of the portal is a fixed value, defined in meters." Deprecated="False" filter="0" group="General">
                    <Tunable type="float" name="cost" class="TunableRange" default="1" display="Cost" muid="B6CD47E9DEE2D78B" min="0" max="9999" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                </TunableTuple>
                <TunableTuple name="traversal_length" class="TunablePortalCostTraversalLength" display="Traversal Length" muid="37B436BF6C4F02E2" description="The cost of the portal is defined as the distance between the entry and exit&#xA;location. Optionally, multiply the value by a fixed multiplier." Deprecated="False" filter="0" group="General">
                    <Tunable type="float" name="multiplier" class="TunableRange" default="1" display="Multiplier" muid="9E34C8AB0AB73E6B" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                </TunableTuple>
            </TunableVariant>
            <TunableVariant type="None" name="traversal_type" class="TunableVariant" default="locomotion" display="Traversal Type" muid="E24DE5BBE1ED48D5" description="Define the type of traversal for this portal." Deprecated="False" filter="0" group="General">
                <TunableTuple name="animation" class="Tunable_PortalTypeDataAnimation" display="Animation" muid="B67292105FBA902B" description="The Sim animates from the entry point to the exit point. The entry and exit&#xA;points are defined by the animation's boundary conditions." Deprecated="False" filter="0" group="General">
                    <Tunable type="animation" name="animation_element" class="TunableReference" display="Animation Element" muid="727B4B331FD14C97" description="The animation to play when a Sim traverses this portal." allow_none="False" Deprecated="False" filter="0" group="General" />
                    <TunableList name="portal_events" class="TunableList" display="Portal Events" muid="7E7F42B26C39BFB1" description="A list of portal events to add when a Sim uses the portal." Deprecated="False" filter="0" group="General">
                        <TunableVariant type="None" class="TunablePortalEventVariant" default="change_opacity" muid="72BBB1EBD4B16C1" description="The tuning for a specific portal event." Deprecated="False" filter="0" group="General">
                            <TunableTuple name="change_opacity" class="TunablePortalEventChangeOpacity" display="Change Opacity" muid="D9529ED09BDC300A" description="A portal event to change the opacity of the actor." Deprecated="False" filter="0" group="General">
                                <Tunable type="float" name="duration" class="TunableRealSecond" default="0.0" display="Duration" muid="4E05E665CCF7C763" min="None" max="None" description="How long the change in opacity should take in seconds." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                <Tunable type="float" name="opacity" class="TunableRange" default="0" display="Opacity" muid="3379F44370FBBD2E" min="0" max="1" description="The target opacity to set the actor to. 0 is invisible and 1 is&#xA;fully visible." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                <Tunable type="float" name="time" class="Tunable" default="1.0" display="Time" muid="B9FE1DE7F58F7280" description="The time from when the portal happens.&#xA;&#xA;A positive number is after the portal happens and a negative &#xA;number is before a portal happens. So if you want a sim to fade&#xA;out before using a portal the value here should be -1." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                            </TunableTuple>
                            <TunableTuple name="enter" class="TunablePortalEventEnter" display="Enter" muid="E1B66DF17C9630E3" description="Notify the client that, at this time, the portal is in the &quot;enter&quot; state.&#xA;&#xA;Depending the nature of the portal, this can be interpreted differently. For&#xA;example, a Door portal with an ASM specified would, at this point, animate&#xA;the door swinging open." Deprecated="False" filter="0" group="General">
                                <Tunable type="float" name="time" class="Tunable" default="1.0" display="Time" muid="42A6F12020E62762" description="The time from when the portal happens.&#xA;&#xA;A positive number is after the portal happens and a negative &#xA;number is before a portal happens. So if you want a sim to fade&#xA;out before using a portal the value here should be -1." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                            </TunableTuple>
                            <TunableTuple name="exit" class="TunablePortalEventExit" display="Exit" muid="67516F41BB980F27" description="Notify the client that, at this time, the portal is in the &quot;exit&quot; state.&#xA;&#xA;Depending the nature of the portal, this can be interpreted differently. For&#xA;example, a Door portal with an ASM specified would, at this point, animate&#xA;the door swinging shut." Deprecated="False" filter="0" group="General">
                                <Tunable type="float" name="time" class="Tunable" default="1.0" display="Time" muid="D464CF0D1727E849" description="The time from when the portal happens.&#xA;&#xA;A positive number is after the portal happens and a negative &#xA;number is before a portal happens. So if you want a sim to fade&#xA;out before using a portal the value here should be -1." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                            </TunableTuple>
                        </TunableVariant>
                    </TunableList>
                </TunableTuple>
                <TunableTuple name="build_ladder" class="Tunable_PortalTypeDataBuildLadders" display="Build Ladder" muid="9C8DE97DB68C0EE6" description="A portal with dynamic locations based on the ladder object and its height.&#xA;Allows sims to climb up and down build ladders through an extension of the default walkstyle." Deprecated="False" filter="0" group="General">
                    <TunableTuple name="climb_down_locations" class="TunableTuple" display="Climb Down Locations" muid="409389322AFDA1D7" description="Location tunables for climbing down the ladder." Deprecated="False" filter="0" group="General">
                        <TunableTuple name="location_end" class="Tunable_PortalBoneLocation" display="Location End" muid="2B978D78E718B7CF" description="The location at the bottom of the ladder where climbing down ends." Deprecated="False" filter="0" group="General">
                            <Tunable type="str" name="bone_name" class="TunableStringHash32" default="None" display="Bone Name" muid="83F2DEC6C9345A77" description="The bone to use for this portal location." Deprecated="False" filter="0" group="General" />
                            <TunableVariant type="None" name="orientation" class="OptionalTunable" default="disabled" display="Orientation" muid="989061A37E165AD9" description="If enabled, this portal has a specific orientation. If disabled, any&#xA;orientation is valid." Deprecated="False" filter="0" group="General">
                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="4349B93ECB91B51A" />
                                <Tunable type="float" name="enabled" class="TunableAngle" default="0.0" display="Enabled" muid="F05C2AEAB656F14A" min="0.0" max="360.0" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                            </TunableVariant>
                            <TunableVariant type="None" name="routing_surface" class="TunableVariant" default="terrain" display="Routing Surface" muid="DE99C5E26E505ACF" description="Define what surface the point is created on.&#xA;&#xA;Terrain: The point is on the ground, on the same level the owning&#xA;object is on.&#xA;&#xA;Object: The point is on the routable surface defined by the object.&#xA;The point must be within the footprint's bounds.&#xA;&#xA;Global object: The point is anywhere on the object routable surface&#xA;for the level where the object is on. If there is no object that&#xA;location, the portal is invalid. Use this for objects that connect&#xA;other objects with routable surfaces.&#xA;&#xA;Ocean: The point is in the ocean. Regardless of what level the&#xA;object is on, we will always assume a surface type of POOL and a&#xA;level of 0 (which would match the Ocean)." Deprecated="False" filter="0" group="General">
                                <Tunable name="global_object" class="TunableExistance" display="Global Object" muid="1376E8646708EE56" />
                                <Tunable name="object" class="TunableExistance" display="Object" muid="51EDFD9C2F06B9A8" />
                                <Tunable name="ocean" class="TunableExistance" display="Ocean" muid="12E3AFA4FDAA04FA" />
                                <Tunable name="terrain" class="TunableExistance" display="Terrain" muid="5F9DD7C192889D93" />
                            </TunableVariant>
                        </TunableTuple>
                        <TunableTuple name="location_start" class="Tunable_PortalBoneLocation" display="Location Start" muid="30345A6660C38F54" description="The location at the top of the ladder where climbing down starts." Deprecated="False" filter="0" group="General">
                            <Tunable type="str" name="bone_name" class="TunableStringHash32" default="None" display="Bone Name" muid="6EC55424367ACEFF" description="The bone to use for this portal location." Deprecated="False" filter="0" group="General" />
                            <TunableVariant type="None" name="orientation" class="OptionalTunable" default="disabled" display="Orientation" muid="371E37F3B6C202DA" description="If enabled, this portal has a specific orientation. If disabled, any&#xA;orientation is valid." Deprecated="False" filter="0" group="General">
                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="E36687F09E07EFE6" />
                                <Tunable type="float" name="enabled" class="TunableAngle" default="0.0" display="Enabled" muid="6E575083C2D82232" min="0.0" max="360.0" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                            </TunableVariant>
                            <TunableVariant type="None" name="routing_surface" class="TunableVariant" default="terrain" display="Routing Surface" muid="8E3A4A2D1DEAB55E" description="Define what surface the point is created on.&#xA;&#xA;Terrain: The point is on the ground, on the same level the owning&#xA;object is on.&#xA;&#xA;Object: The point is on the routable surface defined by the object.&#xA;The point must be within the footprint's bounds.&#xA;&#xA;Global object: The point is anywhere on the object routable surface&#xA;for the level where the object is on. If there is no object that&#xA;location, the portal is invalid. Use this for objects that connect&#xA;other objects with routable surfaces.&#xA;&#xA;Ocean: The point is in the ocean. Regardless of what level the&#xA;object is on, we will always assume a surface type of POOL and a&#xA;level of 0 (which would match the Ocean)." Deprecated="False" filter="0" group="General">
                                <Tunable name="global_object" class="TunableExistance" display="Global Object" muid="5CC4C57EF5EE3590" />
                                <Tunable name="object" class="TunableExistance" display="Object" muid="C2080386002BF892" />
                                <Tunable name="ocean" class="TunableExistance" display="Ocean" muid="C72B9C901CE5A25A" />
                                <Tunable name="terrain" class="TunableExistance" display="Terrain" muid="EB2CC33D1316C904" />
                            </TunableVariant>
                        </TunableTuple>
                    </TunableTuple>
                    <TunableVariant type="None" name="climb_up_locations" class="OptionalTunable" default="disabled" display="Climb Up Locations" muid="C41A578F9A4AC120" description="Location tunables for climbing up the ladder.  Optional because climbing up isn't supported on ladder&#xA;slide portals." Deprecated="False" filter="0" group="General">
                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="B8125E03BE312FEB" />
                        <TunableTuple name="enabled" class="TunableTuple" display="Enabled" muid="F83FCA93E3B3E4DA" description="Location tunables for climbing up the ladder.  Optional because climbing up isn't supported on ladder&#xA;slide portals." Deprecated="False" filter="0" group="General">
                            <TunableTuple name="location_end" class="Tunable_PortalBoneLocation" display="Location End" muid="47393E974A920722" description="The location at the top of the ladder where climbing up ends." Deprecated="False" filter="0" group="General">
                                <Tunable type="str" name="bone_name" class="TunableStringHash32" default="None" display="Bone Name" muid="3262324926354C72" description="The bone to use for this portal location." Deprecated="False" filter="0" group="General" />
                                <TunableVariant type="None" name="orientation" class="OptionalTunable" default="disabled" display="Orientation" muid="57783848C5205C0C" description="If enabled, this portal has a specific orientation. If disabled, any&#xA;orientation is valid." Deprecated="False" filter="0" group="General">
                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="849E1772CCD9AF42" />
                                    <Tunable type="float" name="enabled" class="TunableAngle" default="0.0" display="Enabled" muid="310F9CEDC1DCFE91" min="0.0" max="360.0" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                </TunableVariant>
                                <TunableVariant type="None" name="routing_surface" class="TunableVariant" default="terrain" display="Routing Surface" muid="715C664CE073308" description="Define what surface the point is created on.&#xA;&#xA;Terrain: The point is on the ground, on the same level the owning&#xA;object is on.&#xA;&#xA;Object: The point is on the routable surface defined by the object.&#xA;The point must be within the footprint's bounds.&#xA;&#xA;Global object: The point is anywhere on the object routable surface&#xA;for the level where the object is on. If there is no object that&#xA;location, the portal is invalid. Use this for objects that connect&#xA;other objects with routable surfaces.&#xA;&#xA;Ocean: The point is in the ocean. Regardless of what level the&#xA;object is on, we will always assume a surface type of POOL and a&#xA;level of 0 (which would match the Ocean)." Deprecated="False" filter="0" group="General">
                                    <Tunable name="global_object" class="TunableExistance" display="Global Object" muid="1EE669B244984957" />
                                    <Tunable name="object" class="TunableExistance" display="Object" muid="F62AF3A5739CD760" />
                                    <Tunable name="ocean" class="TunableExistance" display="Ocean" muid="5EC5216E0E2872F" />
                                    <Tunable name="terrain" class="TunableExistance" display="Terrain" muid="A3C65B78FBE4EF3D" />
                                </TunableVariant>
                            </TunableTuple>
                            <TunableTuple name="location_start" class="Tunable_PortalBoneLocation" display="Location Start" muid="300F8B5AEB66D7AE" description="The location at the bottom of the ladder where climbing up starts." Deprecated="False" filter="0" group="General">
                                <Tunable type="str" name="bone_name" class="TunableStringHash32" default="None" display="Bone Name" muid="1810CFD9308B21C8" description="The bone to use for this portal location." Deprecated="False" filter="0" group="General" />
                                <TunableVariant type="None" name="orientation" class="OptionalTunable" default="disabled" display="Orientation" muid="FE961AFE4EE837EB" description="If enabled, this portal has a specific orientation. If disabled, any&#xA;orientation is valid." Deprecated="False" filter="0" group="General">
                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="5B6238B691C909AF" />
                                    <Tunable type="float" name="enabled" class="TunableAngle" default="0.0" display="Enabled" muid="CAF926E77B9C2AD8" min="0.0" max="360.0" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                </TunableVariant>
                                <TunableVariant type="None" name="routing_surface" class="TunableVariant" default="terrain" display="Routing Surface" muid="7336001380C3626B" description="Define what surface the point is created on.&#xA;&#xA;Terrain: The point is on the ground, on the same level the owning&#xA;object is on.&#xA;&#xA;Object: The point is on the routable surface defined by the object.&#xA;The point must be within the footprint's bounds.&#xA;&#xA;Global object: The point is anywhere on the object routable surface&#xA;for the level where the object is on. If there is no object that&#xA;location, the portal is invalid. Use this for objects that connect&#xA;other objects with routable surfaces.&#xA;&#xA;Ocean: The point is in the ocean. Regardless of what level the&#xA;object is on, we will always assume a surface type of POOL and a&#xA;level of 0 (which would match the Ocean)." Deprecated="False" filter="0" group="General">
                                    <Tunable name="global_object" class="TunableExistance" display="Global Object" muid="D46E7144C71188C2" />
                                    <Tunable name="object" class="TunableExistance" display="Object" muid="B7F3191427F8BC57" />
                                    <Tunable name="ocean" class="TunableExistance" display="Ocean" muid="2CD58D56DB089B8E" />
                                    <Tunable name="terrain" class="TunableExistance" display="Terrain" muid="2C794005BD346E36" />
                                </TunableVariant>
                            </TunableTuple>
                        </TunableTuple>
                    </TunableVariant>
                    <Tunable type="str" name="ladder_down_climb_cycle" class="Tunable" default="ladder_down_cycle_r" display="Ladder Down Climb Cycle" muid="A1157EE681F549CF" description="The name of the animation clip for the down climb cycle." Deprecated="False" filter="0" group="Animation" />
                    <Tunable type="str" name="ladder_down_start_cycle" class="Tunable" default="ladder_down_start" display="Ladder Down Start Cycle" muid="636458D71521CBF4" description="The name of the animation clip for the down start cycle." Deprecated="False" filter="0" group="Animation" />
                    <Tunable type="str" name="ladder_down_stop_cycle" class="Tunable" default="ladder_down_stop" display="Ladder Down Stop Cycle" muid="16F9FF302DA0C341" description="The name of the animation clip for the down stop cycle." Deprecated="False" filter="0" group="Animation" />
                    <Tunable type="float" name="ladder_rung_distance" class="Tunable" default="0.25" display="Ladder Rung Distance" muid="7E28CE4D371ABFA8" description="The distance between rungs on the ladder object." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                    <Tunable type="str" name="ladder_up_climb_cycle" class="Tunable" default="ladder_up_cycle_r" display="Ladder Up Climb Cycle" muid="E208ED2659231C48" description="The name of the animation clip for the up climb cycle." Deprecated="False" filter="0" group="Animation" />
                    <Tunable type="str" name="ladder_up_start_cycle" class="Tunable" default="ladder_up_start" display="Ladder Up Start Cycle" muid="2D28EACD90F48348" description="The name of the animation clip for the up start cycle." Deprecated="False" filter="0" group="Animation" />
                    <Tunable type="str" name="ladder_up_stop_cycle" class="Tunable" default="ladder_up_stop" display="Ladder Up Stop Cycle" muid="5536D05CCE7768F" description="The name of the animation clip for the up stop cycle." Deprecated="False" filter="0" group="Animation" />
                    <TunableEnum type="PortalAlignment" name="portal_alignment" class="TunableEnumEntry" default="PA_FRONT" display="Portal Alignment" muid="49B8747C35486739" static_entries="routing-portals-portal_enums.PortalAlignment" description="Which direction this portal is aligned.  This direction is used to determine which animation to play&#xA;when getting on/off the top of ladder since there are three entrance/exit portals at the top of the ladder. " Deprecated="False" filter="0" group="General" />
                    <TunableList name="portal_events" class="TunableList" display="Portal Events" muid="E0C2B34B352CA108" description="A list of portal events to add when a Sim uses the portal." Deprecated="False" filter="0" group="General">
                        <TunableVariant type="None" class="TunablePortalEventVariant" default="change_opacity" muid="D99E07D6869F3508" description="The tuning for a specific portal event." Deprecated="False" filter="0" group="General">
                            <TunableTuple name="change_opacity" class="TunablePortalEventChangeOpacity" display="Change Opacity" muid="4D561BCD61847015" description="A portal event to change the opacity of the actor." Deprecated="False" filter="0" group="General">
                                <Tunable type="float" name="duration" class="TunableRealSecond" default="0.0" display="Duration" muid="4D2DF2316552673D" min="None" max="None" description="How long the change in opacity should take in seconds." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                <Tunable type="float" name="opacity" class="TunableRange" default="0" display="Opacity" muid="F24DC8AA584704D0" min="0" max="1" description="The target opacity to set the actor to. 0 is invisible and 1 is&#xA;fully visible." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                <Tunable type="float" name="time" class="Tunable" default="1.0" display="Time" muid="FC5B4E1B74ECE086" description="The time from when the portal happens.&#xA;&#xA;A positive number is after the portal happens and a negative &#xA;number is before a portal happens. So if you want a sim to fade&#xA;out before using a portal the value here should be -1." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                            </TunableTuple>
                            <TunableTuple name="enter" class="TunablePortalEventEnter" display="Enter" muid="35CEFED236815C" description="Notify the client that, at this time, the portal is in the &quot;enter&quot; state.&#xA;&#xA;Depending the nature of the portal, this can be interpreted differently. For&#xA;example, a Door portal with an ASM specified would, at this point, animate&#xA;the door swinging open." Deprecated="False" filter="0" group="General">
                                <Tunable type="float" name="time" class="Tunable" default="1.0" display="Time" muid="6B78E6A3EA04A096" description="The time from when the portal happens.&#xA;&#xA;A positive number is after the portal happens and a negative &#xA;number is before a portal happens. So if you want a sim to fade&#xA;out before using a portal the value here should be -1." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                            </TunableTuple>
                            <TunableTuple name="exit" class="TunablePortalEventExit" display="Exit" muid="491A3FFE7022FBE3" description="Notify the client that, at this time, the portal is in the &quot;exit&quot; state.&#xA;&#xA;Depending the nature of the portal, this can be interpreted differently. For&#xA;example, a Door portal with an ASM specified would, at this point, animate&#xA;the door swinging shut." Deprecated="False" filter="0" group="General">
                                <Tunable type="float" name="time" class="Tunable" default="1.0" display="Time" muid="ECC246A269076F37" description="The time from when the portal happens.&#xA;&#xA;A positive number is after the portal happens and a negative &#xA;number is before a portal happens. So if you want a sim to fade&#xA;out before using a portal the value here should be -1." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                            </TunableTuple>
                        </TunableVariant>
                    </TunableList>
                    <Tunable type="str" name="walkstyle_duration" class="Tunable" default="duration" display="Walkstyle Duration" muid="2E0D4797D331DF95" description="The name of the duration field in the animation data." Deprecated="False" filter="0" group="Animation" />
                </TunableTuple>
                <TunableTuple name="build_ladder_slide" class="Tunable_PortalTypeDataBuildLaddersSlide" display="Build Ladder Slide" muid="7DB63660EB4C9AAE" description="A portal with dynamic locations based on the ladder object and its height.&#xA;Allows sims to slide down build ladders by running a variable jump animation through the portal." Deprecated="False" filter="0" group="General">
                    <Tunable type="animation" name="animation_element" class="TunableReference" display="Animation Element" muid="A531E86A1BC2A25" description="The animation to play when a Sim traverses this portal." allow_none="False" Deprecated="False" filter="0" group="General" />
                    <TunableTuple name="climb_down_locations" class="TunableTuple" display="Climb Down Locations" muid="7DFCDE1EDD9690DA" description="Location tunables for climbing down the ladder." Deprecated="False" filter="0" group="General">
                        <TunableTuple name="location_end" class="Tunable_PortalBoneLocation" display="Location End" muid="C65A92015D430383" description="The location at the bottom of the ladder where climbing down ends." Deprecated="False" filter="0" group="General">
                            <Tunable type="str" name="bone_name" class="TunableStringHash32" default="None" display="Bone Name" muid="931CAB500B2C9193" description="The bone to use for this portal location." Deprecated="False" filter="0" group="General" />
                            <TunableVariant type="None" name="orientation" class="OptionalTunable" default="disabled" display="Orientation" muid="E1C0DAE3A417C826" description="If enabled, this portal has a specific orientation. If disabled, any&#xA;orientation is valid." Deprecated="False" filter="0" group="General">
                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="1EA7CBB8A50CC48E" />
                                <Tunable type="float" name="enabled" class="TunableAngle" default="0.0" display="Enabled" muid="372AB454A2BA1ABE" min="0.0" max="360.0" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                            </TunableVariant>
                            <TunableVariant type="None" name="routing_surface" class="TunableVariant" default="terrain" display="Routing Surface" muid="24A9F823C8302F27" description="Define what surface the point is created on.&#xA;&#xA;Terrain: The point is on the ground, on the same level the owning&#xA;object is on.&#xA;&#xA;Object: The point is on the routable surface defined by the object.&#xA;The point must be within the footprint's bounds.&#xA;&#xA;Global object: The point is anywhere on the object routable surface&#xA;for the level where the object is on. If there is no object that&#xA;location, the portal is invalid. Use this for objects that connect&#xA;other objects with routable surfaces.&#xA;&#xA;Ocean: The point is in the ocean. Regardless of what level the&#xA;object is on, we will always assume a surface type of POOL and a&#xA;level of 0 (which would match the Ocean)." Deprecated="False" filter="0" group="General">
                                <Tunable name="global_object" class="TunableExistance" display="Global Object" muid="8ADD0050D5E6DA06" />
                                <Tunable name="object" class="TunableExistance" display="Object" muid="A2C8579E7C47C280" />
                                <Tunable name="ocean" class="TunableExistance" display="Ocean" muid="1CA2C0723376050F" />
                                <Tunable name="terrain" class="TunableExistance" display="Terrain" muid="6EE94D5EB4127382" />
                            </TunableVariant>
                        </TunableTuple>
                        <TunableTuple name="location_start" class="Tunable_PortalBoneLocation" display="Location Start" muid="1FDD728D089C2460" description="The location at the top of the ladder where climbing down starts." Deprecated="False" filter="0" group="General">
                            <Tunable type="str" name="bone_name" class="TunableStringHash32" default="None" display="Bone Name" muid="38BA24C0EA19610F" description="The bone to use for this portal location." Deprecated="False" filter="0" group="General" />
                            <TunableVariant type="None" name="orientation" class="OptionalTunable" default="disabled" display="Orientation" muid="8BBD3657630AC381" description="If enabled, this portal has a specific orientation. If disabled, any&#xA;orientation is valid." Deprecated="False" filter="0" group="General">
                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="1055397DE9C2E454" />
                                <Tunable type="float" name="enabled" class="TunableAngle" default="0.0" display="Enabled" muid="E4942223F720207B" min="0.0" max="360.0" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                            </TunableVariant>
                            <TunableVariant type="None" name="routing_surface" class="TunableVariant" default="terrain" display="Routing Surface" muid="1AFF32CDFF1ABEAB" description="Define what surface the point is created on.&#xA;&#xA;Terrain: The point is on the ground, on the same level the owning&#xA;object is on.&#xA;&#xA;Object: The point is on the routable surface defined by the object.&#xA;The point must be within the footprint's bounds.&#xA;&#xA;Global object: The point is anywhere on the object routable surface&#xA;for the level where the object is on. If there is no object that&#xA;location, the portal is invalid. Use this for objects that connect&#xA;other objects with routable surfaces.&#xA;&#xA;Ocean: The point is in the ocean. Regardless of what level the&#xA;object is on, we will always assume a surface type of POOL and a&#xA;level of 0 (which would match the Ocean)." Deprecated="False" filter="0" group="General">
                                <Tunable name="global_object" class="TunableExistance" display="Global Object" muid="EE16105239B11E9A" />
                                <Tunable name="object" class="TunableExistance" display="Object" muid="12B75B45ECC50A6E" />
                                <Tunable name="ocean" class="TunableExistance" display="Ocean" muid="FDC9368ACB0FCA76" />
                                <Tunable name="terrain" class="TunableExistance" display="Terrain" muid="F856ECEE6CB2E1A" />
                            </TunableVariant>
                        </TunableTuple>
                    </TunableTuple>
                    <TunableVariant type="None" name="climb_up_locations" class="OptionalTunable" default="disabled" display="Climb Up Locations" muid="294D44648ADACF4B" description="Location tunables for climbing up the ladder.  Optional because climbing up isn't supported on ladder&#xA;slide portals." Deprecated="False" filter="0" group="General">
                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="6C66613104D983C6" />
                        <TunableTuple name="enabled" class="TunableTuple" display="Enabled" muid="214BD37307A7AE9A" description="Location tunables for climbing up the ladder.  Optional because climbing up isn't supported on ladder&#xA;slide portals." Deprecated="False" filter="0" group="General">
                            <TunableTuple name="location_end" class="Tunable_PortalBoneLocation" display="Location End" muid="6B0908612B90ADF2" description="The location at the top of the ladder where climbing up ends." Deprecated="False" filter="0" group="General">
                                <Tunable type="str" name="bone_name" class="TunableStringHash32" default="None" display="Bone Name" muid="CF84C6179E09087D" description="The bone to use for this portal location." Deprecated="False" filter="0" group="General" />
                                <TunableVariant type="None" name="orientation" class="OptionalTunable" default="disabled" display="Orientation" muid="E3B47482CFA7F250" description="If enabled, this portal has a specific orientation. If disabled, any&#xA;orientation is valid." Deprecated="False" filter="0" group="General">
                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="6044DD348536FE77" />
                                    <Tunable type="float" name="enabled" class="TunableAngle" default="0.0" display="Enabled" muid="93BEDCA27E87AD16" min="0.0" max="360.0" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                </TunableVariant>
                                <TunableVariant type="None" name="routing_surface" class="TunableVariant" default="terrain" display="Routing Surface" muid="B08B7C075DB17243" description="Define what surface the point is created on.&#xA;&#xA;Terrain: The point is on the ground, on the same level the owning&#xA;object is on.&#xA;&#xA;Object: The point is on the routable surface defined by the object.&#xA;The point must be within the footprint's bounds.&#xA;&#xA;Global object: The point is anywhere on the object routable surface&#xA;for the level where the object is on. If there is no object that&#xA;location, the portal is invalid. Use this for objects that connect&#xA;other objects with routable surfaces.&#xA;&#xA;Ocean: The point is in the ocean. Regardless of what level the&#xA;object is on, we will always assume a surface type of POOL and a&#xA;level of 0 (which would match the Ocean)." Deprecated="False" filter="0" group="General">
                                    <Tunable name="global_object" class="TunableExistance" display="Global Object" muid="920C1382EA2B0069" />
                                    <Tunable name="object" class="TunableExistance" display="Object" muid="461678AADEACE09F" />
                                    <Tunable name="ocean" class="TunableExistance" display="Ocean" muid="CF95A71FEDC9C406" />
                                    <Tunable name="terrain" class="TunableExistance" display="Terrain" muid="22D04980C85150E9" />
                                </TunableVariant>
                            </TunableTuple>
                            <TunableTuple name="location_start" class="Tunable_PortalBoneLocation" display="Location Start" muid="26697A6738E1503D" description="The location at the bottom of the ladder where climbing up starts." Deprecated="False" filter="0" group="General">
                                <Tunable type="str" name="bone_name" class="TunableStringHash32" default="None" display="Bone Name" muid="874780ADFA586D10" description="The bone to use for this portal location." Deprecated="False" filter="0" group="General" />
                                <TunableVariant type="None" name="orientation" class="OptionalTunable" default="disabled" display="Orientation" muid="F16107920E7443EC" description="If enabled, this portal has a specific orientation. If disabled, any&#xA;orientation is valid." Deprecated="False" filter="0" group="General">
                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="DD9B6369D67067A8" />
                                    <Tunable type="float" name="enabled" class="TunableAngle" default="0.0" display="Enabled" muid="85540555999E6255" min="0.0" max="360.0" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                </TunableVariant>
                                <TunableVariant type="None" name="routing_surface" class="TunableVariant" default="terrain" display="Routing Surface" muid="A7E36228C4B7BE71" description="Define what surface the point is created on.&#xA;&#xA;Terrain: The point is on the ground, on the same level the owning&#xA;object is on.&#xA;&#xA;Object: The point is on the routable surface defined by the object.&#xA;The point must be within the footprint's bounds.&#xA;&#xA;Global object: The point is anywhere on the object routable surface&#xA;for the level where the object is on. If there is no object that&#xA;location, the portal is invalid. Use this for objects that connect&#xA;other objects with routable surfaces.&#xA;&#xA;Ocean: The point is in the ocean. Regardless of what level the&#xA;object is on, we will always assume a surface type of POOL and a&#xA;level of 0 (which would match the Ocean)." Deprecated="False" filter="0" group="General">
                                    <Tunable name="global_object" class="TunableExistance" display="Global Object" muid="89326D357054E915" />
                                    <Tunable name="object" class="TunableExistance" display="Object" muid="933AF14662444F9E" />
                                    <Tunable name="ocean" class="TunableExistance" display="Ocean" muid="CD64B1B42D1D50C0" />
                                    <Tunable name="terrain" class="TunableExistance" display="Terrain" muid="44C06A7EFF47A83E" />
                                </TunableVariant>
                            </TunableTuple>
                        </TunableTuple>
                    </TunableVariant>
                    <TunableEnum type="PortalAlignment" name="portal_alignment" class="TunableEnumEntry" default="PA_FRONT" display="Portal Alignment" muid="D6AE307EFFB3A417" static_entries="routing-portals-portal_enums.PortalAlignment" description="Which direction this portal is aligned.  This direction is used to determine which animation to play&#xA;when getting on/off the top of ladder since there are three entrance/exit portals at the top of the ladder. " Deprecated="False" filter="0" group="General" />
                    <TunableList name="portal_events" class="TunableList" display="Portal Events" muid="AE5BFC7C321EDD4B" description="A list of portal events to add when a Sim uses the portal." Deprecated="False" filter="0" group="General">
                        <TunableVariant type="None" class="TunablePortalEventVariant" default="change_opacity" muid="BE4E20B4CED1B51F" description="The tuning for a specific portal event." Deprecated="False" filter="0" group="General">
                            <TunableTuple name="change_opacity" class="TunablePortalEventChangeOpacity" display="Change Opacity" muid="83BF18D81158F03A" description="A portal event to change the opacity of the actor." Deprecated="False" filter="0" group="General">
                                <Tunable type="float" name="duration" class="TunableRealSecond" default="0.0" display="Duration" muid="A0AB3FD5D43374E6" min="None" max="None" description="How long the change in opacity should take in seconds." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                <Tunable type="float" name="opacity" class="TunableRange" default="0" display="Opacity" muid="598DB443B5197243" min="0" max="1" description="The target opacity to set the actor to. 0 is invisible and 1 is&#xA;fully visible." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                <Tunable type="float" name="time" class="Tunable" default="1.0" display="Time" muid="6AAAFF09636830B6" description="The time from when the portal happens.&#xA;&#xA;A positive number is after the portal happens and a negative &#xA;number is before a portal happens. So if you want a sim to fade&#xA;out before using a portal the value here should be -1." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                            </TunableTuple>
                            <TunableTuple name="enter" class="TunablePortalEventEnter" display="Enter" muid="4DE3F5760EB70CB9" description="Notify the client that, at this time, the portal is in the &quot;enter&quot; state.&#xA;&#xA;Depending the nature of the portal, this can be interpreted differently. For&#xA;example, a Door portal with an ASM specified would, at this point, animate&#xA;the door swinging open." Deprecated="False" filter="0" group="General">
                                <Tunable type="float" name="time" class="Tunable" default="1.0" display="Time" muid="AE7DA381828B28AE" description="The time from when the portal happens.&#xA;&#xA;A positive number is after the portal happens and a negative &#xA;number is before a portal happens. So if you want a sim to fade&#xA;out before using a portal the value here should be -1." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                            </TunableTuple>
                            <TunableTuple name="exit" class="TunablePortalEventExit" display="Exit" muid="8D79000B9DC5017B" description="Notify the client that, at this time, the portal is in the &quot;exit&quot; state.&#xA;&#xA;Depending the nature of the portal, this can be interpreted differently. For&#xA;example, a Door portal with an ASM specified would, at this point, animate&#xA;the door swinging shut." Deprecated="False" filter="0" group="General">
                                <Tunable type="float" name="time" class="Tunable" default="1.0" display="Time" muid="46BA66E5E2694834" description="The time from when the portal happens.&#xA;&#xA;A positive number is after the portal happens and a negative &#xA;number is before a portal happens. So if you want a sim to fade&#xA;out before using a portal the value here should be -1." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                            </TunableTuple>
                        </TunableVariant>
                    </TunableList>
                    <TunableTuple name="slide_end_location" class="Tunable_PortalBoneLocation" display="Slide End Location" muid="B1F56832D8F01C28" description="The bone location where the slide portion of the animation ends.&#xA;This should be different than the portal exit location." Deprecated="False" filter="0" group="General">
                        <Tunable type="str" name="bone_name" class="TunableStringHash32" default="None" display="Bone Name" muid="732AE81587DD7406" description="The bone to use for this portal location." Deprecated="False" filter="0" group="General" />
                        <TunableVariant type="None" name="orientation" class="OptionalTunable" default="disabled" display="Orientation" muid="49A9662B0A4D3990" description="If enabled, this portal has a specific orientation. If disabled, any&#xA;orientation is valid." Deprecated="False" filter="0" group="General">
                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="34B79CC3574E6975" />
                            <Tunable type="float" name="enabled" class="TunableAngle" default="0.0" display="Enabled" muid="F88DDD00ADC7A01E" min="0.0" max="360.0" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                        </TunableVariant>
                        <TunableVariant type="None" name="routing_surface" class="TunableVariant" default="terrain" display="Routing Surface" muid="8DD9864FF496AB04" description="Define what surface the point is created on.&#xA;&#xA;Terrain: The point is on the ground, on the same level the owning&#xA;object is on.&#xA;&#xA;Object: The point is on the routable surface defined by the object.&#xA;The point must be within the footprint's bounds.&#xA;&#xA;Global object: The point is anywhere on the object routable surface&#xA;for the level where the object is on. If there is no object that&#xA;location, the portal is invalid. Use this for objects that connect&#xA;other objects with routable surfaces.&#xA;&#xA;Ocean: The point is in the ocean. Regardless of what level the&#xA;object is on, we will always assume a surface type of POOL and a&#xA;level of 0 (which would match the Ocean)." Deprecated="False" filter="0" group="General">
                            <Tunable name="global_object" class="TunableExistance" display="Global Object" muid="F14F008838142A75" />
                            <Tunable name="object" class="TunableExistance" display="Object" muid="D7233EE9C47CCC7F" />
                            <Tunable name="ocean" class="TunableExistance" display="Ocean" muid="BAA88B14AB6EA3B4" />
                            <Tunable name="terrain" class="TunableExistance" display="Terrain" muid="1ABCA2F1E1FE301" />
                        </TunableVariant>
                    </TunableTuple>
                </TunableTuple>
                <TunableTuple name="dynamic_jump" class="Tunable_PortalTypeDataDynamic" display="Dynamic Jump" muid="3A0B350CD2A9F711" description="The portal is dynamically generated based on other objects in the world. The&#xA;Sim will animate a variable jump from the specified entry point to points on&#xA;other objects marked as valid landing locations, i.e. the entry locations of&#xA;other dynamic portals." Deprecated="False" filter="0" group="General">
                    <TunableVariant type="None" name="_height_tolerance" class="TunableVariant" default="no_tolerance" display="Height Tolerance" muid="9E72EA45BC1BBF02" description="Define the maximum height between the portal points and the object's&#xA;location. If either the portal entry point or the portal exit point&#xA;is at a location whose y position differs by more than this amount&#xA;from the object's, the portal is not created." Deprecated="False" filter="0" group="General">
                        <Tunable name="allow_step_foundation" class="TunableExistance" display="Allow Step Foundation" muid="1BB1E5E2BE58A158" />
                        <Tunable name="no_tolerance" class="TunableExistance" display="No Tolerance" muid="156FB79CC605F0EE" />
                        <Tunable name="unlimited" class="TunableExistance" display="Unlimited" muid="A5142D172A33E5D2" />
                    </TunableVariant>
                    <Tunable type="bool" name="_require_los" class="Tunable" default="True" display="Require Los" muid="36C1FBB2DD2152D5" description="If checked, portals are created only if the segment between them&#xA;does not intersect other objects or a wall. If unchecked, no such&#xA;restriction exists.&#xA;&#xA;This should be unchecked on portals that are meant to be traversed&#xA;through a wall, e.g. a door." Deprecated="False" filter="0" group="General" />
                    <Tunable type="float" name="additional_search_radius" class="TunableRange" default="0.0" display="Additional Search Radius" muid="6E0D574F9898FDA4" min="0.0" max="None" description="Define an additional value in meters to increase the search for &#xA;other surfaces when a dynamic portal is generated.&#xA;This should be tuned for objects where the width is too high and &#xA;we need to take into account their placements can be farther apart&#xA;than a regular object like a counter which only uses the default &#xA;radius." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                    <TunableVariant type="None" name="angle_restriction" class="OptionalTunable" default="disabled" display="Angle Restriction" muid="827E5BB46161D336" description="If enabled, dynamic portals will only be generated when the angle &#xA;is within the angle restriction (counter-clockwise from start-angle&#xA;to end-angle).&#xA;&#xA;This won't be necessary for many cases. However, when dynamic &#xA;portal only be allowed to generate from specific sides of the &#xA;object (ex. front and left sides for Hamster Cage object), this&#xA;will be useful." Deprecated="False" filter="0" group="General">
                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="CA3FC4C5C0C18345" />
                        <TunableTuple name="enabled" class="TunableTuple" display="Enabled" muid="242FB31C4AF3AD39" description="Angle restriction in degrees, value range of 0-360." Deprecated="False" filter="0" group="General">
                            <Tunable type="float" name="end_angle" class="TunableAngle" default="180.0" display="End Angle" muid="EEB57FB870D0FA22" min="0.0" max="360.0" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                            <Tunable type="float" name="start_angle" class="TunableAngle" default="0.0" display="Start Angle" muid="D6E64C5A7C1550F4" min="0.0" max="360.0" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                        </TunableTuple>
                    </TunableVariant>
                    <Tunable type="animation" name="animation_element" class="TunableReference" display="Animation Element" muid="CD46F1F703A0B292" description="The animation to play when a Sim traverses this portal." allow_none="False" Deprecated="False" filter="0" group="General" />
                    <TunableVariant type="None" name="bidirectional_portal_offset" class="OptionalTunable" default="disabled" display="Bidirectional Portal Offset" muid="C5B6374A455B3E67" description="If enabled, portals defined on this object, will have an offset&#xA;applied to the entry portal of bidirectional portals. &#xA;The offset will be applied only to the object surface point of the&#xA;entry portal created by bidirectional portals.&#xA;For example: If you make a bidirectional portal from ground to a &#xA;counter, the point on the counter for the entry portal will have&#xA;an offset applied.&#xA;This way, portals can be generated for Sims like Cats, where the &#xA;entry point should have a small difference to the exit due &#xA;animation constraints." Deprecated="False" filter="0" group="General">
                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="D8DE69A86FEA1A96" />
                        <Tunable type="float" name="enabled" class="Tunable" default="0.1" display="Enabled" muid="84F21F58FE677E04" description="Offset in meters that will be applied to the entry portal." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                    </TunableVariant>
                    <Tunable type="float" name="entry_offset" class="TunableRange" default="0.0" display="Entry Offset" muid="8D8129D9DEBE0864" min="0.0" max="None" description="Define an offset that will be used for any dynamic portal entering&#xA;this object.&#xA;By definition all dynamic portals use the center, but by tuning&#xA;this the portal may allow for an offset from the center so the &#xA;Sim can get in closer to the edge of the object whenever it wants&#xA;to enter." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                    <Tunable type="float" name="exit_offset" class="TunableRange" default="0.0" display="Exit Offset" muid="1E8BC15626C714DE" min="0.0" max="None" description="Define an offset that will be used for any dynamic portal exiting&#xA;this object.&#xA;By definition all dynamic portals use the center, but by tuning&#xA;this the portal may allow for an offset from the center so the &#xA;Sim can get in closer to the edge of the object whenever it wants&#xA;to exit." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                    <TunableList name="object_portals" class="TunableList" display="Object Portals" muid="BC6F4ECD98308175" description="List of entry and exit location points that will define the entry&#xA;and exit portal to and from this object." Deprecated="False" filter="0" group="General">
                        <TunableTuple class="TunableTuple" muid="CDDF05978E32D4C6" description="Pair of exit and entry portal locations." Deprecated="False" filter="0" group="General">
                            <TunableTuple name="location_entry" class="Tunable_PortalLocation" display="Location Entry" muid="ED9D827BC7946836" description="The entry portal." Deprecated="False" filter="0" group="General">
                                <TunableTuple name="translation" class="TunableVector2" display="Translation" muid="3E147E2B58292D06" Deprecated="False" filter="0" group="General">
                                    <Tunable type="float" name="x" class="Tunable" default="0.0" display="X" muid="13301EBA593B493C" description="x component" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                    <Tunable type="float" name="y" class="Tunable" default="0.0" display="Y" muid="C3F7306891744211" description="y component" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                </TunableTuple>
                            </TunableTuple>
                        </TunableTuple>
                    </TunableList>
                    <TunableList name="portal_events" class="TunableList" display="Portal Events" muid="CB4611874F77940E" description="A list of portal events to add when a Sim uses the portal." Deprecated="False" filter="0" group="General">
                        <TunableVariant type="None" class="TunablePortalEventVariant" default="change_opacity" muid="2E89A70A6BC4D32C" description="The tuning for a specific portal event." Deprecated="False" filter="0" group="General">
                            <TunableTuple name="change_opacity" class="TunablePortalEventChangeOpacity" display="Change Opacity" muid="B22FD33D758F3177" description="A portal event to change the opacity of the actor." Deprecated="False" filter="0" group="General">
                                <Tunable type="float" name="duration" class="TunableRealSecond" default="0.0" display="Duration" muid="320D77012FC2CF34" min="None" max="None" description="How long the change in opacity should take in seconds." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                <Tunable type="float" name="opacity" class="TunableRange" default="0" display="Opacity" muid="BBE7C01805807FC3" min="0" max="1" description="The target opacity to set the actor to. 0 is invisible and 1 is&#xA;fully visible." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                <Tunable type="float" name="time" class="Tunable" default="1.0" display="Time" muid="D3B269099809B632" description="The time from when the portal happens.&#xA;&#xA;A positive number is after the portal happens and a negative &#xA;number is before a portal happens. So if you want a sim to fade&#xA;out before using a portal the value here should be -1." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                            </TunableTuple>
                            <TunableTuple name="enter" class="TunablePortalEventEnter" display="Enter" muid="A944EE02ABBABC36" description="Notify the client that, at this time, the portal is in the &quot;enter&quot; state.&#xA;&#xA;Depending the nature of the portal, this can be interpreted differently. For&#xA;example, a Door portal with an ASM specified would, at this point, animate&#xA;the door swinging open." Deprecated="False" filter="0" group="General">
                                <Tunable type="float" name="time" class="Tunable" default="1.0" display="Time" muid="88DE26EA7B1B2EC6" description="The time from when the portal happens.&#xA;&#xA;A positive number is after the portal happens and a negative &#xA;number is before a portal happens. So if you want a sim to fade&#xA;out before using a portal the value here should be -1." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                            </TunableTuple>
                            <TunableTuple name="exit" class="TunablePortalEventExit" display="Exit" muid="B5038C1026343846" description="Notify the client that, at this time, the portal is in the &quot;exit&quot; state.&#xA;&#xA;Depending the nature of the portal, this can be interpreted differently. For&#xA;example, a Door portal with an ASM specified would, at this point, animate&#xA;the door swinging shut." Deprecated="False" filter="0" group="General">
                                <Tunable type="float" name="time" class="Tunable" default="1.0" display="Time" muid="9294C096D0A6EC89" description="The time from when the portal happens.&#xA;&#xA;A positive number is after the portal happens and a negative &#xA;number is before a portal happens. So if you want a sim to fade&#xA;out before using a portal the value here should be -1." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                            </TunableTuple>
                        </TunableVariant>
                    </TunableList>
                </TunableTuple>
                <TunableTuple name="dynamic_stairs" class="Tunable_PortalTypeDataDynamicStairs" display="Dynamic Stairs" muid="ABA617336504B25C" description="The stairs portal is dynamically created based on the provided tuning and&#xA;the object to which this component is attached. " Deprecated="False" filter="0" group="General">
                    <TunableList name="lanes" class="TunableList" display="Lanes" muid="F678A394122FE2C8" description="The bones that describe each set of lanes (up and down)." Deprecated="False" filter="0" group="General">
                        <TunableTuple class="TunableTuple" muid="5C6A158A228D460A" description="Groups of bones that represent the up and down routes for this&#xA;lane." Deprecated="False" filter="0" group="General">
                            <TunableTuple name="down_begin" class="Tunable_PortalBoneLocation" display="Down Begin" muid="F70A22D35034DE15" description="The bone for the beginning of the path down the stairs." Deprecated="False" filter="0" group="General">
                                <Tunable type="str" name="bone_name" class="TunableStringHash32" default="None" display="Bone Name" muid="F7FD3C6FB02410AD" description="The bone to use for this portal location." Deprecated="False" filter="0" group="General" />
                                <TunableVariant type="None" name="orientation" class="OptionalTunable" default="disabled" display="Orientation" muid="F46519200CFF28DA" description="If enabled, this portal has a specific orientation. If disabled, any&#xA;orientation is valid." Deprecated="False" filter="0" group="General">
                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="FE6CB04344010924" />
                                    <Tunable type="float" name="enabled" class="TunableAngle" default="0.0" display="Enabled" muid="4E1014A129197EF9" min="0.0" max="360.0" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                </TunableVariant>
                                <TunableVariant type="None" name="routing_surface" class="TunableVariant" default="terrain" display="Routing Surface" muid="F93544B8D1835C45" description="Define what surface the point is created on.&#xA;&#xA;Terrain: The point is on the ground, on the same level the owning&#xA;object is on.&#xA;&#xA;Object: The point is on the routable surface defined by the object.&#xA;The point must be within the footprint's bounds.&#xA;&#xA;Global object: The point is anywhere on the object routable surface&#xA;for the level where the object is on. If there is no object that&#xA;location, the portal is invalid. Use this for objects that connect&#xA;other objects with routable surfaces.&#xA;&#xA;Ocean: The point is in the ocean. Regardless of what level the&#xA;object is on, we will always assume a surface type of POOL and a&#xA;level of 0 (which would match the Ocean)." Deprecated="False" filter="0" group="General">
                                    <Tunable name="global_object" class="TunableExistance" display="Global Object" muid="11CC02A320166AEE" />
                                    <Tunable name="object" class="TunableExistance" display="Object" muid="1CC4A994F982A939" />
                                    <Tunable name="ocean" class="TunableExistance" display="Ocean" muid="704A2463E083331B" />
                                    <Tunable name="terrain" class="TunableExistance" display="Terrain" muid="33D6FA6710EF698D" />
                                </TunableVariant>
                            </TunableTuple>
                            <TunableTuple name="down_end" class="Tunable_PortalBoneLocation" display="Down End" muid="43CD774EC8F7CA0A" description="The bone for the end of the path down the stairs." Deprecated="False" filter="0" group="General">
                                <Tunable type="str" name="bone_name" class="TunableStringHash32" default="None" display="Bone Name" muid="80619D1F14CB1E4C" description="The bone to use for this portal location." Deprecated="False" filter="0" group="General" />
                                <TunableVariant type="None" name="orientation" class="OptionalTunable" default="disabled" display="Orientation" muid="B43D0EBE7E220374" description="If enabled, this portal has a specific orientation. If disabled, any&#xA;orientation is valid." Deprecated="False" filter="0" group="General">
                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="2DED52ACA8E51107" />
                                    <Tunable type="float" name="enabled" class="TunableAngle" default="0.0" display="Enabled" muid="87141279DB69FF92" min="0.0" max="360.0" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                </TunableVariant>
                                <TunableVariant type="None" name="routing_surface" class="TunableVariant" default="terrain" display="Routing Surface" muid="40B7D621C1823B5D" description="Define what surface the point is created on.&#xA;&#xA;Terrain: The point is on the ground, on the same level the owning&#xA;object is on.&#xA;&#xA;Object: The point is on the routable surface defined by the object.&#xA;The point must be within the footprint's bounds.&#xA;&#xA;Global object: The point is anywhere on the object routable surface&#xA;for the level where the object is on. If there is no object that&#xA;location, the portal is invalid. Use this for objects that connect&#xA;other objects with routable surfaces.&#xA;&#xA;Ocean: The point is in the ocean. Regardless of what level the&#xA;object is on, we will always assume a surface type of POOL and a&#xA;level of 0 (which would match the Ocean)." Deprecated="False" filter="0" group="General">
                                    <Tunable name="global_object" class="TunableExistance" display="Global Object" muid="D4982FBFAE0D7DFA" />
                                    <Tunable name="object" class="TunableExistance" display="Object" muid="AF83B2559C8BB0CB" />
                                    <Tunable name="ocean" class="TunableExistance" display="Ocean" muid="C1FB95BC8B3B1D0C" />
                                    <Tunable name="terrain" class="TunableExistance" display="Terrain" muid="C4F0D7CB0C5FED4F" />
                                </TunableVariant>
                            </TunableTuple>
                            <TunableTuple name="up_begin" class="Tunable_PortalBoneLocation" display="Up Begin" muid="7A62FA9821D6945B" description="The bone for the beginning of the path up the stairs." Deprecated="False" filter="0" group="General">
                                <Tunable type="str" name="bone_name" class="TunableStringHash32" default="None" display="Bone Name" muid="8AED65FD2353C303" description="The bone to use for this portal location." Deprecated="False" filter="0" group="General" />
                                <TunableVariant type="None" name="orientation" class="OptionalTunable" default="disabled" display="Orientation" muid="2C9BAF377E095976" description="If enabled, this portal has a specific orientation. If disabled, any&#xA;orientation is valid." Deprecated="False" filter="0" group="General">
                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="2113FB0B4F0C9031" />
                                    <Tunable type="float" name="enabled" class="TunableAngle" default="0.0" display="Enabled" muid="33AC9D7E9B683199" min="0.0" max="360.0" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                </TunableVariant>
                                <TunableVariant type="None" name="routing_surface" class="TunableVariant" default="terrain" display="Routing Surface" muid="7FDC85FB2BE5BFCD" description="Define what surface the point is created on.&#xA;&#xA;Terrain: The point is on the ground, on the same level the owning&#xA;object is on.&#xA;&#xA;Object: The point is on the routable surface defined by the object.&#xA;The point must be within the footprint's bounds.&#xA;&#xA;Global object: The point is anywhere on the object routable surface&#xA;for the level where the object is on. If there is no object that&#xA;location, the portal is invalid. Use this for objects that connect&#xA;other objects with routable surfaces.&#xA;&#xA;Ocean: The point is in the ocean. Regardless of what level the&#xA;object is on, we will always assume a surface type of POOL and a&#xA;level of 0 (which would match the Ocean)." Deprecated="False" filter="0" group="General">
                                    <Tunable name="global_object" class="TunableExistance" display="Global Object" muid="BECDB6547121D2FD" />
                                    <Tunable name="object" class="TunableExistance" display="Object" muid="91F0F30DF52F7CC1" />
                                    <Tunable name="ocean" class="TunableExistance" display="Ocean" muid="D421EA2F3DCE8E24" />
                                    <Tunable name="terrain" class="TunableExistance" display="Terrain" muid="7E93968452991ED8" />
                                </TunableVariant>
                            </TunableTuple>
                            <TunableTuple name="up_end" class="Tunable_PortalBoneLocation" display="Up End" muid="B53F04E36797E4E7" description="The bone for the end of the path up the stairs." Deprecated="False" filter="0" group="General">
                                <Tunable type="str" name="bone_name" class="TunableStringHash32" default="None" display="Bone Name" muid="D76986329231A25C" description="The bone to use for this portal location." Deprecated="False" filter="0" group="General" />
                                <TunableVariant type="None" name="orientation" class="OptionalTunable" default="disabled" display="Orientation" muid="1211AEC289A02BAC" description="If enabled, this portal has a specific orientation. If disabled, any&#xA;orientation is valid." Deprecated="False" filter="0" group="General">
                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="3B185D29AFB966AF" />
                                    <Tunable type="float" name="enabled" class="TunableAngle" default="0.0" display="Enabled" muid="66D7E3754317D6D0" min="0.0" max="360.0" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                </TunableVariant>
                                <TunableVariant type="None" name="routing_surface" class="TunableVariant" default="terrain" display="Routing Surface" muid="D40F802DDA2653F5" description="Define what surface the point is created on.&#xA;&#xA;Terrain: The point is on the ground, on the same level the owning&#xA;object is on.&#xA;&#xA;Object: The point is on the routable surface defined by the object.&#xA;The point must be within the footprint's bounds.&#xA;&#xA;Global object: The point is anywhere on the object routable surface&#xA;for the level where the object is on. If there is no object that&#xA;location, the portal is invalid. Use this for objects that connect&#xA;other objects with routable surfaces.&#xA;&#xA;Ocean: The point is in the ocean. Regardless of what level the&#xA;object is on, we will always assume a surface type of POOL and a&#xA;level of 0 (which would match the Ocean)." Deprecated="False" filter="0" group="General">
                                    <Tunable name="global_object" class="TunableExistance" display="Global Object" muid="D70D8F4BC5A3D466" />
                                    <Tunable name="object" class="TunableExistance" display="Object" muid="EB01086F28545901" />
                                    <Tunable name="ocean" class="TunableExistance" display="Ocean" muid="CDF5BDB00880B64F" />
                                    <Tunable name="terrain" class="TunableExistance" display="Terrain" muid="DAB3B78A859715CD" />
                                </TunableVariant>
                            </TunableTuple>
                        </TunableTuple>
                    </TunableList>
                    <TunableList name="portal_events" class="TunableList" display="Portal Events" muid="2F7674EA20113826" description="A list of portal events to add when a Sim uses the portal." Deprecated="False" filter="0" group="General">
                        <TunableVariant type="None" class="TunablePortalEventVariant" default="change_opacity" muid="F4653E565B9F443" description="The tuning for a specific portal event." Deprecated="False" filter="0" group="General">
                            <TunableTuple name="change_opacity" class="TunablePortalEventChangeOpacity" display="Change Opacity" muid="B090A9AA8EDD4CDD" description="A portal event to change the opacity of the actor." Deprecated="False" filter="0" group="General">
                                <Tunable type="float" name="duration" class="TunableRealSecond" default="0.0" display="Duration" muid="E26A49CF3AA964A9" min="None" max="None" description="How long the change in opacity should take in seconds." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                <Tunable type="float" name="opacity" class="TunableRange" default="0" display="Opacity" muid="CF6B6EECD033096B" min="0" max="1" description="The target opacity to set the actor to. 0 is invisible and 1 is&#xA;fully visible." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                <Tunable type="float" name="time" class="Tunable" default="1.0" display="Time" muid="1571860EA87F52C0" description="The time from when the portal happens.&#xA;&#xA;A positive number is after the portal happens and a negative &#xA;number is before a portal happens. So if you want a sim to fade&#xA;out before using a portal the value here should be -1." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                            </TunableTuple>
                            <TunableTuple name="enter" class="TunablePortalEventEnter" display="Enter" muid="4D74093AD39E2B6B" description="Notify the client that, at this time, the portal is in the &quot;enter&quot; state.&#xA;&#xA;Depending the nature of the portal, this can be interpreted differently. For&#xA;example, a Door portal with an ASM specified would, at this point, animate&#xA;the door swinging open." Deprecated="False" filter="0" group="General">
                                <Tunable type="float" name="time" class="Tunable" default="1.0" display="Time" muid="BB1E233198DCECE3" description="The time from when the portal happens.&#xA;&#xA;A positive number is after the portal happens and a negative &#xA;number is before a portal happens. So if you want a sim to fade&#xA;out before using a portal the value here should be -1." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                            </TunableTuple>
                            <TunableTuple name="exit" class="TunablePortalEventExit" display="Exit" muid="437DC15EBE5BF7E4" description="Notify the client that, at this time, the portal is in the &quot;exit&quot; state.&#xA;&#xA;Depending the nature of the portal, this can be interpreted differently. For&#xA;example, a Door portal with an ASM specified would, at this point, animate&#xA;the door swinging shut." Deprecated="False" filter="0" group="General">
                                <Tunable type="float" name="time" class="Tunable" default="1.0" display="Time" muid="B614D0BB12E13890" description="The time from when the portal happens.&#xA;&#xA;A positive number is after the portal happens and a negative &#xA;number is before a portal happens. So if you want a sim to fade&#xA;out before using a portal the value here should be -1." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                            </TunableTuple>
                        </TunableVariant>
                    </TunableList>
                    <Tunable type="int" name="stair_count" class="TunableRange" default="8" display="Stair Count" muid="FBEACEBFB409C0" min="1" max="None" description="The number of stairs the Sim will traverse for this portal." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                    <Tunable type="bool" name="supports_landing_shoo" class="Tunable" default="False" display="Supports Landing Shoo" muid="460B9A4B74CCCEED" description="If True, sims standing on a stair landing on the object on which&#xA;this portal exists will be shooed from the path of the stairs if&#xA;another sim attempts to use the stairs. This is to avoid clipping." Deprecated="False" filter="0" group="General" />
                </TunableTuple>
                <TunableTuple name="elevator" class="Tunable_PortalTypeDataElevator" display="Elevator" muid="568983B9A42E2E41" description="A portal that connects an object to a location defined by a bone on another&#xA;object, typically an apartment shell." Deprecated="False" filter="0" group="General">
                    <Tunable type="str" name="elevator_bone_name" class="TunableStringHash32" default="_route_" display="Elevator Bone Name" muid="C01AAF6C73D99D8E" description="The elevator builds a portal between itself and the shell object on&#xA;the lot. The exact portal end points are positioned based on bone&#xA;positions on the elevator and shell models.&#xA;&#xA;This is the name of the bone on the elevator where the elevator end&#xA;of the portal should be." Deprecated="False" filter="0" group="General" />
                    <TunableList name="portal_events" class="TunableList" display="Portal Events" muid="FAE1BF77C6E39998" description="A list of portal events to add when a Sim uses the portal." Deprecated="False" filter="0" group="General">
                        <TunableVariant type="None" class="TunablePortalEventVariant" default="change_opacity" muid="654E15AC12930F78" description="The tuning for a specific portal event." Deprecated="False" filter="0" group="General">
                            <TunableTuple name="change_opacity" class="TunablePortalEventChangeOpacity" display="Change Opacity" muid="5CCDEC8467C06C54" description="A portal event to change the opacity of the actor." Deprecated="False" filter="0" group="General">
                                <Tunable type="float" name="duration" class="TunableRealSecond" default="0.0" display="Duration" muid="2AB84756131F01B8" min="None" max="None" description="How long the change in opacity should take in seconds." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                <Tunable type="float" name="opacity" class="TunableRange" default="0" display="Opacity" muid="A80EFD3EE6A60BC9" min="0" max="1" description="The target opacity to set the actor to. 0 is invisible and 1 is&#xA;fully visible." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                <Tunable type="float" name="time" class="Tunable" default="1.0" display="Time" muid="11A323B8955288C6" description="The time from when the portal happens.&#xA;&#xA;A positive number is after the portal happens and a negative &#xA;number is before a portal happens. So if you want a sim to fade&#xA;out before using a portal the value here should be -1." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                            </TunableTuple>
                            <TunableTuple name="enter" class="TunablePortalEventEnter" display="Enter" muid="401FBD2D86F1A77B" description="Notify the client that, at this time, the portal is in the &quot;enter&quot; state.&#xA;&#xA;Depending the nature of the portal, this can be interpreted differently. For&#xA;example, a Door portal with an ASM specified would, at this point, animate&#xA;the door swinging open." Deprecated="False" filter="0" group="General">
                                <Tunable type="float" name="time" class="Tunable" default="1.0" display="Time" muid="B47B9ADF3B46A9CC" description="The time from when the portal happens.&#xA;&#xA;A positive number is after the portal happens and a negative &#xA;number is before a portal happens. So if you want a sim to fade&#xA;out before using a portal the value here should be -1." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                            </TunableTuple>
                            <TunableTuple name="exit" class="TunablePortalEventExit" display="Exit" muid="279FB9B4969AED79" description="Notify the client that, at this time, the portal is in the &quot;exit&quot; state.&#xA;&#xA;Depending the nature of the portal, this can be interpreted differently. For&#xA;example, a Door portal with an ASM specified would, at this point, animate&#xA;the door swinging shut." Deprecated="False" filter="0" group="General">
                                <Tunable type="float" name="time" class="Tunable" default="1.0" display="Time" muid="B2378C036F498ADE" description="The time from when the portal happens.&#xA;&#xA;A positive number is after the portal happens and a negative &#xA;number is before a portal happens. So if you want a sim to fade&#xA;out before using a portal the value here should be -1." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                            </TunableTuple>
                        </TunableVariant>
                    </TunableList>
                    <Tunable type="str" name="shell_bone_name" class="TunableStringHash32" default="_route_0" display="Shell Bone Name" muid="F0C95772FBDA2132" description="The elevator builds a portal between itself and the shell object on&#xA;the lot. The exact portal end points are positioned based on bone&#xA;positions on the elevator and shell models.&#xA;&#xA;This is the name of the bone on the shell where the shell end of the&#xA;portal should be." Deprecated="False" filter="0" group="General" />
                    <TunableEnum type="Tag" name="shell_tag" class="TunableEnumEntry" default="INVALID" display="Shell Tag" muid="75D808602A98A15E" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="Tag to find the shell by. There should only be one such object on&#xA;the lot the elevator is on." Deprecated="False" filter="0" group="General" invalid_entries="INVALID" />
                </TunableTuple>
                <TunableTuple name="locomotion" class="Tunable_PortalTypeDataLocomotion" display="Locomotion" muid="F9F0B96D6DA29D85" description="The Sim locomotes from the entry point to the exit point. The entry and exit&#xA;points are manually specified." Deprecated="False" filter="0" group="General">
                    <TunableVariant type="None" name="_height_tolerance" class="TunableVariant" default="no_tolerance" display="Height Tolerance" muid="C043E6A53CFF98FC" description="Define the maximum height between the portal points and the object's&#xA;location. If either the portal entry point or the portal exit point&#xA;is at a location whose y position differs by more than this amount&#xA;from the object's, the portal is not created." Deprecated="False" filter="0" group="General">
                        <Tunable name="allow_step_foundation" class="TunableExistance" display="Allow Step Foundation" muid="3CD15929B34D714A" />
                        <Tunable name="no_tolerance" class="TunableExistance" display="No Tolerance" muid="9327086E1F06B7C9" />
                        <Tunable name="unlimited" class="TunableExistance" display="Unlimited" muid="4BB78EDAC641DE88" />
                    </TunableVariant>
                    <Tunable type="bool" name="_require_los" class="Tunable" default="True" display="Require Los" muid="AF98B9CD67287990" description="If checked, portals are created only if the segment between them&#xA;does not intersect other objects or a wall. If unchecked, no such&#xA;restriction exists.&#xA;&#xA;This should be unchecked on portals that are meant to be traversed&#xA;through a wall, e.g. a door." Deprecated="False" filter="0" group="General" />
                    <TunableVariant type="None" name="bidirectional_portal_offset" class="OptionalTunable" default="disabled" display="Bidirectional Portal Offset" muid="E1F083A58E39674F" description="If enabled, portals defined on this object, will have an offset&#xA;applied to the entry portal of bidirectional portals. &#xA;The offset will be applied only to the object surface point of the&#xA;entry portal created by bidirectional portals.&#xA;For example: If you make a bidirectional portal from ground to a &#xA;counter, the point on the counter for the entry portal will have&#xA;an offset applied.&#xA;This way, portals can be generated for Sims like Cats, where the &#xA;entry point should have a small difference to the exit due &#xA;animation constraints." Deprecated="False" filter="0" group="General">
                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="DF461FBF93EA8DCB" />
                        <Tunable type="float" name="enabled" class="Tunable" default="0.1" display="Enabled" muid="658C37AFA8C4D3E5" description="Offset in meters that will be applied to the entry portal." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                    </TunableVariant>
                    <TunableList name="object_portals" class="TunableList" display="Object Portals" muid="2F4A4334F5D1A2D" description="List of entry and exit location points that will define the entry&#xA;and exit portal to and from this object." Deprecated="False" filter="0" group="General">
                        <TunableTuple class="TunableTuple" muid="7277F7983B0A5A0B" description="Pair of exit and entry portal locations." Deprecated="False" filter="0" group="General">
                            <Tunable type="bool" name="is_bidirectional" class="Tunable" default="True" display="Is Bidirectional" muid="621F4AE59A362D49" description="If checked, then a portal with the same exact properties is&#xA;created from the exit location to the entry location.&#xA;&#xA;If unchecked, then only one portal is created: from the&#xA;entry location to the exit location." Deprecated="False" filter="0" group="General" />
                            <TunableVariant type="None" name="location_entry" class="PortalLocationVariant" default="location" display="Location Entry" muid="5B6EB92F7EF8E554" description="The entry portal" Deprecated="False" filter="0" group="General">
                                <TunableTuple name="bone_name" class="Tunable_PortalBoneLocation" display="Bone Name" muid="2B21D2BD5B189D3D" description="The bone location." Deprecated="False" filter="0" group="General">
                                    <Tunable type="str" name="bone_name" class="TunableStringHash32" default="None" display="Bone Name" muid="5D6DCBC72227EC2D" description="The bone to use for this portal location." Deprecated="False" filter="0" group="General" />
                                    <TunableVariant type="None" name="orientation" class="OptionalTunable" default="disabled" display="Orientation" muid="5DB03D0AB947845" description="If enabled, this portal has a specific orientation. If disabled, any&#xA;orientation is valid." Deprecated="False" filter="0" group="General">
                                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="8BFB7B7D4701275C" />
                                        <Tunable type="float" name="enabled" class="TunableAngle" default="0.0" display="Enabled" muid="E7141AF025B4DA22" min="0.0" max="360.0" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                    </TunableVariant>
                                    <TunableVariant type="None" name="routing_surface" class="TunableVariant" default="terrain" display="Routing Surface" muid="25E06C29DC978492" description="Define what surface the point is created on.&#xA;&#xA;Terrain: The point is on the ground, on the same level the owning&#xA;object is on.&#xA;&#xA;Object: The point is on the routable surface defined by the object.&#xA;The point must be within the footprint's bounds.&#xA;&#xA;Global object: The point is anywhere on the object routable surface&#xA;for the level where the object is on. If there is no object that&#xA;location, the portal is invalid. Use this for objects that connect&#xA;other objects with routable surfaces.&#xA;&#xA;Ocean: The point is in the ocean. Regardless of what level the&#xA;object is on, we will always assume a surface type of POOL and a&#xA;level of 0 (which would match the Ocean)." Deprecated="False" filter="0" group="General">
                                        <Tunable name="global_object" class="TunableExistance" display="Global Object" muid="BE6E18EAE0EE266E" />
                                        <Tunable name="object" class="TunableExistance" display="Object" muid="75800AB04B6A7642" />
                                        <Tunable name="ocean" class="TunableExistance" display="Ocean" muid="D98883A376ACE7BD" />
                                        <Tunable name="terrain" class="TunableExistance" display="Terrain" muid="E712523045F89987" />
                                    </TunableVariant>
                                </TunableTuple>
                                <TunableTuple name="location" class="Tunable_PortalLocation" display="Location" muid="18172F29F3D53702" description="The offset." Deprecated="False" filter="0" group="General">
                                    <TunableVariant type="None" name="routing_surface" class="TunableVariant" default="terrain" display="Routing Surface" muid="CDBE2201130001D5" description="Define what surface the point is created on.&#xA;&#xA;Terrain: The point is on the ground, on the same level the owning&#xA;object is on.&#xA;&#xA;Object: The point is on the routable surface defined by the object.&#xA;The point must be within the footprint's bounds.&#xA;&#xA;Global object: The point is anywhere on the object routable surface&#xA;for the level where the object is on. If there is no object that&#xA;location, the portal is invalid. Use this for objects that connect&#xA;other objects with routable surfaces.&#xA;&#xA;Ocean: The point is in the ocean. Regardless of what level the&#xA;object is on, we will always assume a surface type of POOL and a&#xA;level of 0 (which would match the Ocean)." Deprecated="False" filter="0" group="General">
                                        <Tunable name="global_object" class="TunableExistance" display="Global Object" muid="13437F0ACD0BFE43" />
                                        <Tunable name="object" class="TunableExistance" display="Object" muid="66BF2E215515902C" />
                                        <Tunable name="ocean" class="TunableExistance" display="Ocean" muid="3DBFAF098FCB91ED" />
                                        <Tunable name="terrain" class="TunableExistance" display="Terrain" muid="AA5A2B143A93B801" />
                                    </TunableVariant>
                                    <TunableTuple name="translation" class="TunableVector2" display="Translation" muid="2E561FB5F1485373" Deprecated="False" filter="0" group="General">
                                        <Tunable type="float" name="x" class="Tunable" default="0.0" display="X" muid="9BC9317B73FAC6A9" description="x component" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        <Tunable type="float" name="y" class="Tunable" default="0.0" display="Y" muid="823E839D9E15BFE7" description="y component" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                </TunableTuple>
                            </TunableVariant>
                            <TunableVariant type="None" name="location_exit" class="PortalLocationVariant" default="location" display="Location Exit" muid="CE13D41F3D6C8FEA" description="The exit portal" Deprecated="False" filter="0" group="General">
                                <TunableTuple name="bone_name" class="Tunable_PortalBoneLocation" display="Bone Name" muid="FC540E7EC86BEAA2" description="The bone location." Deprecated="False" filter="0" group="General">
                                    <Tunable type="str" name="bone_name" class="TunableStringHash32" default="None" display="Bone Name" muid="80ABD24D23647802" description="The bone to use for this portal location." Deprecated="False" filter="0" group="General" />
                                    <TunableVariant type="None" name="orientation" class="OptionalTunable" default="disabled" display="Orientation" muid="E6CE57065AACAE4B" description="If enabled, this portal has a specific orientation. If disabled, any&#xA;orientation is valid." Deprecated="False" filter="0" group="General">
                                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="93B700FCC03DB8D2" />
                                        <Tunable type="float" name="enabled" class="TunableAngle" default="0.0" display="Enabled" muid="35DA0CAC10CE864D" min="0.0" max="360.0" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                    </TunableVariant>
                                    <TunableVariant type="None" name="routing_surface" class="TunableVariant" default="terrain" display="Routing Surface" muid="65166EB2D0C3F891" description="Define what surface the point is created on.&#xA;&#xA;Terrain: The point is on the ground, on the same level the owning&#xA;object is on.&#xA;&#xA;Object: The point is on the routable surface defined by the object.&#xA;The point must be within the footprint's bounds.&#xA;&#xA;Global object: The point is anywhere on the object routable surface&#xA;for the level where the object is on. If there is no object that&#xA;location, the portal is invalid. Use this for objects that connect&#xA;other objects with routable surfaces.&#xA;&#xA;Ocean: The point is in the ocean. Regardless of what level the&#xA;object is on, we will always assume a surface type of POOL and a&#xA;level of 0 (which would match the Ocean)." Deprecated="False" filter="0" group="General">
                                        <Tunable name="global_object" class="TunableExistance" display="Global Object" muid="2690A9B15B6CEF2F" />
                                        <Tunable name="object" class="TunableExistance" display="Object" muid="656036C65C9EE0A6" />
                                        <Tunable name="ocean" class="TunableExistance" display="Ocean" muid="56B6DB90ACEFEA55" />
                                        <Tunable name="terrain" class="TunableExistance" display="Terrain" muid="6F2E06E24ECC98F9" />
                                    </TunableVariant>
                                </TunableTuple>
                                <TunableTuple name="location" class="Tunable_PortalLocation" display="Location" muid="B011AA302DBBD15E" description="The offset." Deprecated="False" filter="0" group="General">
                                    <TunableVariant type="None" name="routing_surface" class="TunableVariant" default="terrain" display="Routing Surface" muid="B44A62D6FE9DB12" description="Define what surface the point is created on.&#xA;&#xA;Terrain: The point is on the ground, on the same level the owning&#xA;object is on.&#xA;&#xA;Object: The point is on the routable surface defined by the object.&#xA;The point must be within the footprint's bounds.&#xA;&#xA;Global object: The point is anywhere on the object routable surface&#xA;for the level where the object is on. If there is no object that&#xA;location, the portal is invalid. Use this for objects that connect&#xA;other objects with routable surfaces.&#xA;&#xA;Ocean: The point is in the ocean. Regardless of what level the&#xA;object is on, we will always assume a surface type of POOL and a&#xA;level of 0 (which would match the Ocean)." Deprecated="False" filter="0" group="General">
                                        <Tunable name="global_object" class="TunableExistance" display="Global Object" muid="EACB72328F356AB3" />
                                        <Tunable name="object" class="TunableExistance" display="Object" muid="A0AE3A4E2658F98E" />
                                        <Tunable name="ocean" class="TunableExistance" display="Ocean" muid="5F0FDFC90E273AF8" />
                                        <Tunable name="terrain" class="TunableExistance" display="Terrain" muid="BE3FD4420B56F715" />
                                    </TunableVariant>
                                    <TunableTuple name="translation" class="TunableVector2" display="Translation" muid="9FD7E5E3142730CD" Deprecated="False" filter="0" group="General">
                                        <Tunable type="float" name="x" class="Tunable" default="0.0" display="X" muid="CAA378C772FDFFA8" description="x component" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        <Tunable type="float" name="y" class="Tunable" default="0.0" display="Y" muid="6241335AB963DF23" description="y component" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                </TunableTuple>
                            </TunableVariant>
                        </TunableTuple>
                    </TunableList>
                    <TunableList name="portal_events" class="TunableList" display="Portal Events" muid="5D8A96630DA693A1" description="A list of portal events to add when a Sim uses the portal." Deprecated="False" filter="0" group="General">
                        <TunableVariant type="None" class="TunablePortalEventVariant" default="change_opacity" muid="D035F519D2CABA3F" description="The tuning for a specific portal event." Deprecated="False" filter="0" group="General">
                            <TunableTuple name="change_opacity" class="TunablePortalEventChangeOpacity" display="Change Opacity" muid="560280BAA9B9D974" description="A portal event to change the opacity of the actor." Deprecated="False" filter="0" group="General">
                                <Tunable type="float" name="duration" class="TunableRealSecond" default="0.0" display="Duration" muid="816A2732E2C831C2" min="None" max="None" description="How long the change in opacity should take in seconds." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                <Tunable type="float" name="opacity" class="TunableRange" default="0" display="Opacity" muid="15131F5F062185AE" min="0" max="1" description="The target opacity to set the actor to. 0 is invisible and 1 is&#xA;fully visible." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                <Tunable type="float" name="time" class="Tunable" default="1.0" display="Time" muid="A64533EFC35B1FF3" description="The time from when the portal happens.&#xA;&#xA;A positive number is after the portal happens and a negative &#xA;number is before a portal happens. So if you want a sim to fade&#xA;out before using a portal the value here should be -1." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                            </TunableTuple>
                            <TunableTuple name="enter" class="TunablePortalEventEnter" display="Enter" muid="5148B23A55661E1A" description="Notify the client that, at this time, the portal is in the &quot;enter&quot; state.&#xA;&#xA;Depending the nature of the portal, this can be interpreted differently. For&#xA;example, a Door portal with an ASM specified would, at this point, animate&#xA;the door swinging open." Deprecated="False" filter="0" group="General">
                                <Tunable type="float" name="time" class="Tunable" default="1.0" display="Time" muid="9D6E4F58B0DBB9DA" description="The time from when the portal happens.&#xA;&#xA;A positive number is after the portal happens and a negative &#xA;number is before a portal happens. So if you want a sim to fade&#xA;out before using a portal the value here should be -1." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                            </TunableTuple>
                            <TunableTuple name="exit" class="TunablePortalEventExit" display="Exit" muid="65338B394ADA54D9" description="Notify the client that, at this time, the portal is in the &quot;exit&quot; state.&#xA;&#xA;Depending the nature of the portal, this can be interpreted differently. For&#xA;example, a Door portal with an ASM specified would, at this point, animate&#xA;the door swinging shut." Deprecated="False" filter="0" group="General">
                                <Tunable type="float" name="time" class="Tunable" default="1.0" display="Time" muid="5C578BA8909A1E7" description="The time from when the portal happens.&#xA;&#xA;A positive number is after the portal happens and a negative &#xA;number is before a portal happens. So if you want a sim to fade&#xA;out before using a portal the value here should be -1." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                            </TunableTuple>
                        </TunableVariant>
                    </TunableList>
                </TunableTuple>
                <TunableTuple name="ocean_ladder" class="Tunable_PortalTypeDataOceanLadders" display="Ocean Ladder" muid="EF60D654430404EE" description="The Sim locomotes up from the water to land or down from land to water." Deprecated="False" filter="0" group="General">
                    <TunableTuple name="climb_down_locations" class="TunableTuple" display="Climb Down Locations" muid="4EC7C4BF7C000F0" description="Location tunables for climbing down the ladder." Deprecated="False" filter="0" group="General">
                        <TunableTuple name="location_end" class="Tunable_PortalLocation" display="Location End" muid="8A6555DBB7D3850" description="The location at the bottom of the ladder where climbing down ends." Deprecated="False" filter="0" group="General">
                            <TunableVariant type="None" name="orientation" class="OptionalTunable" default="disabled" display="Orientation" muid="9C56B9AFC09FBED9" description="If enabled, this portal has a specific orientation. If disabled, any&#xA;orientation is valid." Deprecated="False" filter="0" group="General">
                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="C7DAC33A411505B4" />
                                <Tunable type="float" name="enabled" class="TunableAngle" default="0.0" display="Enabled" muid="EE4E1A982CD88F17" min="0.0" max="360.0" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                            </TunableVariant>
                            <TunableVariant type="None" name="routing_surface" class="TunableVariant" default="terrain" display="Routing Surface" muid="61ECCD3CC4DB44AA" description="Define what surface the point is created on.&#xA;&#xA;Terrain: The point is on the ground, on the same level the owning&#xA;object is on.&#xA;&#xA;Object: The point is on the routable surface defined by the object.&#xA;The point must be within the footprint's bounds.&#xA;&#xA;Global object: The point is anywhere on the object routable surface&#xA;for the level where the object is on. If there is no object that&#xA;location, the portal is invalid. Use this for objects that connect&#xA;other objects with routable surfaces.&#xA;&#xA;Ocean: The point is in the ocean. Regardless of what level the&#xA;object is on, we will always assume a surface type of POOL and a&#xA;level of 0 (which would match the Ocean)." Deprecated="False" filter="0" group="General">
                                <Tunable name="global_object" class="TunableExistance" display="Global Object" muid="C9E1185D6FC5346C" />
                                <Tunable name="object" class="TunableExistance" display="Object" muid="9D84AC2335C135B2" />
                                <Tunable name="ocean" class="TunableExistance" display="Ocean" muid="42739BC4502E838C" />
                                <Tunable name="terrain" class="TunableExistance" display="Terrain" muid="58C8949CD405985A" />
                            </TunableVariant>
                            <TunableTuple name="translation" class="TunableVector2" display="Translation" muid="486CB12454FE4A81" Deprecated="False" filter="0" group="General">
                                <Tunable type="float" name="x" class="Tunable" default="0.0" display="X" muid="E75C433853049CB4" description="x component" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                <Tunable type="float" name="y" class="Tunable" default="0.0" display="Y" muid="42B5226574DEA96C" description="y component" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                            </TunableTuple>
                        </TunableTuple>
                        <TunableTuple name="location_start" class="Tunable_PortalLocation" display="Location Start" muid="452A9C56F073C24A" description="The location at the top of the ladder where climbing down starts." Deprecated="False" filter="0" group="General">
                            <TunableVariant type="None" name="orientation" class="OptionalTunable" default="disabled" display="Orientation" muid="E362812953A4BDAF" description="If enabled, this portal has a specific orientation. If disabled, any&#xA;orientation is valid." Deprecated="False" filter="0" group="General">
                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="2477A435139EE248" />
                                <Tunable type="float" name="enabled" class="TunableAngle" default="0.0" display="Enabled" muid="346F45A0A4A70FA7" min="0.0" max="360.0" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                            </TunableVariant>
                            <TunableVariant type="None" name="routing_surface" class="TunableVariant" default="terrain" display="Routing Surface" muid="5DD81195D8AB0F52" description="Define what surface the point is created on.&#xA;&#xA;Terrain: The point is on the ground, on the same level the owning&#xA;object is on.&#xA;&#xA;Object: The point is on the routable surface defined by the object.&#xA;The point must be within the footprint's bounds.&#xA;&#xA;Global object: The point is anywhere on the object routable surface&#xA;for the level where the object is on. If there is no object that&#xA;location, the portal is invalid. Use this for objects that connect&#xA;other objects with routable surfaces.&#xA;&#xA;Ocean: The point is in the ocean. Regardless of what level the&#xA;object is on, we will always assume a surface type of POOL and a&#xA;level of 0 (which would match the Ocean)." Deprecated="False" filter="0" group="General">
                                <Tunable name="global_object" class="TunableExistance" display="Global Object" muid="FFEF7815CE8434DA" />
                                <Tunable name="object" class="TunableExistance" display="Object" muid="D748C7CCC0D1D2CB" />
                                <Tunable name="ocean" class="TunableExistance" display="Ocean" muid="6859D283B396A83" />
                                <Tunable name="terrain" class="TunableExistance" display="Terrain" muid="A242AC25D62887D" />
                            </TunableVariant>
                            <TunableTuple name="translation" class="TunableVector2" display="Translation" muid="3819B110EC9AF5A9" Deprecated="False" filter="0" group="General">
                                <Tunable type="float" name="x" class="Tunable" default="0.0" display="X" muid="E517219C61DD47D9" description="x component" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                <Tunable type="float" name="y" class="Tunable" default="0.0" display="Y" muid="E658E802DE1E89FF" description="y component" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                            </TunableTuple>
                        </TunableTuple>
                    </TunableTuple>
                    <Tunable type="snippet" name="climb_down_route_event" class="TunableReference" display="Climb Down Route Event" muid="E310499E892F875D" description="The route even tto set a posture while climbing down the ladder portal.&#xA;Currently, only Set Posture is supported. If any other route events&#xA;are tuned here there's a good chance they won't work as expected." allow_none="False" Deprecated="False" filter="0" group="General" restrict="RouteEvent" />
                    <TunableTuple name="climb_up_locations" class="TunableTuple" display="Climb Up Locations" muid="986B790CCA278299" description="Location tunables for climbing up the ladder." Deprecated="False" filter="0" group="General">
                        <TunableTuple name="location_end" class="Tunable_PortalLocation" display="Location End" muid="AA0A372B21AB7053" description="The location at the top of the ladder where climbing up ends." Deprecated="False" filter="0" group="General">
                            <TunableVariant type="None" name="orientation" class="OptionalTunable" default="disabled" display="Orientation" muid="C8AA84411B9DDA15" description="If enabled, this portal has a specific orientation. If disabled, any&#xA;orientation is valid." Deprecated="False" filter="0" group="General">
                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="6656A19E1D18CDEA" />
                                <Tunable type="float" name="enabled" class="TunableAngle" default="0.0" display="Enabled" muid="B539CC2604FB6AC7" min="0.0" max="360.0" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                            </TunableVariant>
                            <TunableVariant type="None" name="routing_surface" class="TunableVariant" default="terrain" display="Routing Surface" muid="42CAFCEB1F82F460" description="Define what surface the point is created on.&#xA;&#xA;Terrain: The point is on the ground, on the same level the owning&#xA;object is on.&#xA;&#xA;Object: The point is on the routable surface defined by the object.&#xA;The point must be within the footprint's bounds.&#xA;&#xA;Global object: The point is anywhere on the object routable surface&#xA;for the level where the object is on. If there is no object that&#xA;location, the portal is invalid. Use this for objects that connect&#xA;other objects with routable surfaces.&#xA;&#xA;Ocean: The point is in the ocean. Regardless of what level the&#xA;object is on, we will always assume a surface type of POOL and a&#xA;level of 0 (which would match the Ocean)." Deprecated="False" filter="0" group="General">
                                <Tunable name="global_object" class="TunableExistance" display="Global Object" muid="3CFBAF82195744E" />
                                <Tunable name="object" class="TunableExistance" display="Object" muid="A2E5FB76F21B4E85" />
                                <Tunable name="ocean" class="TunableExistance" display="Ocean" muid="6E079957E64A36C3" />
                                <Tunable name="terrain" class="TunableExistance" display="Terrain" muid="B1848A8638323AC2" />
                            </TunableVariant>
                            <TunableTuple name="translation" class="TunableVector2" display="Translation" muid="4F5129E1217B6F67" Deprecated="False" filter="0" group="General">
                                <Tunable type="float" name="x" class="Tunable" default="0.0" display="X" muid="3AD468287D7207FD" description="x component" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                <Tunable type="float" name="y" class="Tunable" default="0.0" display="Y" muid="56D234FA43E5F268" description="y component" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                            </TunableTuple>
                        </TunableTuple>
                        <TunableTuple name="location_start" class="Tunable_PortalLocation" display="Location Start" muid="DDF2689168E6714" description="The location at the bottom of the ladder where climbing up starts." Deprecated="False" filter="0" group="General">
                            <TunableVariant type="None" name="orientation" class="OptionalTunable" default="disabled" display="Orientation" muid="614AED261A8F58D0" description="If enabled, this portal has a specific orientation. If disabled, any&#xA;orientation is valid." Deprecated="False" filter="0" group="General">
                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="1DCF49E23AA0228A" />
                                <Tunable type="float" name="enabled" class="TunableAngle" default="0.0" display="Enabled" muid="8043A7CC99FCD34E" min="0.0" max="360.0" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                            </TunableVariant>
                            <TunableVariant type="None" name="routing_surface" class="TunableVariant" default="terrain" display="Routing Surface" muid="87E9240923471E37" description="Define what surface the point is created on.&#xA;&#xA;Terrain: The point is on the ground, on the same level the owning&#xA;object is on.&#xA;&#xA;Object: The point is on the routable surface defined by the object.&#xA;The point must be within the footprint's bounds.&#xA;&#xA;Global object: The point is anywhere on the object routable surface&#xA;for the level where the object is on. If there is no object that&#xA;location, the portal is invalid. Use this for objects that connect&#xA;other objects with routable surfaces.&#xA;&#xA;Ocean: The point is in the ocean. Regardless of what level the&#xA;object is on, we will always assume a surface type of POOL and a&#xA;level of 0 (which would match the Ocean)." Deprecated="False" filter="0" group="General">
                                <Tunable name="global_object" class="TunableExistance" display="Global Object" muid="DA7BF6D28F23602B" />
                                <Tunable name="object" class="TunableExistance" display="Object" muid="723679C32789A660" />
                                <Tunable name="ocean" class="TunableExistance" display="Ocean" muid="59C93670FE914E8B" />
                                <Tunable name="terrain" class="TunableExistance" display="Terrain" muid="5C58CCF856DA8680" />
                            </TunableVariant>
                            <TunableTuple name="translation" class="TunableVector2" display="Translation" muid="3BDF9EA5E0D69CAF" Deprecated="False" filter="0" group="General">
                                <Tunable type="float" name="x" class="Tunable" default="0.0" display="X" muid="6AEAE9494740EB2D" description="x component" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                <Tunable type="float" name="y" class="Tunable" default="0.0" display="Y" muid="F0E634BABA40E97D" description="y component" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                            </TunableTuple>
                        </TunableTuple>
                    </TunableTuple>
                    <Tunable type="snippet" name="climb_up_route_event" class="TunableReference" display="Climb Up Route Event" muid="9D98C006C543DBFC" description="The route event to set a posture while climing up the ladder portal.&#xA;Currently, only Set Posture is supported. If any other route events&#xA;are tuned here there's a good chance they won't work as expected." allow_none="False" Deprecated="False" filter="0" group="General" restrict="RouteEvent" />
                    <Tunable type="str" name="ladder_down_climb_cycle" class="Tunable" default="ladder_down_cycle_r" display="Ladder Down Climb Cycle" muid="EA3183038A0BA695" description="The name of the animation clip for the down climb cycle." Deprecated="False" filter="0" group="Animation" />
                    <Tunable type="str" name="ladder_down_start_cycle" class="Tunable" default="ladder_down_start" display="Ladder Down Start Cycle" muid="60713C11AB460C0D" description="The name of the animation clip for the down start cycle." Deprecated="False" filter="0" group="Animation" />
                    <Tunable type="str" name="ladder_down_stop_cycle" class="Tunable" default="ladder_down_stop" display="Ladder Down Stop Cycle" muid="E863D2A1FB31B2FF" description="The name of the animation clip for the down stop cycle." Deprecated="False" filter="0" group="Animation" />
                    <Tunable type="float" name="ladder_rung_distance" class="Tunable" default="0.25" display="Ladder Rung Distance" muid="5D0AC9DD60D3445F" description="The distance between rungs on the ladder object." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                    <Tunable type="str" name="ladder_up_climb_cycle" class="Tunable" default="ladder_up_cycle_r" display="Ladder Up Climb Cycle" muid="4F4A4769F2391991" description="The name of the animation clip for the up climb cycle." Deprecated="False" filter="0" group="Animation" />
                    <Tunable type="str" name="ladder_up_start_cycle" class="Tunable" default="ladder_up_start" display="Ladder Up Start Cycle" muid="AE4D336690BF7FE0" description="The name of the animation clip for the up start cycle." Deprecated="False" filter="0" group="Animation" />
                    <Tunable type="str" name="ladder_up_stop_cycle" class="Tunable" default="ladder_up_stop" display="Ladder Up Stop Cycle" muid="D2F34AD5E7589AE" description="The name of the animation clip for the up stop cycle." Deprecated="False" filter="0" group="Animation" />
                    <TunableList name="portal_events" class="TunableList" display="Portal Events" muid="7E755E7CE211A031" description="A list of portal events to add when a Sim uses the portal." Deprecated="False" filter="0" group="General">
                        <TunableVariant type="None" class="TunablePortalEventVariant" default="change_opacity" muid="91BB69E417DFF60C" description="The tuning for a specific portal event." Deprecated="False" filter="0" group="General">
                            <TunableTuple name="change_opacity" class="TunablePortalEventChangeOpacity" display="Change Opacity" muid="758050392A14487F" description="A portal event to change the opacity of the actor." Deprecated="False" filter="0" group="General">
                                <Tunable type="float" name="duration" class="TunableRealSecond" default="0.0" display="Duration" muid="FF16050CFEA840A0" min="None" max="None" description="How long the change in opacity should take in seconds." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                <Tunable type="float" name="opacity" class="TunableRange" default="0" display="Opacity" muid="4FD63CF064BFE5E2" min="0" max="1" description="The target opacity to set the actor to. 0 is invisible and 1 is&#xA;fully visible." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                <Tunable type="float" name="time" class="Tunable" default="1.0" display="Time" muid="D429141BDA37076" description="The time from when the portal happens.&#xA;&#xA;A positive number is after the portal happens and a negative &#xA;number is before a portal happens. So if you want a sim to fade&#xA;out before using a portal the value here should be -1." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                            </TunableTuple>
                            <TunableTuple name="enter" class="TunablePortalEventEnter" display="Enter" muid="F0892017A9127910" description="Notify the client that, at this time, the portal is in the &quot;enter&quot; state.&#xA;&#xA;Depending the nature of the portal, this can be interpreted differently. For&#xA;example, a Door portal with an ASM specified would, at this point, animate&#xA;the door swinging open." Deprecated="False" filter="0" group="General">
                                <Tunable type="float" name="time" class="Tunable" default="1.0" display="Time" muid="34BBCFFE277560C7" description="The time from when the portal happens.&#xA;&#xA;A positive number is after the portal happens and a negative &#xA;number is before a portal happens. So if you want a sim to fade&#xA;out before using a portal the value here should be -1." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                            </TunableTuple>
                            <TunableTuple name="exit" class="TunablePortalEventExit" display="Exit" muid="FC453BB64950C510" description="Notify the client that, at this time, the portal is in the &quot;exit&quot; state.&#xA;&#xA;Depending the nature of the portal, this can be interpreted differently. For&#xA;example, a Door portal with an ASM specified would, at this point, animate&#xA;the door swinging shut." Deprecated="False" filter="0" group="General">
                                <Tunable type="float" name="time" class="Tunable" default="1.0" display="Time" muid="2B13FD1C62E2A8B7" description="The time from when the portal happens.&#xA;&#xA;A positive number is after the portal happens and a negative &#xA;number is before a portal happens. So if you want a sim to fade&#xA;out before using a portal the value here should be -1." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                            </TunableTuple>
                        </TunableVariant>
                    </TunableList>
                    <Tunable type="posture" name="posture_end" class="TunableReference" display="Posture End" muid="20C8852212712F7B" description="Define the exit posture as you cross through this portal." allow_none="False" Deprecated="False" filter="0" group="General" restrict="MobilePosture" />
                    <Tunable type="posture" name="posture_start" class="TunableReference" display="Posture Start" muid="81033DAA324582EF" description="Define the entry posture as you cross through this portal. e.g. For&#xA;the pool, the start posture is stand." allow_none="False" Deprecated="False" filter="0" group="General" restrict="MobilePosture" />
                    <Tunable type="float" name="route_event_time_offset" class="TunableRange" default="0.5" display="Route Event Time Offset" muid="62D1FA66C615C6D" min="0" max="1" description="The amount of time after the start of the ladder portal to schedule &#xA;the route event. " tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                    <Tunable type="str" name="walkstyle_duration" class="Tunable" default="duration" display="Walkstyle Duration" muid="E0F3FD8BC1240FA1" description="The name of the duration field in the animation data." Deprecated="False" filter="0" group="Animation" />
                </TunableTuple>
                <TunableTuple name="posture_change" class="Tunable_PortalTypeDataPosture" display="Posture Change" muid="DF60368D3B9A48E7" description="The Sim does not animate via the traversal type. It comes from a posture&#xA;change on the portal." Deprecated="False" filter="0" group="General">
                    <Tunable type="bool" name="_lock_portal_on_use" class="Tunable" default="True" display="Lock Portal On Use" muid="40169D468A1ACC0A" description="If checked, only one sim is allowed to use the portal at a time.&#xA;Otherwise, multiple sims can use the portal at the same time." Deprecated="False" filter="0" group="General" />
                    <TunableVariant type="None" name="_outfit_change" class="OptionalTunable" default="disabled" display="Outfit Change" muid="4A47FB6CE6ED76BD" description="Define the outfit change that happens when a Sim enters or exits&#xA;this portal." Deprecated="False" filter="0" group="General">
                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="7B7D1FD049877C5C" />
                        <TunableVariant type="None" name="enabled" class="TunableOutfitChange" default="no_change" display="Enabled" muid="972021CF405E4067" description="Define the outfit change that happens when a Sim enters or exits&#xA;this portal." Deprecated="False" filter="0" group="General">
                            <TunableTuple name="for_new" class="Tunable_OutfitChangeForNew" display="For New" muid="4E548DD8D807A7F6" description="Define an outfit change that generates a new outfit and then applies it&#xA;to the Sim." Deprecated="False" filter="0" group="General">
                                <TunableTuple name="outfit_change_behavior" class="Tunable_OutfitChangeGeneration" display="Outfit Change Behavior" muid="60188B1B17695F9E" description="Generate a new outfit in the specified category." Deprecated="False" filter="0" group="General">
                                    <TunableEnum type="OutfitCategory" name="outfit_category" class="TunableEnumEntry" default="EVERYDAY" display="Outfit Category" muid="9F87D53F915A15F2" static_entries="sims-outfits-outfit_enums.OutfitCategory" description="The outfit category for which we're creating a new outfit." Deprecated="False" filter="0" group="General" />
                                </TunableTuple>
                            </TunableTuple>
                            <TunableTuple name="for_reason" class="Tunable_OutfitChangeForReason" display="For Reason" muid="14027B99B1D260F6" description="Define individual outfit changes at each of the transition points." Deprecated="False" filter="0" group="General">
                                <TunableVariant type="None" name="on_entry" class="OptionalTunable" default="disabled" display="On Entry" muid="B1DFC9AD5FEE1B60" description="When enabled, define the change reason to apply on posture&#xA;entry." Deprecated="False" filter="0" group="General">
                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="9A3B2E6689A90182" />
                                    <TunableEnum type="OutfitChangeReason" name="enabled" class="TunableEnumEntry" default="Invalid" display="Enabled" muid="13FFEC8C1EC0A9E5" dynamic_entries="sims-outfits-outfit_enums.OutfitChangeReason._elements" static_entries="sims-outfits-outfit_enums.OutfitChangeReason" Deprecated="False" filter="0" group="General" />
                                </TunableVariant>
                                <TunableVariant type="None" name="on_exit" class="OptionalTunable" default="disabled" display="On Exit" muid="F6A6A50A99D96FC" description="When enabled, define the change reason to apply on posture&#xA;exit." Deprecated="False" filter="0" group="General">
                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="B7289D35B8ADABDA" />
                                    <TunableEnum type="OutfitChangeReason" name="enabled" class="TunableEnumEntry" default="Invalid" display="Enabled" muid="C9E7E43410F7FA0" dynamic_entries="sims-outfits-outfit_enums.OutfitChangeReason._elements" static_entries="sims-outfits-outfit_enums.OutfitChangeReason" Deprecated="False" filter="0" group="General" />
                                </TunableVariant>
                            </TunableTuple>
                            <TunableTuple name="for_tags" class="Tunable_OutfitChangeForTags" display="For Tags" muid="DD4961D576892330" description="Define an outfit to apply for the duration of the OutfitChange's owner&#xA;generated from the specified tags." Deprecated="False" filter="0" group="General">
                                <TunableVariant type="None" name="on_entry" class="OptionalTunable" default="enabled" display="On Entry" muid="377F2F4CA40414A6" description="The tuning for how to handle the outfit change on entry of&#xA;the new context." Deprecated="False" filter="0" group="General">
                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="217B287004889770" />
                                    <TunableTuple name="enabled" class="TunableTuple" display="Enabled" muid="892F73CC412969FC" description="Contains the tags used to tune the outfit and also&#xA;a preference for whether or not to automatically switch out&#xA;of the tags outfit when on exit." Deprecated="False" filter="0" group="General">
                                        <Tunable type="bool" name="auto_undo_on_exit" class="Tunable" default="True" display="Auto Undo On Exit" muid="9DEA8A3A51B6FDE3" description="If True then the Sim will switch out of the entry tag&#xA;outfit on exit. &#xA;If False then the Sim will stay in the tag outfit.&#xA;&#xA;NOTE: This tuning conflicts with the On Exit tuning. If&#xA;this is set to true and On Exit is enabled then an &#xA;error should occur on load because you can't both switch&#xA;out of the tag outfit and switch into a different tag&#xA;outfit." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="bool" name="do_spin" class="Tunable" default="True" display="Do Spin" muid="395A8FD775FACE8D" description="If checked, the Sim will animate and perform a clothing&#xA;change spin. If unchecked, the Sim will change outfits&#xA;without animating." Deprecated="False" filter="0" group="General" />
                                        <TunableVariant type="None" name="generator" class="TunableOutfitSnippet" default="literal" display="Generator" muid="657C91BF39FB9A1" description="This may be tuned in place here using 'literal' or as a reference to a Outfit tuning snippet." Deprecated="False" filter="0" group="General">
                                            <TunableTuple name="literal" class="TunableOutfitGenerator" display="Literal" muid="632A41739192E95B" description="A helper that generates outfits for a Sim. The tunables control aspects of&#xA;randomization, such as tags, weights, overrides, etc..." Deprecated="False" filter="0" group="General">
                                                <TunableList name="body_type_chance_overrides" class="TunableMapping" display="Body Type Chance Overrides" muid="D01846156C2DB05D" mapping_key="key" mapping_value="value" description="Define body type chance overrides for the generate outfit. For&#xA;example, if BODYTYPE_HAT is mapped to 100%, then the outfit is&#xA;guaranteed to have a hat if any hat matches the specified tags.&#xA;&#xA;If used in an appearance modifier, these body types will contribute&#xA;to the flags that determine which body types can be generated,&#xA;regardless of their percent chance." Deprecated="False" filter="0" group="General">
                                                    <TunableTuple class="TunableTuple" muid="5C3898B223C1F2C6" Deprecated="False" filter="0" group="General">
                                                        <TunableEnum type="BodyType" name="key" class="TunableEnumEntry" default="NONE" display="Key" muid="83E6D7B795205E71" static_entries="sims-outfits-outfit_enums.BodyType" Deprecated="False" filter="0" group="General" />
                                                        <Tunable type="float" name="value" class="TunablePercent" default="100" display="Value" muid="542F8CF8584C5A81" min="0" max="100" description="The chance that a part is applied to the corresponding body&#xA;type." Deprecated="False" filter="0" group="General" />
                                                    </TunableTuple>
                                                </TunableList>
                                                <TunableList name="body_type_match_not_found_policy" class="TunableMapping" display="Body Type Match Not Found Policy" muid="54A9C6268D55A84F" mapping_key="key" mapping_value="value" description="The policy we should take for a body type that we fail to find a&#xA;match for. Primary example is to use MATCH_NOT_FOUND_KEEP_EXISTING&#xA;for generating a tshirt and making sure a sim wearing full body has&#xA;a lower body cas part.&#xA;&#xA;If used in an appearance modifier, these body types will contribute&#xA;to the flags that determine which body types can be generated." Deprecated="False" filter="0" group="General">
                                                    <TunableTuple class="TunableTuple" muid="334E72297A9203A3" Deprecated="False" filter="0" group="General">
                                                        <TunableEnum type="BodyType" name="key" class="TunableEnumEntry" default="NONE" display="Key" muid="4562CB956CED8FA1" static_entries="sims-outfits-outfit_enums.BodyType" Deprecated="False" filter="0" group="General" />
                                                        <TunableEnum type="MatchNotFoundPolicy" name="value" class="TunableEnumEntry" default="MATCH_NOT_FOUND_UNSPECIFIED" display="Value" muid="32A6FAFA71966C56" static_entries="sims-outfits-outfit_enums.MatchNotFoundPolicy" Deprecated="False" filter="0" group="General" />
                                                    </TunableTuple>
                                                </TunableList>
                                                <TunableList name="filter_flag" class="TunableEnumFlags" default="USE_EXISTING_IF_APPROPRIATE,USE_VALID_FOR_LIVE_RANDOM" display="Filter Flag" muid="A24C83B6DEF7B353" description="Define how to handle part randomization for the generated outfit." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                    <TunableEnum type="OutfitFilterFlag" class="TunableEnumEntry" default="NONE" muid="D1D6641ABF345B6F" static_entries="sims-outfits-outfit_enums.OutfitFilterFlag" Deprecated="False" filter="0" group="General" />
                                                </TunableList>
                                                <TunableList name="tags" class="TunableSet" display="Tags" muid="8A1C72E942C1C0D6" description="The set of tags used to generate the outfit. Parts must match the&#xA;specified tag in order to be valid for the generated outfit." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                    <TunableEnum type="Tag" class="TunableEnumWithFilter" default="INVALID" muid="89D2A04B855EB3A6" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" Deprecated="False" dynamic_entries_prefix="Uniform|OutfitCategory|Style|Situation" filter="0" group="General" invalid_entries="INVALID" pack_safe="True" />
                                                </TunableList>
                                            </TunableTuple>
                                            <Tunable type="snippet" name="reference" class="TunableReference" display="Reference" muid="1725F41B6978FE4A" description="A reference to a Outfit tuning snippet." allow_none="False" Deprecated="False" filter="0" group="General" restrict="Outfit" />
                                        </TunableVariant>
                                        <TunableVariant type="None" name="outfit_to_modify" class="TunableVariant" default="special" display="Outfit To Modify" muid="B16F2D4432D5FFFB" description="The outfit we want to generate over." Deprecated="False" filter="0" group="General">
                                            <TunableTuple name="current" class="TunableOutfitTypeCurrent" display="Current" muid="C2CE9C28D23885D8" description="Outfit Variant to use a Sim's current outfit." Deprecated="False" filter="0" group="General">
                                                <Tunable type="bool" name="restrict_to_regular" class="Tunable" default="True" display="Restrict To Regular" muid="4A43D441400A9B6" description="If checked, the Sim will switch out of any non-regular&#xA;outfits (and into Everyday) before applying the&#xA;modification.&#xA;&#xA;If this is unchecked, the Sim will modify whatever outfit&#xA;they are wearing, including, for example, career outfits.&#xA;The modification is permanent." Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <TunableTuple name="outfit_category" class="TunableOutfitTypeCategory" display="Outfit Category" muid="F8713632C993143E" description="OutfitVariant to use one of the Sim's outfit categories." Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="OutfitCategory" name="outfit_category" class="TunableEnumEntry" default="EVERYDAY" display="Outfit Category" muid="BCDA310FE8EFACCD" static_entries="sims-outfits-outfit_enums.OutfitCategory" description="Outfit Category" Deprecated="False" filter="0" group="General" invalid_entries="CURRENT_OUTFIT" />
                                            </TunableTuple>
                                            <TunableTuple name="special" class="TunableOutfitTypeSpecial" display="Special" muid="26329385F8389C6E" description="Outfit Variant to use special outfits." Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="SpecialOutfitIndex" name="special_outfit_index" class="TunableEnumEntry" default="DEFAULT" display="Special Outfit Index" muid="985D705091654463" static_entries="sims-outfits-outfit_enums.SpecialOutfitIndex" description="The Special outfit index to use when creating the outfit using&#xA;the provided flags. There are multiple Special outfits that &#xA;are indexed by the entries in the SpecialOutfitIndex enum.&#xA;&#xA;GPE NOTE:&#xA;If you want to add a new index you will need to add a value&#xA;to SpecialOutfitIndex as well as change the values in &#xA;outfit_tuning.py and OutfitTypes.h to allow for more special&#xA;outfits." Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                        </TunableVariant>
                                    </TunableTuple>
                                </TunableVariant>
                                <TunableVariant type="None" name="on_exit" class="OptionalTunable" default="disabled" display="On Exit" muid="D07EA45A1E542E3F" description="The clothing change that happens on exit of the current context." Deprecated="False" filter="0" group="General">
                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="76D16C2F92CC8162" />
                                    <TunableList name="enabled" class="TunableList" display="Enabled" muid="C484F6C11788AF7D" description="A list of (tests, clothing change) tuples. The first entry&#xA;that passes all of its tests will be used while the other&#xA;entries after that one will be ignored. So the order of the &#xA;list is essentially priority." Deprecated="False" filter="0" group="General">
                                        <TunableTuple class="TunableTuple" muid="E812FB8CA5979A3E" description="A tuple of clothing changes and tests for whether they&#xA;should happen or not." Deprecated="False" filter="0" group="General">
                                            <TunableVariant type="None" name="generator" class="TunableOutfitSnippet" default="literal" display="Generator" muid="A0CE70054CB7F40" description="This may be tuned in place here using 'literal' or as a reference to a Outfit tuning snippet." Deprecated="False" filter="0" group="General">
                                                <TunableTuple name="literal" class="TunableOutfitGenerator" display="Literal" muid="A9510FD767D5F0F8" description="A helper that generates outfits for a Sim. The tunables control aspects of&#xA;randomization, such as tags, weights, overrides, etc..." Deprecated="False" filter="0" group="General">
                                                    <TunableList name="body_type_chance_overrides" class="TunableMapping" display="Body Type Chance Overrides" muid="72DAF9076472FF56" mapping_key="key" mapping_value="value" description="Define body type chance overrides for the generate outfit. For&#xA;example, if BODYTYPE_HAT is mapped to 100%, then the outfit is&#xA;guaranteed to have a hat if any hat matches the specified tags.&#xA;&#xA;If used in an appearance modifier, these body types will contribute&#xA;to the flags that determine which body types can be generated,&#xA;regardless of their percent chance." Deprecated="False" filter="0" group="General">
                                                        <TunableTuple class="TunableTuple" muid="A36CC9C380AFC8AA" Deprecated="False" filter="0" group="General">
                                                            <TunableEnum type="BodyType" name="key" class="TunableEnumEntry" default="NONE" display="Key" muid="8DAC7BD2E412D264" static_entries="sims-outfits-outfit_enums.BodyType" Deprecated="False" filter="0" group="General" />
                                                            <Tunable type="float" name="value" class="TunablePercent" default="100" display="Value" muid="E7EA3DA1C430312E" min="0" max="100" description="The chance that a part is applied to the corresponding body&#xA;type." Deprecated="False" filter="0" group="General" />
                                                        </TunableTuple>
                                                    </TunableList>
                                                    <TunableList name="body_type_match_not_found_policy" class="TunableMapping" display="Body Type Match Not Found Policy" muid="1BCB8578567DC4D2" mapping_key="key" mapping_value="value" description="The policy we should take for a body type that we fail to find a&#xA;match for. Primary example is to use MATCH_NOT_FOUND_KEEP_EXISTING&#xA;for generating a tshirt and making sure a sim wearing full body has&#xA;a lower body cas part.&#xA;&#xA;If used in an appearance modifier, these body types will contribute&#xA;to the flags that determine which body types can be generated." Deprecated="False" filter="0" group="General">
                                                        <TunableTuple class="TunableTuple" muid="1810A7C9FEB0F977" Deprecated="False" filter="0" group="General">
                                                            <TunableEnum type="BodyType" name="key" class="TunableEnumEntry" default="NONE" display="Key" muid="AFA344137ABA74BC" static_entries="sims-outfits-outfit_enums.BodyType" Deprecated="False" filter="0" group="General" />
                                                            <TunableEnum type="MatchNotFoundPolicy" name="value" class="TunableEnumEntry" default="MATCH_NOT_FOUND_UNSPECIFIED" display="Value" muid="AC7FD0E2C842074E" static_entries="sims-outfits-outfit_enums.MatchNotFoundPolicy" Deprecated="False" filter="0" group="General" />
                                                        </TunableTuple>
                                                    </TunableList>
                                                    <TunableList name="filter_flag" class="TunableEnumFlags" default="USE_EXISTING_IF_APPROPRIATE,USE_VALID_FOR_LIVE_RANDOM" display="Filter Flag" muid="EEF5B0BBCE6F67D2" description="Define how to handle part randomization for the generated outfit." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                        <TunableEnum type="OutfitFilterFlag" class="TunableEnumEntry" default="NONE" muid="92B1370554C950EB" static_entries="sims-outfits-outfit_enums.OutfitFilterFlag" Deprecated="False" filter="0" group="General" />
                                                    </TunableList>
                                                    <TunableList name="tags" class="TunableSet" display="Tags" muid="C83B698D94F16FE7" description="The set of tags used to generate the outfit. Parts must match the&#xA;specified tag in order to be valid for the generated outfit." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                        <TunableEnum type="Tag" class="TunableEnumWithFilter" default="INVALID" muid="8C547322006941E3" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" Deprecated="False" dynamic_entries_prefix="Uniform|OutfitCategory|Style|Situation" filter="0" group="General" invalid_entries="INVALID" pack_safe="True" />
                                                    </TunableList>
                                                </TunableTuple>
                                                <Tunable type="snippet" name="reference" class="TunableReference" display="Reference" muid="5600F1F793045D1D" description="A reference to a Outfit tuning snippet." allow_none="False" Deprecated="False" filter="0" group="General" restrict="Outfit" />
                                            </TunableVariant>
                                            <TunableVariant type="None" name="outfit_to_modify" class="TunableVariant" default="special" display="Outfit To Modify" muid="4C82FAA1BEEAC4EF" description="The outfit we want to generate over." Deprecated="False" filter="0" group="General">
                                                <TunableTuple name="current" class="TunableOutfitTypeCurrent" display="Current" muid="DC36555E2744888C" description="Outfit Variant to use a Sim's current outfit." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="bool" name="restrict_to_regular" class="Tunable" default="True" display="Restrict To Regular" muid="5D5C408BE956C458" description="If checked, the Sim will switch out of any non-regular&#xA;outfits (and into Everyday) before applying the&#xA;modification.&#xA;&#xA;If this is unchecked, the Sim will modify whatever outfit&#xA;they are wearing, including, for example, career outfits.&#xA;The modification is permanent." Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableTuple name="outfit_category" class="TunableOutfitTypeCategory" display="Outfit Category" muid="50B24423C7CC21C2" description="OutfitVariant to use one of the Sim's outfit categories." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="OutfitCategory" name="outfit_category" class="TunableEnumEntry" default="EVERYDAY" display="Outfit Category" muid="A01D0461A448CBFC" static_entries="sims-outfits-outfit_enums.OutfitCategory" description="Outfit Category" Deprecated="False" filter="0" group="General" invalid_entries="CURRENT_OUTFIT" />
                                                </TunableTuple>
                                                <TunableTuple name="special" class="TunableOutfitTypeSpecial" display="Special" muid="7E761600CA8C6CDA" description="Outfit Variant to use special outfits." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="SpecialOutfitIndex" name="special_outfit_index" class="TunableEnumEntry" default="DEFAULT" display="Special Outfit Index" muid="FB21D835FB5779B0" static_entries="sims-outfits-outfit_enums.SpecialOutfitIndex" description="The Special outfit index to use when creating the outfit using&#xA;the provided flags. There are multiple Special outfits that &#xA;are indexed by the entries in the SpecialOutfitIndex enum.&#xA;&#xA;GPE NOTE:&#xA;If you want to add a new index you will need to add a value&#xA;to SpecialOutfitIndex as well as change the values in &#xA;outfit_tuning.py and OutfitTypes.h to allow for more special&#xA;outfits." Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                            </TunableVariant>
                                            <TdescFragTag name="tests" class="TunableGlobalTestSet" display="Tests" muid="245E701E0081AA41" description="Tests to run when deciding which clothing change&#xA;entry to use. All of the tests must pass in order &#xA;for the item to pass." filter="0" group="General" />
                                        </TunableTuple>
                                    </TunableList>
                                </TunableVariant>
                            </TunableTuple>
                            <TunableTuple name="from_participant" class="Tunable_OutfitChangeFromParticipant" display="From Participant" muid="997B76E86CBFDFB1" description="Define an outfit change that takes the current outfit from the specified&#xA;source and applies it to the Sim, in a specified way (such as a&#xA;temporary application or a permanent addition)." Deprecated="False" filter="0" group="General">
                                <TunableVariant type="None" name="outfit_change_behavior" class="TunableVariant" default="temporary" display="Outfit Change Behavior" muid="5D608914B74E6EF1" description="Define how this outfit is to be applied to the Sim." Deprecated="False" filter="0" group="General">
                                    <TunableTuple name="addition" class="Tunable_OutfitChangeAddition" display="Addition" muid="E1266DA1548A001B" description="The outfit on the source is copied and added to the Sim's outfits&#xA;(matching the category on the source). The Sim is then switched to&#xA;it." Deprecated="False" filter="0" group="General" />
                                    <TunableTuple name="temporary" class="Tunable_OutfitChangeTemporary" display="Temporary" muid="5E9D8DA55219872C" description="The Sim is switched into the outfit from the participant&#xA;temporarily. On exit, they are returned to the previous outfit." Deprecated="False" filter="0" group="General" />
                                </TunableVariant>
                                <TunableEnum type="ParticipantTypeSingle" name="outfit_participant" class="TunableEnumEntry" default="Object" display="Outfit Participant" muid="8B7DF8E2CB8C46BD" static_entries="interactions.ParticipantTypeSingle" description="The Sim or object whose current outfit is going to be&#xA;temporarily applied to the Sim being affected by this change." Deprecated="False" filter="0" group="General" />
                            </TunableTuple>
                            <TunableTuple name="from_picker" class="Tunable_OutfitChangeFromPickedItemId" display="From Picker" muid="13B771607163F710" description="Define an outfit change by retrieving the picker selection for the&#xA;interaction." Deprecated="False" filter="0" group="General">
                                <TunableVariant type="None" name="timing" class="TunableVariant" default="on_entry" display="Timing" muid="6BD9623EF7D37B98" description="Define when this outfit change happens." Deprecated="False" filter="0" group="General">
                                    <TunableTuple name="on_entry" class="Tunable_OnEntry" display="On Entry" muid="4B08915A15183B89" description="The outfit change happens on entry." Deprecated="False" filter="0" group="General" />
                                    <TunableTuple name="on_exit" class="Tunable_OnExit" display="On Exit" muid="DBCF68B753BC0E6A" description="The outfit change happens on exit." Deprecated="False" filter="0" group="General" />
                                </TunableVariant>
                            </TunableTuple>
                            <TunableTuple name="from_zone" class="Tunable_OutfitChangeFromZone" display="From Zone" muid="EE4FBAE74669B52F" description="The Sim is switched into the zone-specified outfit.&#xA;&#xA;This tracked as a temporary outfit which does not persist." Deprecated="False" filter="0" group="General">
                                <Tunable type="bool" name="auto_undo_on_exit" class="Tunable" default="True" display="Auto Undo On Exit" muid="82B6E6394455EDD0" description="If checked, the Sim will use the previous outfit as the&#xA;on_exit outfit for this outfit change.&#xA;&#xA;Has no effect for outfit changes that do not perform an on_exit&#xA;change, such as on_route outfit changes." Deprecated="False" filter="0" group="General" />
                            </TunableTuple>
                            <TunableTuple name="no_change" class="Tunable_OutfitChangeNone" display="No Change" muid="579CD6ACBAEDAF17" description="Define no outfit change." Deprecated="False" filter="0" group="General" />
                        </TunableVariant>
                    </TunableVariant>
                    <TunableList name="buff_asm_parameters" class="TunableMapping" display="Buff Asm Parameters" muid="30792B8F4FA7DA1A" mapping_key="key" mapping_value="value" description="A mapping of buffs to parameters to set on the actor in the ASM when &#xA;traversing this portal." Deprecated="False" filter="0" group="General">
                        <TunableTuple class="TunableTuple" muid="F59F1DF650800B7E" Deprecated="False" filter="0" group="General">
                            <Tunable type="buff" name="key" class="TunableReference" display="Key" muid="8B8F7BCC31881B34" description="If the Sim has this buff, the corresponding ASM parameters will&#xA;be set on the ASM for this portal." allow_none="False" Deprecated="False" filter="0" group="General" restrict="Buff" />
                            <TunableTuple name="value" class="TunableTuple" display="Value" muid="4DD560F9D8280C7D" description="The parameter name and value to set on the ASM." Deprecated="False" filter="0" group="General">
                                <Tunable type="str" name="parameter_name" class="Tunable" default="None" display="Parameter Name" muid="FBE23B0293ACAA49" description="The parameter name." Deprecated="False" filter="0" group="General" />
                                <Tunable type="str" name="parameter_value" class="Tunable" default="None" display="Parameter Value" muid="AF8028BEC956BE9" description="The value of the parameter if the Sim has the corresponding&#xA;buff." Deprecated="False" filter="0" group="General" />
                            </TunableTuple>
                        </TunableTuple>
                    </TunableList>
                    <TunableList name="portal_events" class="TunableList" display="Portal Events" muid="2FE8AAA5FA9E4327" description="A list of portal events to add when a Sim uses the portal." Deprecated="False" filter="0" group="General">
                        <TunableVariant type="None" class="TunablePortalEventVariant" default="change_opacity" muid="B260CA8FA3068398" description="The tuning for a specific portal event." Deprecated="False" filter="0" group="General">
                            <TunableTuple name="change_opacity" class="TunablePortalEventChangeOpacity" display="Change Opacity" muid="851402E7DE4B5AE" description="A portal event to change the opacity of the actor." Deprecated="False" filter="0" group="General">
                                <Tunable type="float" name="duration" class="TunableRealSecond" default="0.0" display="Duration" muid="7BF3F70D2999454A" min="None" max="None" description="How long the change in opacity should take in seconds." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                <Tunable type="float" name="opacity" class="TunableRange" default="0" display="Opacity" muid="301840164553865F" min="0" max="1" description="The target opacity to set the actor to. 0 is invisible and 1 is&#xA;fully visible." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                <Tunable type="float" name="time" class="Tunable" default="1.0" display="Time" muid="33D1D523824A4862" description="The time from when the portal happens.&#xA;&#xA;A positive number is after the portal happens and a negative &#xA;number is before a portal happens. So if you want a sim to fade&#xA;out before using a portal the value here should be -1." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                            </TunableTuple>
                            <TunableTuple name="enter" class="TunablePortalEventEnter" display="Enter" muid="D7005556AA94A7FE" description="Notify the client that, at this time, the portal is in the &quot;enter&quot; state.&#xA;&#xA;Depending the nature of the portal, this can be interpreted differently. For&#xA;example, a Door portal with an ASM specified would, at this point, animate&#xA;the door swinging open." Deprecated="False" filter="0" group="General">
                                <Tunable type="float" name="time" class="Tunable" default="1.0" display="Time" muid="A68DACAABC88905E" description="The time from when the portal happens.&#xA;&#xA;A positive number is after the portal happens and a negative &#xA;number is before a portal happens. So if you want a sim to fade&#xA;out before using a portal the value here should be -1." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                            </TunableTuple>
                            <TunableTuple name="exit" class="TunablePortalEventExit" display="Exit" muid="3B48C05D823107AF" description="Notify the client that, at this time, the portal is in the &quot;exit&quot; state.&#xA;&#xA;Depending the nature of the portal, this can be interpreted differently. For&#xA;example, a Door portal with an ASM specified would, at this point, animate&#xA;the door swinging shut." Deprecated="False" filter="0" group="General">
                                <Tunable type="float" name="time" class="Tunable" default="1.0" display="Time" muid="1F2D0A3227383361" description="The time from when the portal happens.&#xA;&#xA;A positive number is after the portal happens and a negative &#xA;number is before a portal happens. So if you want a sim to fade&#xA;out before using a portal the value here should be -1." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                            </TunableTuple>
                        </TunableVariant>
                    </TunableList>
                    <TunableVariant type="None" name="portal_locations" class="TunableVariant" default="from_posture" display="Portal Locations" muid="FBD358967A2FDE4B" description="Define the behavior that determines the entry and exit points." Deprecated="False" filter="0" group="General">
                        <TunableTuple name="from_posture" class="Tunable_PortalLocationsFromPosture" display="From Posture" muid="15ADC4F90D2C4FEA" description="The entry and exit points are defined by the posture's boundary conditions." Deprecated="False" filter="0" group="General">
                            <Tunable type="bool" name="bidirectional" class="Tunable" default="True" display="Bidirectional" muid="796AC818326BFD0" description="If checked, a &quot;there&quot; and &quot;back&quot; portal will be created. If&#xA;unchecked, only a &quot;there&quot; portal is created." Deprecated="False" filter="0" group="General" />
                        </TunableTuple>
                        <TunableTuple name="from_tuning" class="Tunable_PortalLocationsFromTuning" display="From Tuning" muid="77A499E1D6C60814" description="Determine the there and back portal locations based on the tuned offsets." Deprecated="False" filter="0" group="General">
                            <Tunable type="bool" name="bidirectional" class="Tunable" default="True" display="Bidirectional" muid="A615343CD51881B4" description="If checked, the portal will generate a there and back. If unchecked,&#xA;only a there portal will be created." Deprecated="False" filter="0" group="General" />
                            <TunableTuple name="location_entry" class="Tunable_PortalLocation" display="Location Entry" muid="1E09117A29EE5BA1" description="The there entry portal location." Deprecated="False" filter="0" group="General">
                                <TunableTuple name="translation" class="TunableVector2" display="Translation" muid="D5148FAA71174322" Deprecated="False" filter="0" group="General">
                                    <Tunable type="float" name="x" class="Tunable" default="0.0" display="X" muid="F5ACD06E13A0FA90" description="x component" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                    <Tunable type="float" name="y" class="Tunable" default="0.0" display="Y" muid="7676B89E1D9C039F" description="y component" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                </TunableTuple>
                            </TunableTuple>
                            <TunableTuple name="location_exit" class="Tunable_PortalLocation" display="Location Exit" muid="5750B270B47E08B" description="The there exit portal location." Deprecated="False" filter="0" group="General">
                                <TunableTuple name="translation" class="TunableVector2" display="Translation" muid="AD8D1D8D96BC777E" Deprecated="False" filter="0" group="General">
                                    <Tunable type="float" name="x" class="Tunable" default="0.0" display="X" muid="ADCFC2F5E616DA0C" description="x component" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                    <Tunable type="float" name="y" class="Tunable" default="0.0" display="Y" muid="F9C2D745E62E3C15" description="y component" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                </TunableTuple>
                            </TunableTuple>
                        </TunableTuple>
                    </TunableVariant>
                    <Tunable type="posture" name="posture_end" class="TunableReference" display="Posture End" muid="F8686DA96257A5FD" description="Define the exit posture as you cross through this portal. e.g. For&#xA;the pool, the end posture is swim." allow_none="False" Deprecated="False" filter="0" group="General" restrict="MobilePosture" />
                    <Tunable type="posture" name="posture_start" class="TunableReference" display="Posture Start" muid="AE1FF2DB1DD1AD67" description="Define the entry posture as you cross through this portal. e.g. For&#xA;the pool, the start posture is stand." allow_none="False" Deprecated="False" filter="0" group="General" restrict="MobilePosture" />
                    <Tunable type="bool" name="requires_los_between_entry_and_exit" class="Tunable" default="True" display="Requires Los Between Entry And Exit" muid="80A8289274182CE5" description="If checked, this portal will only be valid if there is LOS between&#xA;the entry and exit points. If unchecked, LOS is not required." Deprecated="False" filter="0" group="General" />
                    <TunableVariant type="None" name="routing_surface_end" class="TunableRoutingSurfaceVariant" default="same" display="Routing Surface End" muid="23C22F270BC24BBC" description="The routing surface of the portal's exit position. Sims are on this&#xA;surface when in the ending posture." Deprecated="False" filter="0" group="General">
                        <TunableTuple name="same" class="Tunable_PortalRoutingSurfaceDefault" display="Same" muid="956FC8E35E63E783" description="A routing surface that matches the object's surface at that level." Deprecated="False" filter="0" group="General" />
                        <TunableTuple name="specified" class="Tunable_PortalRoutingSurfaceSpecified" display="Specified" muid="44784DEE1F546BB4" description="A routing surface that matches the tuned surface at the object's level." Deprecated="False" filter="0" group="General">
                            <TunableVariant type="None" name="level_override" class="OptionalTunable" default="disabled" display="Level Override" muid="BDD0A59FF2B3F0D1" description="If enabled, allows this surface to have a level override." Deprecated="False" filter="0" group="General">
                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="25342FF4667F10EB" />
                                <Tunable type="int" name="enabled" class="TunableRange" default="0" display="Enabled" muid="FDC0F6C8992689D9" min="-3" max="5" description="The level to force this routing surface. This is useful for&#xA;picking out oceans since they are routing surface type POOL but&#xA;always on level 0." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                            </TunableVariant>
                            <TunableEnum type="SurfaceType" name="surface_type" class="TunableEnumEntry" default="SURFACETYPE_WORLD" display="Surface Type" muid="754DAB8FE8512DD8" static_entries="routing.SurfaceType" description="The surface type on which to create the portal." Deprecated="False" filter="0" group="General" invalid_entries="SURFACETYPE_UNKNOWN" />
                        </TunableTuple>
                    </TunableVariant>
                    <TunableVariant type="None" name="routing_surface_start" class="TunableRoutingSurfaceVariant" default="same" display="Routing Surface Start" muid="9F23283706DF05A3" description="The routing surface of the portal's entry position. Sims are on this&#xA;surface while in the starting posture." Deprecated="False" filter="0" group="General">
                        <TunableTuple name="same" class="Tunable_PortalRoutingSurfaceDefault" display="Same" muid="2ABA95050F63709" description="A routing surface that matches the object's surface at that level." Deprecated="False" filter="0" group="General" />
                        <TunableTuple name="specified" class="Tunable_PortalRoutingSurfaceSpecified" display="Specified" muid="3097314C647D4F0D" description="A routing surface that matches the tuned surface at the object's level." Deprecated="False" filter="0" group="General">
                            <TunableVariant type="None" name="level_override" class="OptionalTunable" default="disabled" display="Level Override" muid="E9001DB265D33747" description="If enabled, allows this surface to have a level override." Deprecated="False" filter="0" group="General">
                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="E90D60E1F4CF0BB" />
                                <Tunable type="int" name="enabled" class="TunableRange" default="0" display="Enabled" muid="4CFAF0DBCAA375C" min="-3" max="5" description="The level to force this routing surface. This is useful for&#xA;picking out oceans since they are routing surface type POOL but&#xA;always on level 0." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                            </TunableVariant>
                            <TunableEnum type="SurfaceType" name="surface_type" class="TunableEnumEntry" default="SURFACETYPE_WORLD" display="Surface Type" muid="B0CA8E7C08FD6FB7" static_entries="routing.SurfaceType" description="The surface type on which to create the portal." Deprecated="False" filter="0" group="General" invalid_entries="SURFACETYPE_UNKNOWN" />
                        </TunableTuple>
                    </TunableVariant>
                    <TunableVariant type="None" name="species_overrides" class="OptionalTunable" default="disabled" display="Species Overrides" muid="E4F3A2B4C7A0D748" description="If enabled, we will override the species we generate these portals&#xA;for. However, the species are still restricted to those that are&#xA;supported by the posture. If the species cannot enter the posture,&#xA;then they will not generate portals." Deprecated="False" filter="0" group="General">
                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="1D25B622C3BDFFEA" />
                        <TunableList name="enabled" class="TunableEnumSet" display="Enabled" muid="D7CEBC82E438A99" description="The Species we want this portal to support." Deprecated="False" filter="0" group="General" unique_entries="true">
                            <TunableEnum type="SpeciesExtended" class="TunableEnumEntry" default="HUMAN" muid="AC71FFC05344CCB0" static_entries="sims-sim_info_types.SpeciesExtended" Deprecated="False" filter="0" group="General" />
                        </TunableList>
                    </TunableVariant>
                </TunableTuple>
                <TunableTuple name="stairs" class="Tunable_PortalTypeDataStairs" display="Stairs" muid="99A1DEB7A1C2899" description="The Sim locomotes from the entry point to the exit point. The portals are&#xA;dynamically created based on the stairs data provided by Build/Buy." Deprecated="False" filter="0" group="General">
                    <TunableList name="portal_events" class="TunableList" display="Portal Events" muid="4C30679BEEEC7506" description="A list of portal events to add when a Sim uses the portal." Deprecated="False" filter="0" group="General">
                        <TunableVariant type="None" class="TunablePortalEventVariant" default="change_opacity" muid="45CA14652A3A05ED" description="The tuning for a specific portal event." Deprecated="False" filter="0" group="General">
                            <TunableTuple name="change_opacity" class="TunablePortalEventChangeOpacity" display="Change Opacity" muid="BB1331B4C5239EEC" description="A portal event to change the opacity of the actor." Deprecated="False" filter="0" group="General">
                                <Tunable type="float" name="duration" class="TunableRealSecond" default="0.0" display="Duration" muid="A950A9ED20E5571C" min="None" max="None" description="How long the change in opacity should take in seconds." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                <Tunable type="float" name="opacity" class="TunableRange" default="0" display="Opacity" muid="79655182B656CE39" min="0" max="1" description="The target opacity to set the actor to. 0 is invisible and 1 is&#xA;fully visible." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                <Tunable type="float" name="time" class="Tunable" default="1.0" display="Time" muid="54EC57BF8F644C46" description="The time from when the portal happens.&#xA;&#xA;A positive number is after the portal happens and a negative &#xA;number is before a portal happens. So if you want a sim to fade&#xA;out before using a portal the value here should be -1." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                            </TunableTuple>
                            <TunableTuple name="enter" class="TunablePortalEventEnter" display="Enter" muid="EDA47BE839F39593" description="Notify the client that, at this time, the portal is in the &quot;enter&quot; state.&#xA;&#xA;Depending the nature of the portal, this can be interpreted differently. For&#xA;example, a Door portal with an ASM specified would, at this point, animate&#xA;the door swinging open." Deprecated="False" filter="0" group="General">
                                <Tunable type="float" name="time" class="Tunable" default="1.0" display="Time" muid="60AE1E415DAB98CF" description="The time from when the portal happens.&#xA;&#xA;A positive number is after the portal happens and a negative &#xA;number is before a portal happens. So if you want a sim to fade&#xA;out before using a portal the value here should be -1." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                            </TunableTuple>
                            <TunableTuple name="exit" class="TunablePortalEventExit" display="Exit" muid="19C64025042CAABD" description="Notify the client that, at this time, the portal is in the &quot;exit&quot; state.&#xA;&#xA;Depending the nature of the portal, this can be interpreted differently. For&#xA;example, a Door portal with an ASM specified would, at this point, animate&#xA;the door swinging shut." Deprecated="False" filter="0" group="General">
                                <Tunable type="float" name="time" class="Tunable" default="1.0" display="Time" muid="B2725DE5E44C4401" description="The time from when the portal happens.&#xA;&#xA;A positive number is after the portal happens and a negative &#xA;number is before a portal happens. So if you want a sim to fade&#xA;out before using a portal the value here should be -1." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                            </TunableTuple>
                        </TunableVariant>
                    </TunableList>
                    <Tunable type="bool" name="supports_landing_shoo" class="Tunable" default="False" display="Supports Landing Shoo" muid="CCD3AC82FF015E13" description="If True, sims standing on a stair landing on the object on which&#xA;this portal exists will be shooed from the path of the stairs if&#xA;another sim attempts to use the stairs. This is to avoid clipping." Deprecated="False" filter="0" group="General" />
                </TunableTuple>
                <TunableTuple name="teleport" class="Tunable_PortalTypeDataTeleport" display="Teleport" muid="73EA38592E42B7BC" description="The Sim teleports from the entry point to the exit point both of which are&#xA;specified by objects and the tuned offsets." Deprecated="False" filter="0" group="General">
                    <TunableVariant type="None" name="_height_tolerance" class="TunableVariant" default="no_tolerance" display="Height Tolerance" muid="B4DA4FAF4F8FB3D9" description="Define the maximum height between the portal points and the object's&#xA;location. If either the portal entry point or the portal exit point&#xA;is at a location whose y position differs by more than this amount&#xA;from the object's, the portal is not created." Deprecated="False" filter="0" group="General">
                        <Tunable name="allow_step_foundation" class="TunableExistance" display="Allow Step Foundation" muid="24EDAD3AEC6731E3" />
                        <Tunable name="no_tolerance" class="TunableExistance" display="No Tolerance" muid="FA0BECA4368E854B" />
                        <Tunable name="unlimited" class="TunableExistance" display="Unlimited" muid="AF32E9378135993" />
                    </TunableVariant>
                    <Tunable type="bool" name="_require_los" class="Tunable" default="True" display="Require Los" muid="DD1ADA932F8ED048" description="If checked, portals are created only if the segment between them&#xA;does not intersect other objects or a wall. If unchecked, no such&#xA;restriction exists.&#xA;&#xA;This should be unchecked on portals that are meant to be traversed&#xA;through a wall, e.g. a door." Deprecated="False" filter="0" group="General" />
                    <TunableVariant type="None" name="bidirectional_portal_offset" class="OptionalTunable" default="disabled" display="Bidirectional Portal Offset" muid="9EA51A1BC018940" description="If enabled, portals defined on this object, will have an offset&#xA;applied to the entry portal of bidirectional portals. &#xA;The offset will be applied only to the object surface point of the&#xA;entry portal created by bidirectional portals.&#xA;For example: If you make a bidirectional portal from ground to a &#xA;counter, the point on the counter for the entry portal will have&#xA;an offset applied.&#xA;This way, portals can be generated for Sims like Cats, where the &#xA;entry point should have a small difference to the exit due &#xA;animation constraints." Deprecated="False" filter="0" group="General">
                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="37DCD9818A63541C" />
                        <Tunable type="float" name="enabled" class="Tunable" default="0.1" display="Enabled" muid="93BC0E2AC753B2D8" description="Offset in meters that will be applied to the entry portal." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                    </TunableVariant>
                    <TunableList name="destination_object_tags" class="TunableTags" display="Destination Object Tags" muid="AAE68C4392F324C7" Deprecated="False" filter="0" group="General" unique_entries="true">
                        <TunableEnum type="Tag" class="TunableEnumEntry" default="INVALID" muid="EA23EDB33EB4097D" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="A list of tags used to find objects that this object connects with&#xA;to form two sides of a portal. &#xA;When the portals are created all of the objects on the lot with at &#xA;least one of the tags found in this list are found and a portal is &#xA;created between the originating object and the described object." Deprecated="False" filter="0" group="General" invalid_entries="INVALID" pack_safe="True" />
                    </TunableList>
                    <TunableList name="object_portals" class="TunableList" display="Object Portals" muid="707CEB1B122EB2AB" description="List of entry and exit location points that will define the entry&#xA;and exit portal to and from this object." Deprecated="False" filter="0" group="General">
                        <TunableTuple class="TunableTuple" muid="C172E2E25FA0B511" description="Pair of exit and entry portal locations." Deprecated="False" filter="0" group="General">
                            <Tunable type="bool" name="is_bidirectional" class="Tunable" default="True" display="Is Bidirectional" muid="8BEAE35AB44D242B" description="If checked, then a portal with the same exact properties is&#xA;created from the exit location to the entry location.&#xA;&#xA;If unchecked, then only one portal is created: from the&#xA;entry location to the exit location." Deprecated="False" filter="0" group="General" />
                            <TunableVariant type="None" name="location_entry" class="PortalLocationVariant" default="location" display="Location Entry" muid="7CE1C81BA19AC0AA" description="The entry portal" Deprecated="False" filter="0" group="General">
                                <TunableTuple name="bone_name" class="Tunable_PortalBoneLocation" display="Bone Name" muid="B20AD7224FF3D2A5" description="The bone location." Deprecated="False" filter="0" group="General">
                                    <Tunable type="str" name="bone_name" class="TunableStringHash32" default="None" display="Bone Name" muid="1ED93768AFD5540A" description="The bone to use for this portal location." Deprecated="False" filter="0" group="General" />
                                    <TunableVariant type="None" name="orientation" class="OptionalTunable" default="disabled" display="Orientation" muid="E77798A45F1D6732" description="If enabled, this portal has a specific orientation. If disabled, any&#xA;orientation is valid." Deprecated="False" filter="0" group="General">
                                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="716E695A3989CB7" />
                                        <Tunable type="float" name="enabled" class="TunableAngle" default="0.0" display="Enabled" muid="BDF4579849D4446A" min="0.0" max="360.0" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                    </TunableVariant>
                                    <TunableVariant type="None" name="routing_surface" class="TunableVariant" default="terrain" display="Routing Surface" muid="481C74698D6D3388" description="Define what surface the point is created on.&#xA;&#xA;Terrain: The point is on the ground, on the same level the owning&#xA;object is on.&#xA;&#xA;Object: The point is on the routable surface defined by the object.&#xA;The point must be within the footprint's bounds.&#xA;&#xA;Global object: The point is anywhere on the object routable surface&#xA;for the level where the object is on. If there is no object that&#xA;location, the portal is invalid. Use this for objects that connect&#xA;other objects with routable surfaces.&#xA;&#xA;Ocean: The point is in the ocean. Regardless of what level the&#xA;object is on, we will always assume a surface type of POOL and a&#xA;level of 0 (which would match the Ocean)." Deprecated="False" filter="0" group="General">
                                        <Tunable name="global_object" class="TunableExistance" display="Global Object" muid="5A92D128A18C98BC" />
                                        <Tunable name="object" class="TunableExistance" display="Object" muid="832CDFADF88C781A" />
                                        <Tunable name="ocean" class="TunableExistance" display="Ocean" muid="F5BDEB82DE1C8298" />
                                        <Tunable name="terrain" class="TunableExistance" display="Terrain" muid="216638CD6A17E5A3" />
                                    </TunableVariant>
                                </TunableTuple>
                                <TunableTuple name="location" class="Tunable_PortalLocation" display="Location" muid="61F830F6D541818B" description="The offset." Deprecated="False" filter="0" group="General">
                                    <TunableVariant type="None" name="routing_surface" class="TunableVariant" default="terrain" display="Routing Surface" muid="473A26CD018C7132" description="Define what surface the point is created on.&#xA;&#xA;Terrain: The point is on the ground, on the same level the owning&#xA;object is on.&#xA;&#xA;Object: The point is on the routable surface defined by the object.&#xA;The point must be within the footprint's bounds.&#xA;&#xA;Global object: The point is anywhere on the object routable surface&#xA;for the level where the object is on. If there is no object that&#xA;location, the portal is invalid. Use this for objects that connect&#xA;other objects with routable surfaces.&#xA;&#xA;Ocean: The point is in the ocean. Regardless of what level the&#xA;object is on, we will always assume a surface type of POOL and a&#xA;level of 0 (which would match the Ocean)." Deprecated="False" filter="0" group="General">
                                        <Tunable name="global_object" class="TunableExistance" display="Global Object" muid="A8676D40A3A11344" />
                                        <Tunable name="object" class="TunableExistance" display="Object" muid="AF9682118054AE99" />
                                        <Tunable name="ocean" class="TunableExistance" display="Ocean" muid="A39B1CB22F3B599A" />
                                        <Tunable name="terrain" class="TunableExistance" display="Terrain" muid="4EBA24F39CA10C1B" />
                                    </TunableVariant>
                                    <TunableTuple name="translation" class="TunableVector2" display="Translation" muid="C0CE7B99C3359969" Deprecated="False" filter="0" group="General">
                                        <Tunable type="float" name="x" class="Tunable" default="0.0" display="X" muid="FBCF852C9F9EF65" description="x component" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        <Tunable type="float" name="y" class="Tunable" default="0.0" display="Y" muid="3F05A3AD9C96976B" description="y component" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                </TunableTuple>
                            </TunableVariant>
                            <TunableVariant type="None" name="location_exit" class="PortalLocationVariant" default="location" display="Location Exit" muid="76B976A5215D0D70" description="The exit portal" Deprecated="False" filter="0" group="General">
                                <TunableTuple name="bone_name" class="Tunable_PortalBoneLocation" display="Bone Name" muid="46F8B790F35BDA63" description="The bone location." Deprecated="False" filter="0" group="General">
                                    <Tunable type="str" name="bone_name" class="TunableStringHash32" default="None" display="Bone Name" muid="77D2997788275435" description="The bone to use for this portal location." Deprecated="False" filter="0" group="General" />
                                    <TunableVariant type="None" name="orientation" class="OptionalTunable" default="disabled" display="Orientation" muid="463682B250B41A5A" description="If enabled, this portal has a specific orientation. If disabled, any&#xA;orientation is valid." Deprecated="False" filter="0" group="General">
                                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="CA87E5F03A9578FD" />
                                        <Tunable type="float" name="enabled" class="TunableAngle" default="0.0" display="Enabled" muid="7F9BBDD906FCD448" min="0.0" max="360.0" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                    </TunableVariant>
                                    <TunableVariant type="None" name="routing_surface" class="TunableVariant" default="terrain" display="Routing Surface" muid="E460B4F5A332AC59" description="Define what surface the point is created on.&#xA;&#xA;Terrain: The point is on the ground, on the same level the owning&#xA;object is on.&#xA;&#xA;Object: The point is on the routable surface defined by the object.&#xA;The point must be within the footprint's bounds.&#xA;&#xA;Global object: The point is anywhere on the object routable surface&#xA;for the level where the object is on. If there is no object that&#xA;location, the portal is invalid. Use this for objects that connect&#xA;other objects with routable surfaces.&#xA;&#xA;Ocean: The point is in the ocean. Regardless of what level the&#xA;object is on, we will always assume a surface type of POOL and a&#xA;level of 0 (which would match the Ocean)." Deprecated="False" filter="0" group="General">
                                        <Tunable name="global_object" class="TunableExistance" display="Global Object" muid="306D9AE46C6A97E0" />
                                        <Tunable name="object" class="TunableExistance" display="Object" muid="2A7889D4FA8E0750" />
                                        <Tunable name="ocean" class="TunableExistance" display="Ocean" muid="73D02797903CAA9A" />
                                        <Tunable name="terrain" class="TunableExistance" display="Terrain" muid="D749E206DA443710" />
                                    </TunableVariant>
                                </TunableTuple>
                                <TunableTuple name="location" class="Tunable_PortalLocation" display="Location" muid="1B6CE1F012C5FE31" description="The offset." Deprecated="False" filter="0" group="General">
                                    <TunableVariant type="None" name="routing_surface" class="TunableVariant" default="terrain" display="Routing Surface" muid="DD5419B9ACE3BD93" description="Define what surface the point is created on.&#xA;&#xA;Terrain: The point is on the ground, on the same level the owning&#xA;object is on.&#xA;&#xA;Object: The point is on the routable surface defined by the object.&#xA;The point must be within the footprint's bounds.&#xA;&#xA;Global object: The point is anywhere on the object routable surface&#xA;for the level where the object is on. If there is no object that&#xA;location, the portal is invalid. Use this for objects that connect&#xA;other objects with routable surfaces.&#xA;&#xA;Ocean: The point is in the ocean. Regardless of what level the&#xA;object is on, we will always assume a surface type of POOL and a&#xA;level of 0 (which would match the Ocean)." Deprecated="False" filter="0" group="General">
                                        <Tunable name="global_object" class="TunableExistance" display="Global Object" muid="9448CDEAB0620390" />
                                        <Tunable name="object" class="TunableExistance" display="Object" muid="7F78933A7EADD057" />
                                        <Tunable name="ocean" class="TunableExistance" display="Ocean" muid="9BD627837DE481A4" />
                                        <Tunable name="terrain" class="TunableExistance" display="Terrain" muid="BB7D7C440FFD7DE6" />
                                    </TunableVariant>
                                    <TunableTuple name="translation" class="TunableVector2" display="Translation" muid="69BD23FB75E4F42B" Deprecated="False" filter="0" group="General">
                                        <Tunable type="float" name="x" class="Tunable" default="0.0" display="X" muid="743AF95D6624C5BB" description="x component" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        <Tunable type="float" name="y" class="Tunable" default="0.0" display="Y" muid="5714AD93C66F7BD3" description="y component" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                </TunableTuple>
                            </TunableVariant>
                        </TunableTuple>
                    </TunableList>
                    <TunableList name="portal_events" class="TunableList" display="Portal Events" muid="5C4AAE6199F39455" description="A list of portal events to add when a Sim uses the portal." Deprecated="False" filter="0" group="General">
                        <TunableVariant type="None" class="TunablePortalEventVariant" default="change_opacity" muid="93ACD78B5B6E2313" description="The tuning for a specific portal event." Deprecated="False" filter="0" group="General">
                            <TunableTuple name="change_opacity" class="TunablePortalEventChangeOpacity" display="Change Opacity" muid="56EF9FFA3CDCD1C1" description="A portal event to change the opacity of the actor." Deprecated="False" filter="0" group="General">
                                <Tunable type="float" name="duration" class="TunableRealSecond" default="0.0" display="Duration" muid="76D834988FBEDFB3" min="None" max="None" description="How long the change in opacity should take in seconds." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                <Tunable type="float" name="opacity" class="TunableRange" default="0" display="Opacity" muid="798FB38458506E97" min="0" max="1" description="The target opacity to set the actor to. 0 is invisible and 1 is&#xA;fully visible." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                <Tunable type="float" name="time" class="Tunable" default="1.0" display="Time" muid="7E48AA30C491E935" description="The time from when the portal happens.&#xA;&#xA;A positive number is after the portal happens and a negative &#xA;number is before a portal happens. So if you want a sim to fade&#xA;out before using a portal the value here should be -1." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                            </TunableTuple>
                            <TunableTuple name="enter" class="TunablePortalEventEnter" display="Enter" muid="8B1832EACCA358B6" description="Notify the client that, at this time, the portal is in the &quot;enter&quot; state.&#xA;&#xA;Depending the nature of the portal, this can be interpreted differently. For&#xA;example, a Door portal with an ASM specified would, at this point, animate&#xA;the door swinging open." Deprecated="False" filter="0" group="General">
                                <Tunable type="float" name="time" class="Tunable" default="1.0" display="Time" muid="33C014103BA2FD95" description="The time from when the portal happens.&#xA;&#xA;A positive number is after the portal happens and a negative &#xA;number is before a portal happens. So if you want a sim to fade&#xA;out before using a portal the value here should be -1." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                            </TunableTuple>
                            <TunableTuple name="exit" class="TunablePortalEventExit" display="Exit" muid="2442AF7357A19F27" description="Notify the client that, at this time, the portal is in the &quot;exit&quot; state.&#xA;&#xA;Depending the nature of the portal, this can be interpreted differently. For&#xA;example, a Door portal with an ASM specified would, at this point, animate&#xA;the door swinging shut." Deprecated="False" filter="0" group="General">
                                <Tunable type="float" name="time" class="Tunable" default="1.0" display="Time" muid="79FE539548C21B93" description="The time from when the portal happens.&#xA;&#xA;A positive number is after the portal happens and a negative &#xA;number is before a portal happens. So if you want a sim to fade&#xA;out before using a portal the value here should be -1." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                            </TunableTuple>
                        </TunableVariant>
                    </TunableList>
                </TunableTuple>
                <TunableTuple name="variable_jump" class="Tunable_PortalTypeDataVariableJump" display="Variable Jump" muid="E4A04C43BAD18A3" description="The entry and exit points for this portal are manually defined. However, the&#xA;Sim animates through the portal. The animation is provided with information&#xA;regarding the portal points' distance." Deprecated="False" filter="0" group="General">
                    <TunableVariant type="None" name="_height_tolerance" class="TunableVariant" default="no_tolerance" display="Height Tolerance" muid="20A731961AF887C9" description="Define the maximum height between the portal points and the object's&#xA;location. If either the portal entry point or the portal exit point&#xA;is at a location whose y position differs by more than this amount&#xA;from the object's, the portal is not created." Deprecated="False" filter="0" group="General">
                        <Tunable name="allow_step_foundation" class="TunableExistance" display="Allow Step Foundation" muid="26EEB0AAA5175212" />
                        <Tunable name="no_tolerance" class="TunableExistance" display="No Tolerance" muid="4C185A3F0A18EF2C" />
                        <Tunable name="unlimited" class="TunableExistance" display="Unlimited" muid="4DE4CE1964E0032A" />
                    </TunableVariant>
                    <Tunable type="bool" name="_require_los" class="Tunable" default="True" display="Require Los" muid="2DD4BEC024E4D874" description="If checked, portals are created only if the segment between them&#xA;does not intersect other objects or a wall. If unchecked, no such&#xA;restriction exists.&#xA;&#xA;This should be unchecked on portals that are meant to be traversed&#xA;through a wall, e.g. a door." Deprecated="False" filter="0" group="General" />
                    <Tunable type="animation" name="animation_element" class="TunableReference" display="Animation Element" muid="1C7B09B62B0F05ED" description="The animation to play when a Sim traverses this portal." allow_none="False" Deprecated="False" filter="0" group="General" />
                    <TunableVariant type="None" name="bidirectional_portal_offset" class="OptionalTunable" default="disabled" display="Bidirectional Portal Offset" muid="507984EE745144B1" description="If enabled, portals defined on this object, will have an offset&#xA;applied to the entry portal of bidirectional portals. &#xA;The offset will be applied only to the object surface point of the&#xA;entry portal created by bidirectional portals.&#xA;For example: If you make a bidirectional portal from ground to a &#xA;counter, the point on the counter for the entry portal will have&#xA;an offset applied.&#xA;This way, portals can be generated for Sims like Cats, where the &#xA;entry point should have a small difference to the exit due &#xA;animation constraints." Deprecated="False" filter="0" group="General">
                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="D796876977DE32D9" />
                        <Tunable type="float" name="enabled" class="Tunable" default="0.1" display="Enabled" muid="C8CF06ED26E10F26" description="Offset in meters that will be applied to the entry portal." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                    </TunableVariant>
                    <TunableList name="object_portals" class="TunableList" display="Object Portals" muid="9316533A52C025F2" description="List of entry and exit location points that will define the entry&#xA;and exit portal to and from this object." Deprecated="False" filter="0" group="General">
                        <TunableTuple class="TunableTuple" muid="13FEAAAED8EEB370" description="Pair of exit and entry portal locations." Deprecated="False" filter="0" group="General">
                            <Tunable type="bool" name="is_bidirectional" class="Tunable" default="True" display="Is Bidirectional" muid="19522496EF935EC4" description="If checked, then a portal with the same exact properties is&#xA;created from the exit location to the entry location.&#xA;&#xA;If unchecked, then only one portal is created: from the&#xA;entry location to the exit location." Deprecated="False" filter="0" group="General" />
                            <TunableVariant type="None" name="location_entry" class="PortalLocationVariant" default="location" display="Location Entry" muid="6BC279C1F7B0C8C9" description="The entry portal" Deprecated="False" filter="0" group="General">
                                <TunableTuple name="bone_name" class="Tunable_PortalBoneLocation" display="Bone Name" muid="9654E4F1F87A7B22" description="The bone location." Deprecated="False" filter="0" group="General">
                                    <Tunable type="str" name="bone_name" class="TunableStringHash32" default="None" display="Bone Name" muid="5251E80A48E5648F" description="The bone to use for this portal location." Deprecated="False" filter="0" group="General" />
                                    <TunableVariant type="None" name="orientation" class="OptionalTunable" default="disabled" display="Orientation" muid="83F2A048CA0C4D6C" description="If enabled, this portal has a specific orientation. If disabled, any&#xA;orientation is valid." Deprecated="False" filter="0" group="General">
                                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="6036BB23E975BCF5" />
                                        <Tunable type="float" name="enabled" class="TunableAngle" default="0.0" display="Enabled" muid="18175BE8F6CD9104" min="0.0" max="360.0" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                    </TunableVariant>
                                    <TunableVariant type="None" name="routing_surface" class="TunableVariant" default="terrain" display="Routing Surface" muid="63081EF9245C7B25" description="Define what surface the point is created on.&#xA;&#xA;Terrain: The point is on the ground, on the same level the owning&#xA;object is on.&#xA;&#xA;Object: The point is on the routable surface defined by the object.&#xA;The point must be within the footprint's bounds.&#xA;&#xA;Global object: The point is anywhere on the object routable surface&#xA;for the level where the object is on. If there is no object that&#xA;location, the portal is invalid. Use this for objects that connect&#xA;other objects with routable surfaces.&#xA;&#xA;Ocean: The point is in the ocean. Regardless of what level the&#xA;object is on, we will always assume a surface type of POOL and a&#xA;level of 0 (which would match the Ocean)." Deprecated="False" filter="0" group="General">
                                        <Tunable name="global_object" class="TunableExistance" display="Global Object" muid="3F64D76EF5C48A96" />
                                        <Tunable name="object" class="TunableExistance" display="Object" muid="CB45D42E4CED13F4" />
                                        <Tunable name="ocean" class="TunableExistance" display="Ocean" muid="A541E1EA9C85F7F" />
                                        <Tunable name="terrain" class="TunableExistance" display="Terrain" muid="C0003BD04C34CC2D" />
                                    </TunableVariant>
                                </TunableTuple>
                                <TunableTuple name="location" class="Tunable_PortalLocation" display="Location" muid="3652CED52375B648" description="The offset." Deprecated="False" filter="0" group="General">
                                    <TunableVariant type="None" name="routing_surface" class="TunableVariant" default="terrain" display="Routing Surface" muid="CF1699F842A588E" description="Define what surface the point is created on.&#xA;&#xA;Terrain: The point is on the ground, on the same level the owning&#xA;object is on.&#xA;&#xA;Object: The point is on the routable surface defined by the object.&#xA;The point must be within the footprint's bounds.&#xA;&#xA;Global object: The point is anywhere on the object routable surface&#xA;for the level where the object is on. If there is no object that&#xA;location, the portal is invalid. Use this for objects that connect&#xA;other objects with routable surfaces.&#xA;&#xA;Ocean: The point is in the ocean. Regardless of what level the&#xA;object is on, we will always assume a surface type of POOL and a&#xA;level of 0 (which would match the Ocean)." Deprecated="False" filter="0" group="General">
                                        <Tunable name="global_object" class="TunableExistance" display="Global Object" muid="E99868306107AA74" />
                                        <Tunable name="object" class="TunableExistance" display="Object" muid="42AC23AED4DFCF77" />
                                        <Tunable name="ocean" class="TunableExistance" display="Ocean" muid="236EA30037B7D027" />
                                        <Tunable name="terrain" class="TunableExistance" display="Terrain" muid="1232DAA06D0A9AF2" />
                                    </TunableVariant>
                                    <TunableTuple name="translation" class="TunableVector2" display="Translation" muid="D50662C8AE06CA1E" Deprecated="False" filter="0" group="General">
                                        <Tunable type="float" name="x" class="Tunable" default="0.0" display="X" muid="4D5F867059E5B63E" description="x component" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        <Tunable type="float" name="y" class="Tunable" default="0.0" display="Y" muid="254C85429AB58667" description="y component" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                </TunableTuple>
                            </TunableVariant>
                            <TunableVariant type="None" name="location_exit" class="PortalLocationVariant" default="location" display="Location Exit" muid="BE8665D08D18132F" description="The exit portal" Deprecated="False" filter="0" group="General">
                                <TunableTuple name="bone_name" class="Tunable_PortalBoneLocation" display="Bone Name" muid="186117CF132CAED1" description="The bone location." Deprecated="False" filter="0" group="General">
                                    <Tunable type="str" name="bone_name" class="TunableStringHash32" default="None" display="Bone Name" muid="599AAC7711DD032A" description="The bone to use for this portal location." Deprecated="False" filter="0" group="General" />
                                    <TunableVariant type="None" name="orientation" class="OptionalTunable" default="disabled" display="Orientation" muid="BCF9183B9D68E5B" description="If enabled, this portal has a specific orientation. If disabled, any&#xA;orientation is valid." Deprecated="False" filter="0" group="General">
                                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="AAD73C1C26E7CFE4" />
                                        <Tunable type="float" name="enabled" class="TunableAngle" default="0.0" display="Enabled" muid="5A4D75B509432C08" min="0.0" max="360.0" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                    </TunableVariant>
                                    <TunableVariant type="None" name="routing_surface" class="TunableVariant" default="terrain" display="Routing Surface" muid="B20833449ABEAA4" description="Define what surface the point is created on.&#xA;&#xA;Terrain: The point is on the ground, on the same level the owning&#xA;object is on.&#xA;&#xA;Object: The point is on the routable surface defined by the object.&#xA;The point must be within the footprint's bounds.&#xA;&#xA;Global object: The point is anywhere on the object routable surface&#xA;for the level where the object is on. If there is no object that&#xA;location, the portal is invalid. Use this for objects that connect&#xA;other objects with routable surfaces.&#xA;&#xA;Ocean: The point is in the ocean. Regardless of what level the&#xA;object is on, we will always assume a surface type of POOL and a&#xA;level of 0 (which would match the Ocean)." Deprecated="False" filter="0" group="General">
                                        <Tunable name="global_object" class="TunableExistance" display="Global Object" muid="229959EC5CDA150E" />
                                        <Tunable name="object" class="TunableExistance" display="Object" muid="29B833459AD5AF52" />
                                        <Tunable name="ocean" class="TunableExistance" display="Ocean" muid="949B908A32015559" />
                                        <Tunable name="terrain" class="TunableExistance" display="Terrain" muid="EABB9DCAE1E1E918" />
                                    </TunableVariant>
                                </TunableTuple>
                                <TunableTuple name="location" class="Tunable_PortalLocation" display="Location" muid="758381C883BA61B4" description="The offset." Deprecated="False" filter="0" group="General">
                                    <TunableVariant type="None" name="routing_surface" class="TunableVariant" default="terrain" display="Routing Surface" muid="188FD7C541FC1580" description="Define what surface the point is created on.&#xA;&#xA;Terrain: The point is on the ground, on the same level the owning&#xA;object is on.&#xA;&#xA;Object: The point is on the routable surface defined by the object.&#xA;The point must be within the footprint's bounds.&#xA;&#xA;Global object: The point is anywhere on the object routable surface&#xA;for the level where the object is on. If there is no object that&#xA;location, the portal is invalid. Use this for objects that connect&#xA;other objects with routable surfaces.&#xA;&#xA;Ocean: The point is in the ocean. Regardless of what level the&#xA;object is on, we will always assume a surface type of POOL and a&#xA;level of 0 (which would match the Ocean)." Deprecated="False" filter="0" group="General">
                                        <Tunable name="global_object" class="TunableExistance" display="Global Object" muid="27DCBCD9F2F9A21F" />
                                        <Tunable name="object" class="TunableExistance" display="Object" muid="EE5DE09BF136820E" />
                                        <Tunable name="ocean" class="TunableExistance" display="Ocean" muid="F1032D9F4862AD7C" />
                                        <Tunable name="terrain" class="TunableExistance" display="Terrain" muid="9A6E3A000CC8DC96" />
                                    </TunableVariant>
                                    <TunableTuple name="translation" class="TunableVector2" display="Translation" muid="574A34431649526D" Deprecated="False" filter="0" group="General">
                                        <Tunable type="float" name="x" class="Tunable" default="0.0" display="X" muid="D0A6FDD91809E94C" description="x component" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        <Tunable type="float" name="y" class="Tunable" default="0.0" display="Y" muid="1089E368869A412F" description="y component" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                </TunableTuple>
                            </TunableVariant>
                        </TunableTuple>
                    </TunableList>
                    <TunableList name="portal_events" class="TunableList" display="Portal Events" muid="4F29B55FD85DE51" description="A list of portal events to add when a Sim uses the portal." Deprecated="False" filter="0" group="General">
                        <TunableVariant type="None" class="TunablePortalEventVariant" default="change_opacity" muid="DB440E61DF0D4C12" description="The tuning for a specific portal event." Deprecated="False" filter="0" group="General">
                            <TunableTuple name="change_opacity" class="TunablePortalEventChangeOpacity" display="Change Opacity" muid="C9296F681E43EDC6" description="A portal event to change the opacity of the actor." Deprecated="False" filter="0" group="General">
                                <Tunable type="float" name="duration" class="TunableRealSecond" default="0.0" display="Duration" muid="4E3A68C9A0EBAF5C" min="None" max="None" description="How long the change in opacity should take in seconds." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                <Tunable type="float" name="opacity" class="TunableRange" default="0" display="Opacity" muid="EEC9696F2ECCF47E" min="0" max="1" description="The target opacity to set the actor to. 0 is invisible and 1 is&#xA;fully visible." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                <Tunable type="float" name="time" class="Tunable" default="1.0" display="Time" muid="D25CB5D2B7AC9E0F" description="The time from when the portal happens.&#xA;&#xA;A positive number is after the portal happens and a negative &#xA;number is before a portal happens. So if you want a sim to fade&#xA;out before using a portal the value here should be -1." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                            </TunableTuple>
                            <TunableTuple name="enter" class="TunablePortalEventEnter" display="Enter" muid="2974D10D056E1F94" description="Notify the client that, at this time, the portal is in the &quot;enter&quot; state.&#xA;&#xA;Depending the nature of the portal, this can be interpreted differently. For&#xA;example, a Door portal with an ASM specified would, at this point, animate&#xA;the door swinging open." Deprecated="False" filter="0" group="General">
                                <Tunable type="float" name="time" class="Tunable" default="1.0" display="Time" muid="9008F8025572F616" description="The time from when the portal happens.&#xA;&#xA;A positive number is after the portal happens and a negative &#xA;number is before a portal happens. So if you want a sim to fade&#xA;out before using a portal the value here should be -1." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                            </TunableTuple>
                            <TunableTuple name="exit" class="TunablePortalEventExit" display="Exit" muid="A7AC7AC5DC2F02F7" description="Notify the client that, at this time, the portal is in the &quot;exit&quot; state.&#xA;&#xA;Depending the nature of the portal, this can be interpreted differently. For&#xA;example, a Door portal with an ASM specified would, at this point, animate&#xA;the door swinging shut." Deprecated="False" filter="0" group="General">
                                <Tunable type="float" name="time" class="Tunable" default="1.0" display="Time" muid="F426B8C673CAD754" description="The time from when the portal happens.&#xA;&#xA;A positive number is after the portal happens and a negative &#xA;number is before a portal happens. So if you want a sim to fade&#xA;out before using a portal the value here should be -1." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                            </TunableTuple>
                        </TunableVariant>
                    </TunableList>
                </TunableTuple>
            </TunableVariant>
            <TunableVariant type="None" name="usage_penalty" class="OptionalTunable" default="No_Usage_Penalty" display="Usage Penalty" muid="2665D6DCDA86AFE9" description="If specified, the cost of this portal increases any time a Sim uses&#xA;it. This encourages other Sims to use different portals." Deprecated="False" filter="0" group="General">
                <Tunable name="No_Usage_Penalty" class="TunableExistance" display="No Usage Penalty" muid="D039D75EFFDB166D" />
                <Tunable type="float" name="Usage_Penalty" class="TunableRange" default="1" display="Usage Penalty" muid="78FD0984B2793D4D" min="0" max="9999" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
            </TunableVariant>
            <TunableVariant type="None" name="use_vehicle_after_traversal" class="OptionalTunable" default="disabled" display="Use Vehicle After Traversal" muid="19AF8962D6192D29" description="When enabled allows this object to act as a sort of docking location&#xA;for vehicles (like the water scooter)." Deprecated="False" filter="0" group="General">
                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="1C1F89336427BAFE" />
                <TunableTuple name="enabled" class="TunableTuple" display="Enabled" muid="F8704D15CC2593BD" description="The data to specify which vehicles this portal supports and&#xA;at what distance." Deprecated="False" filter="0" group="General">
                    <Tunable type="float" name="max_distance" class="TunableDistanceSquared" default="15.0" display="Max Distance" muid="3C1B37B83C4B96D9" description="The max distance a vehicle can be away from the portal&#xA;and still be considered" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                    <TunableList name="vehicle_tags" class="TunableTags" display="Vehicle Tags" muid="B2F035CCA67C4772" Deprecated="False" filter="0" group="General" unique_entries="true">
                        <TunableEnum type="Tag" class="TunableEnumEntry" default="INVALID" muid="225631DEB7942F07" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="A list of tags used to identify vehicle objects." Deprecated="False" filter="0" group="General" invalid_entries="INVALID" pack_safe="True" />
                    </TunableList>
                </TunableTuple>
            </TunableVariant>
        </TunableTuple>
    </Instance>

    <VersionHistory>
        <ActionList>
            <Action type="kRename" old_muid="DB56C10F388C7360" new_muid="F8704D15CC2593BD" />
        </ActionList>

        <ActionList>
            <Action type="kRemove" old_muid="58517205C4377077" />
            <Action type="kRemove" old_muid="9F991D638EB202D5" />
        </ActionList>

        <ActionList>
            <Action type="kRename" old_muid="1BFB9F35E16204FB" new_muid="9D98C006C543DBFC" />
        </ActionList>

        <ActionList>
            <Action type="kRemove" old_muid="CAF279C527EE8973" />
        </ActionList>

        <ActionList>
            <Action type="kRemove" old_muid="3D069FB0F5BCA2E0" />
            <Action type="kRemove" old_muid="CCD1D44B2D9584E1" />
        </ActionList>

        <ActionList>
            <Action type="kRename" old_muid="B86C4727EEC0BE12" new_muid="7FD1D88AA5ACCC22" />
        </ActionList>

        <ActionList>
            <Action type="kRemove" old_muid="9ACF92114309243B" />
            <Action type="kRemove" old_muid="E6EDED6A7C0FBDEC" />
            <Action type="kRemove" old_muid="B82B1521A224FE5F" />
            <Action type="kRemove" old_muid="93AA07225B849E1C" />
            <Action type="kRemove" old_muid="61D085CF7B385998" />
            <Action type="kRemove" old_muid="C2725AF94233C47E" />
            <Action type="kRemove" old_muid="3FA6E22B1C53BC1E" />
            <Action type="kRemove" old_muid="BA93AC03F576C2E7" />
            <Action type="kRemove" old_muid="E0DDCBA52B4A9074" />
            <Action type="kRemove" old_muid="56EA9BC15BF9F9FD" />
            <Action type="kRemove" old_muid="7A59560A4BA1FC8E" />
            <Action type="kRemove" old_muid="F9BA16E9AA7FF9FF" />
            <Action type="kRemove" old_muid="CF6EBBD91FBD0E00" />
            <Action type="kRemove" old_muid="EDD6BE7E7F158A46" />
        </ActionList>

        <ActionList>
            <Action type="kRemove" old_muid="81F96FB26B3481F" />
            <Action type="kRemove" old_muid="C261AA4B235D092F" />
            <Action type="kRemove" old_muid="86CC35F72DE276FE" />
            <Action type="kRemove" old_muid="99038BBBE47FC137" />
            <Action type="kRemove" old_muid="5DDE6A32388ED436" />
        </ActionList>

        <ActionList>
            <Action type="kRemove" old_muid="B6E2D47D82017A37" />
        </ActionList>

        <ActionList>
            <Action type="kRemove" old_muid="76F9DF4DE8E9EA1D" />
        </ActionList>

        <ActionList />

        <ActionList>
            <Action type="kRename" old_muid="116DC44B257C59C2" new_muid="47393E974A920722" />
            <Action type="kRename" old_muid="26C9B50550B1BD24" new_muid="300F8B5AEB66D7AE" />
            <Action type="kRename" old_muid="C919974D824FCE61" new_muid="C41A578F9A4AC120" />
            <Action type="kRename" old_muid="3B9138642A750477" new_muid="6B0908612B90ADF2" />
            <Action type="kRename" old_muid="5F93873CE3DA0E05" new_muid="26697A6738E1503D" />
            <Action type="kRename" old_muid="2820A5EDCD3482E8" new_muid="294D44648ADACF4B" />
        </ActionList>

        <ActionList />

        <ActionList>
            <Action type="kRename" old_muid="9FBA5EC4DFB173D9" new_muid="2E561FB5F1485373" />
            <Action type="kRename" old_muid="1F871B5F97691859" new_muid="CDBE2201130001D5" />
            <Action type="kRemove" old_muid="D8520B6FF0FE32A5" />
            <Action type="kRename" old_muid="4A31025C965EAFDA" new_muid="9FD7E5E3142730CD" />
            <Action type="kRename" old_muid="A430CDEB4E941778" new_muid="B44A62D6FE9DB12" />
            <Action type="kRemove" old_muid="4701BC9DD4F8BB67" />
            <Action type="kRename" old_muid="A28AA668A38A6725" new_muid="C0CE7B99C3359969" />
            <Action type="kRename" old_muid="443FEE0682929B6" new_muid="473A26CD018C7132" />
            <Action type="kRemove" old_muid="A2234096F7FD0F3F" />
            <Action type="kRename" old_muid="938FF719EF353139" new_muid="69BD23FB75E4F42B" />
            <Action type="kRename" old_muid="1D4E6F7FBF43AE1A" new_muid="DD5419B9ACE3BD93" />
            <Action type="kRemove" old_muid="F86030201F60ED11" />
            <Action type="kRename" old_muid="72F1749812C1D8B5" new_muid="D50662C8AE06CA1E" />
            <Action type="kRename" old_muid="2BFEE78A00007F9F" new_muid="CF1699F842A588E" />
            <Action type="kRemove" old_muid="65A790467B93677B" />
            <Action type="kRename" old_muid="D9B7A4EE0FA5B27C" new_muid="574A34431649526D" />
            <Action type="kRename" old_muid="696131E0C5FBCA1F" new_muid="188FD7C541FC1580" />
            <Action type="kRemove" old_muid="A1F5FF901C9A7EA4" />
        </ActionList>
    </VersionHistory>
</TuningRoot>