<?xml version="1.0" encoding="iso-8859-1"?>

<TuningRoot>
    <Instance instance_type="interaction" class="GoToNearestFloorFeatureInteraction" module="interactions.floor_feature_interactions" muid="916A737CC32AD5FD" description="A Super Interaction that adds constraints around terrain points with the&#xA;tuned floor feature type on the lot." instance_needs_reference="True" instance_subclasses_only="False" parents="SuperInteraction, Interaction" path="Interactions\Descriptions" use_guid_for_reference="True">
        <Tunable type="bool" name="indoors_only" class="Tunable" default="False" display="Indoors Only" muid="62533C834548302E" description="Indoors Only" Deprecated="False" filter="0" group="General" />

        <TunableVariant type="None" name="radius_filter" class="OptionalTunable" default="disabled" display="Radius Filter" muid="F84667C464052979" description="If enabled, floor features will be filtered out unless they are &#xA;within a radius of the radius_actor.&#xA;&#xA;The purpose of the radius filter is to constrain the set of&#xA;found floor features only to those within a radius of a tuned&#xA;participant. For example, this interaction could allow Sims only&#xA;to route to leaves within the radius of a targeted leaf pile." Deprecated="False" filter="0" group="General">
            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="3662BE1BC63D1EB0" />
            <TunableTuple name="enabled" class="TunableTuple" display="Enabled" muid="FA5C5AB8DEC82CD0" Deprecated="False" filter="0" group="General">
                <Tunable type="float" name="radius" class="TunableDistanceSquared" default="5.0" display="Radius" muid="E6AD7178879FF0A0" description="The radius, with the Saved Actor 1's position, that defines the area&#xA;within which the floor feature is valid." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                <TunableEnum type="ParticipantType" name="radius_actor" class="TunableEnumEntry" default="Actor" display="Radius Actor" muid="9AE59CAD0811652" static_entries="interactions.ParticipantType" description="The Actor within whose radius the tuned floor feature must be in&#xA;for consideration." Deprecated="False" filter="0" group="General" />
            </TunableTuple>
        </TunableVariant>

        <TunableTuple name="routing_circle_constraint" class="TunableCircle" display="Routing Circle Constraint" muid="1F1C89BA9742EC6A" description="Circle constraint around the floor feature" Deprecated="False" filter="0" group="General">
            <Tunable type="bool" name="enables_height_scoring" class="Tunable" default="False" display="Enables Height Scoring" muid="B0696304BEA4CD3C" description="If enabled, this constraint will &#xA;score goals using the height of&#xA;the surface.  The higher the goal&#xA;the cheaper it is." Deprecated="False" filter="0" group="General" />
            <Tunable type="float" name="ideal_radius" class="Tunable" default="None" display="Ideal Radius" muid="1A9FC451BFE256C7" description="Ideal distance for this circle constraint, points &#xA;closer to the ideal distance will score higher." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
            <Tunable type="float" name="ideal_radius_width" class="Tunable" default="0" display="Ideal Radius Width" muid="56B64B60C5982B59" description="This creates a band around the ideal_radius that also&#xA;costs 0 instead of rising in cost. ex: If you&#xA;have a circle of radius 5, with an ideal_radius of 2.5, and a&#xA;ideal_radius_width of 0.5, all goals in the radius 2 to radius 3 range&#xA;will score optimially." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
            <Tunable type="bool" name="multi_surface" class="Tunable" default="False" display="Multi Surface" muid="89CCA0013EB7EABC" description="If enabled, this constraint will be considered for multiple surfaces.&#xA;&#xA;Example: You want a circle&#xA;constraint that can be both inside&#xA;and outside of a pool." Deprecated="False" filter="0" group="General" />
            <Tunable type="float" name="radial_cost_weight" class="TunableRange" default="2.25" display="Radial Cost Weight" muid="F73B4377A97D15F7" min="0" max="None" description="The importance of the radial cost function.&#xA; = 0: Not used&#xA; &gt; 1: Important on surfaces&#xA; &gt; 2: Important on grass" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
            <Tunable type="float" name="radius" class="Tunable" default="1.5" display="Radius" muid="D70589973FD2B1F9" description="Circle radius" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
            <Tunable type="bool" name="require_los" class="Tunable" default="True" display="Require Los" muid="7F5549885F8290B6" description="If checked, the Sim will require line of sight to the actor.  Positions where a Sim&#xA;can't see the actor (e.g. there's a wall in the way) won't be valid.&#xA;&#xA;NOTE: This will NOT work on a&#xA;constraint that is not used to&#xA;generate routing goals such as&#xA;broadcasters and reactions, use a&#xA;Line Of Sight Constraint instead.&#xA;This will work on constraints used&#xA;to keep Sims in an interaction." Deprecated="False" filter="0" group="General" />
        </TunableTuple>

        <TunableTuple name="routing_facing_constraint" class="TunableFacing" display="Routing Facing Constraint" muid="BFD56B083AC1FF04" description="Controls how a Sim must face the terrain feature" Deprecated="False" filter="0" group="General">
            <Tunable type="float" name="inner_radius" class="Tunable" default="0.0" display="Inner Radius" muid="696740029CEA5795" description="A radius around the center of the constraint that defines an area in which the Sim's facing is unrestricted." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
            <Tunable type="float" name="range" class="TunableAngle" default="90.0" display="Range" muid="6634230D19AB5AD7" min="0.0" max="360.0" description="The size of the angle-range that sims should use when determining facing constraints." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
            <TunableVariant type="None" name="subroot_index" class="OptionalTunable" default="disabled" display="Subroot Index" muid="D4A5BC7E94438D97" description="An optional subroot to use for facing." Deprecated="False" filter="0" group="General">
                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="10842760CD36118C" />
                <Tunable type="int" name="enabled" class="Tunable" default="0" display="Enabled" muid="8F4CB955A3A5BAE3" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
            </TunableVariant>
        </TunableTuple>

        <TunableEnum type="FloorFeatureType" name="terrain_feature" class="TunableEnumEntry" default="BURNT" display="Terrain Feature" muid="7543862F44A12CB2" static_entries="build_buy.FloorFeatureType" description="The type of floor feature the sim should route to" Deprecated="False" filter="0" group="General" />
    </Instance>
</TuningRoot>