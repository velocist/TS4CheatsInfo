<?xml version="1.0" encoding="iso-8859-1"?>

<TuningRoot>
    <Instance instance_type="interaction" class="PutDownInSlotInteraction" module="carry.put_down_interactions" muid="62C4494D6B44C81B" description="This interaction will result in the Sim placing whatever object they are&#xA;carrying in one of the specified slot types." instance_needs_reference="True" instance_subclasses_only="False" parents="PutAwayBase, SuperInteraction, Interaction" path="Interactions\Descriptions" use_guid_for_reference="True">
        <TunableVariant type="None" name="basic_content" class="TunableBasicContentSet" default="no_content" display="Basic Content" muid="5CC5B3213C3D3F21" Deprecated="False" filter="0" group="General">
            <TunableTuple name="no_content" class="TunableNoContent" display="No Content" muid="4686ADC5FB34AA35" description="Do not animate or stage in this interaction." Deprecated="False" filter="0" group="General">
                <TunableVariant type="None" name="allow_holster" class="OptionalTunable" default="use_default" display="Allow Holster" muid="799CCA7576398F3B" description="If enabled, specify an override as to whether or not this&#xA;interaction allows holstering. If left unspecified, then only&#xA;staging interactions will allow holstering.&#xA;&#xA;For example: a one-shot interaction where the Grim Reaper dooms a&#xA;Sim disallows carry. Normally, the Grim Reaper would be unable to&#xA;holster his scythe. We override holstering to be allowed such that&#xA;the scythe can indeed be holstered." Deprecated="False" filter="0" group="General">
                    <Tunable type="bool" name="override" class="Tunable" default="True" display="Override" muid="D64721594B94D39E" description="Whether or not holstering is explicitly allowed or not." Deprecated="False" filter="0" group="General" />
                    <Tunable name="use_default" class="TunableExistance" display="Use Default" muid="1BE163E782D67168" />
                </TunableVariant>
                <TunableVariant type="None" name="allow_with_unholsterable_object" class="OptionalTunable" default="use_default" display="Allow With Unholsterable Object" muid="41F984E0B7EE8B1" description="If enabled, specify an override to the default behavior for this&#xA;interaction when carrying an object that is tuned to be&#xA;unholsterable (e.g. a toddler or a puppy).&#xA;&#xA;By default:&#xA; * Mixer interactions have this set to True. So, unless overridden,&#xA; a mixer is allowed to execute normally when carrying an&#xA; unholsterable object. The Sim will continue the carry and execute&#xA; the mixer. If unchecked, the Sim will put the object down before&#xA; running the mixer.&#xA; &#xA; * Super interactions have this set to False. So, unless overridden,&#xA; a super interaction is not allowed to execute (or will cancel the&#xA; carry) when carrying an unholsterable object.&#xA; &#xA;e.g.&#xA; * Warm Hands at Fireplace. This is a super interaction. When&#xA; carrying a toddler, for example, we want to the Sim to execute the&#xA; interaction and mask the animation. So we override this value and&#xA; set it to True.&#xA;  &#xA; * Tell Joke about Fashion. This is a mixer interaction whose&#xA; animation does not read if unable to use the hands. We override&#xA; this so Sims put down toddlers before running it." Deprecated="False" filter="0" group="General">
                    <Tunable type="bool" name="override" class="Tunable" default="True" display="Override" muid="D1BFE936CBF345F6" description="Whether or not this interaction is allowed to execute when&#xA;carrying an incompatible, unholsterable object." Deprecated="False" filter="0" group="General" />
                    <Tunable name="use_default" class="TunableExistance" display="Use Default" muid="C202A9B77B878B2" />
                </TunableVariant>
                <TunableVariant type="None" name="route_to_location" class="OptionalTunable" default="disabled" display="Route To Location" muid="760411285E84F4FB" description="If enabled, this will force the Sim to route to a particular set of&#xA;constraints. This will occur between the animation's begin and end&#xA;states." Deprecated="False" filter="0" group="General">
                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="92C127D75BE14F64" />
                    <TunableTuple name="enabled" class="TunableRouteToLocationElement" display="Enabled" muid="251C8CEC672CCB38" description="An element that will route a Sim to a particular location when it runs." Deprecated="False" filter="0" group="General">
                        <TunableList name="route_constraints" class="TunableMapping" display="Route Constraints" muid="A9570D699CCC800D" min="1" mapping_key="relative_participant" mapping_value="constraints" description="A list of constraints and the participant they are relative to&#xA;that the Sim will route to fulfill when this element runs. " Deprecated="False" filter="0" group="General">
                            <TunableTuple class="TunableTuple" muid="162C5D0206A155F8" Deprecated="False" filter="0" group="General">
                                <TunableList name="constraints" class="TunableList" display="Constraints" muid="A238269E65826761" min="1" description="Constraints relative to the relative participant." Deprecated="False" filter="0" group="General">
                                    <TunableVariant type="None" class="TunableGeometricConstraintVariant" default="circle" muid="E55719CB9E901343" description="A constraint that must be fulfilled in order to interact&#xA;with this object." Deprecated="False" filter="0" group="General">
                                        <TunableTuple name="circle" class="TunableCircle" display="Circle" muid="252A640E35872DFC" description="The relative circle geometry required for a sim/posture to use the object." Deprecated="False" filter="0" group="General">
                                            <Tunable type="bool" name="enables_height_scoring" class="Tunable" default="False" display="Enables Height Scoring" muid="11A52AEEA946803B" description="If enabled, this constraint will &#xA;score goals using the height of&#xA;the surface.  The higher the goal&#xA;the cheaper it is." Deprecated="False" filter="0" group="General" />
                                            <Tunable type="float" name="ideal_radius" class="Tunable" default="None" display="Ideal Radius" muid="FE5A9F09316A1820" description="Ideal distance for this circle constraint, points &#xA;closer to the ideal distance will score higher." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            <Tunable type="float" name="ideal_radius_width" class="Tunable" default="0" display="Ideal Radius Width" muid="2B0785378872CABD" description="This creates a band around the ideal_radius that also&#xA;costs 0 instead of rising in cost. ex: If you&#xA;have a circle of radius 5, with an ideal_radius of 2.5, and a&#xA;ideal_radius_width of 0.5, all goals in the radius 2 to radius 3 range&#xA;will score optimially." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            <Tunable type="bool" name="multi_surface" class="Tunable" default="False" display="Multi Surface" muid="65472E35C2883E43" description="If enabled, this constraint will be considered for multiple surfaces.&#xA;&#xA;Example: You want a circle&#xA;constraint that can be both inside&#xA;and outside of a pool." Deprecated="False" filter="0" group="General" />
                                            <Tunable type="float" name="radial_cost_weight" class="TunableRange" default="2.25" display="Radial Cost Weight" muid="BA2511336DDFD8CC" min="0" max="None" description="The importance of the radial cost function.&#xA; = 0: Not used&#xA; &gt; 1: Important on surfaces&#xA; &gt; 2: Important on grass" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            <Tunable type="float" name="radius" class="Tunable" default="1" display="Radius" muid="59E073DBE905E433" description="Circle radius" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            <Tunable type="bool" name="require_los" class="Tunable" default="True" display="Require Los" muid="23A5EAB24B2FA3AD" description="If checked, the Sim will require line of sight to the actor.  Positions where a Sim&#xA;can't see the actor (e.g. there's a wall in the way) won't be valid.&#xA;&#xA;NOTE: This will NOT work on a&#xA;constraint that is not used to&#xA;generate routing goals such as&#xA;broadcasters and reactions, use a&#xA;Line Of Sight Constraint instead.&#xA;This will work on constraints used&#xA;to keep Sims in an interaction." Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                        <TunableTuple name="cone" class="TunableCone" display="Cone" muid="3F1ADF0446E3B07A" description="The relative cone geometry required for a sim/posture to use the object." Deprecated="False" filter="0" group="General">
                                            <Tunable type="float" name="angle" class="TunableAngle" default="180.0" display="Angle" muid="44E80B3AF6922351" min="0.0" max="360.0" description="The cone angle in degrees." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            <Tunable type="float" name="angular_cost_weight" class="TunableRange" default="2.25" display="Angular Cost Weight" muid="FB800F9FAAE7C14C" min="0" max="None" description="The importance of the angular cost &#xA;function.&#xA; = 0: Not used&#xA; &gt; 1: Important on surfaces&#xA; &gt; 2: Important on grass" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            <Tunable type="bool" name="enables_height_scoring" class="Tunable" default="False" display="Enables Height Scoring" muid="60FFFC66D84F1937" description="If enabled, this constraint will &#xA;score goals using the height of&#xA;the surface.  The higher the goal&#xA;the cheaper it is." Deprecated="False" filter="0" group="General" />
                                            <Tunable type="float" name="ideal_angle" class="TunableRange" default="0.25" display="Ideal Angle" muid="747D76EB160997A4" min="0" max="1" description="The angular extents of an ideal &#xA;region as a fraction of angle." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            <Tunable type="float" name="ideal_radius_max" class="TunableRange" default="0.75" display="Ideal Radius Max" muid="7D2A7719C2616C4D" min="0" max="1" description="The radial upper bound of an ideal &#xA;region as a fraction of the &#xA;difference between max_radius and &#xA;min_radius." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            <Tunable type="float" name="ideal_radius_min" class="TunableRange" default="0.25" display="Ideal Radius Min" muid="F3BE82C0172C8A59" min="0" max="1" description="The radial lower bound of an ideal &#xA;region as a fraction of the &#xA;difference between max_radius and &#xA;min_radius." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            <Tunable type="float" name="max_radius" class="Tunable" default="1" display="Max Radius" muid="CACB814213F2F836" description="The maximum cone radius." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            <Tunable type="float" name="min_radius" class="Tunable" default="0" display="Min Radius" muid="59EC47BDE00FA622" description="The minimum cone radius." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            <Tunable type="bool" name="multi_surface" class="Tunable" default="False" display="Multi Surface" muid="4B4B70375DAB5FF7" description="If enabled, this constraint will be&#xA;considered for multiple surfaces.&#xA;&#xA;Example: You want a circle&#xA;constraint that can be both inside&#xA;and outside of a pool." Deprecated="False" filter="0" group="General" />
                                            <Tunable type="float" name="offset" class="TunableAngle" default="0.0" display="Offset" muid="F52628B2CA7D5A83" min="0.0" max="360.0" description="An offset (rotation) in degrees.&#xA;&#xA;By default the cone will face the &#xA;forward vector of the object.  Use&#xA;an offset to rotate the cone to &#xA;face a different direction. " tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            <Tunable type="float" name="radial_cost_weight" class="TunableRange" default="2.25" display="Radial Cost Weight" muid="55A584687684F949" min="0" max="None" description="The importance of the radial cost &#xA;function.&#xA; = 0: Not used&#xA; &gt; 1: Important on surfaces&#xA; &gt; 2: Important on grass" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            <Tunable type="bool" name="require_los" class="Tunable" default="True" display="Require Los" muid="D72E428A9A2C19B0" description="If checked, the Sim will require line of sight to the actor.  Positions where a Sim&#xA;can't see the actor (e.g. there's a wall in the way) won't be valid.&#xA;&#xA;NOTE: This will NOT work on a&#xA;constraint that is not used to&#xA;generate routing goals such as&#xA;broadcasters and reactions, use a&#xA;Line Of Sight Constraint instead.&#xA;This will work on constraints used&#xA;to keep Sims in an interaction." Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                        <TunableTuple name="current_position" class="TunableCurrentPosition" display="Current Position" muid="4D978B3983352240" description="A constraint that is a small circle around the actor Sim's current position.&#xA;For interactions, regardless of what the tuned constraint actor is, the&#xA;Actor participant is always used as the target for the generated circle." Deprecated="False" filter="0" group="General">
                                            <Tunable type="bool" name="ignore_on_object_routing_surface" class="Tunable" default="True" display="Ignore On Object Routing Surface" muid="341CE4AD2D18FE02" description="If checked, we will ignore this constraint on the object routing&#xA;surface. This should be used when we are only tuning this constraint&#xA;for performance reasons in order to be compatible with stair &#xA;landings or other object routing surface areas that are not in the&#xA;sim quadtree- which don't support geometric constraints." Deprecated="False" filter="0" group="General" />
                                            <Tunable type="float" name="radius" class="TunableRange" default="1" display="Radius" muid="174A982E14308D52" min="0" max="None" description="The maximum radius around the center point." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                        <TunableTuple name="facing" class="TunableFacing" display="Facing" muid="D455B6AA41FDE041" description="Existential tunable that requires the sim to face the object." Deprecated="False" filter="0" group="General">
                                            <Tunable type="float" name="inner_radius" class="Tunable" default="0.0" display="Inner Radius" muid="424D053B1FB35C0F" description="A radius around the center of the constraint that defines an area in which the Sim's facing is unrestricted." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            <Tunable type="float" name="range" class="TunableAngle" default="90.0" display="Range" muid="1B453729D48F15A9" min="0.0" max="360.0" description="The size of the angle-range that sims should use when determining facing constraints." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            <TunableVariant type="None" name="subroot_index" class="OptionalTunable" default="disabled" display="Subroot Index" muid="7183C28BE22660C7" description="An optional subroot to use for facing." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="C4A5779000A66865" />
                                                <Tunable type="int" name="enabled" class="Tunable" default="0" display="Enabled" muid="6493ED27BA1E98E2" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            </TunableVariant>
                                        </TunableTuple>
                                        <TunableTuple name="line_of_sight" class="TunableLineOfSight" display="Line Of Sight" muid="EA3D3579B73E59D7" description="Existential tunable that creates a line of sight constraint." Deprecated="False" filter="0" group="General">
                                            <Tunable type="bool" name="multi_surface" class="Tunable" default="False" display="Multi Surface" muid="8FE21182E1A30528" description="If enabled, this constraint will be considered for multiple surfaces.&#xA;&#xA;Example: You want a circle&#xA;constraint that can be both inside&#xA;and outside of a pool." Deprecated="False" filter="0" group="General" />
                                            <TunableVariant type="None" name="temporary_los" class="OptionalTunable" default="disabled" display="Temporary Los" muid="CA377C69BDD0726E" description="If enabled, a Line of Sight component will be temporarily created&#xA;when constraints are needed. This should be used if the affordance&#xA;requires LOS on an object that doesn't have an LOS component (i.e. a&#xA;Sim needs to see another Sim WooHoo to play the jealousy reactions&#xA;but Sims don't have LoS components.)" Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="DC3C0084D6634FC8" />
                                                <TunableTuple name="enabled" class="TunableLineOfSightData" display="Enabled" muid="58CABDD69C5EE1C1" Deprecated="False" filter="0" group="General">
                                                    <Tunable type="float" name="boundary_epsilon" class="Tunable" default="0.01" display="Boundary Epsilon" muid="CE7966785D2FBEBB" description="The LOS origin is allowed to be outside of the boundary by this&#xA;amount." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="float" name="facing_offset" class="Tunable" default="0.1" display="Facing Offset" muid="501BD28B69B995A0" description="The LOS origin is offset from the object origin by this amount&#xA;(mainly to avoid intersecting walls)." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="int" name="map_divisions" class="Tunable" default="30" display="Map Divisions" muid="9CDE023DA1558072" description="The number of points around the object to check collision from.&#xA;More points means higher accuracy." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="float" name="max_line_of_sight_radius" class="Tunable" default="10" display="Max Line Of Sight Radius" muid="447C517BA9817DEA" description="The maximum possible distance from this object than an&#xA;interaction can reach." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="float" name="simplification_ratio" class="Tunable" default="0.35" display="Simplification Ratio" muid="3C6FFD2FD1438891" description="A factor determining how much to combine edges in the line of&#xA;sight polygon." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                            </TunableVariant>
                                        </TunableTuple>
                                        <TunableTuple name="ocean_loc" class="TunableOceanStartLocationConstraint" display="Ocean Loc" muid="245775A41B9ABF7F" description="The circle geometry relative to the nearest ocean locator." Deprecated="False" filter="0" group="General">
                                            <Tunable type="bool" name="enables_height_scoring" class="Tunable" default="False" display="Enables Height Scoring" muid="65D3844A2ACB52E4" description="If enabled, this constraint will &#xA;score goals using the height of&#xA;the surface.  The higher the goal&#xA;the cheaper it is." Deprecated="False" filter="0" group="General" />
                                            <Tunable type="float" name="ideal_radius" class="Tunable" default="None" display="Ideal Radius" muid="42CF4F83A3F36BE7" description="Ideal distance for this circle constraint, points &#xA;closer to the ideal distance will score higher." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            <Tunable type="float" name="ideal_radius_width" class="Tunable" default="0" display="Ideal Radius Width" muid="6E629CF02CA35C50" description="This creates a band around the ideal_radius that also&#xA;costs 0 instead of rising in cost. ex: If you&#xA;have a circle of radius 5, with an ideal_radius of 2.5, and a&#xA;ideal_radius_width of 0.5, all goals in the radius 2 to radius 3 range&#xA;will score optimially." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            <TunableEnum type="WaterDepthIntervals" name="interval" class="TunableEnumEntry" default="WET" display="Interval" muid="9100C61DC125E2C8" static_entries="interactions-constraints.WaterDepthIntervals" description="Select the depth for the Sim based on the water&#xA;height offset at a target location and the Sim's wading interval data." Deprecated="False" filter="0" group="General" />
                                            <Tunable type="bool" name="multi_surface" class="Tunable" default="False" display="Multi Surface" muid="5DCEF524CAF38FC6" description="If enabled, this constraint will be considered for multiple surfaces.&#xA;&#xA;Example: You want a circle&#xA;constraint that can be both inside&#xA;and outside of a pool." Deprecated="False" filter="0" group="General" />
                                            <Tunable type="float" name="radial_cost_weight" class="TunableRange" default="2.25" display="Radial Cost Weight" muid="2462E15EC36022FA" min="0" max="None" description="The importance of the radial cost function.&#xA; = 0: Not used&#xA; &gt; 1: Important on surfaces&#xA; &gt; 2: Important on grass" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            <Tunable type="float" name="radius" class="Tunable" default="1" display="Radius" muid="AB49F4CE4357D9E" description="Circle radius" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            <Tunable type="bool" name="require_los" class="Tunable" default="True" display="Require Los" muid="48ECA502E276F645" description="If checked, the Sim will require line of sight to the actor.  Positions where a Sim&#xA;can't see the actor (e.g. there's a wall in the way) won't be valid.&#xA;&#xA;NOTE: This will NOT work on a&#xA;constraint that is not used to&#xA;generate routing goals such as&#xA;broadcasters and reactions, use a&#xA;Line Of Sight Constraint instead.&#xA;This will work on constraints used&#xA;to keep Sims in an interaction." Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                        <TunableTuple name="portal" class="TunablePortalConstraint" display="Portal" muid="F7B7FAF1B27D75F6" description="A constraint that is relative to the location of a portal.    " Deprecated="False" filter="0" group="General">
                                            <TunableList name="portals" class="TunableList" display="Portals" muid="AF69B60581B104C8" description="List of portal data to be used in this constraint." Deprecated="False" filter="0" group="General">
                                                <TunableTuple class="TunableTuple" muid="C38C59936FFF433A" Deprecated="False" filter="0" group="General">
                                                    <TunableVariant type="None" name="portal_direction" class="TunableVariant" default="there" display="Portal Direction" muid="8956CF5F9FBE38D5" description="Choose between the There and Back of the portal. This will not work&#xA;properly if the portal is missing a Back and Back is specified here." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="back" class="TunableExistance" display="Back" muid="16F8CC63E7AB5024" />
                                                        <Tunable name="there" class="TunableExistance" display="There" muid="27DBF9CC437CFFFE" />
                                                    </TunableVariant>
                                                    <TunableVariant type="None" name="portal_location" class="TunableVariant" default="entry" display="Portal Location" muid="5F3AB9E2CBCBA1B9" description="Choose between the entry and exit of a portal direction." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="entry" class="TunableExistance" display="Entry" muid="ABE204997AF10BE3" />
                                                        <Tunable name="exit" class="TunableExistance" display="Exit" muid="5875BFE1D48B566E" />
                                                    </TunableVariant>
                                                    <Tunable type="snippet" name="portal_type" class="TunableReference" display="Portal Type" muid="F4B33655794B91AD" description="A reference to the type of portal to use for the constraint." allow_none="False" Deprecated="False" filter="0" group="General" restrict="PortalData" />
                                                    <Tunable type="bool" name="require_position_los" class="Tunable" default="True" display="Require Position Los" muid="5A8AB8F1002C0B45" description="If checked, the Sim will require line of sight to the portal location for a Position constraint.&#xA;Positions where a Sim can't see the portal (e.g. there's a wall in the way) won't be valid.&#xA;This value won't be used for any tuned sub constraints." Deprecated="False" filter="0" group="General" />
                                                    <TunableVariant type="None" name="sub_constraint" class="OptionalTunable" default="disabled" display="Sub Constraint" muid="5FBE90106DED02F8" description="If enabled, specify a specific type of constraint to create at the&#xA;location of the portal.&#xA;&#xA;If disabled then the constraint will just be a location constraint&#xA;at the location of the portal." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="B206CA5E76FE164D" />
                                                        <TunableVariant type="None" name="enabled" class="TunableVariant" default="circle" display="Enabled" muid="A206C2F5D11CEB27" description="The types of constraints that can be created at the location&#xA;of the portal." Deprecated="False" filter="0" group="General">
                                                            <TunableTuple name="circle" class="TunableCircle" display="Circle" muid="DB609817B19DE8EB" description="A circle constraint that is created at the location of the&#xA;portal." Deprecated="False" filter="0" group="General">
                                                                <Tunable type="bool" name="enables_height_scoring" class="Tunable" default="False" display="Enables Height Scoring" muid="AEDB4F0AC0E89914" description="If enabled, this constraint will &#xA;score goals using the height of&#xA;the surface.  The higher the goal&#xA;the cheaper it is." Deprecated="False" filter="0" group="General" />
                                                                <Tunable type="float" name="ideal_radius" class="Tunable" default="None" display="Ideal Radius" muid="3607F89679026280" description="Ideal distance for this circle constraint, points &#xA;closer to the ideal distance will score higher." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                <Tunable type="float" name="ideal_radius_width" class="Tunable" default="0" display="Ideal Radius Width" muid="9FCA5553A2B44B8F" description="This creates a band around the ideal_radius that also&#xA;costs 0 instead of rising in cost. ex: If you&#xA;have a circle of radius 5, with an ideal_radius of 2.5, and a&#xA;ideal_radius_width of 0.5, all goals in the radius 2 to radius 3 range&#xA;will score optimially." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                <Tunable type="bool" name="multi_surface" class="Tunable" default="False" display="Multi Surface" muid="75417136F08ADC8A" description="If enabled, this constraint will be considered for multiple surfaces.&#xA;&#xA;Example: You want a circle&#xA;constraint that can be both inside&#xA;and outside of a pool." Deprecated="False" filter="0" group="General" />
                                                                <Tunable type="float" name="radial_cost_weight" class="TunableRange" default="2.25" display="Radial Cost Weight" muid="764BC21DCAB410A3" min="0" max="None" description="The importance of the radial cost function.&#xA; = 0: Not used&#xA; &gt; 1: Important on surfaces&#xA; &gt; 2: Important on grass" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                <Tunable type="float" name="radius" class="Tunable" default="3" display="Radius" muid="EFFFB3B482B09E7C" description="Circle radius" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                <Tunable type="bool" name="require_los" class="Tunable" default="True" display="Require Los" muid="30BAA2FD4698CD64" description="If checked, the Sim will require line of sight to the actor.  Positions where a Sim&#xA;can't see the actor (e.g. there's a wall in the way) won't be valid.&#xA;&#xA;NOTE: This will NOT work on a&#xA;constraint that is not used to&#xA;generate routing goals such as&#xA;broadcasters and reactions, use a&#xA;Line Of Sight Constraint instead.&#xA;This will work on constraints used&#xA;to keep Sims in an interaction." Deprecated="False" filter="0" group="General" />
                                                            </TunableTuple>
                                                            <TunableTuple name="cone" class="TunableCone" display="Cone" muid="C89D1A08AE52F13" description="A cone constraint that is created at the location of the &#xA;portal." Deprecated="False" filter="0" group="General">
                                                                <Tunable type="float" name="angle" class="TunableAngle" default="180.0" display="Angle" muid="DEC1E91BBBD3F148" min="0.0" max="360.0" description="The cone angle in degrees." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                <Tunable type="float" name="angular_cost_weight" class="TunableRange" default="2.25" display="Angular Cost Weight" muid="D83361DC69CD6408" min="0" max="None" description="The importance of the angular cost &#xA;function.&#xA; = 0: Not used&#xA; &gt; 1: Important on surfaces&#xA; &gt; 2: Important on grass" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                <Tunable type="bool" name="enables_height_scoring" class="Tunable" default="False" display="Enables Height Scoring" muid="7B79D7164B26477B" description="If enabled, this constraint will &#xA;score goals using the height of&#xA;the surface.  The higher the goal&#xA;the cheaper it is." Deprecated="False" filter="0" group="General" />
                                                                <Tunable type="float" name="ideal_angle" class="TunableRange" default="0.25" display="Ideal Angle" muid="B690D9E6FA0F01CE" min="0" max="1" description="The angular extents of an ideal &#xA;region as a fraction of angle." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                <Tunable type="float" name="ideal_radius_max" class="TunableRange" default="0.75" display="Ideal Radius Max" muid="CA6960EED2DE832E" min="0" max="1" description="The radial upper bound of an ideal &#xA;region as a fraction of the &#xA;difference between max_radius and &#xA;min_radius." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                <Tunable type="float" name="ideal_radius_min" class="TunableRange" default="0.25" display="Ideal Radius Min" muid="583328FA18D2E076" min="0" max="1" description="The radial lower bound of an ideal &#xA;region as a fraction of the &#xA;difference between max_radius and &#xA;min_radius." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                <Tunable type="float" name="max_radius" class="Tunable" default="1" display="Max Radius" muid="74CA636AEE3ADCC6" description="The maximum cone radius." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                <Tunable type="float" name="min_radius" class="Tunable" default="0" display="Min Radius" muid="A0670867AED3E5C0" description="The minimum cone radius." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                <Tunable type="bool" name="multi_surface" class="Tunable" default="False" display="Multi Surface" muid="4C920772E8839BCA" description="If enabled, this constraint will be&#xA;considered for multiple surfaces.&#xA;&#xA;Example: You want a circle&#xA;constraint that can be both inside&#xA;and outside of a pool." Deprecated="False" filter="0" group="General" />
                                                                <Tunable type="float" name="offset" class="TunableAngle" default="0.0" display="Offset" muid="B156540935695EFD" min="0.0" max="360.0" description="An offset (rotation) in degrees.&#xA;&#xA;By default the cone will face the &#xA;forward vector of the object.  Use&#xA;an offset to rotate the cone to &#xA;face a different direction. " tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                <Tunable type="float" name="radial_cost_weight" class="TunableRange" default="2.25" display="Radial Cost Weight" muid="22B9A268A089DA5F" min="0" max="None" description="The importance of the radial cost &#xA;function.&#xA; = 0: Not used&#xA; &gt; 1: Important on surfaces&#xA; &gt; 2: Important on grass" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                <Tunable type="bool" name="require_los" class="Tunable" default="True" display="Require Los" muid="9B64554B09AE9E6C" description="If checked, the Sim will require line of sight to the actor.  Positions where a Sim&#xA;can't see the actor (e.g. there's a wall in the way) won't be valid.&#xA;&#xA;NOTE: This will NOT work on a&#xA;constraint that is not used to&#xA;generate routing goals such as&#xA;broadcasters and reactions, use a&#xA;Line Of Sight Constraint instead.&#xA;This will work on constraints used&#xA;to keep Sims in an interaction." Deprecated="False" filter="0" group="General" />
                                                            </TunableTuple>
                                                        </TunableVariant>
                                                    </TunableVariant>
                                                    <TunableTuple name="sub_constraint_offset" class="TunableVector3" display="Sub Constraint Offset" muid="7730D01BF56D5C04" description="Translation offset applied to the sub constraint, relative to the target object." Deprecated="False" filter="0" group="General">
                                                        <Tunable type="float" name="x" class="Tunable" default="0.0" display="X" muid="17F840E8C14DB9C7" description="x component" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                        <Tunable type="float" name="y" class="Tunable" default="0.0" display="Y" muid="D6A73A4785E0F1EA" description="y component" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                        <Tunable type="float" name="z" class="Tunable" default="0.0" display="Z" muid="AA630139089732B3" description="z component" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                    </TunableTuple>
                                                </TunableTuple>
                                            </TunableList>
                                        </TunableTuple>
                                        <TunableTuple name="position" class="TunablePosition" display="Position" muid="B8FDB06C69950FA" description="The relative position geometry required for a sim/posture to use the object." Deprecated="False" filter="0" group="General">
                                            <TunableTuple name="relative_position" class="TunableVector3" display="Relative Position" muid="FADDA65787C7D49F" description="Position" Deprecated="False" filter="0" group="General">
                                                <Tunable type="float" name="x" class="Tunable" default="0.0" display="X" muid="3C70B8ADCEA8DC98" description="x component" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                <Tunable type="float" name="y" class="Tunable" default="0.0" display="Y" muid="AFF89159A1B179B8" description="y component" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                <Tunable type="float" name="z" class="Tunable" default="0.0" display="Z" muid="E32C2AB6CA105BB7" description="z component" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                        </TunableTuple>
                                        <TunableTuple name="relative_circle" class="TunableRelativeCircleConstraint" display="Relative Circle" muid="422E132B6053E7CC" description="A circle constraint whose size is dependent on the size of the target&#xA;object." Deprecated="False" filter="0" group="General">
                                            <Tunable type="bool" name="enables_height_scoring" class="Tunable" default="False" display="Enables Height Scoring" muid="689FF440C413C50A" description="If enabled, this constraint will score goals using the height of&#xA;the surface.  The higher the goal the cheaper it is." Deprecated="False" filter="0" group="General" />
                                            <TunableVariant type="None" name="maximum_radius" class="OptionalTunable" default="disabled" display="Maximum Radius" muid="AC07F11444E6BC8E" description="If enabled, the generated constraint will have a radius no larger&#xA;that the specified amount." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="BC8CB371919B214B" />
                                                <Tunable type="float" name="enabled" class="TunableRange" default="1" display="Enabled" muid="BA8A085E832D2B9C" min="0" max="None" description="The constraint's maximum radius." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            </TunableVariant>
                                            <TunableVariant type="None" name="minimum_radius" class="OptionalTunable" default="disabled" display="Minimum Radius" muid="1BD3A9A2125F5988" description="If enabled, the generated constraint will have a radius no smaller&#xA;than the specified amount." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="5235E39F0F7C70A0" />
                                                <Tunable type="float" name="enabled" class="TunableRange" default="1" display="Enabled" muid="781BD87F83C67EBF" min="0" max="None" description="The constraint's minimum radius." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            </TunableVariant>
                                            <Tunable type="bool" name="multi_surface" class="Tunable" default="False" display="Multi Surface" muid="1FAD58AA02776540" description="If enabled, this constraint will be considered for multiple surfaces.&#xA;&#xA;Example: You want a circle&#xA;constraint that can be both inside&#xA;and outside of a pool." Deprecated="False" filter="0" group="General" />
                                            <TunableVariant type="None" name="relative_ideal_radius" class="OptionalTunable" default="disabled" display="Relative Ideal Radius" muid="75158D30F3D4485" description="If enabled, specify an ideal radius relative to the constraint's&#xA;radius. " Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="3E868B9E1FF5620A" />
                                                <TunableTuple name="enabled" class="TunableTuple" display="Enabled" muid="FC5C0A82E3FF851A" description="Ideal radius data." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="float" name="radius" class="TunableRange" default="1" display="Radius" muid="34F14CD428FAF57E" min="0" max="1" description="The constraint's relative ideal radius. A value of 1 would&#xA;mean the ideal location is on the outskirt of the&#xA;constraint; values towards 0 approach the constraint's&#xA;center." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="float" name="width" class="Tunable" default="0" display="Width" muid="470B595F71ABBE31" description="This creates a band around the ideal_radius that also scores&#xA;to 1 instead of starting to fall off to 0 in scoring. ex: If&#xA;you have a circle of radius 5, with an ideal_radius of 2.5,&#xA;and a ideal_radius_width of 0.5, any goals in the radius 2&#xA;to radius 3 range will all score optimially." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                            </TunableVariant>
                                            <Tunable type="float" name="relative_radius" class="TunableRange" default="1" display="Relative Radius" muid="AE817CB167ECDEEF" min="1" max="None" description="The constraint's radius relative to the size of the object. This is&#xA;a simple multiplier applied to the area generated by the object's&#xA;footprint" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                        <TunableTuple name="spawn_points" class="TunableSpawnPoint" display="Spawn Points" muid="56EAB34A87658C8B" Deprecated="False" filter="0" group="General">
                                            <TunableEnum type="SpawnPointRequestReason" name="spawn_point_request_reason" class="TunableEnumEntry" default="DEFAULT" display="Spawn Point Request Reason" muid="7C64DB103717B5BA" static_entries="world-spawn_point_enums.SpawnPointRequestReason" description="The reason why we want the spawn point. Certain spawn points are&#xA;only available for specific reasons, such as specific spawn&#xA;points for leaving or for spawning at." Deprecated="False" filter="0" group="General" />
                                            <TunableVariant type="None" name="tags" class="OptionalTunable" default="Spawn_Point_Tags" display="Tags" muid="7777DB8D482045B6" description="A constraint that represents all of the spawn locations on the lot." Deprecated="False" filter="0" group="General">
                                                <TunableList name="Spawn_Point_Tags" class="TunableSet" display="Spawn Point Tags" muid="7BA9F67309BCBE5B" min="1" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                    <TunableEnum type="Tag" class="TunableEnumWithFilter" default="INVALID" muid="D33E6B1B75DE0ECF" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" Deprecated="False" dynamic_entries_prefix="Spawn" filter="0" group="General" />
                                                </TunableList>
                                                <Tunable name="Use_Saved_Spawn_Point_Options" class="TunableExistance" display="Use Saved Spawn Point Options" muid="63C66207A6735280" />
                                            </TunableVariant>
                                            <Tunable type="bool" name="use_lot_id" class="Tunable" default="True" display="Use Lot Id" muid="AB3412FA938773D9" description="If checked then we will use the current lot id to limit spawn&#xA;points that are linked to lots to the current lot.  Otherwise&#xA;we will get spawn points of the given type that are&#xA;potenially not linked to the current lot." Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                        <TunableTuple name="spawn_points_with_backup" class="TunableSpawnPointWithBackup" display="Spawn Points With Backup" muid="935A34246626E63E" Deprecated="False" filter="0" group="General">
                                            <TunableVariant type="None" name="backup_tags" class="OptionalTunable" default="Spawn_Point_Tags" display="Backup Tags" muid="46A0B187DC89E528" description="A constraint that represents primary spawn points with backup secondary ones." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="B573A3C494CC1569" />
                                                <TunableList name="Spawn_Point_Tags" class="TunableSet" display="Spawn Point Tags" muid="2C96D3F2130C8215" min="1" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                    <TunableEnum type="Tag" class="TunableEnumWithFilter" default="INVALID" muid="215811129CC7F93D" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" Deprecated="False" dynamic_entries_prefix="Spawn" filter="0" group="General" />
                                                </TunableList>
                                            </TunableVariant>
                                            <TunableEnum type="SpawnPointRequestReason" name="spawn_point_request_reason" class="TunableEnumEntry" default="DEFAULT" display="Spawn Point Request Reason" muid="A1BD712F54C108A1" static_entries="world-spawn_point_enums.SpawnPointRequestReason" description="The reason why we want the spawn point. Certain spawn points are&#xA;only available for specific reasons, such as specific spawn&#xA;points for leaving or for spawning at." Deprecated="False" filter="0" group="General" />
                                            <TunableVariant type="None" name="spawn_point_tags" class="TunableVariant" default="none" display="Spawn Point Tags" muid="A2E6CFB6E330F892" description="Tags that specify the primary spawnpoints or where to get them." Deprecated="False" filter="0" group="General">
                                                <Tunable name="none" class="TunableExistance" display="None" muid="85387054DCDD9524" />
                                                <TunableTuple name="tags" class="Tunable_Tags" display="Tags" muid="A4071B0CEB0738C9" description="Tags are specified straight out." Deprecated="False" filter="0" group="General">
                                                    <TunableList name="tags" class="TunableSet" display="Tags" muid="4CDC2257507E413B" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                        <TunableEnum type="Tag" class="TunableEnumWithFilter" default="INVALID" muid="443D2C13779D7B87" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" Deprecated="False" dynamic_entries_prefix="Spawn" filter="0" group="General" />
                                                    </TunableList>
                                                </TunableTuple>
                                                <TunableTuple name="university_based" class="TunableUniversitySpecificSpawnPointTags" display="University Based" muid="D55A2E2AF5995A1A" description="Tags are specified right here (on a per university basis) " Deprecated="False" filter="0" group="General">
                                                    <TunableList name="spawn_point_tags" class="TunableMapping" display="Spawn Point Tags" muid="74EA06DDA41324AB" mapping_key="key" mapping_value="value" description="University specific classroom tags." Deprecated="False" filter="0" group="General">
                                                        <TunableTuple class="TunableTuple" muid="F286CF4657E53168" Deprecated="False" filter="0" group="General">
                                                            <Tunable type="university" name="key" class="TunableReference" display="Key" muid="FEED30ABA427B3A8" allow_none="False" Deprecated="False" filter="0" group="General" />
                                                            <TunableList name="value" class="TunableSet" display="Value" muid="CCBFCF169FAFDF24" min="1" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                <TunableEnum type="Tag" class="TunableEnumWithFilter" default="INVALID" muid="1729708B5FDBF094" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" Deprecated="False" dynamic_entries_prefix="Spawn" filter="0" group="General" />
                                                            </TunableList>
                                                        </TunableTuple>
                                                    </TunableList>
                                                </TunableTuple>
                                                <TunableTuple name="university_course_slot_career_si" class="TunableUniversityCourseCareerSISpawnPointTags" display="University Course Slot Career Si" muid="7F0A577429A63418" description="Tags are pulled via the associated career interaction for a university &#xA;course. " Deprecated="False" filter="0" group="General" />
                                                <TunableTuple name="university_course_slot_participant" class="TunableUniversityCourseParticipantSpawnPointTags" display="University Course Slot Participant" muid="D716083FD2543E84" description="Tags are pulled via the specified participant holding the id of a &#xA;university course." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="ParticipantType" name="participant" class="TunableEnumEntry" default="PickedItemId" display="Participant" muid="4F4EC222E152B06E" static_entries="interactions.ParticipantType" description="The participant from which the career ID will be obtained. &#xA;Typically should be PickedItemId if this interaction comes via a &#xA;CareerPickerSuperInteraction." Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableTuple name="university_course_slot_reference" class="TunableUniversityCourseReferenceSpawnPointTags" display="University Course Slot Reference" muid="FE7B2F7C0FF6B074" description="Tags are pulled via the specified university course slot." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="career" name="_course_slot" class="TunableReference" display="Course Slot" muid="E47A6EB242BC312B" description="Course slot from which to pull the spawn point tags." allow_none="False" Deprecated="False" filter="0" group="General" restrict="UniversityCourseCareerSlot" />
                                                </TunableTuple>
                                            </TunableVariant>
                                            <Tunable type="bool" name="use_lot_id_for_backup" class="Tunable" default="True" display="Use Lot Id For Backup" muid="52A459C63B7F3AE0" description="If checked then we will use the current lot id to limit spawn&#xA;points that are linked to lots to the current lot if we fall back&#xA;to the backup tags." Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                        <TunableTuple name="terrain_material" class="TunableTerrainMaterialConstraint" display="Terrain Material" muid="BA79B26CF2FD6724" description="A water depth constraint which defines only the terrain materials required." Deprecated="False" filter="0" group="General">
                                            <TunableVariant type="None" name="terrain_tags" class="OptionalTunable" default="disabled" display="Terrain Tags" muid="EC9C231B17A21531" description="If enabled, a set of allowed terrain tags. At least one tag must&#xA;match the terrain under each vertex of the footprint of the supplied&#xA;object." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="A4AAA513C9ED89AF" />
                                                <TunableList name="enabled" class="TunableEnumSet" display="Enabled" muid="D3AEBCC7BD783306" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                    <TunableEnum type="TerrainTag" class="TunableEnumEntry" default="INVALID" muid="B38D51FAF67BE8CE" static_entries="world-terrain_enums.TerrainTag" Deprecated="False" filter="0" group="General" invalid_entries="INVALID" />
                                                </TunableList>
                                            </TunableVariant>
                                        </TunableTuple>
                                        <TunableTuple name="water_depth" class="TunableWaterDepthConstraint" display="Water Depth" muid="BF2394EA18B0ADE7" description="A water depth constraint which defines only the ocean water depth required." Deprecated="False" filter="0" group="General">
                                            <TunableVariant type="None" name="max_water_depth" class="OptionalTunable" default="disabled" display="Max Water Depth" muid="A45DBCDCF79690E3" description="(float) If provided, each vertex of the test polygon along with its centroid will&#xA;be tested to determine whether the ocean water at the test location is at most this deep.&#xA;Values &lt;= 0 indicate placement in ocean is invalid." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="39698EEB1F3712F2" />
                                                <Tunable type="float" name="enabled" class="Tunable" default="1000.0" display="Enabled" muid="5DA766B61AE7B91D" description="Value of the max water depth allowed." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            </TunableVariant>
                                            <TunableVariant type="None" name="min_water_depth" class="OptionalTunable" default="disabled" display="Min Water Depth" muid="A32F440CE022AAA8" description="(float) If provided, each vertex of the test polygon along with its centroid will&#xA;be tested to determine whether the ocean water at the test location is at least this deep.&#xA;Values &lt;= 0 indicate placement on land is valid." Deprecated="False" filter="0" group="General">
                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="DDE65610850F71E4" />
                                                <Tunable type="float" name="enabled" class="Tunable" default="-1.0" display="Enabled" muid="16ECAAF39C70535B" description="Value of the min water depth allowed." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            </TunableVariant>
                                        </TunableTuple>
                                        <TunableTuple name="water_depth_interval" class="TunableWaterDepthIntervalConstraint" display="Water Depth Interval" muid="9C78698FC8505D67" description="A water depth constraint which defines only the ocean water depth required." Deprecated="False" filter="0" group="General">
                                            <TunableEnum type="WaterDepthIntervals" name="interval" class="TunableEnumEntry" default="WALK" display="Interval" muid="343257E73504B2BF" static_entries="interactions-constraints.WaterDepthIntervals" description="Test if a Sim should be walking, wading or swimming based on the water&#xA;height offset at a target location and the Sim's wading interval data." Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                    </TunableVariant>
                                </TunableList>
                                <TunableEnum type="ParticipantTypeObject" name="relative_participant" class="TunableEnumEntry" default="Object" display="Relative Participant" muid="6265C127431BF428" static_entries="interactions.ParticipantTypeObject" description="The participant tuned here will have this constraint &#xA;applied to them." Deprecated="False" filter="0" group="General" />
                            </TunableTuple>
                        </TunableList>
                    </TunableTuple>
                </TunableVariant>
            </TunableTuple>
        </TunableVariant>
    </Instance>

    <VersionHistory>
        <ActionList>
            <Action type="kRename" old_muid="E3EB2D8485141D49" new_muid="FE7B2F7C0FF6B074" />
            <Action type="kRename" old_muid="29371400F676898E" new_muid="D55A2E2AF5995A1A" />
        </ActionList>

        <ActionList>
            <Action type="kRemove" old_muid="A9B4CB609BC6305E" />
        </ActionList>

        <ActionList>
            <Action type="kRename" old_muid="B71A2F87F5AA615C" new_muid="D55A2E2AF5995A1A" />
            <Action type="kRename" old_muid="F9B3AE471B371483" new_muid="7F0A577429A63418" />
            <Action type="kRename" old_muid="84B70C139B192727" new_muid="D716083FD2543E84" />
            <Action type="kRename" old_muid="1E4D4B3A6C274F32" new_muid="E47A6EB242BC312B" />
            <Action type="kRename" old_muid="E0501D75F39617D" new_muid="FE7B2F7C0FF6B074" />
        </ActionList>

        <ActionList>
            <Action type="kRemove" old_muid="1B5E35D50DCC3248" />
            <Action type="kRename" old_muid="F460313685118DE7" new_muid="F4B33655794B91AD" />
            <Action type="kRename" old_muid="6C7279B5AEC73C92" new_muid="7730D01BF56D5C04" />
            <Action type="kRename" old_muid="E73C347E529B3473" new_muid="8956CF5F9FBE38D5" />
            <Action type="kRename" old_muid="844187690C1BD5FA" new_muid="5F3AB9E2CBCBA1B9" />
            <Action type="kRename" old_muid="8D061F1AF0AE06A6" new_muid="5FBE90106DED02F8" />
        </ActionList>
    </VersionHistory>
</TuningRoot>