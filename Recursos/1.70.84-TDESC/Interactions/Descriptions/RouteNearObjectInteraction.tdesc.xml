<?xml version="1.0" encoding="iso-8859-1"?>

<TuningRoot>
    <Instance instance_type="interaction" class="RouteNearObjectInteraction" module="interactions.route_near_object_interaction" muid="66BFFEF20F6EFE54" description="Finds a random object on the lot that meets the tuned tests, creates a &#xA;circle constraint (tunable) around that object, and gets the Sim to route &#xA;their." instance_needs_reference="True" instance_subclasses_only="False" parents="SitOrStandSuperInteraction, SuperInteraction, Interaction" path="Interactions\Descriptions" use_guid_for_reference="True">
        <TunableTuple name="circle_constraint_around_chosen_object" class="TunableCircle" display="Circle Constraint Around Chosen Object" muid="981BD7F6E338721D" description="Circle constraint around the object that is chosen." Deprecated="False" filter="0" group="General">
            <Tunable type="bool" name="enables_height_scoring" class="Tunable" default="False" display="Enables Height Scoring" muid="1E9F45EED6022EAE" description="If enabled, this constraint will &#xA;score goals using the height of&#xA;the surface.  The higher the goal&#xA;the cheaper it is." Deprecated="False" filter="0" group="General" />
            <Tunable type="float" name="ideal_radius" class="Tunable" default="None" display="Ideal Radius" muid="EAEE46AF6E550D8F" description="Ideal distance for this circle constraint, points &#xA;closer to the ideal distance will score higher." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
            <Tunable type="float" name="ideal_radius_width" class="Tunable" default="0" display="Ideal Radius Width" muid="B0B7B19841BCBC2B" description="This creates a band around the ideal_radius that also&#xA;costs 0 instead of rising in cost. ex: If you&#xA;have a circle of radius 5, with an ideal_radius of 2.5, and a&#xA;ideal_radius_width of 0.5, all goals in the radius 2 to radius 3 range&#xA;will score optimially." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
            <Tunable type="bool" name="multi_surface" class="Tunable" default="False" display="Multi Surface" muid="A2C5520499CA9F08" description="If enabled, this constraint will be considered for multiple surfaces.&#xA;&#xA;Example: You want a circle&#xA;constraint that can be both inside&#xA;and outside of a pool." Deprecated="False" filter="0" group="General" />
            <Tunable type="float" name="radial_cost_weight" class="TunableRange" default="2.25" display="Radial Cost Weight" muid="6948C8FACF742C5D" min="0" max="None" description="The importance of the radial cost function.&#xA; = 0: Not used&#xA; &gt; 1: Important on surfaces&#xA; &gt; 2: Important on grass" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
            <Tunable type="float" name="radius" class="Tunable" default="1.5" display="Radius" muid="52B2F147B286EB2" description="Circle radius" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
            <Tunable type="bool" name="require_los" class="Tunable" default="True" display="Require Los" muid="52D25B4F542352CB" description="If checked, the Sim will require line of sight to the actor.  Positions where a Sim&#xA;can't see the actor (e.g. there's a wall in the way) won't be valid.&#xA;&#xA;NOTE: This will NOT work on a&#xA;constraint that is not used to&#xA;generate routing goals such as&#xA;broadcasters and reactions, use a&#xA;Line Of Sight Constraint instead.&#xA;This will work on constraints used&#xA;to keep Sims in an interaction." Deprecated="False" filter="0" group="General" />
        </TunableTuple>

        <TunableList name="object_tests" class="TunableObjectModifyTestSet" display="Object Tests" muid="E3CE936F0B865B68" description="Tests to specify what objects to apply actions to.&#xA;Every test in at least one of the sublists must pass&#xA;for the action associated with this tuning to be run." Deprecated="False" filter="0" group="General">
            <TunableList class="TunableList" muid="8D94879749A772BB" description="A list of tests.  All of these must pass for the group to pass." Deprecated="False" filter="0" group="General">
                <TunableVariant type="None" class="TunableObjectModifyTestVariant" default="none" muid="D85B18BB4C28ABD2" description="A single tunable test." Deprecated="False" filter="0" group="General">
                    <TunableTuple name="consumable_test" class="TunableConsumableTest" display="Consumable Test" muid="E34144C0CA023831" description="A test that checks information about consumables." Deprecated="False" filter="0" group="General">
                        <TunableTuple name="bites_left" class="TunableTuple" display="Bites Left" muid="79359C1BF22961DB" description="A check that tests against the number of bites left before the&#xA;subject is completely consumed." Deprecated="False" filter="0" group="General">
                            <TunableEnum type="Operator" name="operator" class="TunableOperator" default="EQUAL" display="Operator" muid="2ED014DFDF25AF1C" static_entries="sims4-math.Operator" description="The operator to use for the comparison." Deprecated="False" filter="0" group="General" />
                            <Tunable type="int" name="value" class="Tunable" default="1" display="Value" muid="84E664D2D2780A9F" description="The number of bites to test against." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                        </TunableTuple>
                        <Tunable type="bool" name="is_consumable" class="Tunable" default="True" display="Is Consumable" muid="CA9D42BFE2613D94" description="If checked, the subject must be a consumable, if unchecked, the&#xA;subject must not be a consumable." Deprecated="False" filter="0" group="General" />
                        <TunableEnum type="ParticipantType" name="subject" class="TunableEnumEntry" default="Object" display="Subject" muid="BE0C6F3273D28247" static_entries="interactions.ParticipantType" description="The subject of the test. This is the consumable object." Deprecated="False" filter="0" group="General" />
                    </TunableTuple>
                    <TunableTuple name="custom_name" class="TunableCustomNameTest" display="Custom Name" muid="DB111AD10103E765" description="Require or prohibit an object from having a custom&#xA;name or description set." Deprecated="False" filter="0" group="General">
                        <TunableVariant type="None" name="has_custom_description" class="OptionalTunable" default="disabled" display="Has Custom Description" muid="1933148AD3BC9F88" description="If checked, the subject must have a custom description set. If unchecked, it cannot have a custom description set." Deprecated="False" filter="0" group="General">
                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="6E98DC5736186B59" />
                            <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="9D8880F7BA825392" description="If checked, the subject must have a custom description set. If unchecked, it cannot have a custom description set." Deprecated="False" filter="0" group="General" />
                        </TunableVariant>
                        <TunableVariant type="None" name="has_custom_name" class="OptionalTunable" default="disabled" display="Has Custom Name" muid="531F54F19C29CBD3" description="If checked, the subject must have a custom name set. If unchecked, it cannot have a custom name set." Deprecated="False" filter="0" group="General">
                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="5A89415C48AEB07" />
                            <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="164031F99C084FC" description="If checked, the subject must have a custom name set. If unchecked, it cannot have a custom name set." Deprecated="False" filter="0" group="General" />
                        </TunableVariant>
                        <TunableEnum type="ParticipantType" name="participant" class="TunableEnumEntry" default="Object" display="Participant" muid="8AD03DEE6AD30DA4" static_entries="interactions.ParticipantType" description="The subject who is the object of this test." Deprecated="False" filter="0" group="General" />
                    </TunableTuple>
                    <TunableTuple name="existence" class="TunableExistenceTest" display="Existence" muid="D5CE6503B7D09EA8" description="A test to check whether the specified participant exists." Deprecated="False" filter="0" group="General">
                        <Tunable type="bool" name="allow_hidden_sim_status" class="Tunable" default="False" display="Allow Hidden Sim Status" muid="9C8CCC89700B7A2C" description="If checked then we will ignore hidden Sim status such that they will count as existing even though they&#xA;have been hidden.  Use this in conjunction with Require Instantiated in order to determine the Sim's actual&#xA;instantiated status. " Deprecated="False" filter="0" group="General" />
                        <Tunable type="bool" name="exists" class="Tunable" default="True" display="Exists" muid="E0444E432F5295CD" description="When checked, require the specified participant to exist. When&#xA;unchecked, require the specified participant to not exist." Deprecated="False" filter="0" group="General" />
                        <TunableEnum type="ParticipantType" name="participant" class="TunableEnumEntry" default="TargetSim" display="Participant" muid="47F09B489736377D" static_entries="interactions.ParticipantType" description="The participant for which to check existence." Deprecated="False" filter="0" group="General" />
                        <Tunable type="bool" name="require_instantiatable" class="Tunable" default="True" display="Require Instantiatable" muid="AB878F1C01D707AD" description="If checked, the specified participant must be instantiatable. This&#xA;is generally true for all Sims at LOD above MINIMUM." Deprecated="False" filter="0" group="General" />
                    </TunableTuple>
                    <TunableTuple name="game_option" class="TunableSimInfoGameplayOptionsTest" display="Game Option" muid="393CD7B3CA257B46" description="Test whether or not a Sim has a specific gameplay option set." Deprecated="False" filter="0" group="General">
                        <TunableEnum type="TestableGameOptions" name="gameplay_option" class="TunableEnumEntry" default="CIVIC_POLICY_NPC_VOTING_ENABLED" display="Gameplay Option" muid="3A7D4FAC620A39" static_entries="event_testing-game_option_tests.TestableGameOptions" description="The gameplay option to test. This test will pass if this option is&#xA;set." Deprecated="False" filter="0" group="General" />
                        <Tunable type="bool" name="invert" class="Tunable" default="False" display="Invert" muid="D8C6F9D61EC5E80A" description="If enabled, requires the option to be unset for the test to pass." Deprecated="False" filter="0" group="General" />
                        <TunableVariant type="None" name="tooltip" class="OptionalTunable" default="disabled" display="Tooltip" muid="4489D8DB59A78327" description="Reason of failure." Deprecated="False" filter="0" group="General">
                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="9D3A4D79A16E50E0" />
                            <Tunable type="int" name="enabled" class="TunableLocalizedString" default="0x0" display="Enabled" muid="DE1DC79336298C94" description="Reason of failure." Deprecated="False" filter="0" group="General" />
                        </TunableVariant>
                    </TunableTuple>
                    <TunableTuple name="inventory" class="TunableInventoryTest" display="Inventory" muid="751D45D10B5171D7" description="A test to check on the contents of either a sim inventory or&#xA;an object inventory." Deprecated="False" filter="0" group="General">
                        <TunableVariant type="None" name="contents_check" class="TunableVariant" default="has_anything" display="Contents Check" muid="684C83233850F9E6" description="Checks to run on each object of the specified inventory" Deprecated="False" filter="0" group="General">
                            <Tunable name="has_anything" class="TunableExistance" display="Has Anything" muid="5B93020103CC2BA3" />
                            <TunableTuple name="has_object_of_participant_type" class="TunableTuple" display="Has Object Of Participant Type" muid="E5D369285493394C" description="Participant type we want to test if its in the selected&#xA;inventory." Deprecated="False" filter="0" group="General">
                                <TunableEnum type="ParticipantType" name="participant" class="TunableEnumEntry" default="Object" display="Participant" muid="71FC8C249EDD018C" static_entries="interactions.ParticipantType" description="Which participant of the interaction do we want to validate&#xA;on the inventory. " Deprecated="False" filter="0" group="General" />
                            </TunableTuple>
                            <TunableTuple name="has_object_with_def" class="TunableTuple" display="Has Object With Def" muid="B121897BC1332DA7" Deprecated="False" filter="0" group="General">
                                <Tunable type="object" name="definition" class="TunableReference" display="Definition" muid="371D80E3C4B65C06" description="The object definition to look for inside inventory." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                            </TunableTuple>
                            <TunableTuple name="has_object_with_states" class="BasicStateCheckFactory" display="Has Object With States" muid="BAF4CAF58FA08861" description="This option tests crafted item's tags against a list of possible&#xA;tags." Deprecated="False" filter="0" group="General">
                                <TunableVariant type="None" name="object_requirement" class="TunableVariant" default="any_object" display="Object Requirement" muid="FC88A266E1A0C1EA" Deprecated="False" filter="0" group="General">
                                    <Tunable name="any_object" class="TunableExistance" display="Any Object" muid="C6BE5C28EE3A44F6" />
                                    <TunableTuple name="definition" class="TunableTuple" display="Definition" muid="F874C901D83CF751" Deprecated="False" filter="0" group="General">
                                        <Tunable type="object" name="definition" class="TunableReference" display="Definition" muid="27200488568E0320" description="The object must have this definition." allow_none="False" Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                    <TunableTuple name="tag" class="TunableTuple" display="Tag" muid="6B9ACB841F870AED" Deprecated="False" filter="0" group="General">
                                        <TunableTuple name="tag" class="CraftTaggedItemFactory" display="Tag" muid="EDC1C93B5F9F0711" description="The object must have this tag." Deprecated="False" filter="0" group="General">
                                            <TunableList name="tag_set" class="TunableSet" display="Tag Set" muid="6F2D0FD3505037D0" description="The tag of objects we want to test ownership of" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                <TunableEnum type="Tag" class="TunableEnumEntry" default="INVALID" muid="9FCACC895EBCD944" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="What tag to test for" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                            </TunableList>
                                            <TunableEnum type="TagTestType" name="test_type" class="TunableEnumEntry" default="CONTAINS_ANY_TAG_IN_SET" display="Test Type" muid="AD85A2CECE154B7C" static_entries="objects-object_tests.TagTestType" description="How to test the tags in the tag set against the objects on the lot." Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                    </TunableTuple>
                                </TunableVariant>
                                <TunableList name="state_set" class="TunableSet" display="State Set" muid="882233EFEA2150DE" Deprecated="False" filter="0" group="General" unique_entries="true">
                                    <Tunable type="object_state" class="TunableReference" muid="C8477E8EFF0686A9" description="What state to test for." allow_none="False" Deprecated="False" filter="0" group="General" />
                                </TunableList>
                                <TunableEnum type="StateTestType" name="test_type" class="TunableEnumEntry" default="CONTAINS_ANY_STATE_IN_SET" display="Test Type" muid="6C676335681045DB" static_entries="objects-object_tests.StateTestType" description="How to test the states in the state set against the objects in&#xA;the inventory." Deprecated="False" filter="0" group="General" />
                            </TunableTuple>
                            <TunableTuple name="has_object_with_tag" class="CraftTaggedItemFactory" display="Has Object With Tag" muid="450F20DC1667155F" description="This option tests crafted item's tags against a list of possible tags" Deprecated="False" filter="0" group="General">
                                <TunableList name="tag_set" class="TunableSet" display="Tag Set" muid="21DB7BD1AD2BC88A" description="The tag of objects we want to test ownership of" Deprecated="False" filter="0" group="General" unique_entries="true">
                                    <TunableEnum type="Tag" class="TunableEnumEntry" default="INVALID" muid="3ECA9AEF1AC3BD01" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="What tag to test for" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                </TunableList>
                                <TunableEnum type="TagTestType" name="test_type" class="TunableEnumEntry" default="CONTAINS_ANY_TAG_IN_SET" display="Test Type" muid="3061C247471097F6" static_entries="objects-object_tests.TagTestType" description="How to test the tags in the tag set against the objects on the lot." Deprecated="False" filter="0" group="General" />
                            </TunableTuple>
                        </TunableVariant>
                        <TunableVariant type="None" name="inventory_location" class="TunableVariant" default="participant_inventory" display="Inventory Location" muid="E762AE9B43FF3850" description="Who owns the inventory. Either look in the inventory of a &#xA;participant or specify an object inventory type directly.&#xA;&#xA;If participant returns multiple inventory owners, the test will &#xA;pass only if ALL of those owners pass the inventory content test." Deprecated="False" filter="0" group="General">
                            <TunableTuple name="hidden_inventory_objects" class="TunableTuple" display="Hidden Inventory Objects" muid="A3AA3F8D625ED0F2" Deprecated="False" filter="0" group="General">
                                <TunableEnum type="InventoryType" name="inventory" class="TunableEnumEntry" default="UNDEFINED" display="Inventory" muid="1AA1E08BFF76470E" dynamic_entries="objects-components-inventory_enums.InventoryType._elements" static_entries="objects-components-inventory_enums.InventoryType" description="Check in the hidden inventory for objects that can go into the&#xA;specified inventory type. EX: check that there are mailbox&#xA;objects in the hidden inventory" Deprecated="False" filter="0" group="General" />
                            </TunableTuple>
                            <TunableTuple name="object_inventory_type" class="TunableTuple" display="Object Inventory Type" muid="4DD78C4FA8F3495D" Deprecated="False" filter="0" group="General">
                                <TunableEnum type="InventoryType" name="inventory" class="TunableEnumEntry" default="UNDEFINED" display="Inventory" muid="277F69DDC5BFCDD3" dynamic_entries="objects-components-inventory_enums.InventoryType._elements" static_entries="objects-components-inventory_enums.InventoryType" description="Check the global Object inventory that has the specified type.&#xA;EX: check in the global fridge inventory that exists for all&#xA;fridges" Deprecated="False" filter="0" group="General" />
                            </TunableTuple>
                            <TunableTuple name="participant_inventory" class="TunableTuple" display="Participant Inventory" muid="492EDBF164BED51F" Deprecated="False" filter="0" group="General">
                                <TunableEnum type="ParticipantType" name="inventory" class="TunableEnumEntry" default="Actor" display="Inventory" muid="D312DE34CBFB02C4" static_entries="interactions.ParticipantType" description="The owner of the inventory" Deprecated="False" filter="0" group="General" />
                            </TunableTuple>
                        </TunableVariant>
                        <TunableTuple name="required_count" class="TunableThreshold" display="Required Count" muid="D25BA172F9F64001" description="The inventory must have a tunable threshold of objects that&#xA;pass the contents check test.&#xA;&#xA;EX: test is object definition of type pizza. required count is enabled&#xA;and has a threshold of &gt;= 5. That means this test will pass if you&#xA;have 5 or more pizzas in your inventory. To check if any objects&#xA;exist, use required count &gt;= 1" Deprecated="False" filter="0" group="General">
                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="2E576842EBAAA41D" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                            <Tunable type="int" name="value" class="Tunable" default="1" display="Value" muid="F03E1870D475D233" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                        </TunableTuple>
                        <TunableEnum type="TestHiddenInventories" name="test_hidden" class="TunableEnumEntry" default="ANY" display="Test Hidden" muid="86FC9C7C3EEC7D6B" static_entries="objects-object_tests.InventoryTest.TestHiddenInventories" description="Optionally restrict to only hidden or non-hidden inventories." Deprecated="False" filter="0" group="General" />
                    </TunableTuple>
                    <TunableTuple name="location" class="TunableLocationTest" display="Location" muid="BEEF505DB8FA904B" description="Tests for object locations.&#xA;Outside: Check if an object is on the inside or outside (has a roof over&#xA;its head)&#xA;Natural ground: Checks the floor tiles where the object is to see if it &#xA;qualifies as natural ground" Deprecated="False" filter="0" group="General">
                        <TunableTuple name="location_tests" class="TunableTuple" display="Location Tests" muid="4370D7A797BE4DF6" Deprecated="False" filter="0" group="General">
                            <TunableVariant type="None" name="has_terrain_tag" class="OptionalTunable" default="Don't_Test" display="Has Terrain Tag" muid="DA3FAA75D3DB5C09" description="If checked, will verify the subject of the test is currently on&#xA;the tuned terrain tag." Deprecated="False" filter="0" group="General">
                                <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="80A7D40AC085FAEA" />
                                <TunableTuple name="enabled" class="TunableTuple" display="Enabled" muid="48B8B71F9C757E1E" description=",&#xA;A set of terrain tags required for this test to pass." Deprecated="False" filter="0" group="General">
                                    <Tunable type="bool" name="negate" class="Tunable" default="False" display="Negate" muid="CA8E005C6DCD17D4" description="If checked, the test will be inverted. In other words,&#xA;the test will fail if at least one tag is detected at&#xA;this location." Deprecated="False" filter="0" group="General" />
                                    <TunableList name="terrain_tags" class="TunableEnumSet" display="Terrain Tags" muid="94E760BF262627B4" description="A set of terrain tags. Only one of these tags needs to be&#xA;present at this location. Although it is not tunable, there&#xA;is a threshold weight underneath which a terrain tag will&#xA;not appear to be present." Deprecated="False" filter="0" group="General" unique_entries="true">
                                        <TunableEnum type="TerrainTag" class="TunableEnumEntry" default="INVALID" muid="9FED6FF6F8792450" static_entries="world-terrain_enums.TerrainTag" Deprecated="False" filter="0" group="General" />
                                    </TunableList>
                                    <Tunable type="bool" name="test_floor_tiles" class="Tunable" default="False" display="Test Floor Tiles" muid="BDF88D214D1B910D" description="If checked, floor tiles will be tested. Otherwise, &#xA;it'll only check the terrain and will ignore the &#xA;floor tiles on the terrain." Deprecated="False" filter="0" group="General" />
                                </TunableTuple>
                            </TunableVariant>
                            <TunableVariant type="None" name="in_common_area" class="OptionalTunable" default="Don't_Test" display="In Common Area" muid="D334682EC6B4B54D" description="If checked, will verify the subject is in the common area&#xA;of an apartment.  If unchecked will verify the subject is not." Deprecated="False" filter="0" group="General">
                                <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="4B7434B8C2120464" />
                                <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="7BB7314877886168" Deprecated="False" filter="0" group="General" />
                            </TunableVariant>
                            <TunableVariant type="None" name="is_fire_allowed" class="OptionalTunable" default="Don't_Test" display="Is Fire Allowed" muid="4F22C1BA71C420C5" description="If checked, will verify if fire is possible at the subject's position. &#xA;If unchecked, will pass if fire is not possible.&#xA;If not enabled, doesn't care either way." Deprecated="False" filter="0" group="General">
                                <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="88AD0DEDBD9DD439" />
                                <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="D53EED621FED2952" Deprecated="False" filter="0" group="General" />
                            </TunableVariant>
                            <TunableVariant type="None" name="is_in_slot" class="OptionalTunable" default="Don't_Test" display="Is In Slot" muid="F2FB58F8CA97AFF1" description="If enabled will test if the object is attacked/deattached to&#xA;any of possible tuned slots.&#xA;If you tune a slot type set the test will test if the object &#xA;is slotted or not slotted into into any of those types. " Deprecated="False" filter="0" group="General">
                                <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="FA35577B1EDAC0D" />
                                <TunableTuple name="enabled" class="TunableTuple" display="Enabled" muid="F28F3229045DB7B4" description="Test if an object is current slotted in any of a possible&#xA;list of slot types.&#xA;Empty slot type set is allowed for testing for slotted or&#xA;not slotted only." Deprecated="False" filter="0" group="General">
                                    <TunableVariant type="None" name="slot_test_type" class="TunableVariant" default="any_slot" display="Slot Test Type" muid="31769E5CA8DC6B99" description="Strategy to test the slots:&#xA;Any Slot - is the object in any slot&#xA;Surface Slot - is object is in a surface slot&#xA;Specific Slot - is the object in specific list of slots" Deprecated="False" filter="0" group="General">
                                        <TunableTuple name="any_slot" class="TunableSlotTestType" display="Any Slot" muid="23924C13002CE1FF" description="Singleton factory for testing if object is slotted." Deprecated="False" filter="0" group="General">
                                            <Tunable type="bool" name="require_slotted" class="Tunable" default="True" display="Require Slotted" muid="556CC9D7CC56578A" description="If checked, return success if the object is slotted&#xA;If unchecked, test the absense of slotting." Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                        <TunableTuple name="specific_slot" class="TunableSpecificSlotTest" display="Specific Slot" muid="778077B590DE4CFE" description="Subclass of SlotTestType that can check against a specific&#xA;slot set." Deprecated="False" filter="0" group="General">
                                            <Tunable type="bool" name="require_slotted" class="Tunable" default="True" display="Require Slotted" muid="4A16ECF7D92A3B73" description="If checked, return success if the object is slotted&#xA;If unchecked, test the absense of slotting." Deprecated="False" filter="0" group="General" />
                                            <Tunable type="slot_type_set" name="specific_slot_set" class="TunableReference" display="Specific Slot Set" muid="B6ED55D16816819F" description="Set of slots the object may be attached to." allow_none="False" Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                        <TunableTuple name="surface_slot" class="TunableSurfaceSlotTest" display="Surface Slot" muid="5547FB3792DD711E" description="Subclass of SlotTestType that checks that a slot has&#xA;is_surface set to true." Deprecated="False" filter="0" group="General">
                                            <Tunable type="bool" name="require_slotted" class="Tunable" default="True" display="Require Slotted" muid="AC5269EE99727251" description="If checked, return success if the object is slotted&#xA;If unchecked, test the absense of slotting." Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                    </TunableVariant>
                                </TunableTuple>
                            </TunableVariant>
                            <TunableVariant type="None" name="is_inside_building" class="OptionalTunable" default="Don't_Test" display="Is Inside Building" muid="B2CFF323E3B12F25" description="If checked, will verify if the subject of the test is inside a&#xA;building. This uses a client function that checks if the block&#xA;the sim is mostly enclosed by walls or if not, if the adjoining&#xA;blocks are themselves enclosed. This should be used when we&#xA;want to test if a subject is inside a normally constructed &#xA;building. If we simply want to test whether the subject is &#xA;covered / has a roof over them, use is_outside. See comment on&#xA;is_outside for more details. If unchecked, will negate this &#xA;test." Deprecated="False" filter="0" group="General">
                                <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="40C61B7595BB1C0D" />
                                <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="6CDF2B338B95A33F" Deprecated="False" filter="0" group="General" />
                            </TunableVariant>
                            <TunableVariant type="None" name="is_natural_ground" class="OptionalTunable" default="Don't_Test" display="Is Natural Ground" muid="8557273C79D3EEEB" description="If checked, will verify the subject of the test is on natural &#xA;ground (no floor tiles are under him).&#xA;Otherwise, will verify the subject of the test is not on &#xA;natural ground." Deprecated="False" filter="0" group="General">
                                <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="8F02FEBA7E017512" />
                                <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="ABC6A17FEEADA4B5" Deprecated="False" filter="0" group="General" />
                            </TunableVariant>
                            <TunableVariant type="None" name="is_on_active_lot" class="OptionalTunable" default="Don't_Test" display="Is On Active Lot" muid="A3961D10797534D9" description="If disabled the test will not be used.&#xA;If enabled and checked, the test will pass if the subject is&#xA;on the active lot. (their center is within the lot bounds)&#xA;If enabled and not checked, the test will pass if the subject is &#xA;outside of the active lot.&#xA;&#xA;For example, Ask To Leave is tuned with this enabled and checked&#xA;for the TargetSim. You can only ask someone to leave if they&#xA;are actually on the active lot, but not if they are wandering&#xA;around in the open streets." Deprecated="False" filter="0" group="General">
                                <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="5BA3B6D504ABA380" />
                                <TunableTuple name="Is_or_is_not_on_active_lot" class="TunableTuple" display="Is Or Is Not On Active Lot" muid="244D889C34649956" Deprecated="False" filter="0" group="General">
                                    <Tunable type="bool" name="include_spawn_point" class="Tunable" default="False" display="Include Spawn Point" muid="C3AA90BEB77803D6" description="If set to true, we will consider the lot's spawn point as part of the active lot." Deprecated="False" filter="0" group="General" />
                                    <Tunable type="bool" name="is_or_is_not_on_active_lot" class="Tunable" default="True" display="Is Or Is Not On Active Lot" muid="AF0CEF98289D3EC5" description="If checked then the test will pass if the subject is on&#xA;the active lot." Deprecated="False" filter="0" group="General" />
                                    <TunableVariant type="None" name="tolerance" class="TunableVariant" default="explicit" display="Tolerance" muid="B27071CFA9841972" Deprecated="False" filter="0" group="General">
                                        <Tunable type="int" name="explicit" class="Tunable" default="0" display="Explicit" muid="3D4D21FCFE1B7E23" description="The tolerance from the edge of the lot that the&#xA;location test will use in order to determine if the&#xA;test target is considered on lot or not." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        <TunableTuple name="use_default_tolerance" class="UseDefaultOfflotToleranceFactory" display="Use Default Tolerance" muid="ABA14A8E18326316" description="Use the default tuned global offlot tolerance tuned&#xA;in objects.components.statistic_component.Default Off Lot." Deprecated="False" filter="0" group="General" />
                                    </TunableVariant>
                                </TunableTuple>
                            </TunableVariant>
                            <TunableVariant type="None" name="is_on_level" class="OptionalTunable" default="Don't_Test" display="Is On Level" muid="1E4A7CB2C0A4E15" description="If enabled, we check the participant's current level against&#xA;the tuned threshold.  In the case of sims in pools, the effective&#xA;level will be that of the surface of the pool, not the bottom." Deprecated="False" filter="0" group="General">
                                <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="B78E2D5265F6DCC" />
                                <TunableTuple name="enabled" class="TunableThreshold" display="Enabled" muid="D89B633C2D42022D" description="Value/comparison pair used to define a Threshold." Deprecated="False" filter="0" group="General">
                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="FA15DD2ACCAA3C1B" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                    <Tunable type="int" name="value" class="Tunable" default="0" display="Value" muid="4F3814C20FEE39A3" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                </TunableTuple>
                            </TunableVariant>
                            <TunableVariant type="None" name="is_outside" class="OptionalTunable" default="Don't_Test" display="Is Outside" muid="B491E210535DA622" description="PLEASE BE AWARE. If checked, will verify if the subject of the&#xA;test does not have a roof over their head. If unchecked, will &#xA;test if the subject has a roof over their head. If the &#xA;intention is to determine if a subject is in/not in a building, &#xA;this test is deprecated in favor of is_inside_building. If you &#xA;would like to test if a subject is inside a building, but also &#xA;need to test if they have a roof over their head, please use &#xA;both options." Deprecated="False" filter="0" group="General">
                                <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="87B70082ED9785BA" />
                                <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="3B8EFBFE36407114" Deprecated="False" filter="0" group="General" />
                            </TunableVariant>
                            <TunableVariant type="None" name="is_venue_type" class="OptionalTunable" default="Don't_Test" display="Is Venue Type" muid="3072A79F62B41F29" description="If checked, will verify if the subject is at a venue of the&#xA;specified type." Deprecated="False" filter="0" group="General">
                                <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="CA35483DFB447C84" />
                                <TunableTuple name="enabled" class="TunableTuple" display="Enabled" muid="A2A1030CE6A32D05" description="Venue type required for this test to pass." Deprecated="False" filter="0" group="General">
                                    <Tunable type="bool" name="negate" class="Tunable" default="False" display="Negate" muid="CC9ACABEEFABA970" description="If enabled, the test will return true if the subject&#xA;IS NOT at a venue of the specified type." Deprecated="False" filter="0" group="General" />
                                    <Tunable type="bool" name="use_source_venue" class="Tunable" default="False" display="Use Source Venue" muid="A535CD04E9DC54EA" description="If enabled, the test will test the source venue instead of the active&#xA;venue.  For example, the Community Lot instead of the active Marketplace.&#xA;Testing the active venue is the default." Deprecated="False" filter="0" group="General" />
                                    <Tunable type="venue" name="venue_type" class="TunableReference" display="Venue Type" muid="E56C749072102C91" description="Venue type to test against." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                </TunableTuple>
                            </TunableVariant>
                            <TunableVariant type="None" name="valid_surface_types" class="OptionalTunable" default="Don't_Test" display="Valid Surface Types" muid="480EFB457E9DF7AF" description="If enabled, we will test the surface type of the subject&#xA;against prohibited or required surface types." Deprecated="False" filter="0" group="General">
                                <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="F34B4BF62E56122A" />
                                <TunableTuple name="Test_Surface_Types" class="TunableWhiteBlackList" display="Test Surface Types" muid="4B742928BEE1D6A5" description="Required and Prohibited Surface Types. " Deprecated="False" filter="0" group="General">
                                    <TunableVariant type="None" name="blacklist" class="OptionalTunable" default="nothing" display="Blacklist" muid="EA01FEBD2BFE74D5" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is not in the blacklist. If no blacklist is&#xA;specified, no items are disallowed." Deprecated="False" filter="0" group="General">
                                        <Tunable name="nothing" class="TunableExistance" display="Nothing" muid="F1A0CA2E84B96D68" />
                                        <TunableTuple name="specify" class="TunableBlacklist" display="Specify" muid="3A8E5061A5395269" description="A tunable blacklist." Deprecated="False" filter="0" group="General">
                                            <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="BA403FC2E8CBA94A" description="Blacklisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                <TunableEnum type="SurfaceType" class="TunableEnumEntry" default="SURFACETYPE_WORLD" muid="670C37A20D6C0C93" static_entries="routing.SurfaceType" description="Surface Type the object is placed on." Deprecated="False" filter="0" group="General" invalid_entries="SURFACETYPE_UNKNOWN" />
                                            </TunableList>
                                            <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="3C3F3345519C77B0" description="Tunable option for how many items must be in the blacklist&#xA;for the blacklist to fail when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="8DDEF7C1852DF80D" />
                                                <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="9604A0790CAB414B" description="When testing a collection of items, the number of items in&#xA;that collection that are in the blacklist must pass this&#xA;threshold test for the blacklist to disallow them all." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="9C741721F9994E52" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="E16D96421D34FC3F" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                            </TunableVariant>
                                        </TunableTuple>
                                    </TunableVariant>
                                    <TunableVariant type="None" name="whitelist" class="OptionalTunable" default="everything" display="Whitelist" muid="11B283251896DB35" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is in the whitelist. If no whitelist is&#xA;specified, all items are allowed." Deprecated="False" filter="0" group="General">
                                        <Tunable name="everything" class="TunableExistance" display="Everything" muid="7142ECBF811A0D77" />
                                        <TunableTuple name="specify" class="TunableWhitelist" display="Specify" muid="F873D50959059A57" description="A tunable whitelist." Deprecated="False" filter="0" group="General">
                                            <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="5BE31C8207856BCF" description="Tunable option for how many items must be in the whitelist&#xA;for the whitelist to pass when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="85AA8290BE9AAA7D" />
                                                <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="DAF3575C003F52F3" description="When testing a collection of items, the number of items in&#xA;that collection that are in the whitelist must pass this&#xA;threshold test for the whitelist to allow them all." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="C2A362C291050B88" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="7FE28B2FACE10B9D" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                            </TunableVariant>
                                            <TunableList name="whitelist" class="TunableSet" display="Whitelist" muid="5416A7BBE01F5B63" description="Whitelisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                <TunableEnum type="SurfaceType" class="TunableEnumEntry" default="SURFACETYPE_WORLD" muid="6372223B672FE5FE" static_entries="routing.SurfaceType" description="Surface Type the object is placed on." Deprecated="False" filter="0" group="General" invalid_entries="SURFACETYPE_UNKNOWN" />
                                            </TunableList>
                                        </TunableTuple>
                                    </TunableVariant>
                                </TunableTuple>
                            </TunableVariant>
                        </TunableTuple>
                    </TunableTuple>
                    <Tunable name="none" class="TunableExistance" display="None" muid="6C2CEFE8C62F96FE" />
                    <TunableTuple name="object_definition" class="TunableObjectMatchesDefinitionOrTagTest" display="Object Definition" muid="D090BF1E1D65EBD2" description="Check to see if the specified object matches either a static definition or a set of tags" Deprecated="False" filter="0" group="General">
                        <TunableVariant type="None" name="item" class="TunableVariant" default="tagged_item" display="Item" muid="BC992C4715FBDFDB" description="Whether to test for a specific item or item that has a set of tags" Deprecated="False" filter="0" group="General">
                            <TunableTuple name="actual_item" class="CraftActualItemFactory" display="Actual Item" muid="E763D2F5F02952CD" description="This option tests crafted item against a list of possible items" Deprecated="False" filter="0" group="General">
                                <TunableList name="items_to_check" class="TunableList" display="Items To Check" muid="25E8609B65D34866" Deprecated="False" filter="0" group="General">
                                    <Tunable type="object" class="TunableReference" muid="837D8069DBF3F08F" description="Object that qualifies for this check." allow_none="False" Deprecated="False" filter="0" group="General" />
                                </TunableList>
                            </TunableTuple>
                            <TunableTuple name="tagged_item" class="CraftTaggedItemFactory" display="Tagged Item" muid="9F3B06632FC99B19" description="This option tests crafted item's tags against a list of possible tags" Deprecated="False" filter="0" group="General">
                                <TunableList name="tag_set" class="TunableSet" display="Tag Set" muid="A2AC58D11A88127B" description="The tag of objects we want to test ownership of" Deprecated="False" filter="0" group="General" unique_entries="true">
                                    <TunableEnum type="Tag" class="TunableEnumEntry" default="INVALID" muid="8302E1B549BBD5AA" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="What tag to test for" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                </TunableList>
                                <TunableEnum type="TagTestType" name="test_type" class="TunableEnumEntry" default="CONTAINS_ANY_TAG_IN_SET" display="Test Type" muid="FD96D0F3DE989A14" static_entries="objects-object_tests.TagTestType" description="How to test the tags in the tag set against the objects on the lot." Deprecated="False" filter="0" group="General" />
                            </TunableTuple>
                        </TunableVariant>
                        <TunableVariant type="None" name="tooltip" class="OptionalTunable" default="disabled" display="Tooltip" muid="C0387CC1AA0EE95C" description="Reason of failure." Deprecated="False" filter="0" group="General">
                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="1992675B40708564" />
                            <Tunable type="int" name="enabled" class="TunableLocalizedString" default="0x0" display="Enabled" muid="ABF8C55883E57B1D" description="Reason of failure." Deprecated="False" filter="0" group="General" />
                        </TunableVariant>
                    </TunableTuple>
                    <TunableTuple name="object_preference" class="TunableObjectScoringPreferenceTest" display="Object Preference" muid="81E09C8CF404CA5D" description="A tunable factory that checks whether or not the target object of an affordance&#xA;is the Sim's preferred scoring object." Deprecated="False" filter="0" group="General">
                        <TunableVariant type="None" name="any_sim" class="OptionalTunable" default="disabled" display="Any Sim" muid="3681A6378B1DE105" description="If enabled, will return whether the object has any &quot;Use Only&quot; preference&#xA;set for the specified tag.  Will not be sim specific, and thus only&#xA;works for &quot;use only&quot; preference type.  Does NOT rely on interaction&#xA;to determine preference type.&#xA;&#xA;Value is the tag to test for." Deprecated="False" filter="0" group="General">
                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="5BEA9BE543B46383" />
                            <TunableEnum type="ObjectPreferenceTag" name="enabled" class="TunableEnumEntry" default="INVALID" display="Enabled" muid="51D1AC97FD3C66BB" dynamic_entries="autonomy-autonomy_preference.ObjectPreferenceTag._elements" static_entries="autonomy-autonomy_preference.ObjectPreferenceTag" description="Tag to determine which preference type to use." Deprecated="False" filter="0" group="General" invalid_entries="INVALID" />
                        </TunableVariant>
                        <Tunable type="bool" name="require" class="Tunable" default="True" display="Require" muid="67E84E0D565EC598" description="The Sim's preference is required to be True or required to be False." Deprecated="False" filter="0" group="General" />
                    </TunableTuple>
                    <TunableTuple name="season" class="TunableSeasonTest" display="Season" muid="2EDB126C420ED6F8" description="SeasonTest will test if the current simulation time falls within the&#xA;specified test conditions." Deprecated="False" filter="0" group="General">
                        <Tunable type="bool" name="requires_seasons_pack" class="Tunable" default="True" display="Requires Seasons Pack" muid="1D88E6FAD159D1EF" description="If checked, this test will require that the Seasons pack be &#xA;installed in order for the seasons test to pass.  If unchecked, &#xA;this test will automatically pass." Deprecated="False" filter="0" group="General" />
                        <TunableList name="seasons" class="TunableEnumSet" display="Seasons" muid="3FC624622C0A1848" min="1" description="Season(s) that we must be in to pass the test." Deprecated="False" filter="0" group="General" unique_entries="true">
                            <TunableEnum type="SeasonType" class="TunableEnumEntry" default="SUMMER" muid="32DEEAA341A6F045" static_entries="seasons-seasons_enums.SeasonType" Deprecated="False" filter="0" group="General" />
                        </TunableList>
                        <TunableVariant type="None" name="time_of_season" class="OptionalTunable" default="disabled" display="Time Of Season" muid="E798773CA70E63F7" description="Portion(s) of season(s) that we must be in to pass the test." Deprecated="False" filter="0" group="General">
                            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="98BB8F6235834EAB" />
                            <TunableList name="enabled" class="TunableEnumSet" display="Enabled" muid="6A03CAE3F2435FCC" min="1" description="Portion(s) of season(s) that we must be in to pass the test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                <TunableEnum type="SeasonSegment" class="TunableEnumEntry" default="EARLY" muid="6AA34F553354A99A" static_entries="seasons-seasons_enums.SeasonSegment" Deprecated="False" filter="0" group="General" />
                            </TunableList>
                        </TunableVariant>
                    </TunableTuple>
                    <TunableTuple name="state" class="TunableStateTest" display="State" muid="C57B0BAABA47F182" description="Gate availability by object state.  By default, the test will use the&#xA;state's linked stat as a fallback in case the target doesn't have the&#xA;state involved." Deprecated="False" filter="0" group="General">
                        <TunableVariant type="None" name="fallback_behavior" class="TunableVariant" default="always_fail" display="Fallback Behavior" muid="B8E16C60F2910E6A" description="What to do if the given object doesn't have the state in question." Deprecated="False" filter="0" group="General">
                            <Tunable name="always_fail" class="TunableExistance" display="Always Fail" muid="6C75DFFEE364526E" />
                            <Tunable name="always_pass" class="TunableExistance" display="Always Pass" muid="5279EB5F776873AE" />
                        </TunableVariant>
                        <TunableEnum type="Operator" name="operator" class="TunableOperator" default="EQUAL" display="Operator" muid="B0B04FF43CECE7E1" static_entries="sims4-math.Operator" description="The comparison to use." Deprecated="False" filter="0" group="General" />
                        <Tunable type="object_state" name="value" class="TunableReference" display="Value" muid="3E47C79F251164EF" description="The value to compare to." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="ObjectStateValue" />
                    </TunableTuple>
                    <TunableTuple name="street_civic_policy_test" class="TunableStreetCivicPolicyTest" display="Street Civic Policy Test" muid="139C72EC087CDAC6" description="Test the state of the selected Street's Civic Policy Provider." Deprecated="False" filter="0" group="General">
                        <TunableList name="civic_policy_tests" class="TunableList" display="Civic Policy Tests" muid="2695EED6B9D0D03B" description="The tests we wish to run on the civic policies in question, run in&#xA;order.  AND operation, all must pass, first to fail stops tests." Deprecated="False" filter="0" group="General">
                            <TunableVariant type="None" class="TunableVariant" default="voting_open" muid="2434D8D9AD7E6C13" description="Individual tests run on Civic Policy Provider." Deprecated="False" filter="0" group="General">
                                <TunableTuple name="available" class="TunableBaseCivicPolicyTestAvailable" display="Available" muid="76B4995ACED60928" description="Test available policies. Available policies include everything tuned." Deprecated="False" filter="0" group="General">
                                    <TunableTuple name="white_black_list" class="TunableWhiteBlackList" display="White Black List" muid="E86A8CE0F6752186" description="The civic policies must pass the whitelist and blacklist&#xA;to pass the test." Deprecated="False" filter="0" group="General">
                                        <TunableVariant type="None" name="blacklist" class="OptionalTunable" default="nothing" display="Blacklist" muid="1FE7B493B458DE54" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is not in the blacklist. If no blacklist is&#xA;specified, no items are disallowed." Deprecated="False" filter="0" group="General">
                                            <Tunable name="nothing" class="TunableExistance" display="Nothing" muid="9B025FF53C01E2C" />
                                            <TunableTuple name="specify" class="TunableBlacklist" display="Specify" muid="6B0E8564B87664CB" description="A tunable blacklist." Deprecated="False" filter="0" group="General">
                                                <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="B9A2DDBA586A8275" description="Blacklisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                    <Tunable type="snippet" class="TunableReference" muid="E53336E3AF868AE2" description="Allowed and disallowed civic policies." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="BaseCivicPolicy" />
                                                </TunableList>
                                                <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="A5CB09146D5E8453" description="Tunable option for how many items must be in the blacklist&#xA;for the blacklist to fail when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="7793C9894422E4EC" />
                                                    <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="D43D6405D5352DB1" description="When testing a collection of items, the number of items in&#xA;that collection that are in the blacklist must pass this&#xA;threshold test for the blacklist to disallow them all." Deprecated="False" filter="0" group="General">
                                                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="363376A9188DB6AA" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                        <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="24317E69E3A2BEAE" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                    </TunableTuple>
                                                </TunableVariant>
                                            </TunableTuple>
                                        </TunableVariant>
                                        <TunableVariant type="None" name="whitelist" class="OptionalTunable" default="everything" display="Whitelist" muid="6466B4FB090A6033" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is in the whitelist. If no whitelist is&#xA;specified, all items are allowed." Deprecated="False" filter="0" group="General">
                                            <Tunable name="everything" class="TunableExistance" display="Everything" muid="6B0CB0BC46674289" />
                                            <TunableTuple name="specify" class="TunableWhitelist" display="Specify" muid="4A9E0E8B0087D7DC" description="A tunable whitelist." Deprecated="False" filter="0" group="General">
                                                <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="5A3B2DEAAAAAEC1B" description="Tunable option for how many items must be in the whitelist&#xA;for the whitelist to pass when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="38D8E175E93C35CA" />
                                                    <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="892DA50E86D9947F" description="When testing a collection of items, the number of items in&#xA;that collection that are in the whitelist must pass this&#xA;threshold test for the whitelist to allow them all." Deprecated="False" filter="0" group="General">
                                                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="CF3922C04764058E" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                        <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="DEC173106626F8DC" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                    </TunableTuple>
                                                </TunableVariant>
                                                <TunableList name="whitelist" class="TunableSet" display="Whitelist" muid="E2028C0620B301CD" description="Whitelisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                    <Tunable type="snippet" class="TunableReference" muid="8FA518916969FE5" description="Allowed and disallowed civic policies." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="BaseCivicPolicy" />
                                                </TunableList>
                                            </TunableTuple>
                                        </TunableVariant>
                                    </TunableTuple>
                                </TunableTuple>
                                <TunableTuple name="balloted" class="TunableBaseCivicPolicyTestBalloted" display="Balloted" muid="A8E405F3CE29C73C" description="Test balloted policies.  Policies being considered by the next/current vote are&#xA;balloted." Deprecated="False" filter="0" group="General">
                                    <TunableTuple name="white_black_list" class="TunableWhiteBlackList" display="White Black List" muid="A8012D68323E5F21" description="The civic policies must pass the whitelist and blacklist&#xA;to pass the test." Deprecated="False" filter="0" group="General">
                                        <TunableVariant type="None" name="blacklist" class="OptionalTunable" default="nothing" display="Blacklist" muid="D12D5AE913D37ED0" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is not in the blacklist. If no blacklist is&#xA;specified, no items are disallowed." Deprecated="False" filter="0" group="General">
                                            <Tunable name="nothing" class="TunableExistance" display="Nothing" muid="AE290075F83C915E" />
                                            <TunableTuple name="specify" class="TunableBlacklist" display="Specify" muid="C45A321434E417D3" description="A tunable blacklist." Deprecated="False" filter="0" group="General">
                                                <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="742CA43262FED2C1" description="Blacklisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                    <Tunable type="snippet" class="TunableReference" muid="BFC22A9E55C88E20" description="Allowed and disallowed civic policies." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="BaseCivicPolicy" />
                                                </TunableList>
                                                <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="3B7D81CEFF075A42" description="Tunable option for how many items must be in the blacklist&#xA;for the blacklist to fail when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="79BEDC4ABB1480BF" />
                                                    <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="AD1A6472D3FF8276" description="When testing a collection of items, the number of items in&#xA;that collection that are in the blacklist must pass this&#xA;threshold test for the blacklist to disallow them all." Deprecated="False" filter="0" group="General">
                                                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="471A9E1D711BDDED" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                        <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="D3708FB7C8A0AD14" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                    </TunableTuple>
                                                </TunableVariant>
                                            </TunableTuple>
                                        </TunableVariant>
                                        <TunableVariant type="None" name="whitelist" class="OptionalTunable" default="everything" display="Whitelist" muid="2D4F5DFEE1D97588" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is in the whitelist. If no whitelist is&#xA;specified, all items are allowed." Deprecated="False" filter="0" group="General">
                                            <Tunable name="everything" class="TunableExistance" display="Everything" muid="AEF573FE81B20FAB" />
                                            <TunableTuple name="specify" class="TunableWhitelist" display="Specify" muid="EEC3BBCE84421DC1" description="A tunable whitelist." Deprecated="False" filter="0" group="General">
                                                <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="C4AD5BE304259C04" description="Tunable option for how many items must be in the whitelist&#xA;for the whitelist to pass when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="40E33CC1EF8E3AAC" />
                                                    <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="2E19001D981ABE6E" description="When testing a collection of items, the number of items in&#xA;that collection that are in the whitelist must pass this&#xA;threshold test for the whitelist to allow them all." Deprecated="False" filter="0" group="General">
                                                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="CE28CC89ACD30A51" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                        <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="B4347810874B0265" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                    </TunableTuple>
                                                </TunableVariant>
                                                <TunableList name="whitelist" class="TunableSet" display="Whitelist" muid="981C98A68DFB4172" description="Whitelisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                    <Tunable type="snippet" class="TunableReference" muid="B4305B9D07A49D05" description="Allowed and disallowed civic policies." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="BaseCivicPolicy" />
                                                </TunableList>
                                            </TunableTuple>
                                        </TunableVariant>
                                    </TunableTuple>
                                </TunableTuple>
                                <TunableTuple name="dormant" class="TunableBaseCivicPolicyTestDormant" display="Dormant" muid="6BCBF4DE3AE4C51F" description="Test dormant policies. Dormant policies are not enacted and not balloted." Deprecated="False" filter="0" group="General">
                                    <TunableTuple name="white_black_list" class="TunableWhiteBlackList" display="White Black List" muid="D277130C8DFC0616" description="The civic policies must pass the whitelist and blacklist&#xA;to pass the test." Deprecated="False" filter="0" group="General">
                                        <TunableVariant type="None" name="blacklist" class="OptionalTunable" default="nothing" display="Blacklist" muid="1631A1A17AB4E05D" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is not in the blacklist. If no blacklist is&#xA;specified, no items are disallowed." Deprecated="False" filter="0" group="General">
                                            <Tunable name="nothing" class="TunableExistance" display="Nothing" muid="CA95416C64CCD3A0" />
                                            <TunableTuple name="specify" class="TunableBlacklist" display="Specify" muid="772B9999CE867F9C" description="A tunable blacklist." Deprecated="False" filter="0" group="General">
                                                <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="4A669E111CD0A05B" description="Blacklisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                    <Tunable type="snippet" class="TunableReference" muid="10111944CFCEB2A3" description="Allowed and disallowed civic policies." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="BaseCivicPolicy" />
                                                </TunableList>
                                                <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="4A1F570475FA6664" description="Tunable option for how many items must be in the blacklist&#xA;for the blacklist to fail when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="173D66A2AC3E40B3" />
                                                    <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="EDA6BB3F07F7D3D2" description="When testing a collection of items, the number of items in&#xA;that collection that are in the blacklist must pass this&#xA;threshold test for the blacklist to disallow them all." Deprecated="False" filter="0" group="General">
                                                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="901485024960D49" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                        <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="98FE8A95087E4519" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                    </TunableTuple>
                                                </TunableVariant>
                                            </TunableTuple>
                                        </TunableVariant>
                                        <TunableVariant type="None" name="whitelist" class="OptionalTunable" default="everything" display="Whitelist" muid="E7566B8A16798828" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is in the whitelist. If no whitelist is&#xA;specified, all items are allowed." Deprecated="False" filter="0" group="General">
                                            <Tunable name="everything" class="TunableExistance" display="Everything" muid="CBE0CA087A7F15A8" />
                                            <TunableTuple name="specify" class="TunableWhitelist" display="Specify" muid="A3B6F4A77F9514AA" description="A tunable whitelist." Deprecated="False" filter="0" group="General">
                                                <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="81F9D2256FE89123" description="Tunable option for how many items must be in the whitelist&#xA;for the whitelist to pass when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="DAA324FDB2FC896C" />
                                                    <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="254244F7B5772CF9" description="When testing a collection of items, the number of items in&#xA;that collection that are in the whitelist must pass this&#xA;threshold test for the whitelist to allow them all." Deprecated="False" filter="0" group="General">
                                                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="91BD1148F041623" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                        <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="81EBDCA4007A2F01" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                    </TunableTuple>
                                                </TunableVariant>
                                                <TunableList name="whitelist" class="TunableSet" display="Whitelist" muid="DC297E9D167C79D4" description="Whitelisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                    <Tunable type="snippet" class="TunableReference" muid="351762278752CAA1" description="Allowed and disallowed civic policies." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="BaseCivicPolicy" />
                                                </TunableList>
                                            </TunableTuple>
                                        </TunableVariant>
                                    </TunableTuple>
                                </TunableTuple>
                                <TunableTuple name="enacted" class="TunableBaseCivicPolicyTestEnacted" display="Enacted" muid="610E8BB4C46D674A" description="Test enacted policies." Deprecated="False" filter="0" group="General">
                                    <TunableTuple name="white_black_list" class="TunableWhiteBlackList" display="White Black List" muid="6A3834290E0A1865" description="The civic policies must pass the whitelist and blacklist&#xA;to pass the test." Deprecated="False" filter="0" group="General">
                                        <TunableVariant type="None" name="blacklist" class="OptionalTunable" default="nothing" display="Blacklist" muid="D4045ED4C75210E7" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is not in the blacklist. If no blacklist is&#xA;specified, no items are disallowed." Deprecated="False" filter="0" group="General">
                                            <Tunable name="nothing" class="TunableExistance" display="Nothing" muid="7301119C4FA7A874" />
                                            <TunableTuple name="specify" class="TunableBlacklist" display="Specify" muid="720DC5A0E1930D97" description="A tunable blacklist." Deprecated="False" filter="0" group="General">
                                                <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="9312B81F8EB7319A" description="Blacklisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                    <Tunable type="snippet" class="TunableReference" muid="45EC93D6E5F5FD44" description="Allowed and disallowed civic policies." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="BaseCivicPolicy" />
                                                </TunableList>
                                                <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="C4CA072270926558" description="Tunable option for how many items must be in the blacklist&#xA;for the blacklist to fail when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="5A5C5DA2274EF41B" />
                                                    <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="CF1D9A08208A9A33" description="When testing a collection of items, the number of items in&#xA;that collection that are in the blacklist must pass this&#xA;threshold test for the blacklist to disallow them all." Deprecated="False" filter="0" group="General">
                                                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="C5F13048FACE076A" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                        <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="22BF618FD0B34C52" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                    </TunableTuple>
                                                </TunableVariant>
                                            </TunableTuple>
                                        </TunableVariant>
                                        <TunableVariant type="None" name="whitelist" class="OptionalTunable" default="everything" display="Whitelist" muid="220F7C5B67FB2CD6" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is in the whitelist. If no whitelist is&#xA;specified, all items are allowed." Deprecated="False" filter="0" group="General">
                                            <Tunable name="everything" class="TunableExistance" display="Everything" muid="37FABB8107B2CD30" />
                                            <TunableTuple name="specify" class="TunableWhitelist" display="Specify" muid="F3EF978A32EA0F92" description="A tunable whitelist." Deprecated="False" filter="0" group="General">
                                                <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="5C01DA509209EF77" description="Tunable option for how many items must be in the whitelist&#xA;for the whitelist to pass when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="553662D1018957AD" />
                                                    <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="F196757C7D05EC8C" description="When testing a collection of items, the number of items in&#xA;that collection that are in the whitelist must pass this&#xA;threshold test for the whitelist to allow them all." Deprecated="False" filter="0" group="General">
                                                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="AAEB469CFAFF819A" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                        <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="5F65DA626D569874" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                    </TunableTuple>
                                                </TunableVariant>
                                                <TunableList name="whitelist" class="TunableSet" display="Whitelist" muid="8F337CC3FB5C6E6F" description="Whitelisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                    <Tunable type="snippet" class="TunableReference" muid="BA96B7D8CD63243F" description="Allowed and disallowed civic policies." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="BaseCivicPolicy" />
                                                </TunableList>
                                            </TunableTuple>
                                        </TunableVariant>
                                    </TunableTuple>
                                </TunableTuple>
                                <TunableTuple name="repealable" class="TunableBaseCivicPolicyTestRepealable" display="Repealable" muid="9C275112A98A0CA8" description="Test up for repeal policies. Up for Repeal policies have been specifically marked&#xA;as such and will (if the vote/petition threshold is reached) be repealed&#xA;as part of closing the next vote." Deprecated="False" filter="0" group="General">
                                    <TunableTuple name="white_black_list" class="TunableWhiteBlackList" display="White Black List" muid="5C97E366DEDDDEFD" description="The civic policies must pass the whitelist and blacklist&#xA;to pass the test." Deprecated="False" filter="0" group="General">
                                        <TunableVariant type="None" name="blacklist" class="OptionalTunable" default="nothing" display="Blacklist" muid="C2C05D7CEE56489A" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is not in the blacklist. If no blacklist is&#xA;specified, no items are disallowed." Deprecated="False" filter="0" group="General">
                                            <Tunable name="nothing" class="TunableExistance" display="Nothing" muid="9EF10F23E0F6B5FB" />
                                            <TunableTuple name="specify" class="TunableBlacklist" display="Specify" muid="27264B33CE52BB95" description="A tunable blacklist." Deprecated="False" filter="0" group="General">
                                                <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="F4F3619F778CA6CE" description="Blacklisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                    <Tunable type="snippet" class="TunableReference" muid="3E924FD9FFB43D06" description="Allowed and disallowed civic policies." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="BaseCivicPolicy" />
                                                </TunableList>
                                                <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="AAEC7F9C40D4D63A" description="Tunable option for how many items must be in the blacklist&#xA;for the blacklist to fail when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="AFE7F5A938246C57" />
                                                    <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="292FB2024A048CE0" description="When testing a collection of items, the number of items in&#xA;that collection that are in the blacklist must pass this&#xA;threshold test for the blacklist to disallow them all." Deprecated="False" filter="0" group="General">
                                                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="5140FEF4DEE61B2D" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                        <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="D6F5E29D672490D7" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                    </TunableTuple>
                                                </TunableVariant>
                                            </TunableTuple>
                                        </TunableVariant>
                                        <TunableVariant type="None" name="whitelist" class="OptionalTunable" default="everything" display="Whitelist" muid="376DDE56E1C96AE7" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is in the whitelist. If no whitelist is&#xA;specified, all items are allowed." Deprecated="False" filter="0" group="General">
                                            <Tunable name="everything" class="TunableExistance" display="Everything" muid="73EF8207135030DF" />
                                            <TunableTuple name="specify" class="TunableWhitelist" display="Specify" muid="7411B59B323E295E" description="A tunable whitelist." Deprecated="False" filter="0" group="General">
                                                <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="58DB5A179B12CAF3" description="Tunable option for how many items must be in the whitelist&#xA;for the whitelist to pass when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="BBFA6E695DA1B7D1" />
                                                    <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="2E272A97FE46051A" description="When testing a collection of items, the number of items in&#xA;that collection that are in the whitelist must pass this&#xA;threshold test for the whitelist to allow them all." Deprecated="False" filter="0" group="General">
                                                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="743E7A6CAF4C7D80" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                        <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="62AFE8CE4F273456" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                    </TunableTuple>
                                                </TunableVariant>
                                                <TunableList name="whitelist" class="TunableSet" display="Whitelist" muid="765454A4A6A4C151" description="Whitelisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                    <Tunable type="snippet" class="TunableReference" muid="5A46647B132F7BF4" description="Allowed and disallowed civic policies." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="BaseCivicPolicy" />
                                                </TunableList>
                                            </TunableTuple>
                                        </TunableVariant>
                                    </TunableTuple>
                                </TunableTuple>
                                <TunableTuple name="voting_open" class="TunableBaseCivicPolicyTestVotingOpen" display="Voting Open" muid="32BD09AD2BB3E60A" description="If checked, will verify that voting is currently active." Deprecated="False" filter="0" group="General">
                                    <Tunable type="bool" name="negate" class="Tunable" default="False" display="Negate" muid="85A6C74C3C7B059E" description="If checked then this test will return True when not active." Deprecated="False" filter="0" group="General" />
                                </TunableTuple>
                                <TunableTuple name="voting_time_until_change" class="TunableBaseCivicPolicyTestVotingTimeUntilChange" display="Voting Time Until Change" muid="51A206A7B54BDE01" description="If checked, will check the time remaining before the next voting open status change." Deprecated="False" filter="0" group="General">
                                    <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="A8FACEB6A29D0DDE" description="The amount of time relative to the next voting state change to test." Deprecated="False" filter="0" group="General">
                                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="DA041A3DD930369" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                        <TunableTuple name="value" class="TunableTimeSpan" display="Value" muid="8CD0761FC6618E49" description="Duration before the next change." Deprecated="False" filter="0" group="General">
                                            <Tunable type="int" name="days" class="TunableRange" default="0" display="Days" muid="29AE6FFE15480869" min="0" max="None" description="Number of days" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            <Tunable type="int" name="hours" class="TunableRange" default="1" display="Hours" muid="B22C769FE02A7124" min="0" max="23" description="Number of hours" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            <Tunable type="int" name="minutes" class="TunableRange" default="0" display="Minutes" muid="C4024BA78510EAF2" min="0" max="59" description="Number of minutes" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                    </TunableTuple>
                                </TunableTuple>
                            </TunableVariant>
                        </TunableList>
                        <TunableVariant type="None" name="street" class="TunableVariant" default="literal" display="Street" muid="F9874984E43951E0" description="Select what street to test." Deprecated="False" filter="0" group="General">
                            <Tunable type="street" name="literal" class="TunableReference" display="Literal" muid="5A133BDFEC824F16" description="Identify a specific Street." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                            <TunableTuple name="via_street_participant" class="TunableStreetParticipant" display="Via Street Participant" muid="26853722999A4E02" description="Get the street participant." Deprecated="False" filter="0" group="General" />
                            <TunableVariant type="None" name="via_zone_source" class="TunableVariant" default="use_current_zone" display="Via Zone Source" muid="C0338836A19BB8D1" description="Select the street to use by specifying a Zone Source." Deprecated="False" filter="0" group="General">
                                <TunableTuple name="use_current_zone" class="TunableActiveZone" display="Use Current Zone" muid="D519E6F1C8BABD5A" description="Get the active zone." Deprecated="False" filter="0" group="General" />
                                <TunableTuple name="use_participant_home_zone" class="TunableParticipantHomeZone" display="Use Participant Home Zone" muid="BE3E55BB6782AFF6" description="Get a participant's home zone. Can be None if they don't have one." Deprecated="False" filter="0" group="General">
                                    <TunableEnum type="ParticipantTypeSingleSim" name="participant" class="TunableEnumEntry" default="Actor" display="Participant" muid="7FC9C5BA86D597F7" static_entries="interactions.ParticipantTypeSingleSim" description="Test against the participant's home zone. Townies' home zone will&#xA;be None." Deprecated="False" filter="0" group="General" />
                                </TunableTuple>
                                <TunableTuple name="use_pick_info" class="TunablePickInfoZone" display="Use Pick Info" muid="A5D9C2B09E53D2A7" description="Get the zone of the lot the user clicked on." Deprecated="False" filter="0" group="General" />
                                <TunableTuple name="use_picked_zone_ids" class="TunablePickedZoneIds" display="Use Picked Zone Ids" muid="28B0426E1FE21602" description="Get the zone from the interaction's picked_zone_ids participant. Usually&#xA;comes from a picker." Deprecated="False" filter="0" group="General" />
                            </TunableVariant>
                        </TunableVariant>
                    </TunableTuple>
                </TunableVariant>
            </TunableList>
        </TunableList>
    </Instance>

    <VersionHistory>
        <ActionList>
            <Action type="kRemove" old_muid="52822E74E2DC1362" />
        </ActionList>
    </VersionHistory>
</TuningRoot>