<?xml version="1.0" encoding="iso-8859-1"?>

<TuningRoot>
    <Instance instance_type="street" class="Street" module="world.street" muid="34BDEDD96BBC50BE" description="Represents the gameplay tuning associated with a street." instance_needs_reference="True" instance_subclasses_only="False" path="Streets\Descriptions" use_guid_for_reference="True">
        <TunableList name="beaches" class="TunableList" display="Beaches" muid="FE4E5E4B5867BF1" description="List of locations to place beaches." Deprecated="False" filter="0" group="General" unique_entries="true">
            <TunableTuple class="TunableTuple" muid="753FE80573A9C22D" description="Beach creation data." Deprecated="False" filter="0" group="General">
                <TunableTuple name="forward" class="TunableVector2" display="Forward" muid="21D8475B01CB7B8A" description="The forward vector of the beach object." Deprecated="False" filter="0" group="General">
                    <Tunable type="float" name="x" class="Tunable" default="0.0" display="X" muid="2BEC0735E9272D40" description="x component" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                    <Tunable type="float" name="y" class="Tunable" default="1.0" display="Y" muid="A6B01BAE70C04A55" description="y component" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                </TunableTuple>
                <TunableTuple name="position" class="TunableVector3" display="Position" muid="AE0158A81E20498F" description="The position to create the beach at." Deprecated="False" filter="0" group="General">
                    <Tunable type="float" name="x" class="Tunable" default="0.0" display="X" muid="F48C702CD1D8C00" description="x component" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                    <Tunable type="float" name="y" class="Tunable" default="0.0" display="Y" muid="FC7AD33C787DEFDA" description="y component" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                    <Tunable type="float" name="z" class="Tunable" default="0.0" display="Z" muid="DF4E139D4D0660C0" description="z component" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                </TunableTuple>
            </TunableTuple>
        </TunableList>

        <TunableTuple name="civic_policy" class="TunableStreetProvider" display="Civic Policy" muid="2EB0AD4B9B94FA06" description="Tuning to control the civic policy voting and enactment process for&#xA;a street." Deprecated="False" filter="0" group="General">
            <TunableList name="civic_policies" class="TunableSet" display="Civic Policies" muid="68FA04B66A73B938" description="The civic policies that may be enacted." Deprecated="False" filter="0" group="General" unique_entries="true">
                <Tunable type="snippet" class="TunableReference" muid="F162B801428B0478" description="A civic policy." allow_none="False" Deprecated="False" export_modes="client_binary,server_binary,server_xml" filter="0" group="General" pack_safe="True" restrict="BaseCivicPolicy" />
            </TunableList>
            <TunableVariant type="None" name="community_board_dialog_title" class="TunableLocalizedStringFactoryVariant" default="single" display="Community Board Dialog Title" muid="AD70CDA1E24D2096" description="The Community Board Dialog's title text." Deprecated="False" export_modes="server_xml" filter="0" group="General">
                <TunableTuple name="concatenation" class="TunableLocalizedStringFactoryConcatenation" display="Concatenation" muid="9086286EC462ADE8" description="A list of localized string concatenations. These strings will be joined together into single line-separated string" Deprecated="False" filter="0" group="General">
                    <TunableList name="concatenations" class="TunableList" display="Concatenations" muid="9D63EFA3C7EDDBE4" Deprecated="False" filter="0" group="General">
                        <TunableVariant type="None" class="TunableLocalizedStringSnippet" default="literal" muid="222021EDB91B950C" description="This may be tuned in place here using 'literal' or as a reference to a LocalizedString tuning snippet." Deprecated="False" filter="0" group="General">
                            <Tunable type="int" name="literal" class="TunableLocalizedString" default="0x0" display="Literal" muid="2DE1FC37C92EB2E3" description="A localized string that may use tokens." Deprecated="False" filter="0" group="General" />
                            <Tunable type="snippet" name="reference" class="TunableReference" display="Reference" muid="398922812E679092" description="A reference to a LocalizedString tuning snippet." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="LocalizedString" />
                        </TunableVariant>
                    </TunableList>
                </TunableTuple>
                <Tunable type="int" name="single" class="TunableLocalizedString" default="0x0" display="Single" muid="83A08AF4C5FC285" description="A localized string that may use tokens." Deprecated="False" filter="0" group="General" />
                <TunableTuple name="variation" class="TunableLocalizedStringFactoryVariation" display="Variation" muid="FCFF6865DC23EAB3" description="A list of possible localized string variations." Deprecated="False" filter="0" group="General">
                    <TunableList name="variations" class="TunableList" display="Variations" muid="C5FA7904BA7A9042" Deprecated="False" filter="0" group="General">
                        <Tunable type="int" class="TunableLocalizedString" default="0x0" muid="3B7F4EAD5878ED63" description="A localized string that may use tokens." Deprecated="False" filter="0" group="General" />
                    </TunableList>
                </TunableTuple>
            </TunableVariant>
            <TdescFragTag name="daily_random_vote_test" class="TunableTestSet" display="Daily Random Vote Test" muid="3FFA864731912A21" description="If at least one test passes, and the user option is enabled, daily random voting&#xA;will be performed at midnight." export_modes="server_xml" filter="0" group="General" />
            <TdescFragTag name="daily_random_vote_test_for_street" class="TunableTestSet" display="Daily Random Vote Test For Street" muid="F17B999ED71C64B" description="If the NPC Voting user option is enabled, these tests are run before the Daily Random &#xA;Vote Tests to see if daily random voting will be performed at midnight.  While the &#xA;Daily Random Vote Tests is done for each Resident Sim, this test is run for the Street &#xA;specifically." export_modes="server_xml" filter="0" group="General" />
            <TdescFragTag name="initial_vote_test" class="TunableTestSet" display="Initial Vote Test" muid="436EE06F353D06BC" description="If at least one test passes, and the user option is enabled, initial voting will&#xA;be performed when voting opens." export_modes="server_xml" filter="0" group="General" />
            <TdescFragTag name="initial_vote_test_for_street" class="TunableTestSet" display="Initial Vote Test For Street" muid="5B66A3A9AD274F8C" description="If the NPC Voting user option is enabled, these tests are run before the Initial &#xA;Random Vote Tests to see if initial voting will be performed when voting opens. &#xA;While the Initial Vote Test is done for each Resident Sim, this test is run for &#xA;the Street specifically." export_modes="server_xml" filter="0" group="General" />
            <TunableList name="voting_close_loot" class="TunableList" display="Voting Close Loot" muid="8AB09E465F42E4AA" description="Loot applied to Resident Sims when voting opens." Deprecated="False" export_modes="server_xml" filter="0" group="General">
                <Tunable type="action" class="TunableReference" muid="F07FD30B5E5B53D7" description="Loot to apply on voting open." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="LootActions" />
            </TunableList>
            <TunableList name="voting_open_loot" class="TunableList" display="Voting Open Loot" muid="7E285AB697F365AD" description="Loot applied to Resident Sims when voting opens." Deprecated="False" export_modes="server_xml" filter="0" group="General">
                <Tunable type="action" class="TunableReference" muid="CB16820F29046C5" description="Loot to apply on voting open." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="LootActions" />
            </TunableList>
        </TunableTuple>

        <TunableVariant type="None" name="initial_street_eco_footprint_override" class="OptionalTunable" default="disabled" display="Initial Street Eco Footprint Override" muid="61742FB1DAA87C81" description="If enabled, overrides the initial value of the street eco footprint&#xA;statistic." Deprecated="False" filter="0" group="General">
            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="902A10C791353A38" />
            <Tunable type="float" name="enabled" class="Tunable" default="0" display="Enabled" muid="7B264200ED82AF61" description="The initial value of the street eco footprint statistic." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
        </TunableVariant>

        <Tunable type="open_street_director" name="open_street_director" class="TunableReference" display="Open Street Director" muid="6752E1AD3801D522" description="The Scheduling Open Street Director to use for this world file.&#xA;This open street director will be able to load object layers and&#xA;spin up situations." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />

        <TunableList name="seasonal_parameters" class="TunableMapping" display="Seasonal Parameters" muid="C25F5E5BB944831E" mapping_key="key" mapping_value="value" description="            " Deprecated="False" filter="0" group="General">
            <TunableTuple class="TunableTuple" muid="2589838F2F553ABB" Deprecated="False" filter="0" group="General">
                <TunableEnum type="SeasonParameters" name="key" class="TunableEnumEntry" default="LEAF_ACCUMULATION" display="Key" muid="D70EF34E3D953293" static_entries="seasons-seasons_enums.SeasonParameters" description="The parameter that we wish to change." Deprecated="False" filter="0" group="General" />
                <TunableList name="value" class="TunableList" display="Value" muid="B929DFCC4CC99F97" description="A list of the different seasonal parameter changes that we want to&#xA;send over the course of a year." Deprecated="False" filter="0" group="General">
                    <TunableTuple class="TunableTuple" muid="84CCFE19FC75AED7" Deprecated="False" filter="0" group="General">
                        <TunableEnum type="SeasonType" name="season" class="TunableEnumEntry" default="SPRING" display="Season" muid="B81FB18876FC3A7C" static_entries="seasons-seasons_enums.SeasonType" description="The Season that this change is in." Deprecated="False" filter="0" group="General" />
                        <Tunable type="float" name="time_in_season" class="TunableRange" default="0.0" display="Time In Season" muid="9F449A43A3FDA655" min="0.0" max="1.0" description="The time within the season that this will occur." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                        <Tunable type="float" name="value" class="Tunable" default="0.0" display="Value" muid="36F79FAF7C2535D3" description="The value that we will set this parameter to in the&#xA;season" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                    </TunableTuple>
                </TunableList>
            </TunableTuple>
        </TunableList>

        <TunableList name="snow_behavior" class="TunableMapping" display="Snow Behavior" muid="CC6B4034184B955F" mapping_key="key" mapping_value="value" description="Snow behavior for this location for the various seasons&#xA;Defaults to NO_SNOW if not tuned for the current season&#xA;If set to PERMANENT, it will also set initial water to frozen&#xA;and windows to frosted" Deprecated="False" filter="0" group="General">
            <TunableTuple class="TunableTuple" muid="93179E88D1E4FB22" Deprecated="False" filter="0" group="General">
                <TunableEnum type="SeasonType" name="key" class="TunableEnumEntry" default="SPRING" display="Key" muid="8616DC01E7331F35" static_entries="seasons-seasons_enums.SeasonType" description="The Season." Deprecated="False" filter="0" group="General" />
                <TunableEnum type="SnowBehavior" name="value" class="TunableEnumEntry" default="NO_SNOW" display="Value" muid="2E0D72D80AD57F83" static_entries="weather-weather_enums.SnowBehavior" description="How snow behaves during this season at this location" Deprecated="False" filter="0" group="General" />
            </TunableTuple>
        </TunableList>

        <TunableEnum type="SnowBehavior" name="snow_behavior_no_seasons" class="TunableEnumEntry" default="NO_SNOW" display="Snow Behavior No Seasons" muid="250FA87F953861C4" static_entries="weather-weather_enums.SnowBehavior" description="How snow behaves during this season at this location" Deprecated="False" filter="0" group="General" />

        <TunableList name="tested_conditional_layers" class="TunableList" display="Tested Conditional Layers" muid="E34537AD4E0AADDE" description="The list of conditional layers that will load in to the the street&#xA;if its tests pass.&#xA;&#xA;NOTE: Only a subset of tests are registered to listen for updates.&#xA;Check with your GPE if you expect to have the conditional layers update&#xA;with test events. Otherwise, they will only be tested on zone-load." Deprecated="False" filter="0" group="General">
            <TunableTuple class="TunableTuple" muid="A647346C197C3BD2" description="A list of all of the conditional_layers to load into this Street." Deprecated="False" filter="0" group="General">
                <Tunable type="conditional_layer" name="conditional_layer" class="TunableReference" display="Conditional Layer" muid="C9C5E92F10EBA27C" description="A reference to a conditional layer that exists on this Street." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                <Tunable type="bool" name="process_after_event_handled" class="Tunable" default="False" display="Process After Event Handled" muid="2CCEC95CFBB82BA1" description="When True, conditional layer requests triggered by the test&#xA;events will be ordered to prioritize client-layer requests&#xA;first, then gameplay-layers." Deprecated="False" filter="0" group="General" />
                <Tunable type="bool" name="test_on_managed_world_edit_mode_load" class="Tunable" default="False" display="Test On Managed World Edit Mode Load" muid="B8F3054ACA347915" description="By default, conditional layers are not tested and started when entering&#xA;from Managed World Edit Mode.  Those layers which are enabled via this&#xA;option will be tested and started even in Managed World Edit Mode.&#xA;Generally these should be Client Only layers, but no such restriction is&#xA;enforced." Deprecated="False" filter="0" group="General" />
                <TunableList name="tests" class="TunableGlobalTestList" display="Tests" muid="5380176304BE3BAB" description="The tests that must pass in order for this conditional layer&#xA;to be loaded in. If tests are empty, the conditional layer&#xA;is considered valid." Deprecated="False" filter="0" group="General">
                    <TunableVariant type="None" class="TunableGlobalTestVariant" default="none" muid="E1A2B72E4BA13B15" description="A tunable test supported for a global resolver." Deprecated="False" filter="0" group="General">
                        <TunableTuple name="conditional_layer_loaded" class="TunableConditionalLayerLoadedTest" display="Conditional Layer Loaded" muid="7BE4C9EDCAB1025D" description="Test a conditional layers loaded status." Deprecated="False" filter="0" group="General">
                            <Tunable type="conditional_layer" name="conditional_layer" class="TunableReference" display="Conditional Layer" muid="442CCEF8DA7B5B8C" description="Which conditional layer to test." allow_none="False" Deprecated="False" filter="0" group="General" />
                            <Tunable type="bool" name="consider_queued_requests" class="Tunable" default="True" display="Consider Queued Requests" muid="1A6B88628FBE875" description="If checked then this test will consider the queued requests for this conditional layer." Deprecated="False" filter="0" group="General" />
                            <Tunable type="bool" name="negate" class="Tunable" default="False" display="Negate" muid="B9A5169FB7EB9889" description="If checked then this test will return True when not loaded." Deprecated="False" filter="0" group="General" />
                        </TunableTuple>
                        <TunableTuple name="global_policy" class="TunableGlobalPolicyStateTest" display="Global Policy" muid="5D380DF4567A8BA7" description="Global Policy State Test will test if the specified policies are in a given&#xA;progress state." Deprecated="False" filter="0" group="General">
                            <TunableEnum type="GlobalPolicyProgressEnum" name="progress_state" class="TunableEnumEntry" default="IN_PROGRESS" display="Progress State" muid="B2137C935D6929E" static_entries="global_policies-global_policy_enums.GlobalPolicyProgressEnum" description="The progress state against which to test." Deprecated="False" filter="0" group="General" />
                            <TunableVariant type="None" name="test_type" class="TunableVariant" default="all_active_policies" display="Test Type" muid="64A3DFFCBFFA62B4" description="The type of test to run. Note, 'All Active Policies' will test against&#xA;the set of all policies that have ever had progress made towards them." Deprecated="False" filter="0" group="General">
                                <TunableTuple name="all_active_policies" class="Tunable_AllActivePolicies" display="All Active Policies" muid="F724A1E573C4A870" description="Test if all policies are in a given state." Deprecated="False" filter="0" group="General">
                                    <Tunable type="bool" name="inverse" class="Tunable" default="False" display="Inverse" muid="6C2F15B9355004C3" description="If checked, test will pass if no states are in the specified progress&#xA;state." Deprecated="False" filter="0" group="General" />
                                </TunableTuple>
                                <TunableTuple name="specific_policy" class="Tunable_SpecificPolicy" display="Specific Policy" muid="321CC0D11956387F" description="Test if specific policies are in a given state." Deprecated="False" filter="0" group="General">
                                    <TunableList name="policies" class="TunableList" display="Policies" muid="94B7C152FE92407E" description="The subset of policies against which to test if all members are in &#xA;the specified state.&#xA;&#xA;Inactive policies that have never had progress made towards them&#xA;will be treated as Not-Started." Deprecated="False" filter="0" group="General" unique_entries="true">
                                        <Tunable type="snippet" class="TunableReference" muid="C6ED53352E44D088" description="The global policy whose progress state is checked." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="GlobalPolicy" />
                                    </TunableList>
                                </TunableTuple>
                            </TunableVariant>
                        </TunableTuple>
                        <TunableTuple name="narrative" class="TunableNarrativeTest" display="Narrative" muid="133E6A956EA53EA8" description="SeasonTest will test if the current simulation time falls within the&#xA;specified test conditions.&#xA;&#xA;If Seasons pack is not installed, this test will always fail." Deprecated="False" filter="0" group="General">
                            <TunableVariant type="None" name="test_type" class="TunableVariant" default="active_narrative_test" display="Test Type" muid="3CCBD293C141DB92" description="The type of test to run." Deprecated="False" filter="0" group="General">
                                <TunableTuple name="active_narrative_test" class="Tunable_ActiveNarrativeTest" display="Active Narrative Test" muid="C2250C700576E605" description="Checks for active narratives." Deprecated="False" filter="0" group="General">
                                    <TunableTuple name="narratives" class="TunableWhiteBlackList" display="Narratives" muid="3958ED9B79BB5E83" description="A tunable whitelist and blacklist." Deprecated="False" filter="0" group="General">
                                        <TunableVariant type="None" name="blacklist" class="OptionalTunable" default="nothing" display="Blacklist" muid="4F08C67C3AD6559A" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is not in the blacklist. If no blacklist is&#xA;specified, no items are disallowed." Deprecated="False" filter="0" group="General">
                                            <Tunable name="nothing" class="TunableExistance" display="Nothing" muid="3900C08E829EF3F8" />
                                            <TunableTuple name="specify" class="TunableBlacklist" display="Specify" muid="CDC64EFAB794DECE" description="A tunable blacklist." Deprecated="False" filter="0" group="General">
                                                <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="BF2CECCA99CA779D" description="Blacklisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                    <Tunable type="narrative" class="TunableReference" muid="3798D462CB61A22A" allow_none="False" Deprecated="False" filter="0" group="General" />
                                                </TunableList>
                                                <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="8D9EE8F8EA71A128" description="Tunable option for how many items must be in the blacklist&#xA;for the blacklist to fail when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="F8EE6C97B341A0B8" />
                                                    <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="FC33B1634BF0BFFA" description="When testing a collection of items, the number of items in&#xA;that collection that are in the blacklist must pass this&#xA;threshold test for the blacklist to disallow them all." Deprecated="False" filter="0" group="General">
                                                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="67548D51BD1BC5C3" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                        <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="76031F5AA2635C22" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                    </TunableTuple>
                                                </TunableVariant>
                                            </TunableTuple>
                                        </TunableVariant>
                                        <TunableVariant type="None" name="whitelist" class="OptionalTunable" default="everything" display="Whitelist" muid="6884B7A0ABA0EBF" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is in the whitelist. If no whitelist is&#xA;specified, all items are allowed." Deprecated="False" filter="0" group="General">
                                            <Tunable name="everything" class="TunableExistance" display="Everything" muid="ABA13A74820B0CA7" />
                                            <TunableTuple name="specify" class="TunableWhitelist" display="Specify" muid="53F54471424D54A0" description="A tunable whitelist." Deprecated="False" filter="0" group="General">
                                                <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="B28A3EA57C61061" description="Tunable option for how many items must be in the whitelist&#xA;for the whitelist to pass when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="54EC7A3D4E2C15B1" />
                                                    <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="6CDC05F380525BAF" description="When testing a collection of items, the number of items in&#xA;that collection that are in the whitelist must pass this&#xA;threshold test for the whitelist to allow them all." Deprecated="False" filter="0" group="General">
                                                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="BDF9260F25ABA51C" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                        <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="9B90875B649947A2" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                    </TunableTuple>
                                                </TunableVariant>
                                                <TunableList name="whitelist" class="TunableSet" display="Whitelist" muid="A5D2C651E5E8FC4C" description="Whitelisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                    <Tunable type="narrative" class="TunableReference" muid="CC9598DADE5AEB85" allow_none="False" Deprecated="False" filter="0" group="General" />
                                                </TunableList>
                                            </TunableTuple>
                                        </TunableVariant>
                                    </TunableTuple>
                                </TunableTuple>
                                <TunableTuple name="completed_narrative_test" class="Tunable_CompletedNarrativeTest" display="Completed Narrative Test" muid="7A7327542EAF5E17" description="Checks for completed narratives." Deprecated="False" filter="0" group="General">
                                    <TunableTuple name="narratives" class="TunableWhiteBlackList" display="Narratives" muid="6F0D36BADC078FC0" description="A tunable whitelist and blacklist." Deprecated="False" filter="0" group="General">
                                        <TunableVariant type="None" name="blacklist" class="OptionalTunable" default="nothing" display="Blacklist" muid="31D1570A9143C572" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is not in the blacklist. If no blacklist is&#xA;specified, no items are disallowed." Deprecated="False" filter="0" group="General">
                                            <Tunable name="nothing" class="TunableExistance" display="Nothing" muid="BE626CA67CC725FD" />
                                            <TunableTuple name="specify" class="TunableBlacklist" display="Specify" muid="20797A358D69385E" description="A tunable blacklist." Deprecated="False" filter="0" group="General">
                                                <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="8560531455AD9955" description="Blacklisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                    <Tunable type="narrative" class="TunableReference" muid="9468D667B23957B2" allow_none="False" Deprecated="False" filter="0" group="General" />
                                                </TunableList>
                                                <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="A1FB5A57031743B3" description="Tunable option for how many items must be in the blacklist&#xA;for the blacklist to fail when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="63F8767BF71E5824" />
                                                    <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="EFCB4582AE605F10" description="When testing a collection of items, the number of items in&#xA;that collection that are in the blacklist must pass this&#xA;threshold test for the blacklist to disallow them all." Deprecated="False" filter="0" group="General">
                                                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="F4C3515247799188" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                        <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="E37704485566DF27" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                    </TunableTuple>
                                                </TunableVariant>
                                            </TunableTuple>
                                        </TunableVariant>
                                        <TunableVariant type="None" name="whitelist" class="OptionalTunable" default="everything" display="Whitelist" muid="E58A0A4F883CBC02" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is in the whitelist. If no whitelist is&#xA;specified, all items are allowed." Deprecated="False" filter="0" group="General">
                                            <Tunable name="everything" class="TunableExistance" display="Everything" muid="36C065E1F01848DD" />
                                            <TunableTuple name="specify" class="TunableWhitelist" display="Specify" muid="4311DDAF65FFB063" description="A tunable whitelist." Deprecated="False" filter="0" group="General">
                                                <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="821725471D75EE1E" description="Tunable option for how many items must be in the whitelist&#xA;for the whitelist to pass when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="6E085FF910A935BD" />
                                                    <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="47127AFAFFB4E781" description="When testing a collection of items, the number of items in&#xA;that collection that are in the whitelist must pass this&#xA;threshold test for the whitelist to allow them all." Deprecated="False" filter="0" group="General">
                                                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="91C75FCA5BD03F2B" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                        <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="3CB4E4E9391BC226" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                    </TunableTuple>
                                                </TunableVariant>
                                                <TunableList name="whitelist" class="TunableSet" display="Whitelist" muid="92103EA3036305FE" description="Whitelisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                    <Tunable type="narrative" class="TunableReference" muid="6A5C51B6F4A8FB60" allow_none="False" Deprecated="False" filter="0" group="General" />
                                                </TunableList>
                                            </TunableTuple>
                                        </TunableVariant>
                                    </TunableTuple>
                                </TunableTuple>
                                <TunableTuple name="locked_narrative_test" class="Tunable_LockedNarrativeTest" display="Locked Narrative Test" muid="EEC7F4265EC26659" description="Checks for locked narratives." Deprecated="False" filter="0" group="General">
                                    <TunableTuple name="narratives" class="TunableWhiteBlackList" display="Narratives" muid="FCCE1486E14D43C5" description="A tunable whitelist and blacklist." Deprecated="False" filter="0" group="General">
                                        <TunableVariant type="None" name="blacklist" class="OptionalTunable" default="nothing" display="Blacklist" muid="C589AB51C3D38FC9" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is not in the blacklist. If no blacklist is&#xA;specified, no items are disallowed." Deprecated="False" filter="0" group="General">
                                            <Tunable name="nothing" class="TunableExistance" display="Nothing" muid="D9E8FB0C3A0F0691" />
                                            <TunableTuple name="specify" class="TunableBlacklist" display="Specify" muid="82FEC49445C4604D" description="A tunable blacklist." Deprecated="False" filter="0" group="General">
                                                <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="753D443F5B10B6AF" description="Blacklisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                    <Tunable type="narrative" class="TunableReference" muid="504E531471D6A8A0" allow_none="False" Deprecated="False" filter="0" group="General" />
                                                </TunableList>
                                                <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="4206D43FFC0F7803" description="Tunable option for how many items must be in the blacklist&#xA;for the blacklist to fail when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="7B47063591C4E605" />
                                                    <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="F6EB41816DA068D2" description="When testing a collection of items, the number of items in&#xA;that collection that are in the blacklist must pass this&#xA;threshold test for the blacklist to disallow them all." Deprecated="False" filter="0" group="General">
                                                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="DD4453E4E971687E" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                        <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="2D49C98B6882D2AF" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                    </TunableTuple>
                                                </TunableVariant>
                                            </TunableTuple>
                                        </TunableVariant>
                                        <TunableVariant type="None" name="whitelist" class="OptionalTunable" default="everything" display="Whitelist" muid="F80F547C9CC65E84" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is in the whitelist. If no whitelist is&#xA;specified, all items are allowed." Deprecated="False" filter="0" group="General">
                                            <Tunable name="everything" class="TunableExistance" display="Everything" muid="1761745D5F560D11" />
                                            <TunableTuple name="specify" class="TunableWhitelist" display="Specify" muid="41597198F0BBC73C" description="A tunable whitelist." Deprecated="False" filter="0" group="General">
                                                <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="CBF33E6B2194F60A" description="Tunable option for how many items must be in the whitelist&#xA;for the whitelist to pass when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="7C95162B025464B7" />
                                                    <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="116AD1C32E5A0FDE" description="When testing a collection of items, the number of items in&#xA;that collection that are in the whitelist must pass this&#xA;threshold test for the whitelist to allow them all." Deprecated="False" filter="0" group="General">
                                                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="B136D858F94BB4D0" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                        <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="4B34E99710F6DFEB" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                    </TunableTuple>
                                                </TunableVariant>
                                                <TunableList name="whitelist" class="TunableSet" display="Whitelist" muid="D2744B9C0D41104E" description="Whitelisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                    <Tunable type="narrative" class="TunableReference" muid="C6AE5006205ABE89" allow_none="False" Deprecated="False" filter="0" group="General" />
                                                </TunableList>
                                            </TunableTuple>
                                        </TunableVariant>
                                    </TunableTuple>
                                </TunableTuple>
                            </TunableVariant>
                        </TunableTuple>
                        <Tunable name="none" class="TunableExistance" display="None" muid="201263FF8061EE1F" />
                        <TunableTuple name="street_civic_policy" class="TunableStreetCivicPolicyTest" display="Street Civic Policy" muid="86874438FED206C7" description="Test the state of the selected Street's Civic Policy Provider." Deprecated="False" filter="0" group="General">
                            <TunableList name="civic_policy_tests" class="TunableList" display="Civic Policy Tests" muid="370AE038B03A5EEF" description="The tests we wish to run on the civic policies in question, run in&#xA;order.  AND operation, all must pass, first to fail stops tests." Deprecated="False" filter="0" group="General">
                                <TunableVariant type="None" class="TunableVariant" default="voting_open" muid="B47B58B3F309527F" description="Individual tests run on Civic Policy Provider." Deprecated="False" filter="0" group="General">
                                    <TunableTuple name="available" class="TunableBaseCivicPolicyTestAvailable" display="Available" muid="72DC498BDF682322" description="Test available policies. Available policies include everything tuned." Deprecated="False" filter="0" group="General">
                                        <TunableTuple name="white_black_list" class="TunableWhiteBlackList" display="White Black List" muid="70657A66D2426D82" description="The civic policies must pass the whitelist and blacklist&#xA;to pass the test." Deprecated="False" filter="0" group="General">
                                            <TunableVariant type="None" name="blacklist" class="OptionalTunable" default="nothing" display="Blacklist" muid="10F7A07B520E7AB8" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is not in the blacklist. If no blacklist is&#xA;specified, no items are disallowed." Deprecated="False" filter="0" group="General">
                                                <Tunable name="nothing" class="TunableExistance" display="Nothing" muid="EBB7D9DD6A23C5EE" />
                                                <TunableTuple name="specify" class="TunableBlacklist" display="Specify" muid="6AB2DAFA3334EC46" description="A tunable blacklist." Deprecated="False" filter="0" group="General">
                                                    <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="438A04720D364469" description="Blacklisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                        <Tunable type="snippet" class="TunableReference" muid="9EA275EF6570DBB4" description="Allowed and disallowed civic policies." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="BaseCivicPolicy" />
                                                    </TunableList>
                                                    <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="C1F4FBEB0AD7AA13" description="Tunable option for how many items must be in the blacklist&#xA;for the blacklist to fail when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="28194BE67FD9BA3C" />
                                                        <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="833978BFA5A1793F" description="When testing a collection of items, the number of items in&#xA;that collection that are in the blacklist must pass this&#xA;threshold test for the blacklist to disallow them all." Deprecated="False" filter="0" group="General">
                                                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="654428156727BFAF" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                            <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="3D3049D3699A811" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                </TunableTuple>
                                            </TunableVariant>
                                            <TunableVariant type="None" name="whitelist" class="OptionalTunable" default="everything" display="Whitelist" muid="296FEA4B12CB451B" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is in the whitelist. If no whitelist is&#xA;specified, all items are allowed." Deprecated="False" filter="0" group="General">
                                                <Tunable name="everything" class="TunableExistance" display="Everything" muid="26EF9A3C7E6AE830" />
                                                <TunableTuple name="specify" class="TunableWhitelist" display="Specify" muid="F577CE522578D2CE" description="A tunable whitelist." Deprecated="False" filter="0" group="General">
                                                    <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="ED616672AD4173B7" description="Tunable option for how many items must be in the whitelist&#xA;for the whitelist to pass when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="338C5A511018AA07" />
                                                        <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="9C38CB9EA2EE149C" description="When testing a collection of items, the number of items in&#xA;that collection that are in the whitelist must pass this&#xA;threshold test for the whitelist to allow them all." Deprecated="False" filter="0" group="General">
                                                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="91A35675ED5BD305" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                            <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="8D0E4C64722FD847" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                    <TunableList name="whitelist" class="TunableSet" display="Whitelist" muid="1A238786DF041FF9" description="Whitelisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                        <Tunable type="snippet" class="TunableReference" muid="D060362CFE49ED90" description="Allowed and disallowed civic policies." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="BaseCivicPolicy" />
                                                    </TunableList>
                                                </TunableTuple>
                                            </TunableVariant>
                                        </TunableTuple>
                                    </TunableTuple>
                                    <TunableTuple name="balloted" class="TunableBaseCivicPolicyTestBalloted" display="Balloted" muid="28FE6672CF23D310" description="Test balloted policies.  Policies being considered by the next/current vote are&#xA;balloted." Deprecated="False" filter="0" group="General">
                                        <TunableTuple name="white_black_list" class="TunableWhiteBlackList" display="White Black List" muid="FE645F3898C70599" description="The civic policies must pass the whitelist and blacklist&#xA;to pass the test." Deprecated="False" filter="0" group="General">
                                            <TunableVariant type="None" name="blacklist" class="OptionalTunable" default="nothing" display="Blacklist" muid="5CDF63D7221241CE" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is not in the blacklist. If no blacklist is&#xA;specified, no items are disallowed." Deprecated="False" filter="0" group="General">
                                                <Tunable name="nothing" class="TunableExistance" display="Nothing" muid="E73A5D6817789ED3" />
                                                <TunableTuple name="specify" class="TunableBlacklist" display="Specify" muid="20A4FF6487ECF0DD" description="A tunable blacklist." Deprecated="False" filter="0" group="General">
                                                    <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="9FA0B6C9C1F89A60" description="Blacklisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                        <Tunable type="snippet" class="TunableReference" muid="D0F3B75F0BCE2D83" description="Allowed and disallowed civic policies." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="BaseCivicPolicy" />
                                                    </TunableList>
                                                    <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="D45D0449128E3B2F" description="Tunable option for how many items must be in the blacklist&#xA;for the blacklist to fail when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="B0769FE86CE09A4C" />
                                                        <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="B2F2C872B6D756D2" description="When testing a collection of items, the number of items in&#xA;that collection that are in the blacklist must pass this&#xA;threshold test for the blacklist to disallow them all." Deprecated="False" filter="0" group="General">
                                                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="87B69E2C98F92710" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                            <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="6E6F64BF2FD088EB" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                </TunableTuple>
                                            </TunableVariant>
                                            <TunableVariant type="None" name="whitelist" class="OptionalTunable" default="everything" display="Whitelist" muid="16E2F4CD552A996A" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is in the whitelist. If no whitelist is&#xA;specified, all items are allowed." Deprecated="False" filter="0" group="General">
                                                <Tunable name="everything" class="TunableExistance" display="Everything" muid="521028F062CC9995" />
                                                <TunableTuple name="specify" class="TunableWhitelist" display="Specify" muid="3922440799ABF5F7" description="A tunable whitelist." Deprecated="False" filter="0" group="General">
                                                    <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="87FBD167F9942096" description="Tunable option for how many items must be in the whitelist&#xA;for the whitelist to pass when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="F24E1B64904D6072" />
                                                        <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="6346C00652D2BF28" description="When testing a collection of items, the number of items in&#xA;that collection that are in the whitelist must pass this&#xA;threshold test for the whitelist to allow them all." Deprecated="False" filter="0" group="General">
                                                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="4B539B2C9C8DCCC1" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                            <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="3A5FC33D19A83F9B" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                    <TunableList name="whitelist" class="TunableSet" display="Whitelist" muid="7CD34E2DF96DF00" description="Whitelisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                        <Tunable type="snippet" class="TunableReference" muid="CA593B1A9FF946C0" description="Allowed and disallowed civic policies." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="BaseCivicPolicy" />
                                                    </TunableList>
                                                </TunableTuple>
                                            </TunableVariant>
                                        </TunableTuple>
                                    </TunableTuple>
                                    <TunableTuple name="dormant" class="TunableBaseCivicPolicyTestDormant" display="Dormant" muid="EE2FE4762229FCF2" description="Test dormant policies. Dormant policies are not enacted and not balloted." Deprecated="False" filter="0" group="General">
                                        <TunableTuple name="white_black_list" class="TunableWhiteBlackList" display="White Black List" muid="BB3402FAA6A7B634" description="The civic policies must pass the whitelist and blacklist&#xA;to pass the test." Deprecated="False" filter="0" group="General">
                                            <TunableVariant type="None" name="blacklist" class="OptionalTunable" default="nothing" display="Blacklist" muid="EA38B39FBBC461E3" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is not in the blacklist. If no blacklist is&#xA;specified, no items are disallowed." Deprecated="False" filter="0" group="General">
                                                <Tunable name="nothing" class="TunableExistance" display="Nothing" muid="4570E96FE7EE5AE7" />
                                                <TunableTuple name="specify" class="TunableBlacklist" display="Specify" muid="76C3894F3F607E0" description="A tunable blacklist." Deprecated="False" filter="0" group="General">
                                                    <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="84E24BF5E1EDA89E" description="Blacklisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                        <Tunable type="snippet" class="TunableReference" muid="DC5F20DFA8FCAFDB" description="Allowed and disallowed civic policies." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="BaseCivicPolicy" />
                                                    </TunableList>
                                                    <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="D022115ACB959208" description="Tunable option for how many items must be in the blacklist&#xA;for the blacklist to fail when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="2413D40B3D7F2859" />
                                                        <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="622F755EB188EA70" description="When testing a collection of items, the number of items in&#xA;that collection that are in the blacklist must pass this&#xA;threshold test for the blacklist to disallow them all." Deprecated="False" filter="0" group="General">
                                                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="A38A1634CC742920" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                            <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="76F642CB60CAB9F3" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                </TunableTuple>
                                            </TunableVariant>
                                            <TunableVariant type="None" name="whitelist" class="OptionalTunable" default="everything" display="Whitelist" muid="62D78D78AA6592E2" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is in the whitelist. If no whitelist is&#xA;specified, all items are allowed." Deprecated="False" filter="0" group="General">
                                                <Tunable name="everything" class="TunableExistance" display="Everything" muid="DF777D8B9115A381" />
                                                <TunableTuple name="specify" class="TunableWhitelist" display="Specify" muid="F12BCFAAEF58B" description="A tunable whitelist." Deprecated="False" filter="0" group="General">
                                                    <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="B9AFE675D6873C68" description="Tunable option for how many items must be in the whitelist&#xA;for the whitelist to pass when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="161AE41CE5BACB44" />
                                                        <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="AAB44A708940BCE6" description="When testing a collection of items, the number of items in&#xA;that collection that are in the whitelist must pass this&#xA;threshold test for the whitelist to allow them all." Deprecated="False" filter="0" group="General">
                                                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="E90EA7D5BCC152C5" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                            <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="E7EC5A2541BE5E9D" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                    <TunableList name="whitelist" class="TunableSet" display="Whitelist" muid="4BF6005DD2A4F323" description="Whitelisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                        <Tunable type="snippet" class="TunableReference" muid="22AB3C3835A9503D" description="Allowed and disallowed civic policies." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="BaseCivicPolicy" />
                                                    </TunableList>
                                                </TunableTuple>
                                            </TunableVariant>
                                        </TunableTuple>
                                    </TunableTuple>
                                    <TunableTuple name="enacted" class="TunableBaseCivicPolicyTestEnacted" display="Enacted" muid="44225186CD15307D" description="Test enacted policies." Deprecated="False" filter="0" group="General">
                                        <TunableTuple name="white_black_list" class="TunableWhiteBlackList" display="White Black List" muid="FFA66A8F43AB06DE" description="The civic policies must pass the whitelist and blacklist&#xA;to pass the test." Deprecated="False" filter="0" group="General">
                                            <TunableVariant type="None" name="blacklist" class="OptionalTunable" default="nothing" display="Blacklist" muid="4AAB578D88A86874" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is not in the blacklist. If no blacklist is&#xA;specified, no items are disallowed." Deprecated="False" filter="0" group="General">
                                                <Tunable name="nothing" class="TunableExistance" display="Nothing" muid="C9417BF3C15D7CB5" />
                                                <TunableTuple name="specify" class="TunableBlacklist" display="Specify" muid="C65477F47EEC72B5" description="A tunable blacklist." Deprecated="False" filter="0" group="General">
                                                    <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="9E005E7BF1942F09" description="Blacklisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                        <Tunable type="snippet" class="TunableReference" muid="3D193CCFFFF13EB5" description="Allowed and disallowed civic policies." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="BaseCivicPolicy" />
                                                    </TunableList>
                                                    <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="8CB3759DDE6FAC64" description="Tunable option for how many items must be in the blacklist&#xA;for the blacklist to fail when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="F48DB2B903682902" />
                                                        <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="421338A57FC44C83" description="When testing a collection of items, the number of items in&#xA;that collection that are in the blacklist must pass this&#xA;threshold test for the blacklist to disallow them all." Deprecated="False" filter="0" group="General">
                                                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="8E151C8C723DE9CD" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                            <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="A6AAD730F3605061" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                </TunableTuple>
                                            </TunableVariant>
                                            <TunableVariant type="None" name="whitelist" class="OptionalTunable" default="everything" display="Whitelist" muid="F40219F8A1484004" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is in the whitelist. If no whitelist is&#xA;specified, all items are allowed." Deprecated="False" filter="0" group="General">
                                                <Tunable name="everything" class="TunableExistance" display="Everything" muid="4EC8565DE83EB4A2" />
                                                <TunableTuple name="specify" class="TunableWhitelist" display="Specify" muid="F9D2D8C8CE00734A" description="A tunable whitelist." Deprecated="False" filter="0" group="General">
                                                    <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="7EDF7E0E40E6917C" description="Tunable option for how many items must be in the whitelist&#xA;for the whitelist to pass when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="CFDC658F534D3F83" />
                                                        <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="4E0E8D3ECBEB324E" description="When testing a collection of items, the number of items in&#xA;that collection that are in the whitelist must pass this&#xA;threshold test for the whitelist to allow them all." Deprecated="False" filter="0" group="General">
                                                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="8A518F8CEA72E30D" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                            <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="CA48F27D944CADD7" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                    <TunableList name="whitelist" class="TunableSet" display="Whitelist" muid="ECA3E5AC3DE2B8C7" description="Whitelisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                        <Tunable type="snippet" class="TunableReference" muid="1A0B7789BC7B7797" description="Allowed and disallowed civic policies." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="BaseCivicPolicy" />
                                                    </TunableList>
                                                </TunableTuple>
                                            </TunableVariant>
                                        </TunableTuple>
                                    </TunableTuple>
                                    <TunableTuple name="repealable" class="TunableBaseCivicPolicyTestRepealable" display="Repealable" muid="E81DFE646662189B" description="Test up for repeal policies. Up for Repeal policies have been specifically marked&#xA;as such and will (if the vote/petition threshold is reached) be repealed&#xA;as part of closing the next vote." Deprecated="False" filter="0" group="General">
                                        <TunableTuple name="white_black_list" class="TunableWhiteBlackList" display="White Black List" muid="A91DCAF04B73D302" description="The civic policies must pass the whitelist and blacklist&#xA;to pass the test." Deprecated="False" filter="0" group="General">
                                            <TunableVariant type="None" name="blacklist" class="OptionalTunable" default="nothing" display="Blacklist" muid="7F9712A740D59148" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is not in the blacklist. If no blacklist is&#xA;specified, no items are disallowed." Deprecated="False" filter="0" group="General">
                                                <Tunable name="nothing" class="TunableExistance" display="Nothing" muid="BD12BD9657477D5B" />
                                                <TunableTuple name="specify" class="TunableBlacklist" display="Specify" muid="667C2AC5F20E6B7E" description="A tunable blacklist." Deprecated="False" filter="0" group="General">
                                                    <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="4D4062F9A104554D" description="Blacklisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                        <Tunable type="snippet" class="TunableReference" muid="BDDCA30063191B40" description="Allowed and disallowed civic policies." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="BaseCivicPolicy" />
                                                    </TunableList>
                                                    <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="146C6DBB510C9BDE" description="Tunable option for how many items must be in the blacklist&#xA;for the blacklist to fail when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="F0DD8781FF876D23" />
                                                        <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="40B925B161946452" description="When testing a collection of items, the number of items in&#xA;that collection that are in the blacklist must pass this&#xA;threshold test for the blacklist to disallow them all." Deprecated="False" filter="0" group="General">
                                                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="103084AE74B1BD48" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                            <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="5EEEF80A5E20D6AC" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                </TunableTuple>
                                            </TunableVariant>
                                            <TunableVariant type="None" name="whitelist" class="OptionalTunable" default="everything" display="Whitelist" muid="B17282EF91F89F7F" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is in the whitelist. If no whitelist is&#xA;specified, all items are allowed." Deprecated="False" filter="0" group="General">
                                                <Tunable name="everything" class="TunableExistance" display="Everything" muid="A7F797F7A18603F" />
                                                <TunableTuple name="specify" class="TunableWhitelist" display="Specify" muid="DC4EC1C07EF54A0B" description="A tunable whitelist." Deprecated="False" filter="0" group="General">
                                                    <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="E040F508ECB77228" description="Tunable option for how many items must be in the whitelist&#xA;for the whitelist to pass when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="62AE098915267D38" />
                                                        <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="AA2EA2F2C528D7DF" description="When testing a collection of items, the number of items in&#xA;that collection that are in the whitelist must pass this&#xA;threshold test for the whitelist to allow them all." Deprecated="False" filter="0" group="General">
                                                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="DB33F0EDDA986D67" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                            <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="C488CCA8F00FA0AA" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                    <TunableList name="whitelist" class="TunableSet" display="Whitelist" muid="BBEE682E740C2EEC" description="Whitelisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                        <Tunable type="snippet" class="TunableReference" muid="33EBE757B810A356" description="Allowed and disallowed civic policies." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="BaseCivicPolicy" />
                                                    </TunableList>
                                                </TunableTuple>
                                            </TunableVariant>
                                        </TunableTuple>
                                    </TunableTuple>
                                    <TunableTuple name="voting_open" class="TunableBaseCivicPolicyTestVotingOpen" display="Voting Open" muid="C57FB06DE5212D4B" description="If checked, will verify that voting is currently active." Deprecated="False" filter="0" group="General">
                                        <Tunable type="bool" name="negate" class="Tunable" default="False" display="Negate" muid="31A13897FE6C158" description="If checked then this test will return True when not active." Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                    <TunableTuple name="voting_time_until_change" class="TunableBaseCivicPolicyTestVotingTimeUntilChange" display="Voting Time Until Change" muid="666CBFE283AC3AAE" description="If checked, will check the time remaining before the next voting open status change." Deprecated="False" filter="0" group="General">
                                        <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="B0899010571F8FB3" description="The amount of time relative to the next voting state change to test." Deprecated="False" filter="0" group="General">
                                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="472F5B177CBB80B0" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                            <TunableTuple name="value" class="TunableTimeSpan" display="Value" muid="C18D1722C4B5F364" description="Duration before the next change." Deprecated="False" filter="0" group="General">
                                                <Tunable type="int" name="days" class="TunableRange" default="0" display="Days" muid="8F1FEFD7B97D47B6" min="0" max="None" description="Number of days" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                <Tunable type="int" name="hours" class="TunableRange" default="1" display="Hours" muid="F05A22484445E764" min="0" max="23" description="Number of hours" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                <Tunable type="int" name="minutes" class="TunableRange" default="0" display="Minutes" muid="67A65FEF74DD5497" min="0" max="59" description="Number of minutes" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                        </TunableTuple>
                                    </TunableTuple>
                                </TunableVariant>
                            </TunableList>
                            <TunableVariant type="None" name="street" class="TunableVariant" default="literal" display="Street" muid="8F996EA967F8C93F" description="Select what street to test." Deprecated="False" filter="0" group="General">
                                <Tunable type="street" name="literal" class="TunableReference" display="Literal" muid="973DEEF2FF274F88" description="Identify a specific Street." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                <TunableTuple name="via_street_participant" class="TunableStreetParticipant" display="Via Street Participant" muid="8DD4B3114C44E2F5" description="Get the street participant." Deprecated="False" filter="0" group="General" />
                                <TunableVariant type="None" name="via_zone_source" class="TunableVariant" default="use_current_zone" display="Via Zone Source" muid="B2245E3B3BF442AA" description="Select the street to use by specifying a Zone Source." Deprecated="False" filter="0" group="General">
                                    <TunableTuple name="use_current_zone" class="TunableActiveZone" display="Use Current Zone" muid="34D9652AA6DC90A7" description="Get the active zone." Deprecated="False" filter="0" group="General" />
                                    <TunableTuple name="use_participant_home_zone" class="TunableParticipantHomeZone" display="Use Participant Home Zone" muid="E87FA7FA56A680DD" description="Get a participant's home zone. Can be None if they don't have one." Deprecated="False" filter="0" group="General">
                                        <TunableEnum type="ParticipantTypeSingleSim" name="participant" class="TunableEnumEntry" default="Actor" display="Participant" muid="2DDE59B470E51BFB" static_entries="interactions.ParticipantTypeSingleSim" description="Test against the participant's home zone. Townies' home zone will&#xA;be None." Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                    <TunableTuple name="use_pick_info" class="TunablePickInfoZone" display="Use Pick Info" muid="EE58A34CAC73EFD8" description="Get the zone of the lot the user clicked on." Deprecated="False" filter="0" group="General" />
                                    <TunableTuple name="use_picked_zone_ids" class="TunablePickedZoneIds" display="Use Picked Zone Ids" muid="C9D15AE0A233C54B" description="Get the zone from the interaction's picked_zone_ids participant. Usually&#xA;comes from a picker." Deprecated="False" filter="0" group="General" />
                                </TunableVariant>
                            </TunableVariant>
                        </TunableTuple>
                        <TunableTuple name="venue_civic_policy" class="TunableVenueCivicPolicyTest" display="Venue Civic Policy" muid="D09686B9535C8ED5" description="Test the state of the current Venue's Civic Policy Provider." Deprecated="False" filter="0" group="General">
                            <TunableList name="civic_policy_tests" class="TunableList" display="Civic Policy Tests" muid="B29A328A19CE1BFB" description="The tests we wish to run on the civic policies in question, run in&#xA;order.  AND operation, all must pass, first to fail stops tests." Deprecated="False" filter="0" group="General">
                                <TunableVariant type="None" class="TunableVariant" default="voting_open" muid="5017A6549058B52C" description="Individual tests run on Civic Policy Provider." Deprecated="False" filter="0" group="General">
                                    <TunableTuple name="available" class="TunableBaseCivicPolicyTestAvailable" display="Available" muid="CBAE13CEDB4740A1" description="Test available policies. Available policies include everything tuned." Deprecated="False" filter="0" group="General">
                                        <TunableTuple name="white_black_list" class="TunableWhiteBlackList" display="White Black List" muid="F67EA8AC1EBFCA0A" description="The civic policies must pass the whitelist and blacklist&#xA;to pass the test." Deprecated="False" filter="0" group="General">
                                            <TunableVariant type="None" name="blacklist" class="OptionalTunable" default="nothing" display="Blacklist" muid="A833D362DF0C67BC" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is not in the blacklist. If no blacklist is&#xA;specified, no items are disallowed." Deprecated="False" filter="0" group="General">
                                                <Tunable name="nothing" class="TunableExistance" display="Nothing" muid="A9CE799A026B017" />
                                                <TunableTuple name="specify" class="TunableBlacklist" display="Specify" muid="B159764E28BF1803" description="A tunable blacklist." Deprecated="False" filter="0" group="General">
                                                    <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="F2A933697E91CB50" description="Blacklisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                        <Tunable type="snippet" class="TunableReference" muid="85FBD180356892C0" description="Allowed and disallowed civic policies." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="BaseCivicPolicy" />
                                                    </TunableList>
                                                    <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="1090CA1A1729360B" description="Tunable option for how many items must be in the blacklist&#xA;for the blacklist to fail when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="813ADB0243B3FFD5" />
                                                        <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="51B1A972BC5D6111" description="When testing a collection of items, the number of items in&#xA;that collection that are in the blacklist must pass this&#xA;threshold test for the blacklist to disallow them all." Deprecated="False" filter="0" group="General">
                                                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="95D5DC3652C32DA7" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                            <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="A40F2829D13D0934" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                </TunableTuple>
                                            </TunableVariant>
                                            <TunableVariant type="None" name="whitelist" class="OptionalTunable" default="everything" display="Whitelist" muid="38438AA179CEE495" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is in the whitelist. If no whitelist is&#xA;specified, all items are allowed." Deprecated="False" filter="0" group="General">
                                                <Tunable name="everything" class="TunableExistance" display="Everything" muid="89D4A94A82D7CA69" />
                                                <TunableTuple name="specify" class="TunableWhitelist" display="Specify" muid="419ED2EAFCDC90BE" description="A tunable whitelist." Deprecated="False" filter="0" group="General">
                                                    <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="4C262719CBC2ED57" description="Tunable option for how many items must be in the whitelist&#xA;for the whitelist to pass when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="C84092F0E5334903" />
                                                        <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="C5C9F1A9DA5BE57F" description="When testing a collection of items, the number of items in&#xA;that collection that are in the whitelist must pass this&#xA;threshold test for the whitelist to allow them all." Deprecated="False" filter="0" group="General">
                                                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="28414D38440005BE" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                            <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="C6AC6634F209A39D" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                    <TunableList name="whitelist" class="TunableSet" display="Whitelist" muid="6C437CAF598F5233" description="Whitelisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                        <Tunable type="snippet" class="TunableReference" muid="147DD4A2C7471669" description="Allowed and disallowed civic policies." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="BaseCivicPolicy" />
                                                    </TunableList>
                                                </TunableTuple>
                                            </TunableVariant>
                                        </TunableTuple>
                                    </TunableTuple>
                                    <TunableTuple name="balloted" class="TunableBaseCivicPolicyTestBalloted" display="Balloted" muid="1844B3990279E58C" description="Test balloted policies.  Policies being considered by the next/current vote are&#xA;balloted." Deprecated="False" filter="0" group="General">
                                        <TunableTuple name="white_black_list" class="TunableWhiteBlackList" display="White Black List" muid="45ACF27118394549" description="The civic policies must pass the whitelist and blacklist&#xA;to pass the test." Deprecated="False" filter="0" group="General">
                                            <TunableVariant type="None" name="blacklist" class="OptionalTunable" default="nothing" display="Blacklist" muid="1E50EF7E2D830203" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is not in the blacklist. If no blacklist is&#xA;specified, no items are disallowed." Deprecated="False" filter="0" group="General">
                                                <Tunable name="nothing" class="TunableExistance" display="Nothing" muid="6CEB8646DE17B4EA" />
                                                <TunableTuple name="specify" class="TunableBlacklist" display="Specify" muid="E2E48241A920CC39" description="A tunable blacklist." Deprecated="False" filter="0" group="General">
                                                    <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="EB28124E3FE906CB" description="Blacklisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                        <Tunable type="snippet" class="TunableReference" muid="4042CDED81C8E84F" description="Allowed and disallowed civic policies." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="BaseCivicPolicy" />
                                                    </TunableList>
                                                    <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="ACF452BC59E1A827" description="Tunable option for how many items must be in the blacklist&#xA;for the blacklist to fail when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="CAF2BFE59829021B" />
                                                        <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="672D442BA1D42B91" description="When testing a collection of items, the number of items in&#xA;that collection that are in the blacklist must pass this&#xA;threshold test for the blacklist to disallow them all." Deprecated="False" filter="0" group="General">
                                                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="8A39AE594B0CEA6D" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                            <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="CAFE8DB349E09D7A" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                </TunableTuple>
                                            </TunableVariant>
                                            <TunableVariant type="None" name="whitelist" class="OptionalTunable" default="everything" display="Whitelist" muid="9CBF2AD32A52792E" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is in the whitelist. If no whitelist is&#xA;specified, all items are allowed." Deprecated="False" filter="0" group="General">
                                                <Tunable name="everything" class="TunableExistance" display="Everything" muid="E2AA13992753DE2A" />
                                                <TunableTuple name="specify" class="TunableWhitelist" display="Specify" muid="CC202A32021C5735" description="A tunable whitelist." Deprecated="False" filter="0" group="General">
                                                    <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="2C3E727EE781B228" description="Tunable option for how many items must be in the whitelist&#xA;for the whitelist to pass when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="EAC300B2FEA880C4" />
                                                        <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="BFC495A186F117D4" description="When testing a collection of items, the number of items in&#xA;that collection that are in the whitelist must pass this&#xA;threshold test for the whitelist to allow them all." Deprecated="False" filter="0" group="General">
                                                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="A9F16803C8C0CB8A" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                            <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="47C316D7A258F607" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                    <TunableList name="whitelist" class="TunableSet" display="Whitelist" muid="8DC41F4019262D42" description="Whitelisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                        <Tunable type="snippet" class="TunableReference" muid="15AAFC13B89B9C63" description="Allowed and disallowed civic policies." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="BaseCivicPolicy" />
                                                    </TunableList>
                                                </TunableTuple>
                                            </TunableVariant>
                                        </TunableTuple>
                                    </TunableTuple>
                                    <TunableTuple name="dormant" class="TunableBaseCivicPolicyTestDormant" display="Dormant" muid="87AA0DDD8A454FD1" description="Test dormant policies. Dormant policies are not enacted and not balloted." Deprecated="False" filter="0" group="General">
                                        <TunableTuple name="white_black_list" class="TunableWhiteBlackList" display="White Black List" muid="1B9D74E160E461A5" description="The civic policies must pass the whitelist and blacklist&#xA;to pass the test." Deprecated="False" filter="0" group="General">
                                            <TunableVariant type="None" name="blacklist" class="OptionalTunable" default="nothing" display="Blacklist" muid="9715F0C8E7E8B18A" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is not in the blacklist. If no blacklist is&#xA;specified, no items are disallowed." Deprecated="False" filter="0" group="General">
                                                <Tunable name="nothing" class="TunableExistance" display="Nothing" muid="884BA8277232D077" />
                                                <TunableTuple name="specify" class="TunableBlacklist" display="Specify" muid="C695A92CA5E9F99E" description="A tunable blacklist." Deprecated="False" filter="0" group="General">
                                                    <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="E77ADEE6968441C8" description="Blacklisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                        <Tunable type="snippet" class="TunableReference" muid="5CAEE4826DE569C0" description="Allowed and disallowed civic policies." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="BaseCivicPolicy" />
                                                    </TunableList>
                                                    <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="C10CFE82BDC0DF0F" description="Tunable option for how many items must be in the blacklist&#xA;for the blacklist to fail when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="2B4F57F466EDA4A8" />
                                                        <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="D128CFF8E90EE915" description="When testing a collection of items, the number of items in&#xA;that collection that are in the blacklist must pass this&#xA;threshold test for the blacklist to disallow them all." Deprecated="False" filter="0" group="General">
                                                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="23BA26D59E156194" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                            <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="59755B0AE79DE40" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                </TunableTuple>
                                            </TunableVariant>
                                            <TunableVariant type="None" name="whitelist" class="OptionalTunable" default="everything" display="Whitelist" muid="681BD7BCED98C8E7" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is in the whitelist. If no whitelist is&#xA;specified, all items are allowed." Deprecated="False" filter="0" group="General">
                                                <Tunable name="everything" class="TunableExistance" display="Everything" muid="9CEA3D92CDDE8A6B" />
                                                <TunableTuple name="specify" class="TunableWhitelist" display="Specify" muid="CCE79CBF0905965B" description="A tunable whitelist." Deprecated="False" filter="0" group="General">
                                                    <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="B6DDD4EF0E291722" description="Tunable option for how many items must be in the whitelist&#xA;for the whitelist to pass when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="BC7F7B59A2408A46" />
                                                        <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="202B08578609FE75" description="When testing a collection of items, the number of items in&#xA;that collection that are in the whitelist must pass this&#xA;threshold test for the whitelist to allow them all." Deprecated="False" filter="0" group="General">
                                                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="9607470A2856B39E" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                            <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="8C25B86CD55CFA92" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                    <TunableList name="whitelist" class="TunableSet" display="Whitelist" muid="F220C549DCC1C3C2" description="Whitelisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                        <Tunable type="snippet" class="TunableReference" muid="6D3F98316EBD1243" description="Allowed and disallowed civic policies." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="BaseCivicPolicy" />
                                                    </TunableList>
                                                </TunableTuple>
                                            </TunableVariant>
                                        </TunableTuple>
                                    </TunableTuple>
                                    <TunableTuple name="enacted" class="TunableBaseCivicPolicyTestEnacted" display="Enacted" muid="9111B590AFE9BFCD" description="Test enacted policies." Deprecated="False" filter="0" group="General">
                                        <TunableTuple name="white_black_list" class="TunableWhiteBlackList" display="White Black List" muid="12CB8B80356BC3B9" description="The civic policies must pass the whitelist and blacklist&#xA;to pass the test." Deprecated="False" filter="0" group="General">
                                            <TunableVariant type="None" name="blacklist" class="OptionalTunable" default="nothing" display="Blacklist" muid="711D6309E6C2F0E8" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is not in the blacklist. If no blacklist is&#xA;specified, no items are disallowed." Deprecated="False" filter="0" group="General">
                                                <Tunable name="nothing" class="TunableExistance" display="Nothing" muid="2371B9C3AF3EC4D7" />
                                                <TunableTuple name="specify" class="TunableBlacklist" display="Specify" muid="EA2299CC0EB4D4D6" description="A tunable blacklist." Deprecated="False" filter="0" group="General">
                                                    <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="EF8614801D42AD07" description="Blacklisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                        <Tunable type="snippet" class="TunableReference" muid="AAE6741FDA96DF5D" description="Allowed and disallowed civic policies." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="BaseCivicPolicy" />
                                                    </TunableList>
                                                    <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="1BE7ED378DFDC5FB" description="Tunable option for how many items must be in the blacklist&#xA;for the blacklist to fail when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="C782649D0DFC1912" />
                                                        <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="AE8F4D96D9596D53" description="When testing a collection of items, the number of items in&#xA;that collection that are in the blacklist must pass this&#xA;threshold test for the blacklist to disallow them all." Deprecated="False" filter="0" group="General">
                                                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="1559CB0D4F08D377" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                            <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="42EDA19320DEC611" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                </TunableTuple>
                                            </TunableVariant>
                                            <TunableVariant type="None" name="whitelist" class="OptionalTunable" default="everything" display="Whitelist" muid="35BFA1856A9164EB" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is in the whitelist. If no whitelist is&#xA;specified, all items are allowed." Deprecated="False" filter="0" group="General">
                                                <Tunable name="everything" class="TunableExistance" display="Everything" muid="B3B9C1DBF0CDD0EB" />
                                                <TunableTuple name="specify" class="TunableWhitelist" display="Specify" muid="4D704FE4E79BF911" description="A tunable whitelist." Deprecated="False" filter="0" group="General">
                                                    <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="FF2F5F91C613D36B" description="Tunable option for how many items must be in the whitelist&#xA;for the whitelist to pass when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="FF542C53562627F8" />
                                                        <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="BE3D2FAC937A3261" description="When testing a collection of items, the number of items in&#xA;that collection that are in the whitelist must pass this&#xA;threshold test for the whitelist to allow them all." Deprecated="False" filter="0" group="General">
                                                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="92D0B1A096C592C3" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                            <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="9BD0FCDBBCC2086A" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                    <TunableList name="whitelist" class="TunableSet" display="Whitelist" muid="299181B26BFE395" description="Whitelisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                        <Tunable type="snippet" class="TunableReference" muid="907C6D04DF217701" description="Allowed and disallowed civic policies." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="BaseCivicPolicy" />
                                                    </TunableList>
                                                </TunableTuple>
                                            </TunableVariant>
                                        </TunableTuple>
                                    </TunableTuple>
                                    <TunableTuple name="repealable" class="TunableBaseCivicPolicyTestRepealable" display="Repealable" muid="94C816914376D416" description="Test up for repeal policies. Up for Repeal policies have been specifically marked&#xA;as such and will (if the vote/petition threshold is reached) be repealed&#xA;as part of closing the next vote." Deprecated="False" filter="0" group="General">
                                        <TunableTuple name="white_black_list" class="TunableWhiteBlackList" display="White Black List" muid="DC58FEF98E1466C0" description="The civic policies must pass the whitelist and blacklist&#xA;to pass the test." Deprecated="False" filter="0" group="General">
                                            <TunableVariant type="None" name="blacklist" class="OptionalTunable" default="nothing" display="Blacklist" muid="F2989F1338E4ED32" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is not in the blacklist. If no blacklist is&#xA;specified, no items are disallowed." Deprecated="False" filter="0" group="General">
                                                <Tunable name="nothing" class="TunableExistance" display="Nothing" muid="242671F276D2031B" />
                                                <TunableTuple name="specify" class="TunableBlacklist" display="Specify" muid="1632B3251C0DB54B" description="A tunable blacklist." Deprecated="False" filter="0" group="General">
                                                    <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="2AA4B428737078D6" description="Blacklisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                        <Tunable type="snippet" class="TunableReference" muid="2BAC3F9A1E78B97C" description="Allowed and disallowed civic policies." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="BaseCivicPolicy" />
                                                    </TunableList>
                                                    <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="6C6B202AB34848B5" description="Tunable option for how many items must be in the blacklist&#xA;for the blacklist to fail when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="9E1620565012A400" />
                                                        <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="57FAB8C2AE33DAEE" description="When testing a collection of items, the number of items in&#xA;that collection that are in the blacklist must pass this&#xA;threshold test for the blacklist to disallow them all." Deprecated="False" filter="0" group="General">
                                                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="2C671D7AEDE20C8F" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                            <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="D7DBDDAB658A05C2" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                </TunableTuple>
                                            </TunableVariant>
                                            <TunableVariant type="None" name="whitelist" class="OptionalTunable" default="everything" display="Whitelist" muid="A185C36999E16C36" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is in the whitelist. If no whitelist is&#xA;specified, all items are allowed." Deprecated="False" filter="0" group="General">
                                                <Tunable name="everything" class="TunableExistance" display="Everything" muid="61FF84CB0C521CB3" />
                                                <TunableTuple name="specify" class="TunableWhitelist" display="Specify" muid="8323AC70FECA11AE" description="A tunable whitelist." Deprecated="False" filter="0" group="General">
                                                    <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="CC4D54B885704CAC" description="Tunable option for how many items must be in the whitelist&#xA;for the whitelist to pass when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="DD7A1CF11B189BD6" />
                                                        <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="CBA19C3EC2417529" description="When testing a collection of items, the number of items in&#xA;that collection that are in the whitelist must pass this&#xA;threshold test for the whitelist to allow them all." Deprecated="False" filter="0" group="General">
                                                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="5E7F4F426449B227" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                            <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="DD382D85951F9C84" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                    <TunableList name="whitelist" class="TunableSet" display="Whitelist" muid="B27022FEC167E22F" description="Whitelisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                        <Tunable type="snippet" class="TunableReference" muid="80F698A1E5AAB1DB" description="Allowed and disallowed civic policies." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="BaseCivicPolicy" />
                                                    </TunableList>
                                                </TunableTuple>
                                            </TunableVariant>
                                        </TunableTuple>
                                    </TunableTuple>
                                    <TunableTuple name="voting_open" class="TunableBaseCivicPolicyTestVotingOpen" display="Voting Open" muid="BC4C1606980E6FFB" description="If checked, will verify that voting is currently active." Deprecated="False" filter="0" group="General">
                                        <Tunable type="bool" name="negate" class="Tunable" default="False" display="Negate" muid="9F16937597DF04B7" description="If checked then this test will return True when not active." Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                    <TunableTuple name="voting_time_until_change" class="TunableBaseCivicPolicyTestVotingTimeUntilChange" display="Voting Time Until Change" muid="D0C572557B62A594" description="If checked, will check the time remaining before the next voting open status change." Deprecated="False" filter="0" group="General">
                                        <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="4422BDEA3127B103" description="The amount of time relative to the next voting state change to test." Deprecated="False" filter="0" group="General">
                                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="B7E88421BE028CDE" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                            <TunableTuple name="value" class="TunableTimeSpan" display="Value" muid="E796CE99D549C8B" description="Duration before the next change." Deprecated="False" filter="0" group="General">
                                                <Tunable type="int" name="days" class="TunableRange" default="0" display="Days" muid="8813C3B30768FC69" min="0" max="None" description="Number of days" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                <Tunable type="int" name="hours" class="TunableRange" default="1" display="Hours" muid="6CBF03645B454014" min="0" max="23" description="Number of hours" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                <Tunable type="int" name="minutes" class="TunableRange" default="0" display="Minutes" muid="6B41BE4C122155A1" min="0" max="59" description="Number of minutes" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                        </TunableTuple>
                                    </TunableTuple>
                                </TunableVariant>
                            </TunableList>
                            <TunableVariant type="None" name="venue" class="TunableVariant" default="use_current_zone" display="Venue" muid="D608977E92D625DB" description="Select the zone's venue to test by specifying a Zone Source." Deprecated="False" filter="0" group="General">
                                <TunableTuple name="use_current_zone" class="TunableActiveZone" display="Use Current Zone" muid="D6DEA8E3E90CD556" description="Get the active zone." Deprecated="False" filter="0" group="General" />
                                <TunableTuple name="use_participant_home_zone" class="TunableParticipantHomeZone" display="Use Participant Home Zone" muid="61DF9D3648902F92" description="Get a participant's home zone. Can be None if they don't have one." Deprecated="False" filter="0" group="General">
                                    <TunableEnum type="ParticipantTypeSingleSim" name="participant" class="TunableEnumEntry" default="Actor" display="Participant" muid="2C1C2BF87B77204A" static_entries="interactions.ParticipantTypeSingleSim" description="Test against the participant's home zone. Townies' home zone will&#xA;be None." Deprecated="False" filter="0" group="General" />
                                </TunableTuple>
                                <TunableTuple name="use_pick_info" class="TunablePickInfoZone" display="Use Pick Info" muid="1739BB10FEEFBF86" description="Get the zone of the lot the user clicked on." Deprecated="False" filter="0" group="General" />
                                <TunableTuple name="use_picked_zone_ids" class="TunablePickedZoneIds" display="Use Picked Zone Ids" muid="880305D90CFF4C9F" description="Get the zone from the interaction's picked_zone_ids participant. Usually&#xA;comes from a picker." Deprecated="False" filter="0" group="General" />
                            </TunableVariant>
                        </TunableTuple>
                    </TunableVariant>
                </TunableList>
            </TunableTuple>
        </TunableList>

        <TunableTuple name="townie_demographics" class="TunableTuple" display="Townie Demographics" muid="EC7C7246E62B619E" description="Townie population demographics for the street." Deprecated="False" filter="0" group="General">
            <TunableList name="filter_features" class="TunableList" display="Filter Features" muid="FD7B7E3A51EDBBEE" description="Sims created as townies living on this street, they will gain&#xA;one set of features in this list. Features are applied as&#xA;Sim creation tags and additional filter terms to use." Deprecated="False" filter="0" group="General">
                <TunableTuple class="TunableTuple" muid="2772562943B4A8E0" description="                    " Deprecated="False" filter="0" group="General">
                    <TunableList name="filter_terms" class="TunableList" display="Filter Terms" muid="4DBA36398397C659" description="Filter terms to inject into the filter." Deprecated="False" filter="0" group="General">
                        <TunableVariant type="None" class="FilterTermVariant" default="skill" muid="AACB358EF4C61E66" Deprecated="False" filter="0" group="General">
                            <TunableTuple name="age" class="TunableAgeFilterTerm" display="Age" muid="AA2BC1429482B7AE" description="A term for filtering Sims based on their age. The score is modified based on&#xA;the tuned ideal value for the age. If you are looking for age variation, please&#xA;choose &quot;Age Variant&quot; instead.&#xA;&#xA;Only new Sims may be conformed by creating them of a valid age. Existing&#xA;Sims may not be conformed." Deprecated="False" filter="0" group="General">
                                <Tunable type="bool" name="conform_optional" class="Tunable" default="False" display="Conform Optional" muid="55465C39616220CB" description="If enabled, failing to conform this filter will not stop Sim&#xA;creation." Deprecated="False" filter="0" group="General" />
                                <TunableEnum type="Age" name="ideal_value" class="TunableEnumEntry" default="ADULT" display="Ideal Value" muid="C6B81F2E6047B368" static_entries="sims-sim_info_types.Age" description="The ideal age of the sim we are filtering for." Deprecated="False" filter="0" group="General" />
                                <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="BF5D87FF6615E215" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                                <TunableEnum type="Age" name="max_value" class="TunableEnumEntry" default="ELDER" display="Max Value" muid="3D2C4B2ED61CB98E" static_entries="sims-sim_info_types.Age" description="The maximum age of the sim we are filtering for." Deprecated="False" filter="0" group="General" />
                                <TunableEnum type="Age" name="min_value" class="TunableEnumEntry" default="BABY" display="Min Value" muid="B660015B63EC1898" static_entries="sims-sim_info_types.Age" description="The minimum age of the sim we are filtering for." Deprecated="False" filter="0" group="General" />
                                <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="B59075FDA15EAC1E" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                            </TunableTuple>
                            <TunableTuple name="age_progress" class="TunableAgeProgressFilterTerm" display="Age Progress" muid="F0A54B1F766AB41F" description="A term for filtering Sims based on their age progress. The score is modified&#xA;based on the tuned ideal value.&#xA;&#xA;New and existing Sims can be conformed by advancing their age progress,&#xA;within the tuned bounds." Deprecated="False" filter="0" group="General">
                                <Tunable type="bool" name="conform_optional" class="Tunable" default="False" display="Conform Optional" muid="7E2CCBE6E26970B0" description="If enabled, failing to conform this filter will not stop Sim&#xA;creation." Deprecated="False" filter="0" group="General" />
                                <Tunable type="float" name="ideal_value" class="Tunable" default="5" display="Ideal Value" muid="933EACFAFA01535F" description="Ideal value of age progress." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                <Tunable type="float" name="max_value" class="Tunable" default="10" display="Max Value" muid="51E265DC82E80BC2" description="Maximum value of age progress." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                <Tunable type="float" name="min_value" class="Tunable" default="0" display="Min Value" muid="7BAFFAABC8239C95" description="Minimum value of age progress." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="88766350143A4DF8" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                            </TunableTuple>
                            <TunableTuple name="age_progress_percentage" class="TunableAgeProgressPercentageFilterTerm" display="Age Progress Percentage" muid="ED4DDBC7843B635B" description="A term for filtering Sims based on their age progress as a percentage. The &#xA;score is modified based on the tuned ideal value. Age progress values over&#xA;100% are capped at 100% for the purposes of evaluating a sim's age progress&#xA;for this filter.&#xA;&#xA;Sims may not be conformed to match this filter term." Deprecated="False" filter="0" group="General">
                                <Tunable type="bool" name="conform_optional" class="Tunable" default="False" display="Conform Optional" muid="824187C1F71EDBD9" description="If enabled, failing to conform this filter will not stop Sim&#xA;creation." Deprecated="False" filter="0" group="General" />
                                <Tunable type="int" name="ideal_value" class="Tunable" default="50" display="Ideal Value" muid="CF016FEEA617F92" description="Ideal value of age progress as a percentage." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="449D88BB9AEE3DCC" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                <TunableTuple name="value_range" class="TunableInterval" display="Value Range" muid="DB5CF4DCE1FDED0" description="The minimum and maximum age progress percentage." Deprecated="False" filter="0" group="General">
                                    <Tunable type="int" name="lower_bound" class="TunableRange" default="0" display="Lower Bound" muid="22BA48452681BD2D" min="0" max="None" description="The lower bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                    <Tunable type="int" name="upper_bound" class="TunableRange" default="100" display="Upper Bound" muid="4F00EB807C54553" min="None" max="100" description="The upper bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                </TunableTuple>
                            </TunableTuple>
                            <TunableTuple name="age_variant" class="TunableAgeVariationFilterTerm" display="Age Variant" muid="C5CA633135840CE8" description="A term for filtering Sims based on a list of allowed ages.&#xA;&#xA;Only new Sims may be conformed by creating them of a valid age. Existing&#xA;Sims may not be conformed." Deprecated="False" filter="0" group="General">
                                <TunableList name="allowed_ages" class="TunableEnumSet" display="Allowed Ages" muid="25303DD79E5BEC76" description="The allowed ages we're filtering for." Deprecated="False" filter="0" group="General" unique_entries="true">
                                    <TunableEnum type="Age" class="TunableEnumEntry" default="ADULT" muid="27BEF96455931B88" static_entries="sims-sim_info_types.Age" Deprecated="False" filter="0" group="General" />
                                </TunableList>
                                <Tunable type="bool" name="conform_optional" class="Tunable" default="False" display="Conform Optional" muid="4A9AA1ADE1A3558C" description="If enabled, failing to conform this filter will not stop Sim&#xA;creation." Deprecated="False" filter="0" group="General" />
                                <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="29407587E78D1F67" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                            </TunableTuple>
                            <TunableTuple name="can_age_up" class="TunableAgeUpFilterTerm" display="Can Age Up" muid="BAC92D63B24870E2" description="A term for filtering Sims that may or may not age up at this time. Note:&#xA;This probably does not do what you want it to do. It simply checks if the&#xA;sim is not an elder and that aging is not disabled.&#xA;&#xA;Sims may not be conformed to match this filter term." Deprecated="False" filter="0" group="General">
                                <Tunable type="bool" name="conform_optional" class="Tunable" default="False" display="Conform Optional" muid="D90972124EC72862" description="If enabled, failing to conform this filter will not stop Sim&#xA;creation." Deprecated="False" filter="0" group="General" />
                                <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="ED1D6BA8E39E9408" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                                <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="D7AC767FF2F5ECB6" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                            </TunableTuple>
                            <TunableTuple name="can_be_outside" class="TunableCanBeOutside" display="Can Be Outside" muid="C421CFA52257C15B" description="A term for filtering Sims that may or may not be outside.&#xA;Restriction is implemented only for vampires. It needs to be updated &#xA;if we add other occults or systems that resctrict it.&#xA;&#xA;Normal Sim will always pass this filter. Certain Sim, e.g Vampire, &#xA;cannot be outside on daytime except daywalker vampire.&#xA;&#xA;New and existing Sims may be conformed to match this filter term by&#xA;granting or removing vampire trait and daywalker perk." Deprecated="False" filter="0" group="General">
                                <Tunable type="bool" name="at_anytime" class="Tunable" default="False" display="At Anytime" muid="F33AD4B0A10D355A" description="If enabled, the Sim needs to be able to go outside during day and night.&#xA;Otherwise, it needs to be able to go outside at current time or &#xA;during certain period of time." Deprecated="False" filter="0" group="General" />
                                <Tunable type="bool" name="conform_optional" class="Tunable" default="False" display="Conform Optional" muid="35478153D05EF618" description="If enabled, failing to conform this filter will not stop Sim&#xA;creation." Deprecated="False" filter="0" group="General" />
                                <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="5F6C636CB0B87682" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                                <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="25DA1E8B8D979151" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                            </TunableTuple>
                            <TunableTuple name="career" class="TunableCareerFilterTerm" display="Career" muid="837D7986054730FC" description="A term for filtering Sims in a specific career.&#xA;&#xA;New and existing Sims can be conformed by granting them the career, provided&#xA;any availability tests pass." Deprecated="False" filter="0" group="General">
                                <TunableVariant type="None" name="career" class="TunableVariant" default="from_explicit_type" display="Career" muid="371E54752B3C22E3" description="Define the career that this filter term applies to." Deprecated="False" filter="0" group="General">
                                    <TunableTuple name="from_category" class="Tunable_CareerTypeFromCategory" display="From Category" muid="187675AFE9DBF8F0" description="The filter term applies to the career, if any, of the specified category&#xA;for the Sim." Deprecated="False" filter="0" group="General">
                                        <TunableEnum type="CareerCategory" name="career_category" class="TunableEnumEntry" default="Work" display="Career Category" muid="208FCA5A72140C4F" static_entries="careers-career_enums.CareerCategory" description="The career category that this filter term applies to. Sims may&#xA;be conformed if we want to remove the career, i.e. the term is&#xA;inverted, but may not be conformed to join a career." Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                    <TunableTuple name="from_explicit_type" class="Tunable_CareerTypeExplicit" display="From Explicit Type" muid="CC9A4EAEB3A4D5BB" description="The filter term applies to a specific career." Deprecated="False" filter="0" group="General">
                                        <Tunable type="career" name="career_type" class="TunableReference" display="Career Type" muid="DEBDA038FCB98D6" description="The career that this term applies to. Sims that are conformed to the&#xA;filter will enter the career at its entry level." allow_none="False" Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                </TunableVariant>
                                <TunableVariant type="None" name="career_level" class="OptionalTunable" default="disabled" display="Career Level" muid="61A414DE6E013B8C" description="If enabled we add an additional requirement of the user level of&#xA;the career to the requirements." Deprecated="False" filter="0" group="General">
                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="58F954A2E5224379" />
                                    <TunableVariant type="None" name="enabled" class="TunableVariant" default="career_level_reference" display="Enabled" muid="AEA6BF667BC7298F" Deprecated="False" filter="0" group="General">
                                        <TunableTuple name="career_level_reference" class="Tunable_CareerLevelReferenceFilter" display="Career Level Reference" muid="5041FAF7B609B871" description="Filters sims based on a list of CareerLevel references." Deprecated="False" filter="0" group="General">
                                            <TunableList name="career_level_references" class="TunableList" display="Career Level References" muid="B8F3766410ABBCFF" description="A list of CareerLevels. One will be randomly chosen&#xA;when conforming sims." Deprecated="False" filter="0" group="General">
                                                <Tunable type="career_level" class="TunableReference" muid="708D1D5399D5A1EA" description="A reference to a CareerLevel to join the career at.&#xA;The CareerLevel must belong to the career tuned above." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                            </TunableList>
                                        </TunableTuple>
                                        <TunableTuple name="career_user_level" class="Tunable_CareerUserLevelFilter" display="Career User Level" muid="BE6E0AACC1DB671F" description="Filters sims based on a user career level." Deprecated="False" filter="0" group="General">
                                            <Tunable type="int" name="career_user_level" class="TunableRange" default="1" display="Career User Level" muid="180A64D1B707C0F0" min="1" max="None" description="A user level. If this level cooresponds to an advanced branch&#xA;and we conform or generate a sim with this filter and the career &#xA;has branches a branch will be chosen at random. If this behavior&#xA;is not desired, use Career Level Reference instead." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                    </TunableVariant>
                                </TunableVariant>
                                <TunableVariant type="None" name="career_location" class="TunableVariant" default="none" display="Career Location" muid="6422AC4DB32D77E6" description="Define how important career location is for this filter. Leave None&#xA;if location is not important." Deprecated="False" filter="0" group="General">
                                    <Tunable name="none" class="TunableExistance" display="None" muid="93BAFD1F3540D492" />
                                    <TunableTuple name="on_active_lot" class="Tunable_CareerLocationFilterActiveLot" display="On Active Lot" muid="61D88653DFE67EB6" description="Any Sim must be in the specified career and hired by the venue on the&#xA;active lot in order to match the filter. Sims that are conformed by&#xA;joining a career will be hired by the venue on the active lot." Deprecated="False" filter="0" group="General" />
                                </TunableVariant>
                                <TunableVariant type="None" name="career_schedule" class="TunableVariant" default="none" display="Career Schedule" muid="D8C14425351BFD5B" description="Define how scheduling affects this filter. Leave None if schedule is&#xA;not important." Deprecated="False" filter="0" group="General">
                                    <TunableTuple name="available_now" class="Tunable_CareerScheduleFilterAvailableNow" display="Available Now" muid="DE4AEDCB038B3234" description="Any Sim must be in the specified career and must be scheduled to work at&#xA;the time of the filter request. If they are not, their career will not&#xA;be conformed to match the filter." Deprecated="False" filter="0" group="General" />
                                    <Tunable name="none" class="TunableExistance" display="None" muid="34FB4BD5A4DC9814" />
                                </TunableVariant>
                                <Tunable type="bool" name="career_seniority" class="Tunable" default="True" display="Career Seniority" muid="35961F839C23F0B6" description="If enabled, Sims that have been in the career for longer will score&#xA;higher than Sims that have been in the career for less time." Deprecated="False" filter="0" group="General" />
                                <Tunable type="bool" name="conform_optional" class="Tunable" default="False" display="Conform Optional" muid="A1CE1194356EBE5A" description="If enabled, failing to conform this filter will not stop Sim&#xA;creation." Deprecated="False" filter="0" group="General" />
                                <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="268D1B49FF997AB3" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                                <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="7BF4931CCFFC77E8" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                            </TunableTuple>
                            <TunableTuple name="cas_tags" class="TunableCasTagsFilterTerm" display="Cas Tags" muid="FE4EE2F29E67E870" description="A term for filtering Sims based on their CAS tags.&#xA;&#xA;Only new Sims may be conformed by creating them with valid CAS tags.&#xA;Existing Sims may not be conformed." Deprecated="False" filter="0" group="General">
                                <TunableList name="cas_tags" class="TunableSet" display="Cas Tags" muid="2322BBE8B69706D" description="Sims must have at least one of these tags on their parts for the&#xA;filter to pass." Deprecated="False" filter="0" group="General" unique_entries="true">
                                    <TunableEnum type="Tag" class="TunableEnumEntry" default="INVALID" muid="1017DDEDB4D530A3" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" Deprecated="False" filter="0" group="General" />
                                </TunableList>
                                <Tunable type="bool" name="conform_optional" class="Tunable" default="False" display="Conform Optional" muid="C5D129F26EE02618" description="If enabled, failing to conform this filter will not stop Sim&#xA;creation." Deprecated="False" filter="0" group="General" />
                                <TunableVariant type="None" name="creation_cas_tags" class="OptionalTunable" default="same_as_cas_tags" display="Creation Cas Tags" muid="1A2CD274FFC549ED" description="The tags to use when creating a new Sim with this filter term.&#xA;&#xA;This should be same_as_cas_tags for almost all cases. Note that&#xA;custom cas tags are supplied, the Sim must still have Cas Tags&#xA;for sim creation to succeed." Deprecated="False" filter="0" group="General">
                                    <TunableList name="custom" class="TunableTags" display="Custom" muid="EF18E3FBF95ACF2B" min="1" Deprecated="False" filter="0" group="General" unique_entries="true">
                                        <TunableEnum type="Tag" class="TunableEnumEntry" default="INVALID" muid="A019C35A14AAD3B" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" Deprecated="False" filter="0" group="General" invalid_entries="INVALID" />
                                    </TunableList>
                                    <Tunable name="same_as_cas_tags" class="TunableExistance" display="Same As Cas Tags" muid="C4D96C1D7DCAAA71" />
                                </TunableVariant>
                                <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="2EC8F90E048BDA6E" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                            </TunableTuple>
                            <TunableTuple name="gender" class="TunableGenderFilterTerm" display="Gender" muid="CCAB00FBE8E41211" description="A term for filtering Sims base on their gender.&#xA;&#xA;Only new Sims may be conformed by creating them of a valid gender. Existing&#xA;Sims may not be conformed." Deprecated="False" filter="0" group="General">
                                <Tunable type="bool" name="conform_optional" class="Tunable" default="False" display="Conform Optional" muid="4DD966ED65BA8D46" description="If enabled, failing to conform this filter will not stop Sim&#xA;creation." Deprecated="False" filter="0" group="General" />
                                <TunableEnum type="Gender" name="gender" class="TunableEnumEntry" default="MALE" display="Gender" muid="E95B23E88F1D7172" static_entries="sims-sim_info_types.Gender" description="The required gender of the sim we are filtering for." Deprecated="False" filter="0" group="General" />
                                <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="ED9A0A8EB7B12B79" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                            </TunableTuple>
                            <TunableTuple name="gender_preference" class="TunableGenderPreferenceFilterTerm" display="Gender Preference" muid="11A2D659B7E01C79" description="A filter term for filtering sims that fit the requesting sim info's gender &#xA;preference." Deprecated="False" filter="0" group="General">
                                <Tunable type="bool" name="conform_optional" class="Tunable" default="False" display="Conform Optional" muid="D80BCF9B244BCAE4" description="If enabled, failing to conform this filter will not stop Sim&#xA;creation." Deprecated="False" filter="0" group="General" />
                                <Tunable type="bool" name="fallback_if_no_preference_is_set" class="Tunable" default="False" display="Fallback If No Preference Is Set" muid="15E8D98B5E15B523" description="If checked then if no gender preference is set then fallback." Deprecated="False" filter="0" group="General" />
                                <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="5A6E224C818483ED" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                            </TunableTuple>
                            <TunableTuple name="gender_relative" class="TunableGenderRelativeFilterTerm" display="Gender Relative" muid="E9DAC8F556FE56EA" description="A term for filtering Sims base on their gender relative to target sims&#xA;gender.&#xA;&#xA;Only new Sims may be conformed by creating them of a valid gender. Existing&#xA;Sims may not be conformed." Deprecated="False" filter="0" group="General">
                                <Tunable type="bool" name="conform_optional" class="Tunable" default="False" display="Conform Optional" muid="3940AA8520D2C7EC" description="If enabled, failing to conform this filter will not stop Sim&#xA;creation." Deprecated="False" filter="0" group="General" />
                                <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="67EB3C80C5F17883" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                <Tunable type="bool" name="same" class="Tunable" default="False" display="Same" muid="FC39C76651AF05CC" description="If checked then we will make sure that the sim is the same gender&#xA;as the target sim.  Otherwise the opposite gender" Deprecated="False" filter="0" group="General" />
                            </TunableTuple>
                            <TunableTuple name="genealogy" class="TunableGenealogyFilterTerm" display="Genealogy" muid="A6B591C35F897F46" description="A term for filtering Sims based on their genealogy.&#xA;&#xA;New and existing Sims can be conformed by propagating genealogy relations." Deprecated="False" filter="0" group="General">
                                <Tunable type="bool" name="conform_optional" class="Tunable" default="False" display="Conform Optional" muid="6DD6AA3FE6924A6A" description="If enabled, failing to conform this filter will not stop Sim&#xA;creation." Deprecated="False" filter="0" group="General" />
                                <TunableEnum type="FamilyRelationshipIndex" name="family_relationship" class="TunableEnumEntry" default="MOTHER" display="Family Relationship" muid="C20121F354A4BD89" static_entries="sims-genealogy_tracker.FamilyRelationshipIndex" description="This is the family relationship between the requesting sim and the&#xA;target sim." Deprecated="False" filter="0" group="General" />
                                <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="3A8708957892ED03" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                                <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="B83836A40C088EBF" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                <Tunable type="bool" name="swap_direction" class="Tunable" default="False" display="Swap Direction" muid="18EB8F74C898AD01" description="This is the direction between the requesting sim and the target sim&#xA;so that the genealogy is checked between the sim info and the&#xA;requesting sim info." Deprecated="False" filter="0" group="General" />
                            </TunableTuple>
                            <TunableTuple name="has_home_zone" class="TunableHasHomeZoneFilterTerm" display="Has Home Zone" muid="47C08F44200BC2C2" description="A term for filtering Sims that may or may not have a home zone.&#xA;&#xA;Sims may not be conformed to match this filter term." Deprecated="False" filter="0" group="General">
                                <Tunable type="bool" name="conform_optional" class="Tunable" default="False" display="Conform Optional" muid="827ADC1884E4975C" description="If enabled, failing to conform this filter will not stop Sim&#xA;creation." Deprecated="False" filter="0" group="General" />
                                <Tunable type="bool" name="include_vacation_home" class="Tunable" default="False" display="Include Vacation Home" muid="D42827E9C3E93A38" description="If enabled and the Sim is on a vacation at a zone, this will return&#xA;True." Deprecated="False" filter="0" group="General" />
                                <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="CDD116790D5F077E" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                                <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="366D996364DC59AD" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                            </TunableTuple>
                            <TunableTuple name="has_household_ever_been_played" class="TunableHasHouseholdEverBeenPlayedFilterTerm" display="Has Household Ever Been Played" muid="4A4B6CAB4F8C53E6" description="A term for filtering Sims that may or may not have ever been played by the&#xA;user.&#xA;&#xA;Sims may not be conformed to match this filter term." Deprecated="False" filter="0" group="General">
                                <Tunable type="bool" name="conform_optional" class="Tunable" default="False" display="Conform Optional" muid="7F9482EE96E09E3D" description="If enabled, failing to conform this filter will not stop Sim&#xA;creation." Deprecated="False" filter="0" group="General" />
                                <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="7FAFF37786E4A36F" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                                <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="C7E9A574C1FEEA75" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                            </TunableTuple>
                            <TunableTuple name="household_composition" class="TunableHouseholdCompositionFilterTerm" display="Household Composition" muid="354C8A7D10957FF0" description="A term for filtering Sims based on the composition of their household." Deprecated="False" filter="0" group="General">
                                <TunableVariant type="None" name="age" class="OptionalTunable" default="Dont_Care" display="Age" muid="7B87A0DEA7FD3166" description="Define an age condition for Sims in the household." Deprecated="False" filter="0" group="General">
                                    <Tunable name="Dont_Care" class="TunableExistance" display="Dont Care" muid="84A57E1F3D1F28A1" />
                                    <TunableTuple name="enabled" class="TunableAgeFilterTerm" display="Enabled" muid="4B807626F7A8A9BC" description="A term for filtering Sims based on their age. The score is modified based on&#xA;the tuned ideal value for the age. If you are looking for age variation, please&#xA;choose &quot;Age Variant&quot; instead.&#xA;&#xA;Only new Sims may be conformed by creating them of a valid age. Existing&#xA;Sims may not be conformed." Deprecated="False" filter="0" group="General">
                                        <TunableEnum type="Age" name="ideal_value" class="TunableEnumEntry" default="ADULT" display="Ideal Value" muid="7E4A293425E81764" static_entries="sims-sim_info_types.Age" description="The ideal age of the sim we are filtering for." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="320389107CDED092" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                                        <TunableEnum type="Age" name="max_value" class="TunableEnumEntry" default="ELDER" display="Max Value" muid="F79E9D84E6842208" static_entries="sims-sim_info_types.Age" description="The maximum age of the sim we are filtering for." Deprecated="False" filter="0" group="General" />
                                        <TunableEnum type="Age" name="min_value" class="TunableEnumEntry" default="BABY" display="Min Value" muid="8AF5D8FD33B1220B" static_entries="sims-sim_info_types.Age" description="The minimum age of the sim we are filtering for." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="C9724F338EF182AD" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                </TunableVariant>
                                <Tunable type="bool" name="conform_optional" class="Tunable" default="False" display="Conform Optional" muid="8FDD0AF558638896" description="If enabled, failing to conform this filter will not stop Sim&#xA;creation." Deprecated="False" filter="0" group="General" />
                                <TunableVariant type="None" name="gender" class="OptionalTunable" default="Dont_Care" display="Gender" muid="CF80EC85909B4232" description="Define a gender condition for Sims in the household." Deprecated="False" filter="0" group="General">
                                    <Tunable name="Dont_Care" class="TunableExistance" display="Dont Care" muid="FAD65816B023C8B1" />
                                    <TunableTuple name="enabled" class="TunableGenderFilterTerm" display="Enabled" muid="DD33E98217D7C6DF" description="A term for filtering Sims base on their gender.&#xA;&#xA;Only new Sims may be conformed by creating them of a valid gender. Existing&#xA;Sims may not be conformed." Deprecated="False" filter="0" group="General">
                                        <TunableEnum type="Gender" name="gender" class="TunableEnumEntry" default="MALE" display="Gender" muid="7CBC4B50777608D" static_entries="sims-sim_info_types.Gender" description="The required gender of the sim we are filtering for." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="99839BC1816F0CA5" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                </TunableVariant>
                                <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="EA471F64828667D9" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                <TunableVariant type="None" name="species" class="OptionalTunable" default="Dont_Care" display="Species" muid="38167996838A8315" description="Define a species condition for Sims in the household." Deprecated="False" filter="0" group="General">
                                    <Tunable name="Dont_Care" class="TunableExistance" display="Dont Care" muid="6BEFB89495DED820" />
                                    <TunableTuple name="enabled" class="TunableSpeciesFilterTerm" display="Enabled" muid="F506C87628820EFA" description="A term for filtering Sim based on their species.&#xA;&#xA;Only new Sims may be conformed by creating them with a valid species.&#xA;Existing Sims may not be conformed." Deprecated="False" filter="0" group="General">
                                        <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="23AEB270E5132560" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="10BDAB6AAD2F1FB5" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        <TunableEnum type="Species" name="species" class="TunableEnumEntry" default="HUMAN" display="Species" muid="63CFBADFEE7B72BA" static_entries="sims-sim_info_types.Species" description="The species to filter for." Deprecated="False" filter="0" group="General" invalid_entries="INVALID" />
                                    </TunableTuple>
                                </TunableVariant>
                                <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="9A2252AA7D20366C" description="Define the required number of Sims required in order to satisfy the&#xA;term." Deprecated="False" filter="0" group="General">
                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="E10577774AF02AB3" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                    <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="9FBE371FA26A3203" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                </TunableTuple>
                            </TunableTuple>
                            <TunableTuple name="household_value" class="TunableHouseholdValueFilterTerm" display="Household Value" muid="C19DD6E97715F92C" description="A term for filtering Sims based on their household value.&#xA;&#xA;We intentionally do not conform Sims for this filter term. The only thing&#xA;we have safe control over here is household funds, and this isn't player-&#xA;facing, so it wouldn't be obvious if a Sim was conformed. A player will&#xA;really only judge NPC wealth by property ownership and clothing." Deprecated="False" filter="0" group="General">
                                <Tunable type="bool" name="conform_optional" class="Tunable" default="False" display="Conform Optional" muid="7327A90339D0EA10" description="If enabled, failing to conform this filter will not stop Sim&#xA;creation." Deprecated="False" filter="0" group="General" />
                                <TunableTuple name="household_value" class="TunableInterval" display="Household Value" muid="CCC30758052D66FC" description="An interval the Sim's household value must be between in order to&#xA;conform to this filter term." Deprecated="False" filter="0" group="General">
                                    <Tunable type="int" name="lower_bound" class="TunableRange" default="0" display="Lower Bound" muid="F3BABA1B6128CF9E" min="0" max="None" description="The lower bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                    <Tunable type="int" name="upper_bound" class="TunableRange" default="1000" display="Upper Bound" muid="748CF641AB199A6F" min="None" max="None" description="The upper bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                </TunableTuple>
                                <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="41B65ECB3A7D56CE" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                            </TunableTuple>
                            <TunableTuple name="in_club" class="TunableInClubFilterTerm" display="In Club" muid="9BA5DEFD52DBA56E" description="A term for filtering Sims based on if they are in a club or not." Deprecated="False" filter="0" group="General">
                                <Tunable type="bool" name="check_if_requesting_sim_can_join" class="Tunable" default="False" display="Check If Requesting Sim Can Join" muid="19C311958FCE08ED" description="If checked then we will make sure that the requesting Sim can join&#xA;one of the clubs of this Sim." Deprecated="False" filter="0" group="General" />
                                <Tunable type="bool" name="conform_optional" class="Tunable" default="False" display="Conform Optional" muid="62235371E4183BBB" description="If enabled, failing to conform this filter will not stop Sim&#xA;creation." Deprecated="False" filter="0" group="General" />
                                <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="4D407535CCC13E9B" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                                <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="461931E040AB92AC" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                            </TunableTuple>
                            <TunableTuple name="in_compatible_region" class="TunableInCompatibleRegionFilterTerm" display="In Compatible Region" muid="4FE99991A006C9E" description="A term for filtering Sims that may or may not be in the Same region, thus&#xA;gating their availability to be in certain situations.&#xA;&#xA;Sims may not be conformed to match this filter term." Deprecated="False" filter="0" group="General">
                                <Tunable type="bool" name="conform_optional" class="Tunable" default="False" display="Conform Optional" muid="5A32D180617016F4" description="If enabled, failing to conform this filter will not stop Sim&#xA;creation." Deprecated="False" filter="0" group="General" />
                                <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="144B293E6B1E96BF" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                                <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="86DB2BFCF303EA7E" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                            </TunableTuple>
                            <TunableTuple name="in_family" class="TunableInFamilyFilterTerm" display="In Family" muid="2D506AB1D9427DA8" description="A term for filtering Sims living in the same household.&#xA;&#xA;Sims may not be conformed to match this filter term." Deprecated="False" filter="0" group="General">
                                <Tunable type="bool" name="conform_optional" class="Tunable" default="False" display="Conform Optional" muid="D7E5C2A7D0734CFD" description="If enabled, failing to conform this filter will not stop Sim&#xA;creation." Deprecated="False" filter="0" group="General" />
                                <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="C1C3F2D515072629" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                                <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="37F5C7F720E536A8" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                            </TunableTuple>
                            <TunableTuple name="in_same_club" class="TunableInSameClubFilterTerm" display="In Same Club" muid="1284ECCF1BF8A467" description="A term for filtering if the Sim and the requesting sim info are in the&#xA;same club." Deprecated="False" filter="0" group="General">
                                <Tunable type="bool" name="check_supplied_club" class="Tunable" default="False" display="Check Supplied Club" muid="8DB51BAB7F3C9EDD" description="If checked then we will check if the Sim is in a specific supplied&#xA;club.  Check with your GPE before using this option because it will&#xA;only work when the data is properly supplied by gameplay." Deprecated="False" filter="0" group="General" />
                                <Tunable type="bool" name="conform_optional" class="Tunable" default="False" display="Conform Optional" muid="55B41A5A894B44E3" description="If enabled, failing to conform this filter will not stop Sim&#xA;creation." Deprecated="False" filter="0" group="General" />
                                <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="F89DB7720DFA84A3" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                                <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="E0D743970BCA044D" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                            </TunableTuple>
                            <TunableTuple name="is_busy" class="TunableIsBusyFilterTerm" display="Is Busy" muid="70B420BC7A3B03F6" description="A term for filtering Sims that might be busy at the requested times, based&#xA;on their work schedule.&#xA;&#xA;Sims may not be conformed to match this filter term." Deprecated="False" filter="0" group="General">
                                <Tunable type="bool" name="conform_optional" class="Tunable" default="False" display="Conform Optional" muid="78D199BD30E7C3F5" description="If enabled, failing to conform this filter will not stop Sim&#xA;creation." Deprecated="False" filter="0" group="General" />
                                <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="160A14F52EF4B349" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                                <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="61702E35A882B978" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                <TunableVariant type="None" name="override" class="TunableVariant" default="no_override" display="Override" muid="A2545F179C0D08AE" description="Determine a set of Sims that is never considered busy." Deprecated="False" filter="0" group="General">
                                    <Tunable name="no_override" class="TunableExistance" display="No Override" muid="40F0FEB836DC43AB" />
                                    <Tunable name="npc_sims" class="TunableExistance" display="Npc Sims" muid="B2ECA5F7CA5E1049" />
                                    <Tunable name="selectable_sims" class="TunableExistance" display="Selectable Sims" muid="F321405876CA6DB3" />
                                </TunableVariant>
                            </TunableTuple>
                            <TunableTuple name="is_ghost" class="TunableIsGhostFilterTerm" display="Is Ghost" muid="F39DD09D63FB920" description="A filter term for filtering Sims that may or may not be ghosts.&#xA;&#xA;Sims may not be conformed to match this filter term." Deprecated="False" filter="0" group="General">
                                <Tunable type="bool" name="always_pass_active_household_sims" class="Tunable" default="False" display="Always Pass Active Household Sims" muid="7540FB39FDF2BC7E" description="If enabled then we will always pass sims in the active household,&#xA;whether they are a ghost or not." Deprecated="False" filter="0" group="General" />
                                <Tunable type="bool" name="conform_optional" class="Tunable" default="False" display="Conform Optional" muid="2F4AA2AFBCDA4348" description="If enabled, failing to conform this filter will not stop Sim&#xA;creation." Deprecated="False" filter="0" group="General" />
                                <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="479DE02194DE0AB2" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                                <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="F8A91CE2768451A3" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                <Tunable type="bool" name="require_npc" class="Tunable" default="True" display="Require Npc" muid="F404B09B21241E20" description="If enabled, the Sim needs to be an NPC. If not enabled, any Sim that&#xA;is a ghost will pass the filter." Deprecated="False" filter="0" group="General" />
                            </TunableTuple>
                            <TunableTuple name="is_hidden" class="TunableIsHiddenFilterTerm" display="Is Hidden" muid="535FC0D2AE7BF8E0" description="A filter term to filter out hidden sims. " Deprecated="False" filter="0" group="General">
                                <Tunable type="bool" name="conform_optional" class="Tunable" default="False" display="Conform Optional" muid="91CDCA496ED3AAAB" description="If enabled, failing to conform this filter will not stop Sim&#xA;creation." Deprecated="False" filter="0" group="General" />
                                <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="1619983DA36B8B1E" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                                <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="BCD29FF9C57FABEF" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                            </TunableTuple>
                            <TunableTuple name="is_neighbor" class="TunableIsNeighborFilterTerm" display="Is Neighbor" muid="CF43A13A23EC20E0" description="A term for filtering Sims that are or are not neighbors. This is applicable&#xA;even to neighbor Sims that have not met (thus not having relationship bits).&#xA;&#xA;Sims may not be conformed to match this filter term." Deprecated="False" filter="0" group="General">
                                <Tunable type="bool" name="conform_optional" class="Tunable" default="False" display="Conform Optional" muid="F858162A3FE6F64B" description="If enabled, failing to conform this filter will not stop Sim&#xA;creation." Deprecated="False" filter="0" group="General" />
                                <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="1CA4120E47FB0360" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                                <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="E8115EAE159BB560" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                            </TunableTuple>
                            <TunableTuple name="is_not_incestuous" class="TunableIsNotIncestuousFilterTerm" display="Is Not Incestuous" muid="3272AFE39FD70E89" description="A filter term to filtering out sims that would be incestuous with the&#xA;requesting sim info." Deprecated="False" filter="0" group="General">
                                <Tunable type="bool" name="conform_optional" class="Tunable" default="False" display="Conform Optional" muid="81FCD87DA7320D5C" description="If enabled, failing to conform this filter will not stop Sim&#xA;creation." Deprecated="False" filter="0" group="General" />
                                <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="A957B098EC53B00B" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                            </TunableTuple>
                            <TunableTuple name="is_roommate" class="TunableIsRoommateFilterTerm" display="Is Roommate" muid="946E0736885543E5" description="A term for filtering Sims that are roommmates&#xA;&#xA;Sims may not be conformed to match this filter term." Deprecated="False" filter="0" group="General">
                                <Tunable type="bool" name="conform_optional" class="Tunable" default="False" display="Conform Optional" muid="29095554F9C247B5" description="If enabled, failing to conform this filter will not stop Sim&#xA;creation." Deprecated="False" filter="0" group="General" />
                                <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="87E14FE14A7957A6" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                                <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="6530F68C4600DF71" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                <TunableVariant type="None" name="target_household" class="TunableVariant" default="any" display="Target Household" muid="3B0057AFB4B9CD1E" description="Which household must the sim be a roommate of." Deprecated="False" filter="0" group="General">
                                    <Tunable name="active_household" class="TunableExistance" display="Active Household" muid="1724CE007DF19C8B" />
                                    <Tunable name="any" class="TunableExistance" display="Any" muid="FF71EE8DB329EC6C" />
                                    <Tunable name="requesting_sim_household" class="TunableExistance" display="Requesting Sim Household" muid="3043468D86288693" />
                                    <Tunable name="specified_household" class="TunableExistance" display="Specified Household" muid="C52681F2782BE69F" />
                                </TunableVariant>
                            </TunableTuple>
                            <TunableTuple name="is_sim_sick" class="TunableSickSimFilterTerm" display="Is Sim Sick" muid="661C7787CACD6D76" description="A term for filtering Sims based on whether they are sick or not." Deprecated="False" filter="0" group="General">
                                <Tunable type="bool" name="conform_optional" class="Tunable" default="False" display="Conform Optional" muid="CA2971160AD65D58" description="If enabled, failing to conform this filter will not stop Sim&#xA;creation." Deprecated="False" filter="0" group="General" />
                                <TunableVariant type="None" name="difficulty_range" class="OptionalTunable" default="disabled" display="Difficulty Range" muid="E58ED8F3667C7981" description="Optionally define the difficulty rating range that is required&#xA;for the Sim's sickness." Deprecated="False" filter="0" group="General">
                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="ECB3086EA08C749B" />
                                    <TunableTuple name="enabled" class="TunableInterval" display="Enabled" muid="E4AB2A80A32D0DA2" description="The difficulty rating range, this maps to 'difficulty_rating'&#xA;values in Sickness tuning." Deprecated="False" filter="0" group="General">
                                        <Tunable type="float" name="lower_bound" class="TunableRange" default="0" display="Lower Bound" muid="64470CE19E98EF33" min="0" max="None" description="The lower bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        <Tunable type="float" name="upper_bound" class="TunableRange" default="10" display="Upper Bound" muid="FA2B799909A4289A" min="None" max="10" description="The upper bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                </TunableVariant>
                                <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="3BFB261C9066A84A" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                                <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="8AFB7462F24DAAF7" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                            </TunableTuple>
                            <TunableTuple name="lives_in_region" class="TunableLivesInRegion" display="Lives In Region" muid="407CCDDCE11B5FC" description="A filter term for filtering if the Sims live in the specified region or not." Deprecated="False" filter="0" group="General">
                                <Tunable type="bool" name="conform_optional" class="Tunable" default="False" display="Conform Optional" muid="C7BA619A2481078" description="If enabled, failing to conform this filter will not stop Sim&#xA;creation." Deprecated="False" filter="0" group="General" />
                                <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="95783C537E9BCCC4" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                                <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="51BBD8508F590CDF" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                <TunableVariant type="None" name="region" class="OptionalTunable" default="current_region" display="Region" muid="431D7D8482FB351" description="Which region to test against." Deprecated="False" filter="0" group="General">
                                    <Tunable name="current_region" class="TunableExistance" display="Current Region" muid="606469942BCFD304" />
                                    <TunableList name="specific_regions" class="TunableList" display="Specific Regions" muid="22B545CB72FD9737" min="1" description="The list of valid regions." Deprecated="False" filter="0" group="General" unique_entries="true">
                                        <Tunable type="region" class="TunableReference" muid="574CA6E31249A015" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="Region" />
                                    </TunableList>
                                </TunableVariant>
                                <TunableVariant type="None" name="street_for_creation" class="OptionalTunable" default="disabled" display="Street For Creation" muid="68EC95DD258EA586" description="By default, Sims can only be created with this filter term if this&#xA;term is inverted (that is, the resulting Sim is a townie that lives&#xA;nowhere). Otherwise, the conform fails.&#xA;&#xA;If this is enabled and the term is not inverted, the Sim will&#xA;instead be assigned as townie living on the street." Deprecated="False" filter="0" group="General">
                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="2C117CF7028A9D95" />
                                    <Tunable type="worlddescription" name="enabled" class="TunableReference" display="Enabled" muid="774F5588EC97DF1E" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                </TunableVariant>
                            </TunableTuple>
                            <TunableTuple name="lives_on_apartment_floor" class="TunableLivesOnApartmentFloor" display="Lives On Apartment Floor" muid="AC7683750EFC0A06" description="A term for filtering Sims that live on the current apartment floor." Deprecated="False" filter="0" group="General">
                                <Tunable type="bool" name="conform_optional" class="Tunable" default="False" display="Conform Optional" muid="D582D5C53006E340" description="If enabled, failing to conform this filter will not stop Sim&#xA;creation." Deprecated="False" filter="0" group="General" />
                                <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="CFD3DD222A6900BC" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                                <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="C2051391EFD89E3B" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                            </TunableTuple>
                            <TunableTuple name="lives_on_street" class="TunableLivesOnStreetFilterTerm" display="Lives On Street" muid="541858C659856927" description="A term for filtering Sims that live on the current street." Deprecated="False" filter="0" group="General">
                                <Tunable type="bool" name="conform_optional" class="Tunable" default="False" display="Conform Optional" muid="DC0AAA69BAF5DA44" description="If enabled, failing to conform this filter will not stop Sim&#xA;creation." Deprecated="False" filter="0" group="General" />
                                <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="FB68AB1F06B8355" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                                <TunableVariant type="None" name="match_criteria" class="TunableVariant" default="match_target_population" display="Match Criteria" muid="A531513E4EA0B1F9" description="Criteria for a Sim to match this filter. This tunable is ignored if&#xA;the filter is inverted. If inverted, the filter passes if the Sim&#xA;doesn't live on the street and fails if so.&#xA;&#xA;Match Target Population: If the number of townies living on the&#xA;tuned street meets or exceeds the street's tuned townie threshold,&#xA;then this filter term will be considered met.&#xA;&#xA;Must Match: The Sim chosen or created must live on the street." Deprecated="False" filter="0" group="General">
                                    <TunableTuple name="match_target_population" class="TunableMatchTargetPopulation" display="Match Target Population" muid="16DC4A97E8888A74" description="If the street is at its townie population cap, allow all Sims." Deprecated="False" filter="0" group="General" />
                                    <TunableTuple name="must_match" class="TunableMustMatch" display="Must Match" muid="EF9B8ABE56950B40" description="Sims must live on the street." Deprecated="False" filter="0" group="General" />
                                </TunableVariant>
                                <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="B85119A724F2CAA6" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                <TunableVariant type="None" name="street" class="OptionalTunable" default="current_street" display="Street" muid="45562D2781A952DD" description="The street the Sim must live on." Deprecated="False" filter="0" group="General">
                                    <Tunable name="current_street" class="TunableExistance" display="Current Street" muid="1C108AE701B7B0A2" />
                                    <Tunable type="worlddescription" name="specific_street" class="TunableReference" display="Specific Street" muid="BB6585CDEABAF6B6" Deprecated="False" filter="0" group="General" />
                                </TunableVariant>
                            </TunableTuple>
                            <TunableTuple name="lives_together" class="TunableLivesTogetherFilterTerm" display="Lives Together" muid="EB4FDB60881DE906" description="A term for filtering Sims who are in the same travel group or household.&#xA;&#xA;Sims may not be conformed to match this filter term." Deprecated="False" filter="0" group="General">
                                <Tunable type="bool" name="conform_optional" class="Tunable" default="False" display="Conform Optional" muid="47BF7E861D3C14F0" description="If enabled, failing to conform this filter will not stop Sim&#xA;creation." Deprecated="False" filter="0" group="General" />
                                <Tunable type="bool" name="consider_household" class="Tunable" default="True" display="Consider Household" muid="A126EB34141D8CF" description="If enabled, this will succeed if the Sim is in the same household as&#xA;the requesting Sim." Deprecated="False" filter="0" group="General" />
                                <Tunable type="bool" name="consider_travel_group" class="Tunable" default="True" display="Consider Travel Group" muid="C072C378D26DCEB4" description="If enabled, this will succeed if the Sim is in the same household as&#xA;the requesting Sim." Deprecated="False" filter="0" group="General" />
                                <Tunable type="bool" name="exclude_sims_in_both" class="Tunable" default="False" display="Exclude Sims In Both" muid="94B6F4AD56C4C3B1" description="If enabled, this will fail if the Sim is in both the same household&#xA;and travel group. If false, it doesn't care." Deprecated="False" filter="0" group="General" />
                                <Tunable type="bool" name="include_roommates_as_household" class="Tunable" default="True" display="Include Roommates As Household" muid="6418232F78211746" description="If enabled, roommates will be considered part of the same household." Deprecated="False" filter="0" group="General" />
                                <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="49A7476381441596" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                                <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="B7D826D0089D2D74" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                            </TunableTuple>
                            <TunableTuple name="occult_ranked" class="TunableOccultRankFilterTerm" display="Occult Ranked" muid="DCA54156EEB51FF3" description="A term for filtering Sims based on ranked statistic.&#xA;&#xA;New and existing Sims can be conformed by granting them occult type and &#xA;XP to reach target rank." Deprecated="False" filter="0" group="General">
                                <Tunable type="bool" name="conform_optional" class="Tunable" default="False" display="Conform Optional" muid="8DC8022328B3C469" description="If enabled, failing to conform this filter will not stop Sim&#xA;creation." Deprecated="False" filter="0" group="General" />
                                <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="351BFA22B4EFFB7D" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                <TunableEnum type="OccultType" name="occult_type" class="TunableEnumEntry" default="HUMAN" display="Occult Type" muid="53FEE5B53F7C75A0" static_entries="sims-occult-occult_enums.OccultType" description="The occult type that this entry applies to." Deprecated="False" filter="0" group="General" />
                                <TunableTuple name="rank_values" class="TunableInterval" display="Rank Values" muid="ABAEFD661F0154A2" description="An interval of the Sim rank. Rank must be between the interval &#xA;in order to pass the filter term. We set lower and upper rank interval &#xA;so then Sim that is too weak or too strong will not pass the filter." Deprecated="False" filter="0" group="General">
                                    <Tunable type="int" name="lower_bound" class="TunableRange" default="1" display="Lower Bound" muid="8F8B1523CDDF3ADA" min="1" max="None" description="The lower bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                    <Tunable type="int" name="upper_bound" class="TunableRange" default="1" display="Upper Bound" muid="D53FD58EC0BE20E4" min="None" max="None" description="The upper bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                </TunableTuple>
                            </TunableTuple>
                            <TunableTuple name="perks" class="TunablePerksFilterTerm" display="Perks" muid="4774B77C46C0AB4E" description="A term for filtering Sims that may or may not have perks.&#xA;&#xA;New and existing Sims can be conformed by granting or removing the perks." Deprecated="False" filter="0" group="General">
                                <Tunable type="bool" name="conform_optional" class="Tunable" default="False" display="Conform Optional" muid="C4277370EA4B44BA" description="If enabled, failing to conform this filter will not stop Sim&#xA;creation." Deprecated="False" filter="0" group="General" />
                                <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="43D36CE2A1A8E13F" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                                <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="CFD656ADD9B3EF44" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                <TunableList name="perks" class="TunableSet" display="Perks" muid="A9CDBBCDC0B0F4F" description="List of perks that a Sim should has." Deprecated="False" filter="0" group="General" unique_entries="true">
                                    <Tunable type="bucks_perk" class="TunableReference" muid="D1CE7E050ED06D24" description="The perks that Sim should has." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                </TunableList>
                            </TunableTuple>
                            <TunableTuple name="pregnancy" class="TunablePregnancyFilterTerm" display="Pregnancy" muid="80C532B002E2A889" description="A term for filtering pregnant sims." Deprecated="False" filter="0" group="General">
                                <Tunable type="bool" name="conform_optional" class="Tunable" default="False" display="Conform Optional" muid="61905F1F17ABEF98" description="If enabled, failing to conform this filter will not stop Sim&#xA;creation." Deprecated="False" filter="0" group="General" />
                                <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="59BD48710F41719F" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                <TunableVariant type="None" name="pregnancy_partner_filter" class="OptionalTunable" default="Use_Spouse_Exclusively" display="Pregnancy Partner Filter" muid="BB8DEFF905E4E3D8" description="Specify how Sims are conformed to match this filter term." Deprecated="False" filter="0" group="General">
                                    <Tunable name="Use_Spouse_Exclusively" class="TunableExistance" display="Use Spouse Exclusively" muid="4B57980C8ED37B9B" />
                                    <Tunable type="sim_filter" name="Use_Spouse_or_Filter" class="TunableReference" display="Use Spouse Or Filter" muid="6B27EB1A6BD8193A" description="The filter that will be used to find a pregnancy partner for for&#xA;this Sim." allow_none="False" Deprecated="False" filter="0" group="General" />
                                </TunableVariant>
                                <TunableVariant type="None" name="pregnancy_progress" class="OptionalTunable" default="disabled" display="Pregnancy Progress" muid="D7566B0677E9C105" description="If enabled then we will check a specific " Deprecated="False" filter="0" group="General">
                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="CEBF967E5D1A1E1C" />
                                    <TunableTuple name="enabled" class="TunableTuple" display="Enabled" muid="4227D141709EC4C5" description="                " Deprecated="False" filter="0" group="General">
                                        <Tunable type="float" name="ideal_value" class="Tunable" default="50.0" display="Ideal Value" muid="D375809A85A1662B" description="The ideal commodity value for scoring." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        <Tunable type="float" name="maximum_value" class="Tunable" default="100.0" display="Maximum Value" muid="37A08C89F10BA368" description="The maximum commodity value that will pass." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        <Tunable type="float" name="minimum_value" class="Tunable" default="0.0" display="Minimum Value" muid="270ED8261063E933" description="The minimum commodity value that will pass." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                </TunableVariant>
                            </TunableTuple>
                            <TunableTuple name="ranked_statistic" class="TunableRankedStatisticFilterTerm" display="Ranked Statistic" muid="DB33725843684320" description="A term for filtering Sims based on their ranked skills. The score is&#xA;modified based on the tuned ideal value of the ranked statistic.&#xA;&#xA;New and existing Sims can be conformed by granting them ranked statistics,&#xA;within the new bounds.&#xA;&#xA;If you want to operate on the rank of the ranked statistic then make sure &#xA;that the check box for 'use_rank' is checked. If you want this to behave&#xA;more like a normal statistic using the &quot;points&quot; and not the rank then&#xA;uncheck that value." Deprecated="False" filter="0" group="General">
                                <Tunable type="bool" name="conform_optional" class="Tunable" default="False" display="Conform Optional" muid="B14D272F9359E1EC" description="If enabled, failing to conform this filter will not stop Sim&#xA;creation." Deprecated="False" filter="0" group="General" />
                                <Tunable type="int" name="ideal_value" class="Tunable" default="2" display="Ideal Value" muid="5696C9F2F9E80037" description="Ideal value of the ranked statistic that we are filtering against." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="B266F67A931BCC0F" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                                <Tunable type="int" name="max_value" class="Tunable" default="5" display="Max Value" muid="D0AD40536DA6E7D4" description="Maximum value of the ranked statistic that we are filtering against." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                <Tunable type="int" name="min_value" class="Tunable" default="0" display="Min Value" muid="B3A3FAAABC5310F2" description="Minimum value of the ranked statistic that we are filtering against." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="5CE8467F8BBF4759" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                <Tunable type="bool" name="only_check_statistic_owned" class="Tunable" default="False" display="Only Check Statistic Owned" muid="366C9BFFCF5F9C0B" description="Only require that the statistic is actually owned by the sim,&#xA;ignoring the statistic's level." Deprecated="False" filter="0" group="General" />
                                <Tunable type="statistic" name="ranked_statistic" class="TunableReference" display="Ranked Statistic" muid="D6D88135FE3489B6" description="The ranked statistic the range applies to." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="RankedStatistic" />
                                <TunableVariant type="None" name="score_spread_override" class="OptionalTunable" default="disabled" display="Score Spread Override" muid="F24B76364A115AB0" description="If enabled this interval modifies the spread over which the score&#xA;should return.&#xA;&#xA;A score is typically between 0 and 1.  A score of 0 means&#xA;the sim will never be selected, the higher a score is the more&#xA;likely that sim is to be selected.&#xA;&#xA;The score for statistic scoring is based on how close to the &quot;ideal&quot; value&#xA;the value for the specified statistic for a sim is.  It's a 1 if it's&#xA;that exact score.  It's *near* 0  (though not exactly, because the&#xA;general idea behind this filter to make it a weight not elimination)&#xA;as it gets farther from the ideal value and closer to the min or max value.&#xA;(Note: it uses min_value -1 and max_value + 1 as the min/max values to avoid&#xA;hitting 0.  However the min/max values don't have to be accurate,&#xA;so you can hit 0 by adjusting the tuned min/max values here as desired.)&#xA;&#xA;So if you have it tuned as:&#xA;min value: 0&#xA;max value: 5&#xA;ideal value: 5&#xA;The resulting score for each integer will be:&#xA;0 gives you: 0.17&#xA;1 gives you: 0.33&#xA;2 gives you: 0.5&#xA;3 gives you: 0.66&#xA;4 gives you: 0.83&#xA;5 gives you: 1&#xA;&#xA;The minimum filter score tuning is simply a floor.  Regardless of how low&#xA;the calculated score is, if it's lower than the minimum filter score&#xA;the result will simply be replaced with the minimum filter score.&#xA;&#xA;So adding a minimum filter score of 0.5 simply results in:&#xA;0 gives you: 0.5&#xA;1 gives you: 0.5&#xA;2 gives you: 0.5&#xA;3 gives you: 0.66&#xA;4 gives you: 0.83&#xA;5 gives you: 1&#xA;&#xA;This optional tunable modifies the spread over which the score&#xA;is returned (and gets rid of the -1/+1 padding as you can specify&#xA;the padding in the actual range.)  So instead of returning from 0 to 1, &#xA;where 0 is as far away from the ideal as possible, and 1 is at the &#xA;ideal value, it'll return the lower value when the statistic is as &#xA;far away from the ideal value as possible, and the closer you get to the &#xA;ideal value, the closer the return value will be to the maximum value.&#xA;&#xA;So adding a score spread override of 0.5 to 1.0, (instead of a&#xA;minimum filter score) results in:&#xA;0 gives you: 0.5&#xA;1 gives you: 0.6&#xA;2 gives you: 0.7&#xA;3 gives you: 0.8&#xA;4 gives you: 0.9&#xA;5 gives you: 1&#xA;&#xA;Note:  Since, as stated, it's perfectly possible to lie about the&#xA;min/max value, this result is also possible to achieve with clever&#xA;tuning:&#xA;min value of -4&#xA;max value of 5&#xA;ideal value of 5" Deprecated="False" filter="0" group="General">
                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="F82997624F9CC5F1" />
                                    <TunableTuple name="enabled" class="TunableInterval" display="Enabled" muid="7A53310F881B610C" description="A tunable interval between lower_bound and upper_bound." Deprecated="False" filter="0" group="General">
                                        <Tunable type="float" name="lower_bound" class="TunableRange" default="0.0" display="Lower Bound" muid="CE43C9C941E3242A" min="0" max="None" description="The lower bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        <Tunable type="float" name="upper_bound" class="TunableRange" default="1.0" display="Upper Bound" muid="29477810866995E1" min="None" max="None" description="The upper bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                </TunableVariant>
                                <Tunable type="bool" name="use_rank" class="Tunable" default="True" display="Use Rank" muid="2930F432060E857D" description="If checked then use the rank value instead of the point value for&#xA;our calculations." Deprecated="False" filter="0" group="General" />
                            </TunableTuple>
                            <TunableTuple name="relationship_bit" class="TunableRelationshipBitFilterTerm" display="Relationship Bit" muid="BCEE1DC112DABF5" description="A term for filtering against relationship bits.&#xA;&#xA;New and existing Sims can be conformed by granting or removing the specified&#xA;bits." Deprecated="False" filter="0" group="General">
                                <TunableList name="black_list" class="TunableSet" display="Black List" muid="597A43279CBBC79B" description="A set of relationship bits that requires the requesting sim to not&#xA;have any one matching relationship bits with the sims we are&#xA;scoring." Deprecated="False" filter="0" group="General" unique_entries="true">
                                    <Tunable type="relbit" class="TunableReference" muid="EA5071878EE283FF" description="A relationship bit that we will use to check if the requesting&#xA;sim has it with the sim we are scoring." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                </TunableList>
                                <Tunable type="bool" name="conform_optional" class="Tunable" default="False" display="Conform Optional" muid="ADCF37A152046841" description="If enabled, failing to conform this filter will not stop Sim&#xA;creation." Deprecated="False" filter="0" group="General" />
                                <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="2724206A62848BC8" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                                <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="EE7BB507CD0DDEBC" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                <TunableVariant type="None" name="relationship_selector" class="TunableVariant" default="use_requesting_sim" display="Relationship Selector" muid="EA8CFBC84CE1FD61" description="Define which relationships are to be considered." Deprecated="False" filter="0" group="General">
                                    <TunableTuple name="use_all_sims" class="Tunable_RelationshipAllKnown" display="Use All Sims" muid="D4F0A633C2DA04E1" description="Consider the relationship with all known Sims." Deprecated="False" filter="0" group="General" />
                                    <TunableTuple name="use_played_sims" class="Tunable_RelationshipAllKnownPlayed" display="Use Played Sims" muid="A82C936AB0EEDF07" description="Consider the relationship with all known played Sims." Deprecated="False" filter="0" group="General" />
                                    <TunableTuple name="use_requesting_sim" class="Tunable_RelationshipRequestingSim" display="Use Requesting Sim" muid="AD4A79053E623CBB" description="Consider the relationship with the requesting Sim." Deprecated="False" filter="0" group="General" />
                                </TunableVariant>
                                <Tunable type="bool" name="requesting_sim_override" class="Tunable" default="False" display="Requesting Sim Override" muid="F8894AE7C3ECCFB4" description="If checked then the filter term will always return 1 if the&#xA;requesting sim info is the sim info we are looking at." Deprecated="False" filter="0" group="General" />
                                <Tunable type="bool" name="reverse_bit_lookup" class="Tunable" default="False" display="Reverse Bit Lookup" muid="16FC61842F91F9DC" description="Look up the relationship bits for target to source sim,&#xA;instead of the default behavior of source to target relationship bits" Deprecated="False" filter="0" group="General" />
                                <TunableList name="white_list" class="TunableSet" display="White List" muid="AF86A1E9BA89C2EB" description="A set of relationship bits that requires the requesting sim to have&#xA;at least one matching relationship bit with the sims we are scoring." Deprecated="False" filter="0" group="General" unique_entries="true">
                                    <Tunable type="relbit" class="TunableReference" muid="AB2B6516A32ED56D" description="A relationship bit that we will use to check if the requesting&#xA;sim has it with the sim we are scoring.&#xA;WARNING: If all elements are in a pack, then no sim will pass&#xA;the filter if the pack(s) aren't installed." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                </TunableList>
                            </TunableTuple>
                            <TunableTuple name="relationship_bit_collection" class="TunableRelationshipBitCollectionFilterTerm" display="Relationship Bit Collection" muid="585F986D072614B1" description="A term for filtering against relationship bits or bit collections.&#xA;&#xA;This filter is NOT conformable" Deprecated="False" filter="0" group="General">
                                <TunableList name="black_list" class="TunableSet" display="Black List" muid="5A62752C93017B53" description="A set of relationship bits or bit collections that requires the &#xA;requesting sim to not have any one matching relationship bits with&#xA;the sims we are scoring." Deprecated="False" filter="0" group="General" unique_entries="true">
                                    <Tunable type="relbit" class="TunableReference" muid="4ABC954FEA7761F4" description="A relationship bit or bit collection that we will use to check &#xA;if the requesting sim has it with the sim we are scoring." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                </TunableList>
                                <Tunable type="bool" name="conform_optional" class="Tunable" default="False" display="Conform Optional" muid="36010E8D4685C2DA" description="If enabled, failing to conform this filter will not stop Sim&#xA;creation." Deprecated="False" filter="0" group="General" />
                                <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="8A3CEE17A6D773EE" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                                <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="ACD35F06FA040890" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                <TunableVariant type="None" name="relationship_selector" class="TunableVariant" default="use_requesting_sim" display="Relationship Selector" muid="43399C3C89F4AEC7" description="Define which relationships are to be considered." Deprecated="False" filter="0" group="General">
                                    <TunableTuple name="use_all_sims" class="Tunable_RelationshipAllKnown" display="Use All Sims" muid="8A0202DA1EFB732B" description="Consider the relationship with all known Sims." Deprecated="False" filter="0" group="General" />
                                    <TunableTuple name="use_played_sims" class="Tunable_RelationshipAllKnownPlayed" display="Use Played Sims" muid="12A9732D7515E17A" description="Consider the relationship with all known played Sims." Deprecated="False" filter="0" group="General" />
                                    <TunableTuple name="use_requesting_sim" class="Tunable_RelationshipRequestingSim" display="Use Requesting Sim" muid="C9FBF9B1BCB82A5" description="Consider the relationship with the requesting Sim." Deprecated="False" filter="0" group="General" />
                                </TunableVariant>
                                <Tunable type="bool" name="requesting_sim_override" class="Tunable" default="False" display="Requesting Sim Override" muid="F37F05A1A13D2EDB" description="If checked then the filter term will always return 1 if the&#xA;requesting sim info is the sim info we are looking at." Deprecated="False" filter="0" group="General" />
                                <Tunable type="bool" name="reverse_bit_lookup" class="Tunable" default="False" display="Reverse Bit Lookup" muid="1CF7C599E56DC981" description="Look up the relationship bits for target to source sim,&#xA;instead of the default behavior of source to target relationship bits" Deprecated="False" filter="0" group="General" />
                                <TunableList name="white_list" class="TunableSet" display="White List" muid="C6E3B285528B33BE" description="A set of relationship bits or bit collections that requires the &#xA;requesting sim to have at least one matching relationship bit with &#xA;the sims we are scoring." Deprecated="False" filter="0" group="General" unique_entries="true">
                                    <Tunable type="relbit" class="TunableReference" muid="B7D7B9171B8E0FDB" description="A relationship bit or bit collection that we will use to check &#xA;if the requesting sim has it with the sim we are scoring.&#xA;WARNING: If all elements are in a pack, then no sim will pass&#xA;the filter if the pack(s) aren't installed." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                </TunableList>
                            </TunableTuple>
                            <TunableTuple name="relationship_track" class="TunableRelationshipTrackFilterTerm" display="Relationship Track" muid="420B39153969278" description="A term for filtering against relationship tracks. The score is modified&#xA;based on the tuned ideal value of the relationship.&#xA;&#xA;New and existing Sims can be conformed by granting them relationship, within&#xA;the tuned bounds." Deprecated="False" filter="0" group="General">
                                <Tunable type="bool" name="conform_optional" class="Tunable" default="False" display="Conform Optional" muid="F75AB66D3A0A625" description="If enabled, failing to conform this filter will not stop Sim&#xA;creation." Deprecated="False" filter="0" group="General" />
                                <Tunable type="int" name="ideal_value" class="Tunable" default="0" display="Ideal Value" muid="A081B907D8B8ECCF" description="Ideal value of the relationship track that we are filtering against." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="169CBB1219DD6DE9" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                                <Tunable type="int" name="max_value" class="Tunable" default="100" display="Max Value" muid="CBF6E37F6798A4B3" description="The maximum value of the relationship track that we are filtering&#xA;against." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                <Tunable type="int" name="min_value" class="Tunable" default="-100" display="Min Value" muid="D18FA08FBC458B7A" description="The minimum value of the relationship track that we are filtering&#xA;against." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="A00AB971EE8CCC6E" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                <TunableVariant type="None" name="relationship_selector" class="TunableVariant" default="use_requesting_sim" display="Relationship Selector" muid="71E79A12FA219675" description="Define which relationships are to be considered." Deprecated="False" filter="0" group="General">
                                    <TunableTuple name="use_all_sims" class="Tunable_RelationshipAllKnown" display="Use All Sims" muid="55B5C0B643F1A09C" description="Consider the relationship with all known Sims." Deprecated="False" filter="0" group="General" />
                                    <TunableTuple name="use_played_sims" class="Tunable_RelationshipAllKnownPlayed" display="Use Played Sims" muid="E0FD71773FE83EC3" description="Consider the relationship with all known played Sims." Deprecated="False" filter="0" group="General" />
                                    <TunableTuple name="use_requesting_sim" class="Tunable_RelationshipRequestingSim" display="Use Requesting Sim" muid="F92436BC00A3DE31" description="Consider the relationship with the requesting Sim." Deprecated="False" filter="0" group="General" />
                                </TunableVariant>
                                <Tunable type="statistic" name="relationship_track" class="TunableReference" display="Relationship Track" muid="29473B874326F2A7" description="The relationship track that we are filtering against." allow_none="False" Deprecated="False" filter="0" group="General" restrict="RelationshipTrack" />
                                <Tunable type="bool" name="requesting_sim_override" class="Tunable" default="False" display="Requesting Sim Override" muid="2DFC7D8CF7E21CE1" description="If checked then the filter term will always return 1 if the&#xA;requesting sim info is the sim info we are looking at." Deprecated="False" filter="0" group="General" />
                            </TunableTuple>
                            <TunableTuple name="requesting_sim" class="TunableRequestingSimFilterTerm" display="Requesting Sim" muid="A320773DF6B2C8B8" description="A filter term for matching the requesting sim." Deprecated="False" filter="0" group="General">
                                <Tunable type="bool" name="conform_optional" class="Tunable" default="False" display="Conform Optional" muid="560A3F772C1D2E9D" description="If enabled, failing to conform this filter will not stop Sim&#xA;creation." Deprecated="False" filter="0" group="General" />
                                <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="304CA460FCAB8841" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                                <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="6708008697B9EE75" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                            </TunableTuple>
                            <TunableTuple name="sim_info_fixups" class="TunableSimInfoFixupFilterTerm" display="Sim Info Fixups" muid="49C2A8D851202889" description="A term for filtering Sims based on a sim info fixup they may or may not have.&#xA;&#xA;New and existing Sims can be conformed by either granting or removing the&#xA;specified fixup." Deprecated="False" filter="0" group="General">
                                <Tunable type="bool" name="conform_optional" class="Tunable" default="False" display="Conform Optional" muid="7193EE2294AF396B" description="If enabled, failing to conform this filter will not stop Sim&#xA;creation." Deprecated="False" filter="0" group="General" />
                                <Tunable type="sim_info_fixup" name="fixup" class="TunableReference" display="Fixup" muid="239968A0DCD4C23" description="The sim info fixup to filter against." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="24F2E78E8D8B5EC4" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                                <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="2FD83A0FEFE990DD" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                            </TunableTuple>
                            <TunableTuple name="sim_info_lod" class="TunableSimLODFilterTerm" display="Sim Info Lod" muid="D3214D1FE2215150" description="A term for filtering Sims that have or do not have the specified Sim Info&#xA;LOD value.&#xA;&#xA;Sims may not be conformed to match this filter term." Deprecated="False" filter="0" group="General">
                                <Tunable type="bool" name="conform_optional" class="Tunable" default="False" display="Conform Optional" muid="9C16DB2957FF0331" description="If enabled, failing to conform this filter will not stop Sim&#xA;creation." Deprecated="False" filter="0" group="General" />
                                <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="F583B3173A2E7F6E" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                                <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="94996AD110F86DA8" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                <TunableEnum type="SimInfoLODLevel" name="sim_lod_value" class="TunableEnumEntry" default="BACKGROUND" display="Sim Lod Value" muid="17B71DEBC015BBDD" static_entries="sims-sim_info_lod.SimInfoLODLevel" description="The Sim LOD value to check against." Deprecated="False" filter="0" group="General" />
                            </TunableTuple>
                            <TunableTuple name="skill" class="TunableSkillFilterTerm" display="Skill" muid="F9EE260FDC5ED44F" description="A term for filtering Sims based on their skill. The score is modified based&#xA;on the tuned ideal value of the skill.&#xA;&#xA;New and existing Sims can be conformed by granting them the skill, within&#xA;the tuned bounds." Deprecated="False" filter="0" group="General">
                                <Tunable type="bool" name="conform_optional" class="Tunable" default="False" display="Conform Optional" muid="3E57835AF8D10A9B" description="If enabled, failing to conform this filter will not stop Sim&#xA;creation." Deprecated="False" filter="0" group="General" />
                                <Tunable type="int" name="ideal_value" class="Tunable" default="5" display="Ideal Value" muid="F5409CB6509E468E" description="Ideal value of the skill that we are filtering against." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="E5658746B7CC591B" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                                <Tunable type="int" name="max_value" class="Tunable" default="10" display="Max Value" muid="A19933727BEE80C" description="Maximum value of the skill that we are filtering against." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                <Tunable type="int" name="min_value" class="Tunable" default="0" display="Min Value" muid="A8FE77B88EB80210" description="Minimum value of the skill that we are filtering against." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="276421BB5625660B" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                <Tunable type="bool" name="only_check_statistic_owned" class="Tunable" default="False" display="Only Check Statistic Owned" muid="5DCD24BC1F2396F7" description="Only require that the statistic is actually owned by the sim,&#xA;ignoring the statistic's level." Deprecated="False" filter="0" group="General" />
                                <TunableVariant type="None" name="score_spread_override" class="OptionalTunable" default="disabled" display="Score Spread Override" muid="2F11D78ABAAA28AD" description="If enabled this interval modifies the spread over which the score&#xA;should return.&#xA;&#xA;A score is typically between 0 and 1.  A score of 0 means&#xA;the sim will never be selected, the higher a score is the more&#xA;likely that sim is to be selected.&#xA;&#xA;The score for statistic scoring is based on how close to the &quot;ideal&quot; value&#xA;the value for the specified statistic for a sim is.  It's a 1 if it's&#xA;that exact score.  It's *near* 0  (though not exactly, because the&#xA;general idea behind this filter to make it a weight not elimination)&#xA;as it gets farther from the ideal value and closer to the min or max value.&#xA;(Note: it uses min_value -1 and max_value + 1 as the min/max values to avoid&#xA;hitting 0.  However the min/max values don't have to be accurate,&#xA;so you can hit 0 by adjusting the tuned min/max values here as desired.)&#xA;&#xA;So if you have it tuned as:&#xA;min value: 0&#xA;max value: 5&#xA;ideal value: 5&#xA;The resulting score for each integer will be:&#xA;0 gives you: 0.17&#xA;1 gives you: 0.33&#xA;2 gives you: 0.5&#xA;3 gives you: 0.66&#xA;4 gives you: 0.83&#xA;5 gives you: 1&#xA;&#xA;The minimum filter score tuning is simply a floor.  Regardless of how low&#xA;the calculated score is, if it's lower than the minimum filter score&#xA;the result will simply be replaced with the minimum filter score.&#xA;&#xA;So adding a minimum filter score of 0.5 simply results in:&#xA;0 gives you: 0.5&#xA;1 gives you: 0.5&#xA;2 gives you: 0.5&#xA;3 gives you: 0.66&#xA;4 gives you: 0.83&#xA;5 gives you: 1&#xA;&#xA;This optional tunable modifies the spread over which the score&#xA;is returned (and gets rid of the -1/+1 padding as you can specify&#xA;the padding in the actual range.)  So instead of returning from 0 to 1, &#xA;where 0 is as far away from the ideal as possible, and 1 is at the &#xA;ideal value, it'll return the lower value when the statistic is as &#xA;far away from the ideal value as possible, and the closer you get to the &#xA;ideal value, the closer the return value will be to the maximum value.&#xA;&#xA;So adding a score spread override of 0.5 to 1.0, (instead of a&#xA;minimum filter score) results in:&#xA;0 gives you: 0.5&#xA;1 gives you: 0.6&#xA;2 gives you: 0.7&#xA;3 gives you: 0.8&#xA;4 gives you: 0.9&#xA;5 gives you: 1&#xA;&#xA;Note:  Since, as stated, it's perfectly possible to lie about the&#xA;min/max value, this result is also possible to achieve with clever&#xA;tuning:&#xA;min value of -4&#xA;max value of 5&#xA;ideal value of 5" Deprecated="False" filter="0" group="General">
                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="60CC0CC14681A178" />
                                    <TunableTuple name="enabled" class="TunableInterval" display="Enabled" muid="A5E1EDD385136BC2" description="A tunable interval between lower_bound and upper_bound." Deprecated="False" filter="0" group="General">
                                        <Tunable type="float" name="lower_bound" class="TunableRange" default="0.0" display="Lower Bound" muid="EBE283FEC456533B" min="0" max="None" description="The lower bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        <Tunable type="float" name="upper_bound" class="TunableRange" default="1.0" display="Upper Bound" muid="463C243AF36D68F8" min="None" max="None" description="The upper bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                </TunableVariant>
                                <Tunable type="statistic" name="skill" class="TunableReference" display="Skill" muid="9A877F978E88E4CA" description="The skill the range applies to." allow_none="False" Deprecated="False" filter="0" group="General" restrict="Skill" />
                            </TunableTuple>
                            <TunableTuple name="species" class="TunableSpeciesFilterTerm" display="Species" muid="8628432152AA1901" description="A term for filtering Sim based on their species.&#xA;&#xA;Only new Sims may be conformed by creating them with a valid species.&#xA;Existing Sims may not be conformed." Deprecated="False" filter="0" group="General">
                                <Tunable type="bool" name="conform_optional" class="Tunable" default="False" display="Conform Optional" muid="8782CD19DAAEE1CC" description="If enabled, failing to conform this filter will not stop Sim&#xA;creation." Deprecated="False" filter="0" group="General" />
                                <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="8B804FC03DA4F2C1" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                                <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="89D8F3D5A75ED0D5" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                <TunableEnum type="Species" name="species" class="TunableEnumEntry" default="HUMAN" display="Species" muid="95ACA736F26BB796" static_entries="sims-sim_info_types.Species" description="The species to filter for." Deprecated="False" filter="0" group="General" invalid_entries="INVALID" />
                            </TunableTuple>
                            <TunableTuple name="statistic" class="TunableStatisticFilterTerm" display="Statistic" muid="FC5AC3595E05EBDA" description="A term for filtering Sims based on a statistic. The score is modified based&#xA;on the tuned ideal value of the statistic.&#xA;&#xA;New and existing Sims can be conformed by granting them the statistic, within&#xA;the tuned bounds." Deprecated="False" filter="0" group="General">
                                <Tunable type="bool" name="conform_optional" class="Tunable" default="False" display="Conform Optional" muid="55118E867DFEC54E" description="If enabled, failing to conform this filter will not stop Sim&#xA;creation." Deprecated="False" filter="0" group="General" />
                                <Tunable type="float" name="ideal_value" class="Tunable" default="5.0" display="Ideal Value" muid="FEB6CDA30F368F46" description="Ideal value of the statistic that we are filtering against." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="94E69EDEB23784F7" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                                <Tunable type="float" name="max_value" class="Tunable" default="10.0" display="Max Value" muid="1D718BDD59F23FF7" description="Maximum value of the statistic that we are filtering against." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                <Tunable type="float" name="min_value" class="Tunable" default="0.0" display="Min Value" muid="E1C7A3160B6F5744" description="Minimum value of the statistic that we are filtering against." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="6140446E7576C492" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                <Tunable type="bool" name="only_check_statistic_owned" class="Tunable" default="False" display="Only Check Statistic Owned" muid="440B5F80FBEE19B1" description="Only require that the statistic is actually owned by the sim,&#xA;ignoring the statistic's level." Deprecated="False" filter="0" group="General" />
                                <TunableVariant type="None" name="score_spread_override" class="OptionalTunable" default="disabled" display="Score Spread Override" muid="9720DE6CC919D19" description="If enabled this interval modifies the spread over which the score&#xA;should return.&#xA;&#xA;A score is typically between 0 and 1.  A score of 0 means&#xA;the sim will never be selected, the higher a score is the more&#xA;likely that sim is to be selected.&#xA;&#xA;The score for statistic scoring is based on how close to the &quot;ideal&quot; value&#xA;the value for the specified statistic for a sim is.  It's a 1 if it's&#xA;that exact score.  It's *near* 0  (though not exactly, because the&#xA;general idea behind this filter to make it a weight not elimination)&#xA;as it gets farther from the ideal value and closer to the min or max value.&#xA;(Note: it uses min_value -1 and max_value + 1 as the min/max values to avoid&#xA;hitting 0.  However the min/max values don't have to be accurate,&#xA;so you can hit 0 by adjusting the tuned min/max values here as desired.)&#xA;&#xA;So if you have it tuned as:&#xA;min value: 0&#xA;max value: 5&#xA;ideal value: 5&#xA;The resulting score for each integer will be:&#xA;0 gives you: 0.17&#xA;1 gives you: 0.33&#xA;2 gives you: 0.5&#xA;3 gives you: 0.66&#xA;4 gives you: 0.83&#xA;5 gives you: 1&#xA;&#xA;The minimum filter score tuning is simply a floor.  Regardless of how low&#xA;the calculated score is, if it's lower than the minimum filter score&#xA;the result will simply be replaced with the minimum filter score.&#xA;&#xA;So adding a minimum filter score of 0.5 simply results in:&#xA;0 gives you: 0.5&#xA;1 gives you: 0.5&#xA;2 gives you: 0.5&#xA;3 gives you: 0.66&#xA;4 gives you: 0.83&#xA;5 gives you: 1&#xA;&#xA;This optional tunable modifies the spread over which the score&#xA;is returned (and gets rid of the -1/+1 padding as you can specify&#xA;the padding in the actual range.)  So instead of returning from 0 to 1, &#xA;where 0 is as far away from the ideal as possible, and 1 is at the &#xA;ideal value, it'll return the lower value when the statistic is as &#xA;far away from the ideal value as possible, and the closer you get to the &#xA;ideal value, the closer the return value will be to the maximum value.&#xA;&#xA;So adding a score spread override of 0.5 to 1.0, (instead of a&#xA;minimum filter score) results in:&#xA;0 gives you: 0.5&#xA;1 gives you: 0.6&#xA;2 gives you: 0.7&#xA;3 gives you: 0.8&#xA;4 gives you: 0.9&#xA;5 gives you: 1&#xA;&#xA;Note:  Since, as stated, it's perfectly possible to lie about the&#xA;min/max value, this result is also possible to achieve with clever&#xA;tuning:&#xA;min value of -4&#xA;max value of 5&#xA;ideal value of 5" Deprecated="False" filter="0" group="General">
                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="A58362642394321C" />
                                    <TunableTuple name="enabled" class="TunableInterval" display="Enabled" muid="3D0109A442CF8866" description="A tunable interval between lower_bound and upper_bound." Deprecated="False" filter="0" group="General">
                                        <Tunable type="float" name="lower_bound" class="TunableRange" default="0.0" display="Lower Bound" muid="1FCFCF2BCE4E7E31" min="0" max="None" description="The lower bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        <Tunable type="float" name="upper_bound" class="TunableRange" default="1.0" display="Upper Bound" muid="978FCA3CBFF9263" min="None" max="None" description="The upper bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                </TunableVariant>
                                <Tunable type="statistic" name="statistic" class="TunableReference" display="Statistic" muid="E9858B3D56D81654" description="The statistic the range applies to." allow_none="False" Deprecated="False" filter="0" group="General" restrict="Statistic" />
                            </TunableTuple>
                            <TunableTuple name="trait" class="TunableTraitFilterTerm" display="Trait" muid="7703BBA28415A01B" description="A term for filtering Sims based on a trait they may or may not have.&#xA;&#xA;New and existing Sims can be conformed by either granting or removing the&#xA;specified trait." Deprecated="False" filter="0" group="General">
                                <Tunable type="bool" name="conform_optional" class="Tunable" default="False" display="Conform Optional" muid="44A734F22F6ACF10" description="If enabled, failing to conform this filter will not stop Sim&#xA;creation." Deprecated="False" filter="0" group="General" />
                                <Tunable type="bool" name="ignore_if_wrong_pack" class="Tunable" default="False" display="Ignore If Wrong Pack" muid="FAF6A414AB1E6F0C" description="If checked then we will ignore this filter term if the specified&#xA;trait isn't found.  (.e.g. trait is from uninstalled pack.)&#xA;For example we'd *like* to pick sims that use umbrellas.  But if &#xA;Seasons isn't installed it's ok to use sims that don't." Deprecated="False" filter="0" group="General" />
                                <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="779947B0AF82B935" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                                <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="6F2B0598C8648FCA" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                <Tunable type="trait" name="trait" class="TunableReference" display="Trait" muid="F47197DE213A2420" description="The trait to filter against." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                            </TunableTuple>
                            <TunableTuple name="university" class="TunableUniversityMajorFilterTerm" display="University" muid="388D9250385185F9" description="A term for filtering Sims going to university/in a specific Major.&#xA;&#xA;To pass, Sims must have specified major as their current major and still be&#xA;enrolled in at least one class." Deprecated="False" filter="0" group="General">
                                <Tunable type="bool" name="conform_optional" class="Tunable" default="False" display="Conform Optional" muid="BEA47BA799D3C2DC" description="If enabled, failing to conform this filter will not stop Sim&#xA;creation." Deprecated="False" filter="0" group="General" />
                                <Tunable type="bool" name="invert_score" class="Tunable" default="False" display="Invert Score" muid="D5DD702C5C9A889B" description="Invert the score so that the filter term will score is the opposite&#xA;of what the score would be.&#xA;&#xA;For example, if sim is busy, normally would return 1, but if checked&#xA;value would return 0 and would not be chosen by filter system." Deprecated="False" filter="0" group="General" />
                                <TunableVariant type="None" name="major" class="TunableVariant" default="any_majors" display="Major" muid="7B2BA25376B6F18A" description="Which major(s) the sim must be pursuing." Deprecated="False" filter="0" group="General">
                                    <TunableTuple name="any_majors" class="Tunable_AnyMajors" display="Any Majors" muid="BCAC2FFE9D9C95D8" description="To pass, sim must currently be enrolled in any major. " Deprecated="False" filter="0" group="General">
                                        <Tunable type="bool" name="conform_using_skills" class="Tunable" default="False" display="Conform Using Skills" muid="18FE5C324CD78449" description="If checked then when we conform a Sim using this filter term&#xA;we will use the Sims skills to choose which Major to enroll &#xA;them in. If unchecked we will pick one randomly." Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                    <TunableTuple name="specific_majors" class="Tunable_SpecificMajors" display="Specific Majors" muid="9B300C190D45C2DE" description="To pass, the sim must currently be enrolled in 1 of the specified majors." Deprecated="False" filter="0" group="General">
                                        <TunableList name="_majors" class="TunableList" display="Majors" muid="19C86CD13C315E1B" min="1" description="Sim must be currently enrolled in one of the specified majors." Deprecated="False" filter="0" group="General">
                                            <Tunable type="university_major" class="TunableReference" muid="43591AF870BAD0A" description="                    " allow_none="False" Deprecated="False" filter="0" group="General" />
                                        </TunableList>
                                    </TunableTuple>
                                </TunableVariant>
                                <Tunable type="float" name="minimum_filter_score" class="Tunable" default="0" display="Minimum Filter Score" muid="D4995DD76922C4B5" description="The minimum score that this filter term is allowed to have. The&#xA;purpose of this is to allow 'relaxed filters' that don't prevent&#xA;sims from being chosen." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                <TunableVariant type="None" name="university" class="OptionalTunable" default="disabled" display="University" muid="3BCF2FA58A1B2965" description="University in which the sim must be enrolled.&#xA;If Disabled, sim can be in any university." Deprecated="False" filter="0" group="General">
                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="A0F858C965B7ACEB" />
                                    <Tunable type="university" name="enabled" class="TunableReference" display="Enabled" muid="14EFAF365CA4FEB" description="The university to filter for." allow_none="False" Deprecated="False" filter="0" group="General" />
                                </TunableVariant>
                            </TunableTuple>
                        </TunableVariant>
                    </TunableList>
                    <Tunable type="tag_set" name="sim_creator_tags" class="TunableReference" display="Sim Creator Tags" muid="FD4143E9841C04FC" description="Tags to inject into the filter's Sim template." allow_none="True" Deprecated="False" filter="0" group="General" restrict="TunableTagSet" />
                    <TunableEnum type="SimNameType" name="sim_name_type" class="TunableEnumEntry" default="DEFAULT" display="Sim Name Type" muid="8972CEC640F72E52" dynamic_entries="sims-sim_spawner_enums.SimNameType._elements" static_entries="sims-sim_spawner_enums.SimNameType" description="What type of name the sim should have." Deprecated="False" filter="0" group="General" />
                    <Tunable type="float" name="weight" class="TunableRange" default="1" display="Weight" muid="778112D54F6E9AAB" min="0" max="None" description="Weighted chance." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                </TunableTuple>
            </TunableList>
            <TunableVariant type="None" name="target_population" class="OptionalTunable" default="disabled" display="Target Population" muid="AE6C3B91A4A86E27" description="If enabled, Sims created for other purposes will passively be&#xA;assigned to live on this street, gaining the filter features.&#xA;Sims are assigned out in round robin fashion up until all&#xA;streets have reached their target, after which those streets&#xA;will be assigned Sims in round robin fashion past their target.&#xA;&#xA;If disabled, this street will not passively be assigned townies&#xA;unless the Lives On Street filter explicitly requires the&#xA;Sim to be on the street." Deprecated="False" filter="0" group="General">
                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="F51F3959B733154" />
                <Tunable type="int" name="enabled" class="TunableRange" default="1" display="Enabled" muid="F93BC69AD032C8DA" min="0" max="None" description="The ideal number of townies that live on the street.&#xA;&#xA;0 is valid if you don't want Sims to live on this street&#xA;while other streets haven't met their target population." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
            </TunableVariant>
        </TunableTuple>

        <TunableVariant type="None" name="travel_lot" class="OptionalTunable" default="disabled" display="Travel Lot" muid="60433FD182C8ED55" description="If enabled then this street will have a specific lot that it will&#xA;want to travel to when we travel to this &quot;street.&quot;" Deprecated="False" filter="0" group="General">
            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="4FEA19728AD114E9" />
            <Tunable type="lotdescription" name="enabled" class="TunableReference" display="Enabled" muid="DF8FEC146B98CFD2" description="The specific lot that we will travel to when asked to travel to&#xA;this street." Deprecated="False" filter="0" group="General" />
        </TunableVariant>

        <TunableVariant type="None" name="vacation_lot" class="OptionalTunable" default="disabled" display="Vacation Lot" muid="6A2BFAB1CB63CCD8" description="If enabled then when a vacation is requested targeting a zone on this street,&#xA;override it with a zone that is associated with the given lot instead." Deprecated="False" filter="0" group="General">
            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="42A907BEF02FA41E" />
            <Tunable type="lotdescription" name="enabled" class="TunableReference" display="Enabled" muid="F797E9301F7A8043" description="The specific lot that will host the vacation group." Deprecated="False" filter="0" group="General" />
        </TunableVariant>

        <TunableList name="valid_conditional_layers" class="TunableSet" display="Valid Conditional Layers" muid="464E0825ADB6C608" description="A list of all of the conditional_layers on this Street." Deprecated="False" filter="0" group="General" unique_entries="true">
            <Tunable type="conditional_layer" class="TunableReference" muid="F156A0E9E1E65147" description="A reference to a conditional layer that exists on this Street." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
        </TunableList>

        <TunableList name="weather" class="TunableMapping" display="Weather" muid="164A91C68FC6A302" mapping_key="key" mapping_value="value" description="Forecasts for this location for the various seasons" Deprecated="False" filter="0" group="General">
            <TunableTuple class="TunableTuple" muid="4D7E2602C9C1EFAE" Deprecated="False" filter="0" group="General">
                <TunableEnum type="SeasonType" name="key" class="TunableEnumEntry" default="SPRING" display="Key" muid="857B79329670E5D7" static_entries="seasons-seasons_enums.SeasonType" description="The Season." Deprecated="False" filter="0" group="General" />
                <Tunable type="snippet" name="value" class="TunableReference" display="Value" muid="CB3E35B3F9397360" description="The forecasts for the season by part of season" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="WeatherSeasonalForecasts" />
            </TunableTuple>
        </TunableList>

        <Tunable type="snippet" name="weather_no_seasons" class="TunableReference" display="Weather No Seasons" muid="5A2C9A52DA8EB306" description="Forecast(s) for this location for players without EP05 installed" allow_none="True" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="WeatherForcastList" />
    </Instance>

    <VersionHistory>
        <ActionList>
            <Action type="kRename" old_muid="80B3647D3BAD2157" new_muid="464E0825ADB6C608" />
        </ActionList>

        <ActionList>
            <Action type="kRemove" old_muid="C845142F3C71EDBD" />
        </ActionList>

        <ActionList>
            <Action type="kRename" old_muid="6D7B48D58CABACD8" new_muid="19C86CD13C315E1B" />
            <Action type="kRename" old_muid="499592743DD51826" new_muid="388D9250385185F9" />
        </ActionList>

        <ActionList>
            <Action type="kRemove" old_muid="F8283EFA8195474B" />
        </ActionList>

        <ActionList>
            <Action type="kRename" old_muid="173E685D63C756F4" new_muid="2EB0AD4B9B94FA06" />
        </ActionList>

        <ActionList>
            <Action type="kRename" old_muid="C9A15612EA21C5DD" new_muid="58F954A2E5224379" />
            <Action type="kRename" old_muid="5696974BA874B8A2" new_muid="180A64D1B707C0F0" />
            <Action type="kRemove" old_muid="E50E85CDD6623A0E" />
        </ActionList>

        <ActionList>
            <Action type="kRename" old_muid="73BC9209A84C94C2" new_muid="2EB0AD4B9B94FA06" />
        </ActionList>

        <ActionList />

        <ActionList>
            <Action type="kRename" old_muid="E3E79CC98B4F63DF" new_muid="61742FB1DAA87C81" />
        </ActionList>
    </VersionHistory>
</TuningRoot>