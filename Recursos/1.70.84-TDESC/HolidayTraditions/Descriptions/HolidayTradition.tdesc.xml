<?xml version="1.0" encoding="iso-8859-1"?>

<TuningRoot>
    <Instance instance_type="holiday_tradition" class="HolidayTradition" module="holidays.holiday_tradition" muid="CB2D633388FC69EB" description="Tuning structure that defines traditions." instance_subclasses_only="False" path="HolidayTraditions\Descriptions" use_guid_for_reference="True">
        <TunableVariant type="None" name="_display_data" class="OptionalTunable" default="disabled" display="Display Data" muid="13E2B18FD8789D3C" description="If enabled, specify display data for this instance." Deprecated="False" export_modes="client_binary,server_binary,server_xml" filter="0" group="UI">
            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="1DDD5C06FAD791EF" />
            <TunableTuple name="optional_display_mixin" class="OptionalDisplayMixinTunable" display="Optional Display Mixin" muid="AE87BE50FCD810E6" description="The instance's display data." Deprecated="False" filter="0" group="General">
                <TunableVariant type="None" name="instance_display_description" class="OptionalTunable" default="enabled_display_description" display="Instance Display Description" muid="A3B6B37E5D862187" description="If enabled, specify a display description for this instance." Deprecated="False" export_modes="client_binary,server_binary,server_xml" filter="0" group="General">
                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="D2004D5DC96ECCA1" />
                    <Tunable type="int" name="enabled_display_description" class="TunableLocalizedString" default="0x0" display="Enabled Display Description" muid="F3A737759C917D94" description="The instance's description. " Deprecated="False" filter="0" group="General" />
                </TunableVariant>
                <TunableVariant type="None" name="instance_display_icon" class="OptionalTunable" default="enabled_display_icon" display="Instance Display Icon" muid="514450286D1A421F" description="If enabled, specify a display icon for this instance." Deprecated="False" export_modes="client_binary,server_binary,server_xml" filter="0" group="General">
                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="F2817699C25DFF2C" />
                    <Tunable type="ResourceKey" name="enabled_display_icon" class="TunableIcon" default="None" display="Enabled Display Icon" muid="5B0D9D7C56B306AE" description="The instance's icon." Deprecated="False" filter="0" group="General" resource_types="0x2f7d0004" />
                </TunableVariant>
                <TunableVariant type="None" name="instance_display_name" class="OptionalTunable" default="enabled_display_name" display="Instance Display Name" muid="5C1BA60D23E82842" description="If enabled, specify a display name for this instance." Deprecated="False" export_modes="client_binary,server_binary,server_xml" filter="0" group="General">
                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="1B73E2B798032EA6" />
                    <Tunable type="int" name="enabled_display_name" class="TunableLocalizedString" default="0x0" display="Enabled Display Name" muid="675E2B7DE1AB629C" description="The instance's name." Deprecated="False" filter="0" group="General" />
                </TunableVariant>
                <TunableVariant type="None" name="instance_display_tooltip" class="OptionalTunable" default="enabled_display_tooltip" display="Instance Display Tooltip" muid="E5232FDB9E122CFC" description="If enabled, specify a display tooltip for this instance." Deprecated="False" export_modes="client_binary,server_binary,server_xml" filter="0" group="General">
                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="E3383FD5A56E2B1" />
                    <Tunable type="int" name="enabled_display_tooltip" class="TunableLocalizedString" default="0x0" display="Enabled Display Tooltip" muid="2D045A915F90786B" description="The instance's tooltip. " Deprecated="False" filter="0" group="General" />
                </TunableVariant>
            </TunableTuple>
        </TunableVariant>

        <TunableTuple name="additional_walkbys" class="TunableSituationCurve" display="Additional Walkbys" muid="77786B6828A00055" description="An additional walkby schedule that will be added onto the walkby&#xA;schedule when the tradition is active." Deprecated="False" filter="0" group="General">
            <TunableTuple name="desired_sim_count_multipliers" class="TunableTunableMultiplier" display="Desired Sim Count Multipliers" muid="DF04CC01616B430C" description="Tunable tested multiplier to apply to the desired sim count." Deprecated="False" filter="0" group="General">
                <TunableList name="multipliers" class="TunableList" display="Multipliers" muid="27D369DE625F28FA" description="A list of multipliers to apply to base_value." Deprecated="False" filter="0" group="General">
                    <TunableTuple class="TunableTuple" muid="B15F91402BC81FE7" Deprecated="False" filter="0" group="General">
                        <Tunable type="float" name="multiplier" class="TunableRange" default="1" display="Multiplier" muid="4CB49CEF87823E68" min="0" max="None" description="The multiplier to apply to base_value if the associated&#xA;tests pass." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                        <TdescFragTag name="tests" class="TunableTestSet" display="Tests" muid="A0DF2D99F0DA9A5A" description="A series of tests that must pass in order for multiplier to&#xA;be applied." filter="0" group="General" />
                    </TunableTuple>
                </TunableList>
            </TunableTuple>
            <TunableList name="entries" class="TunableList" display="Entries" muid="3D62002036DD3BA" description="A list of tuples declaring a relationship between days of the week&#xA;and desire curves." Deprecated="False" filter="0" group="General">
                <TunableTuple class="TunableTuple" muid="9DB929084A30A7D6" description="The first value is the day of the week that maps to a desired&#xA;curve of population by time of the day.&#xA;&#xA;days_of_the_week    population_desire_by_time_of_day&#xA;    M,Th,F                time_curve_1&#xA;    W,Sa                  time_curve_2&#xA;    &#xA;By production/design request we do not support multiple&#xA;population curves for the same day. e.g. if you want something&#xA;special to occur at noon on a Wednesday, make a unique curve for&#xA;Wednesday and apply the changes to it." Deprecated="False" filter="0" group="General">
                    <TunableTuple name="days_of_the_week" class="TunableAvailableDays" display="Days Of The Week" muid="752042A27C566A73" description="Which days of the week to include" Deprecated="False" filter="0" group="General">
                        <Tunable type="bool" name="0 SUNDAY" class="Tunable" default="False" display="0 Sunday" muid="4151838E272500A8" Deprecated="False" filter="0" group="General" />
                        <Tunable type="bool" name="1 MONDAY" class="Tunable" default="False" display="1 Monday" muid="7D84663F300A2280" Deprecated="False" filter="0" group="General" />
                        <Tunable type="bool" name="2 TUESDAY" class="Tunable" default="False" display="2 Tuesday" muid="256EF11435B4B5E1" Deprecated="False" filter="0" group="General" />
                        <Tunable type="bool" name="3 WEDNESDAY" class="Tunable" default="False" display="3 Wednesday" muid="E093F5DC25AB32BC" Deprecated="False" filter="0" group="General" />
                        <Tunable type="bool" name="4 THURSDAY" class="Tunable" default="False" display="4 Thursday" muid="E18E75FC7FEDDE4F" Deprecated="False" filter="0" group="General" />
                        <Tunable type="bool" name="5 FRIDAY" class="Tunable" default="False" display="5 Friday" muid="3450631747E9FBFD" Deprecated="False" filter="0" group="General" />
                        <Tunable type="bool" name="6 SATURDAY" class="Tunable" default="False" display="6 Saturday" muid="2433FEF208BD9E70" Deprecated="False" filter="0" group="General" />
                    </TunableTuple>
                    <TunableList name="walkby_desire_by_time_of_day" class="TunableMapping" display="Walkby Desire By Time Of Day" muid="50432E6F11D23FAA" mapping_key="hour_of_day" mapping_value="desired_walkby_situations" description="Each entry in the map has two columns. The first column is&#xA;the hour of the day (0-24) that maps to a desired list of&#xA;population (second column).&#xA;&#xA;The entry with starting hour that is closest to, but before&#xA;the current hour will be chosen.&#xA;&#xA;Given this tuning: &#xA;    hour_of_day           desired_situations&#xA;    6                     [(w1, s1), (w2, s2)]&#xA;    10                    [(w1, s2)]&#xA;    14                    [(w2, s5)]&#xA;    20                    [(w9, s0)]&#xA;    &#xA;if the current hour is 11, hour_of_day will be 10 and desired is [(w1, s2)].&#xA;if the current hour is 19, hour_of_day will be 14 and desired is [(w2, s5)].&#xA;if the current hour is 23, hour_of_day will be 20 and desired is [(w9, s0)].&#xA;if the current hour is 2, hour_of_day will be 20 and desired is [(w9, s0)]. (uses 20 tuning because it is not 6 yet)&#xA;&#xA;The entries will be automatically sorted by time." Deprecated="False" filter="0" group="General">
                        <TunableTuple class="TunableTuple" muid="B0ABF48622DFCBE5" Deprecated="False" filter="0" group="General">
                            <TunableTuple name="desired_walkby_situations" class="Tunable_DesiredSituations" display="Desired Walkby Situations" muid="372CD49F602E094A" description="Tuning that expresses a desire to populate the world with a specific number&#xA;of Sims and associating them with an entry from available weighted&#xA;situations." Deprecated="False" filter="0" group="General">
                                <TunableVariant type="None" name="desired_sim_count" class="TunableLiteralOrRandomValue" default="literal" display="Desired Sim Count" muid="6FCE99D38851A84C" description="The number of Sims desired to be participating in the situation." Deprecated="False" filter="0" group="General">
                                    <TunableTuple name="literal" class="TunableIntervalLiteral" display="Literal" muid="E78D2D53512C9520" description="A literal value that is to be used as the lower &#xA;and upper bound of an interval. This allows both literal and &#xA;range interval tunings in the same TunableVariant without &#xA;having to manually set the lower and upper bounds to the same&#xA;value." Deprecated="False" filter="0" group="General">
                                        <Tunable type="int" name="value" class="TunableRange" default="0" display="Value" muid="7101D19283C251F9" min="0" max="None" description="The upper and lower bounds." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                    <TunableTuple name="random_in_range" class="TunableInterval" display="Random In Range" muid="7EACE7D831F62604" description="A tunable interval between lower_bound and upper_bound." Deprecated="False" filter="0" group="General">
                                        <Tunable type="int" name="lower_bound" class="TunableRange" default="0" display="Lower Bound" muid="1FBD86218B4993B9" min="0" max="None" description="The lower bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        <Tunable type="int" name="upper_bound" class="TunableRange" default="0" display="Upper Bound" muid="107850983DB51A8A" min="None" max="None" description="The upper bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                </TunableVariant>
                                <Tunable type="bool" name="disable_churn" class="Tunable" default="False" display="Disable Churn" muid="9D95A5AB6DF7B0DB" description="If checked, we disable churn for this shift change. That means we&#xA;only fire the situation on shift change, not in between shifts. So&#xA;if you have a situation in this shift and it ends, we don't spin up&#xA;another one on the next churn (based on churn interval). Basically&#xA;means you want a one shot situation, fire and forget.&#xA;&#xA;If unchecked, we will try to maintain the desired number of&#xA;situations at every churn interval during this shift change." Deprecated="False" filter="0" group="General" />
                                <TunableList name="weighted_situations" class="TunableList" display="Weighted Situations" muid="9F1E8656AD2EB439" description="A weighted list of situations to be used while fulfilling the&#xA;desired Sim count." Deprecated="False" filter="0" group="General">
                                    <TunableTuple class="TunableTuple" muid="A8BCB9ACB0A6BE8A" Deprecated="False" filter="0" group="General">
                                        <TunableTuple name="params" class="TunableTuple" display="Params" muid="F15D1E9FF88FB8C9" description="Situation creation parameters." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="situation" name="situation" class="TunableReference" display="Situation" muid="DEC54D2516BCAE5A" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                        <TdescFragTag name="tests" class="TunableTestSet" display="Tests" muid="BD7F97F26C4E7C45" description="A set of tests that must pass for the situation and weight&#xA;pair to be available for selection.&#xA;&#xA;*IMPORTANT* The only participants that work are ones&#xA;available globally, such as Lot and ActiveHousehold. Only&#xA;use these participant types or use tests that don't rely&#xA;on any, such as testing all objects via Object Criteria&#xA;test or testing active zone with the Zone test." filter="0" group="General" />
                                        <Tunable type="int" name="weight" class="Tunable" default="1" display="Weight" muid="AD9AF3D264C75484" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        <TunableTuple name="weight_multipliers" class="TunableTunableMultiplier" display="Weight Multipliers" muid="ABD70BB032F751CE" description="Tunable tested multiplier to apply to weight.&#xA;&#xA;*IMPORTANT* The only participants that work are ones&#xA;available globally, such as Lot and ActiveHousehold. Only&#xA;use these participant types or use tests that don't rely&#xA;on any, such as testing all objects via Object Criteria&#xA;test or testing active zone with the Zone test." Deprecated="False" filter="0" group="General">
                                            <TunableList name="multipliers" class="TunableList" display="Multipliers" muid="9D466C668D88B519" description="A list of multipliers to apply to base_value." Deprecated="False" filter="0" group="General">
                                                <TunableTuple class="TunableTuple" muid="FCC3E2585A665969" Deprecated="False" filter="0" group="General">
                                                    <Tunable type="float" name="multiplier" class="TunableRange" default="1" display="Multiplier" muid="30B598A181DCF0BF" min="0" max="None" description="The multiplier to apply to base_value if the associated&#xA;tests pass." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                    <TdescFragTag name="tests" class="TunableTestSet" display="Tests" muid="9532685152985A98" description="A series of tests that must pass in order for multiplier to&#xA;be applied." filter="0" group="General" />
                                                </TunableTuple>
                                            </TunableList>
                                        </TunableTuple>
                                    </TunableTuple>
                                </TunableList>
                            </TunableTuple>
                            <Tunable type="int" name="hour_of_day" class="Tunable" default="0" display="Hour Of Day" muid="964E2FCA18E514C5" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                        </TunableTuple>
                    </TunableList>
                </TunableTuple>
            </TunableList>
        </TunableTuple>

        <TunableList name="business_cost_multiplier" class="TunableMapping" display="Business Cost Multiplier" muid="799F71681A12345E" mapping_key="key" mapping_value="value" description="A mapping between the business type and the cost multiplier that&#xA;we want to use if this tradition is active." Deprecated="False" filter="0" group="General">
            <TunableTuple class="TunableTuple" muid="26D674666965DDB6" Deprecated="False" filter="0" group="General">
                <TunableEnum type="BusinessType" name="key" class="TunableEnumEntry" default="INVALID" display="Key" muid="7DDD329E70EBF821" static_entries="business-business_enums.BusinessType" description="The type of business that we want to apply this price modifier&#xA;on." Deprecated="False" filter="0" group="General" invalid_entries="INVALID" />
                <Tunable type="float" name="value" class="TunableRange" default="1.0" display="Value" muid="D3C20281622826C6" min="0.0" max="None" description="The value of the multiplier to use." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
            </TunableTuple>
        </TunableList>

        <TunableList name="core_object_tags" class="TunableTags" display="Core Object Tags" muid="EEFA720A3E533687" Deprecated="False" filter="0" group="General" unique_entries="true">
            <TunableEnum type="Tag" class="TunableEnumWithFilter" default="INVALID" muid="AC8A4C3023092348" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="Tags of all the core objects used in this tradition." Deprecated="False" dynamic_entries_prefix="func" export_modes="client_binary,server_binary,server_xml" filter="0" group="UI" invalid_entries="INVALID" pack_safe="True" />
        </TunableList>

        <TunableList name="deco_object_tags" class="TunableTags" display="Deco Object Tags" muid="997EB839AB963A72" Deprecated="False" filter="0" group="General" unique_entries="true">
            <TunableEnum type="Tag" class="TunableEnumWithFilter" default="INVALID" muid="61F151A82F9011DA" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="Tags of all the deco objects used in this tradition." Deprecated="False" dynamic_entries_prefix="func" export_modes="client_binary,server_binary,server_xml" filter="0" group="UI" invalid_entries="INVALID" pack_safe="True" />
        </TunableList>

        <TunableList name="drama_nodes_to_run" class="TunableList" display="Drama Nodes To Run" muid="CB77EBFAA782EBBE" description="Drama nodes that will be run when the tradition is activated." Deprecated="False" filter="0" group="General" unique_entries="true">
            <Tunable type="drama_node" class="TunableReference" muid="4BB9106A609B3B53" description="A drama node that we will run when the holiday becomes active." allow_none="False" Deprecated="False" filter="0" group="General" />
        </TunableList>

        <TunableList name="drama_nodes_to_score" class="TunableList" display="Drama Nodes To Score" muid="96A1965FE64FBAF2" description="Drama nodes that we will attempt to schedule and score when this&#xA;tradition becomes active." Deprecated="False" filter="0" group="General" unique_entries="true">
            <Tunable type="drama_node" class="TunableReference" muid="50B6267957E89B1D" description="A drama node that we will put in the scoring pass when this&#xA;tradition becomes active." allow_none="False" Deprecated="False" filter="0" group="General" />
        </TunableList>

        <TunableList name="events" class="TunableList" display="Events" muid="8DF215F520EFB5AD" description="A list of times and things we want to happen at that time." Deprecated="False" filter="0" group="General">
            <TunableTuple class="TunableTuple" muid="37071A6BB92B5167" description="A pair of a time of day and event of something that we want&#xA;to occur." Deprecated="False" filter="0" group="General">
                <TunableVariant type="None" name="event" class="TunableVariant" default="start_situation" display="Event" muid="8164202EC413F528" description="What we want to occur at this time." Deprecated="False" filter="0" group="General">
                    <TunableTuple name="modify_items" class="ModifyAllItems" display="Modify Items" muid="ABA2844EB613DE0A" description="Modify all items on the lot." Deprecated="False" filter="0" group="General">
                        <TunableTuple name="item_modifications" class="TunableModifyAllLotItems" display="Item Modifications" muid="C48786C200382742" description="Modify objects on the active lot." Deprecated="False" filter="0" group="General">
                            <TunableList name="modifications" class="TunableList" display="Modifications" muid="12BA971089620FA2" description="A list of where the elements define how to modify objects on the&#xA;lot. Each entry is a triplet of an object modification action&#xA;(currently either destroy the object or set its state), a list of&#xA;tests to run on the object to determine if we should actually apply&#xA;the modification, and a priority in case some modifications should&#xA;take precedence over other ones when both of their tests pass.&#xA;&#xA;EX: test list: object's dirtiness state != dirtiness clean&#xA;action: set state to Dirtiness_clean&#xA;&#xA;So dirty objects will become clean" Deprecated="False" filter="0" group="General">
                                <TunableTuple class="TunableTuple" muid="A9978C2D585DE41D" Deprecated="False" filter="0" group="General">
                                    <TunableVariant type="None" name="action" class="TunableVariant" default="none" display="Action" muid="CD89F9F92F084695" Deprecated="False" filter="0" group="General">
                                        <TunableTuple name="cleanup_vehicle" class="TunableTuple" display="Cleanup Vehicle" muid="87F83425A67CE5F4" description="Cleanup vehicles that are left around." Deprecated="False" filter="0" group="General" />
                                        <TunableTuple name="deliver_bills" class="TunableTuple" display="Deliver Bills" muid="55C4FD51B56F061B" Deprecated="False" filter="0" group="General">
                                            <TunableTuple name="action_value" class="TunableDeliverBillFakePerform" display="Action Value" muid="F7B40394AD2694A6" description="Let the bills manager know that a bill has been delivered and&#xA;trigger appropriate bill-specific functionality." Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                        <TunableTuple name="destroy_object" class="TunableTuple" display="Destroy Object" muid="24F791BD588092C2" Deprecated="False" filter="0" group="General" />
                                        <TunableTuple name="inventory_transfer" class="TunableTuple" display="Inventory Transfer" muid="C9DF2D41B9F24A94" Deprecated="False" filter="0" group="General">
                                            <TunableTuple name="action_value" class="TunableInventoryTransferFakePerform" display="Action Value" muid="17212DA7D81EF4C5" description="Transfer all objects with a specified inventory type from the&#xA;specified inventory to the inventory of a specified participant." Deprecated="False" filter="0" group="General">
                                                <TunableEnum type="InventoryType" name="recipient" class="TunableEnumEntry" default="UNDEFINED" display="Recipient" muid="CC3EA1D5E168B7AB" dynamic_entries="objects-components-inventory_enums.InventoryType._elements" static_entries="objects-components-inventory_enums.InventoryType" description="The inventory into which the objects will be transferred." Deprecated="False" filter="0" group="General" />
                                                <TunableEnum type="InventoryType" name="source" class="TunableEnumEntry" default="UNDEFINED" display="Source" muid="23DFF0709BC680E4" dynamic_entries="objects-components-inventory_enums.InventoryType._elements" static_entries="objects-components-inventory_enums.InventoryType" description="The inventory from which the objects will be transferred." Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                        </TunableTuple>
                                        <TunableTuple name="loot" class="TunableTuple" display="Loot" muid="203A74987219B937" description="Apply loots to the object." Deprecated="False" filter="0" group="General">
                                            <TunableList name="loot_actions" class="TunableSet" display="Loot Actions" muid="83CE1C4CAB5CD316" description="Loot(s) to apply." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                <Tunable type="action" class="TunableReference" muid="BC33911C6B5AF9D0" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                            </TunableList>
                                        </TunableTuple>
                                        <Tunable name="none" class="TunableExistance" display="None" muid="5585AFACCDE586F6" />
                                        <TunableTuple name="set_on_fire" class="TunableTuple" display="Set On Fire" muid="24CFFA7F51FD2F88" Deprecated="False" filter="0" group="General" />
                                        <TunableTuple name="set_state" class="TunableTuple" display="Set State" muid="88E9A8D524904DED" Deprecated="False" filter="0" group="General">
                                            <Tunable type="object_state" name="action_value" class="TunableReference" display="Action Value" muid="761A5B0759EB9547" description="An object state to set the object to" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="ObjectStateValue" />
                                        </TunableTuple>
                                    </TunableVariant>
                                    <Tunable type="float" name="chance" class="TunablePercent" default="100" display="Chance" muid="599F8FA03A71AA16" min="1" max="100" description="Chance this modification will occur." Deprecated="False" filter="0" group="General" />
                                    <TunableList name="global_tests" class="TunableObjectModifyGlobalTestList" display="Global Tests" muid="57DC6815192EBE53" description="Non object-related tests that gate this modification from occurring.  Use this for any global&#xA;tests that don't require the object, such as zone/location/time-elapsed tests.  These tests&#xA;will run only ONCE for this action, unlike 'Tests', which runs PER OBJECT. " Deprecated="False" filter="0" group="General">
                                        <TunableVariant type="None" class="TunableObjectModifyGlobalTestVariant" default="none" muid="8812C36EC765B300" Deprecated="False" filter="0" group="General">
                                            <TunableTuple name="elapsed_time" class="TunableTimeElapsedZoneTest" display="Elapsed Time" muid="F37AD155D88C3ADC" description="Test to make sure enough time has passed since the zone was last saved." Deprecated="False" filter="0" group="General">
                                                <Tunable type="float" name="minutes_passed" class="TunableSimMinute" default="720" display="Minutes Passed" muid="D64AD2D1CFD909FA" min="1" max="None" description="This test will pass when the minutes passed is greater than the&#xA;number minutes since last loading into zone." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <Tunable name="none" class="TunableExistance" display="None" muid="7C2F5418BFB867D2" />
                                            <TunableTuple name="season" class="TunableSeasonTest" display="Season" muid="6ACBD49B389FCBE0" description="SeasonTest will test if the current simulation time falls within the&#xA;specified test conditions." Deprecated="False" filter="0" group="General">
                                                <Tunable type="bool" name="requires_seasons_pack" class="Tunable" default="True" display="Requires Seasons Pack" muid="130096819DA7DB94" description="If checked, this test will require that the Seasons pack be &#xA;installed in order for the seasons test to pass.  If unchecked, &#xA;this test will automatically pass." Deprecated="False" filter="0" group="General" />
                                                <TunableList name="seasons" class="TunableEnumSet" display="Seasons" muid="296F88F78FA8799F" min="1" description="Season(s) that we must be in to pass the test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                    <TunableEnum type="SeasonType" class="TunableEnumEntry" default="SUMMER" muid="4FE00C4563F379CF" static_entries="seasons-seasons_enums.SeasonType" Deprecated="False" filter="0" group="General" />
                                                </TunableList>
                                                <TunableVariant type="None" name="time_of_season" class="OptionalTunable" default="disabled" display="Time Of Season" muid="DD9EADDA02067559" description="Portion(s) of season(s) that we must be in to pass the test." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="6AC64793F5A33D2E" />
                                                    <TunableList name="enabled" class="TunableEnumSet" display="Enabled" muid="9C921141ED81AAD5" min="1" description="Portion(s) of season(s) that we must be in to pass the test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                        <TunableEnum type="SeasonSegment" class="TunableEnumEntry" default="EARLY" muid="C314A9255947D189" static_entries="seasons-seasons_enums.SeasonSegment" Deprecated="False" filter="0" group="General" />
                                                    </TunableList>
                                                </TunableVariant>
                                            </TunableTuple>
                                            <TunableTuple name="zone" class="TunableZoneTest" display="Zone" muid="8BE9FB892EBFD5DB" description="A tunable factory that tests properties of a particular zone." Deprecated="False" filter="0" group="General">
                                                <TunableVariant type="None" name="zone_source" class="TunableVariant" default="use_current_zone" display="Zone Source" muid="EA0A7F9D550C93D4" description="Which zone we want to test." Deprecated="False" filter="0" group="General">
                                                    <TunableTuple name="use_current_zone" class="TunableActiveZone" display="Use Current Zone" muid="AB6E6DCC516B3804" description="Get the active zone." Deprecated="False" filter="0" group="General" />
                                                    <TunableTuple name="use_participant_home_zone" class="TunableParticipantHomeZone" display="Use Participant Home Zone" muid="65FAA21D9AD242E7" description="Get a participant's home zone. Can be None if they don't have one." Deprecated="False" filter="0" group="General">
                                                        <TunableEnum type="ParticipantTypeSingleSim" name="participant" class="TunableEnumEntry" default="Actor" display="Participant" muid="B3E51667E9CCD2A2" static_entries="interactions.ParticipantTypeSingleSim" description="Test against the participant's home zone. Townies' home zone will&#xA;be None." Deprecated="False" filter="0" group="General" />
                                                    </TunableTuple>
                                                    <TunableTuple name="use_pick_info" class="TunablePickInfoZone" display="Use Pick Info" muid="DC13E39A3B9057A5" description="Get the zone of the lot the user clicked on." Deprecated="False" filter="0" group="General" />
                                                    <TunableTuple name="use_picked_zone_ids" class="TunablePickedZoneIds" display="Use Picked Zone Ids" muid="8D542D806414E30A" description="Get the zone from the interaction's picked_zone_ids participant. Usually&#xA;comes from a picker." Deprecated="False" filter="0" group="General" />
                                                </TunableVariant>
                                                <TunableTuple name="zone_tests" class="TunableTuple" display="Zone Tests" muid="5DCAA1416219A39A" description="The tests we wish to run on the zone in question." Deprecated="False" filter="0" group="General">
                                                    <TunableVariant type="None" name="business_tests" class="OptionalTunable" default="Don't_Test" display="Business Tests" muid="F83BDD73651CC3D5" description="If enabled, test if the specified zone is a business or not." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="D3C3EBF7DA3EA428" />
                                                        <TunableVariant type="None" name="enabled" class="TunableVariant" default="is_business" display="Enabled" muid="2EDB61C0C393BE1" description="Test if the zone is a business, an open business, or a&#xA;closed business." Deprecated="False" filter="0" group="General">
                                                            <TunableTuple name="is_business" class="Tunable_IsBusinessTest" display="Is Business" muid="45AAB952B6A0309F" description="Test if the zone specified by the zone id is a business or not." Deprecated="False" filter="0" group="General" />
                                                            <TunableTuple name="is_business_open" class="Tunable_IsBusinessOpenTest" display="Is Business Open" muid="3C108E931669357C" description="Test if the zone specified by the zone id is an open business." Deprecated="False" filter="0" group="General" />
                                                        </TunableVariant>
                                                    </TunableVariant>
                                                    <TunableVariant type="None" name="is_apartment" class="OptionalTunable" default="Don't_Test" display="Is Apartment" muid="C46FE5D6A4718C79" description="If checked, test will pass if the zone is an apartment. If&#xA;unchecked, test passes if the zone is NOT an apartment. Useful&#xA; in aspiration tuning, to discriminate between property&#xA;types in tests of lot value. Allows &quot;Own a House worth X&quot; and&#xA;&quot;Own an Apartment worth X&quot;" Deprecated="False" filter="0" group="General">
                                                        <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="D159D08D461DDB0" />
                                                        <TunableTuple name="Is_or_is_not_apartment_zone" class="TunableTuple" display="Is Or Is Not Apartment Zone" muid="AB4906CD196D80B9" description="Test whether the zone is an apartment or not." Deprecated="False" filter="0" group="General">
                                                            <Tunable type="bool" name="consider_penthouse_an_apartment" class="Tunable" default="True" display="Consider Penthouse An Apartment" muid="34F1DADD0C220423" description="If enabled, we will consider penthouses to be&#xA;apartments when testing them against the apartment&#xA;check." Deprecated="False" filter="0" group="General" />
                                                            <Tunable type="bool" name="is_apartment" class="Tunable" default="True" display="Is Apartment" muid="90117CD03F9C6B96" description="If checked, test will pass if the zone is an apartment.&#xA;If unchecked, test passes if the zone is NOT an&#xA;apartment." Deprecated="False" filter="0" group="General" />
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                    <TunableVariant type="None" name="is_penthouse" class="OptionalTunable" default="disabled" display="Is Penthouse" muid="4E124A1AFA0445AD" description="If enabled, test whether or not the current zone is a penthouse." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="5862CAB8710C4B21" />
                                                        <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="BE8283A98CFEB915" description="If checked, the zone must be a penthouse. If unchecked, the&#xA;zone cannot be a penthouse." Deprecated="False" filter="0" group="General" />
                                                    </TunableVariant>
                                                    <Tunable type="bool" name="use_source_venue" class="Tunable" default="False" display="Use Source Venue" muid="8191866B7FC1F824" description="If enabled, the test will test the source venue instead of the active&#xA;venue.  For example, the Community Lot instead of the active Marketplace.&#xA;Testing the active venue is the default." Deprecated="False" filter="0" group="General" />
                                                    <TunableVariant type="None" name="venue_tier" class="OptionalTunable" default="disabled" display="Venue Tier" muid="4A2E5A602F60D34F" description="If checked, will verify that the zone's venue is at the tuned &#xA;tier. If &quot;no valid tier&quot; is selected, this test will be True&#xA;if either the current venue doesn't have tiers or if it does but&#xA;it doesn't currently meet any of their requirements." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="68F7F42C7B674583" />
                                                        <TunableVariant type="None" name="enabled" class="TunableVariant" default="none" display="Enabled" muid="EF6843CCCCCA884" description="                    " Deprecated="False" filter="0" group="General">
                                                            <Tunable name="no_valid_tier" class="TunableExistance" display="No Valid Tier" muid="DA869BD285430E67" />
                                                            <Tunable name="none" class="TunableExistance" display="None" muid="3A44191A1FE13050" />
                                                            <Tunable type="int" name="tier_number" class="TunableRange" default="0" display="Tier Number" muid="17B44BFF7C306D4" min="0" max="None" description="The index of the tier to test. This test will return&#xA;true if this tier is active and false otherwise. This&#xA;should be the index of the tier in the tier list and not&#xA;any player-facing index. For instance, if a tier list&#xA;had a single tier, that tier would be 0, and if a second&#xA;tier were added, that second tier would be 1." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                        </TunableVariant>
                                                    </TunableVariant>
                                                    <TunableVariant type="None" name="venue_type" class="OptionalTunable" default="Don't_Test" display="Venue Type" muid="1D7043D4F5BD2646" description="If checked, will verify the zone's venue type is allowed or&#xA;disallowed." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="6D9FA131EE11BBDC" />
                                                        <TunableTuple name="enabled" class="TunableWhiteBlackList" display="Enabled" muid="F8122674BF3A3B51" description="The zone's venue type must pass the whitelist and blacklist&#xA;to pass the test." Deprecated="False" filter="0" group="General">
                                                            <TunableVariant type="None" name="blacklist" class="OptionalTunable" default="nothing" display="Blacklist" muid="6F573FA553637A43" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is not in the blacklist. If no blacklist is&#xA;specified, no items are disallowed." Deprecated="False" filter="0" group="General">
                                                                <Tunable name="nothing" class="TunableExistance" display="Nothing" muid="6DE6E0627872F640" />
                                                                <TunableTuple name="specify" class="TunableBlacklist" display="Specify" muid="120A876B5016517A" description="A tunable blacklist." Deprecated="False" filter="0" group="General">
                                                                    <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="B25533D757EA51E7" description="Blacklisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                        <Tunable type="venue" class="TunableReference" muid="325C8783A82B522B" description="Allowed and disallowed venue types." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                                    </TunableList>
                                                                    <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="AE05C12C13E42CC2" description="Tunable option for how many items must be in the blacklist&#xA;for the blacklist to fail when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                        <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="51B41A022E294112" />
                                                                        <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="F313F5B972F0C4" description="When testing a collection of items, the number of items in&#xA;that collection that are in the blacklist must pass this&#xA;threshold test for the blacklist to disallow them all." Deprecated="False" filter="0" group="General">
                                                                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="D921C9F04E53E6E2" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                            <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="8146908932F43DA8" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                        </TunableTuple>
                                                                    </TunableVariant>
                                                                </TunableTuple>
                                                            </TunableVariant>
                                                            <TunableVariant type="None" name="whitelist" class="OptionalTunable" default="everything" display="Whitelist" muid="4E4C08D0614E08A0" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is in the whitelist. If no whitelist is&#xA;specified, all items are allowed." Deprecated="False" filter="0" group="General">
                                                                <Tunable name="everything" class="TunableExistance" display="Everything" muid="6348A2AA90DC024F" />
                                                                <TunableTuple name="specify" class="TunableWhitelist" display="Specify" muid="73E7214F9D1C9CB1" description="A tunable whitelist." Deprecated="False" filter="0" group="General">
                                                                    <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="F66048413F76E3BB" description="Tunable option for how many items must be in the whitelist&#xA;for the whitelist to pass when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                        <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="459F8B8F6504D099" />
                                                                        <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="505AE0D9B8A702D9" description="When testing a collection of items, the number of items in&#xA;that collection that are in the whitelist must pass this&#xA;threshold test for the whitelist to allow them all." Deprecated="False" filter="0" group="General">
                                                                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="EA9BF19D4701B7DD" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                            <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="D94DC725FFE52E3" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                        </TunableTuple>
                                                                    </TunableVariant>
                                                                    <TunableList name="whitelist" class="TunableSet" display="Whitelist" muid="5EC981FD06E3B0A5" description="Whitelisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                        <Tunable type="venue" class="TunableReference" muid="464ED63F2B401241" description="Allowed and disallowed venue types." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                                    </TunableList>
                                                                </TunableTuple>
                                                            </TunableVariant>
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                    <TunableVariant type="None" name="was_owner_household_changed" class="OptionalTunable" default="Don't_Test" display="Was Owner Household Changed" muid="811E2DB4310212F5" description="If enabled, test if the lot owner household for the specified zone &#xA;was changed between when the zone was saved and when it was loaded." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="4751E91BC2509A1F" />
                                                        <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="E62DA42DD99A81E9" description="If checked,  test will pass if the zone's owner household was changed &#xA;between when the zone was saved and when it was loaded. &#xA;If unchecked, test will pass if the zone's owner household was NOT changed &#xA;between when the zone was saved and when it was loaded. " Deprecated="False" filter="0" group="General" />
                                                    </TunableVariant>
                                                    <TunableVariant type="None" name="world_tests" class="OptionalTunable" default="disabled" display="World Tests" muid="CC7BF44F748854D1" description="If enabled, we test if specified zone is or is not in the specified world(s)" Deprecated="False" filter="0" group="General">
                                                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="DC65500F931A1CA7" />
                                                        <TunableTuple name="enabled" class="TunableWhiteBlackList" display="Enabled" muid="AFD7C08CE7D72C4C" description="Pass if zone is in one of the worlds in the whitelist,&#xA;or fail if it is any of the worlds in the blacklist." Deprecated="False" filter="0" group="General">
                                                            <TunableVariant type="None" name="blacklist" class="OptionalTunable" default="nothing" display="Blacklist" muid="C30246D6A96B6111" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is not in the blacklist. If no blacklist is&#xA;specified, no items are disallowed." Deprecated="False" filter="0" group="General">
                                                                <Tunable name="nothing" class="TunableExistance" display="Nothing" muid="85D0B78DC33E606E" />
                                                                <TunableTuple name="specify" class="TunableBlacklist" display="Specify" muid="82BFC862501F3E0C" description="A tunable blacklist." Deprecated="False" filter="0" group="General">
                                                                    <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="F324A58A2F0FEEBB" description="Blacklisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                        <Tunable type="worlddescription" class="TunableReference" muid="8D5CE2E58B37DFE8" description="World to check against." Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                                    </TunableList>
                                                                    <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="6285D778CC42F2" description="Tunable option for how many items must be in the blacklist&#xA;for the blacklist to fail when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                        <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="FD023A60C7CC7AED" />
                                                                        <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="9544B1AC32ECA466" description="When testing a collection of items, the number of items in&#xA;that collection that are in the blacklist must pass this&#xA;threshold test for the blacklist to disallow them all." Deprecated="False" filter="0" group="General">
                                                                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="AB66C22EE257069" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                            <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="F598DC195D3D35B5" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                        </TunableTuple>
                                                                    </TunableVariant>
                                                                </TunableTuple>
                                                            </TunableVariant>
                                                            <TunableVariant type="None" name="whitelist" class="OptionalTunable" default="everything" display="Whitelist" muid="919556AA87FDE176" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is in the whitelist. If no whitelist is&#xA;specified, all items are allowed." Deprecated="False" filter="0" group="General">
                                                                <Tunable name="everything" class="TunableExistance" display="Everything" muid="34607B8DE9A483FF" />
                                                                <TunableTuple name="specify" class="TunableWhitelist" display="Specify" muid="DF93FBAD87A28269" description="A tunable whitelist." Deprecated="False" filter="0" group="General">
                                                                    <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="3C8632F7719C1176" description="Tunable option for how many items must be in the whitelist&#xA;for the whitelist to pass when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                        <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="BC748431D758AEDE" />
                                                                        <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="11ECE560107EA2E4" description="When testing a collection of items, the number of items in&#xA;that collection that are in the whitelist must pass this&#xA;threshold test for the whitelist to allow them all." Deprecated="False" filter="0" group="General">
                                                                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="16B254B5D2721296" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                            <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="177559E3BB7B0CFB" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                        </TunableTuple>
                                                                    </TunableVariant>
                                                                    <TunableList name="whitelist" class="TunableSet" display="Whitelist" muid="3BB940F8F9DAF7FB" description="Whitelisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                        <Tunable type="worlddescription" class="TunableReference" muid="BD21B8197AE5DADF" description="World to check against." Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                                    </TunableList>
                                                                </TunableTuple>
                                                            </TunableVariant>
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                    <TunableVariant type="None" name="zone_modifiers" class="OptionalTunable" default="Don't_Test" display="Zone Modifiers" muid="904DA923CF643782" description="if enabled, we test the zone modifiers allowed or disallowed." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="3045152E60D8CF42" />
                                                        <TunableTuple name="enabled" class="TunableWhiteBlackList" display="Enabled" muid="C6EFBDEE34A722C7" description="The zone's modifiers must pass this whitelist and blacklist for the&#xA;test to pass." Deprecated="False" filter="0" group="General">
                                                            <TunableVariant type="None" name="blacklist" class="OptionalTunable" default="nothing" display="Blacklist" muid="68A19140CF5995B0" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is not in the blacklist. If no blacklist is&#xA;specified, no items are disallowed." Deprecated="False" filter="0" group="General">
                                                                <Tunable name="nothing" class="TunableExistance" display="Nothing" muid="968B521D8FD0D66D" />
                                                                <TunableTuple name="specify" class="TunableBlacklist" display="Specify" muid="74B4C5833E175C5D" description="A tunable blacklist." Deprecated="False" filter="0" group="General">
                                                                    <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="C84D8CA8136102A2" description="Blacklisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                        <Tunable type="zone_modifier" class="TunableReference" muid="ED366DCA588AD7C6" description="Allowed and disallowed zone modifiers." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                                    </TunableList>
                                                                    <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="C1833206CA4306AC" description="Tunable option for how many items must be in the blacklist&#xA;for the blacklist to fail when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                        <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="2A2879FB33D3C4BF" />
                                                                        <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="58A8EB11C43CB288" description="When testing a collection of items, the number of items in&#xA;that collection that are in the blacklist must pass this&#xA;threshold test for the blacklist to disallow them all." Deprecated="False" filter="0" group="General">
                                                                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="9A3A436DEA951B21" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                            <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="AEBD6ED15C9F6D37" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                        </TunableTuple>
                                                                    </TunableVariant>
                                                                </TunableTuple>
                                                            </TunableVariant>
                                                            <TunableVariant type="None" name="whitelist" class="OptionalTunable" default="everything" display="Whitelist" muid="B4D3D8222370D535" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is in the whitelist. If no whitelist is&#xA;specified, all items are allowed." Deprecated="False" filter="0" group="General">
                                                                <Tunable name="everything" class="TunableExistance" display="Everything" muid="B320ED48F72CCD95" />
                                                                <TunableTuple name="specify" class="TunableWhitelist" display="Specify" muid="E7ADE78754202D16" description="A tunable whitelist." Deprecated="False" filter="0" group="General">
                                                                    <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="D722423C6A4C4213" description="Tunable option for how many items must be in the whitelist&#xA;for the whitelist to pass when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                        <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="2968770DA5843D2F" />
                                                                        <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="2ED3C1710C3D3D3D" description="When testing a collection of items, the number of items in&#xA;that collection that are in the whitelist must pass this&#xA;threshold test for the whitelist to allow them all." Deprecated="False" filter="0" group="General">
                                                                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="7C0A7E7183CA0EB7" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                            <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="DFAFD9D7A7C553F6" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                        </TunableTuple>
                                                                    </TunableVariant>
                                                                    <TunableList name="whitelist" class="TunableSet" display="Whitelist" muid="1A7DE92383E70A02" description="Whitelisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                        <Tunable type="zone_modifier" class="TunableReference" muid="B980BA4987E19C84" description="Allowed and disallowed zone modifiers." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                                    </TunableList>
                                                                </TunableTuple>
                                                            </TunableVariant>
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                </TunableTuple>
                                            </TunableTuple>
                                        </TunableVariant>
                                    </TunableList>
                                    <TunableList name="tests" class="TunableObjectModifyTestSet" display="Tests" muid="A3B7FB741A33F837" description="All least one subtest group (AKA one list item) must pass&#xA;within this list before the action associated with this&#xA;tuning will be run." Deprecated="False" filter="0" group="General">
                                        <TunableList class="TunableList" muid="7DB134CBCC46AD1E" description="A list of tests.  All of these must pass for the group to pass." Deprecated="False" filter="0" group="General">
                                            <TunableVariant type="None" class="TunableObjectModifyTestVariant" default="none" muid="EE41D67E65903141" description="A single tunable test." Deprecated="False" filter="0" group="General">
                                                <TunableTuple name="consumable_test" class="TunableConsumableTest" display="Consumable Test" muid="87129D86AC4916B4" description="A test that checks information about consumables." Deprecated="False" filter="0" group="General">
                                                    <TunableTuple name="bites_left" class="TunableTuple" display="Bites Left" muid="58644EEA8A995145" description="A check that tests against the number of bites left before the&#xA;subject is completely consumed." Deprecated="False" filter="0" group="General">
                                                        <TunableEnum type="Operator" name="operator" class="TunableOperator" default="EQUAL" display="Operator" muid="C6158A174722B59D" static_entries="sims4-math.Operator" description="The operator to use for the comparison." Deprecated="False" filter="0" group="General" />
                                                        <Tunable type="int" name="value" class="Tunable" default="1" display="Value" muid="19331983D096EE66" description="The number of bites to test against." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                    </TunableTuple>
                                                    <Tunable type="bool" name="is_consumable" class="Tunable" default="True" display="Is Consumable" muid="5C77E34BDA63F39B" description="If checked, the subject must be a consumable, if unchecked, the&#xA;subject must not be a consumable." Deprecated="False" filter="0" group="General" />
                                                    <TunableEnum type="ParticipantType" name="subject" class="TunableEnumEntry" default="Object" display="Subject" muid="3CF6AB6D58785F13" static_entries="interactions.ParticipantType" description="The subject of the test. This is the consumable object." Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableTuple name="custom_name" class="TunableCustomNameTest" display="Custom Name" muid="F0FF7987216FA688" description="Require or prohibit an object from having a custom&#xA;name or description set." Deprecated="False" filter="0" group="General">
                                                    <TunableVariant type="None" name="has_custom_description" class="OptionalTunable" default="disabled" display="Has Custom Description" muid="19E6982AEE4F2BDB" description="If checked, the subject must have a custom description set. If unchecked, it cannot have a custom description set." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="8548CFAD7BC8868F" />
                                                        <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="615DD3783B217A7E" description="If checked, the subject must have a custom description set. If unchecked, it cannot have a custom description set." Deprecated="False" filter="0" group="General" />
                                                    </TunableVariant>
                                                    <TunableVariant type="None" name="has_custom_name" class="OptionalTunable" default="disabled" display="Has Custom Name" muid="B81140D7232FC800" description="If checked, the subject must have a custom name set. If unchecked, it cannot have a custom name set." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="576F28BA778FBA83" />
                                                        <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="3A9403E993103DED" description="If checked, the subject must have a custom name set. If unchecked, it cannot have a custom name set." Deprecated="False" filter="0" group="General" />
                                                    </TunableVariant>
                                                    <TunableEnum type="ParticipantType" name="participant" class="TunableEnumEntry" default="Object" display="Participant" muid="1DA60BA32BF80C67" static_entries="interactions.ParticipantType" description="The subject who is the object of this test." Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableTuple name="elapsed_time" class="TunableTimeElapsedZoneTest" display="Elapsed Time" muid="41C2FEBD988AB363" description="Test to make sure enough time has passed since the zone was last saved." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="float" name="minutes_passed" class="TunableSimMinute" default="720" display="Minutes Passed" muid="D006ADC087556C55" min="1" max="None" description="This test will pass when the minutes passed is greater than the&#xA;number minutes since last loading into zone." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableTuple name="existence" class="TunableExistenceTest" display="Existence" muid="4AC75982B051E5B7" description="A test to check whether the specified participant exists." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="bool" name="allow_hidden_sim_status" class="Tunable" default="False" display="Allow Hidden Sim Status" muid="56CBBC91DD725F5B" description="If checked then we will ignore hidden Sim status such that they will count as existing even though they&#xA;have been hidden.  Use this in conjunction with Require Instantiated in order to determine the Sim's actual&#xA;instantiated status. " Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="bool" name="exists" class="Tunable" default="True" display="Exists" muid="5B7ABC91785B66FB" description="When checked, require the specified participant to exist. When&#xA;unchecked, require the specified participant to not exist." Deprecated="False" filter="0" group="General" />
                                                    <TunableEnum type="ParticipantType" name="participant" class="TunableEnumEntry" default="TargetSim" display="Participant" muid="DCE3ECC8605FA6E9" static_entries="interactions.ParticipantType" description="The participant for which to check existence." Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="bool" name="require_instantiatable" class="Tunable" default="True" display="Require Instantiatable" muid="12ACCB27B86EEDD7" description="If checked, the specified participant must be instantiatable. This&#xA;is generally true for all Sims at LOD above MINIMUM." Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableTuple name="game_option" class="TunableSimInfoGameplayOptionsTest" display="Game Option" muid="9E4110E58E011715" description="Test whether or not a Sim has a specific gameplay option set." Deprecated="False" filter="0" group="General">
                                                    <TunableEnum type="TestableGameOptions" name="gameplay_option" class="TunableEnumEntry" default="CIVIC_POLICY_NPC_VOTING_ENABLED" display="Gameplay Option" muid="934F08EE27A2986A" static_entries="event_testing-game_option_tests.TestableGameOptions" description="The gameplay option to test. This test will pass if this option is&#xA;set." Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="bool" name="invert" class="Tunable" default="False" display="Invert" muid="AD080DE6E01A2143" description="If enabled, requires the option to be unset for the test to pass." Deprecated="False" filter="0" group="General" />
                                                    <TunableVariant type="None" name="tooltip" class="OptionalTunable" default="disabled" display="Tooltip" muid="1AD92608D2EC393D" description="Reason of failure." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="D79DD0A882687385" />
                                                        <Tunable type="int" name="enabled" class="TunableLocalizedString" default="0x0" display="Enabled" muid="91C798399A45494" description="Reason of failure." Deprecated="False" filter="0" group="General" />
                                                    </TunableVariant>
                                                </TunableTuple>
                                                <TunableTuple name="inventory" class="TunableInventoryTest" display="Inventory" muid="34192FA15375E332" description="A test to check on the contents of either a sim inventory or&#xA;an object inventory." Deprecated="False" filter="0" group="General">
                                                    <TunableVariant type="None" name="contents_check" class="TunableVariant" default="has_anything" display="Contents Check" muid="94C9CFDAC2EF8F79" description="Checks to run on each object of the specified inventory" Deprecated="False" filter="0" group="General">
                                                        <Tunable name="has_anything" class="TunableExistance" display="Has Anything" muid="5BE4833B4F4AF19" />
                                                        <TunableTuple name="has_object_of_participant_type" class="TunableTuple" display="Has Object Of Participant Type" muid="E8516B00806BC224" description="Participant type we want to test if its in the selected&#xA;inventory." Deprecated="False" filter="0" group="General">
                                                            <TunableEnum type="ParticipantType" name="participant" class="TunableEnumEntry" default="Object" display="Participant" muid="6F958B7E3AEA3329" static_entries="interactions.ParticipantType" description="Which participant of the interaction do we want to validate&#xA;on the inventory. " Deprecated="False" filter="0" group="General" />
                                                        </TunableTuple>
                                                        <TunableTuple name="has_object_with_def" class="TunableTuple" display="Has Object With Def" muid="DAC652B6A2CB2A98" Deprecated="False" filter="0" group="General">
                                                            <Tunable type="object" name="definition" class="TunableReference" display="Definition" muid="CE24707A2A4D49BA" description="The object definition to look for inside inventory." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                        </TunableTuple>
                                                        <TunableTuple name="has_object_with_states" class="BasicStateCheckFactory" display="Has Object With States" muid="A9CDB371DA469227" description="This option tests crafted item's tags against a list of possible&#xA;tags." Deprecated="False" filter="0" group="General">
                                                            <TunableVariant type="None" name="object_requirement" class="TunableVariant" default="any_object" display="Object Requirement" muid="EFC26288DCE1B152" Deprecated="False" filter="0" group="General">
                                                                <Tunable name="any_object" class="TunableExistance" display="Any Object" muid="88A7B938C8676F53" />
                                                                <TunableTuple name="definition" class="TunableTuple" display="Definition" muid="E9A4662E769FD299" Deprecated="False" filter="0" group="General">
                                                                    <Tunable type="object" name="definition" class="TunableReference" display="Definition" muid="2751BB64F24290FB" description="The object must have this definition." allow_none="False" Deprecated="False" filter="0" group="General" />
                                                                </TunableTuple>
                                                                <TunableTuple name="tag" class="TunableTuple" display="Tag" muid="38222C3230208285" Deprecated="False" filter="0" group="General">
                                                                    <TunableTuple name="tag" class="CraftTaggedItemFactory" display="Tag" muid="33D25E8F3B4DA766" description="The object must have this tag." Deprecated="False" filter="0" group="General">
                                                                        <TunableList name="tag_set" class="TunableSet" display="Tag Set" muid="8C670E46C5E6B93F" description="The tag of objects we want to test ownership of" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                            <TunableEnum type="Tag" class="TunableEnumEntry" default="INVALID" muid="A76FF1FDC05CA85B" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="What tag to test for" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                                        </TunableList>
                                                                        <TunableEnum type="TagTestType" name="test_type" class="TunableEnumEntry" default="CONTAINS_ANY_TAG_IN_SET" display="Test Type" muid="D230232CCA051AB1" static_entries="objects-object_tests.TagTestType" description="How to test the tags in the tag set against the objects on the lot." Deprecated="False" filter="0" group="General" />
                                                                    </TunableTuple>
                                                                </TunableTuple>
                                                            </TunableVariant>
                                                            <TunableList name="state_set" class="TunableSet" display="State Set" muid="1A6CE1929777A80E" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                <Tunable type="object_state" class="TunableReference" muid="689900C230CC6A53" description="What state to test for." allow_none="False" Deprecated="False" filter="0" group="General" />
                                                            </TunableList>
                                                            <TunableEnum type="StateTestType" name="test_type" class="TunableEnumEntry" default="CONTAINS_ANY_STATE_IN_SET" display="Test Type" muid="79005677488FCCB5" static_entries="objects-object_tests.StateTestType" description="How to test the states in the state set against the objects in&#xA;the inventory." Deprecated="False" filter="0" group="General" />
                                                        </TunableTuple>
                                                        <TunableTuple name="has_object_with_tag" class="CraftTaggedItemFactory" display="Has Object With Tag" muid="A1EC0D7BF7043537" description="This option tests crafted item's tags against a list of possible tags" Deprecated="False" filter="0" group="General">
                                                            <TunableList name="tag_set" class="TunableSet" display="Tag Set" muid="1415909563C48659" description="The tag of objects we want to test ownership of" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                <TunableEnum type="Tag" class="TunableEnumEntry" default="INVALID" muid="E259BA3157BFB5A3" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="What tag to test for" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                            </TunableList>
                                                            <TunableEnum type="TagTestType" name="test_type" class="TunableEnumEntry" default="CONTAINS_ANY_TAG_IN_SET" display="Test Type" muid="A251E4C90702A60" static_entries="objects-object_tests.TagTestType" description="How to test the tags in the tag set against the objects on the lot." Deprecated="False" filter="0" group="General" />
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                    <TunableVariant type="None" name="inventory_location" class="TunableVariant" default="participant_inventory" display="Inventory Location" muid="D88E4F5ECCEFB3F" description="Who owns the inventory. Either look in the inventory of a &#xA;participant or specify an object inventory type directly.&#xA;&#xA;If participant returns multiple inventory owners, the test will &#xA;pass only if ALL of those owners pass the inventory content test." Deprecated="False" filter="0" group="General">
                                                        <TunableTuple name="hidden_inventory_objects" class="TunableTuple" display="Hidden Inventory Objects" muid="355DDC3F3F97F853" Deprecated="False" filter="0" group="General">
                                                            <TunableEnum type="InventoryType" name="inventory" class="TunableEnumEntry" default="UNDEFINED" display="Inventory" muid="831D57E4F36E6049" dynamic_entries="objects-components-inventory_enums.InventoryType._elements" static_entries="objects-components-inventory_enums.InventoryType" description="Check in the hidden inventory for objects that can go into the&#xA;specified inventory type. EX: check that there are mailbox&#xA;objects in the hidden inventory" Deprecated="False" filter="0" group="General" />
                                                        </TunableTuple>
                                                        <TunableTuple name="object_inventory_type" class="TunableTuple" display="Object Inventory Type" muid="753C6EA3F189FF19" Deprecated="False" filter="0" group="General">
                                                            <TunableEnum type="InventoryType" name="inventory" class="TunableEnumEntry" default="UNDEFINED" display="Inventory" muid="F3BE6E3511EABAA3" dynamic_entries="objects-components-inventory_enums.InventoryType._elements" static_entries="objects-components-inventory_enums.InventoryType" description="Check the global Object inventory that has the specified type.&#xA;EX: check in the global fridge inventory that exists for all&#xA;fridges" Deprecated="False" filter="0" group="General" />
                                                        </TunableTuple>
                                                        <TunableTuple name="participant_inventory" class="TunableTuple" display="Participant Inventory" muid="81F760E265D84B9D" Deprecated="False" filter="0" group="General">
                                                            <TunableEnum type="ParticipantType" name="inventory" class="TunableEnumEntry" default="Actor" display="Inventory" muid="62E6AF902AEDAB3E" static_entries="interactions.ParticipantType" description="The owner of the inventory" Deprecated="False" filter="0" group="General" />
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                    <TunableTuple name="required_count" class="TunableThreshold" display="Required Count" muid="2B51949C8224D989" description="The inventory must have a tunable threshold of objects that&#xA;pass the contents check test.&#xA;&#xA;EX: test is object definition of type pizza. required count is enabled&#xA;and has a threshold of &gt;= 5. That means this test will pass if you&#xA;have 5 or more pizzas in your inventory. To check if any objects&#xA;exist, use required count &gt;= 1" Deprecated="False" filter="0" group="General">
                                                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="24E1AB6F5B410280" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                        <Tunable type="int" name="value" class="Tunable" default="1" display="Value" muid="44BDF6F027CF8684" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                    </TunableTuple>
                                                    <TunableEnum type="TestHiddenInventories" name="test_hidden" class="TunableEnumEntry" default="ANY" display="Test Hidden" muid="EFCB2616A5653800" static_entries="objects-object_tests.InventoryTest.TestHiddenInventories" description="Optionally restrict to only hidden or non-hidden inventories." Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableTuple name="location" class="TunableLocationTest" display="Location" muid="52B89D93ADE06AE" description="Tests for object locations.&#xA;Outside: Check if an object is on the inside or outside (has a roof over&#xA;its head)&#xA;Natural ground: Checks the floor tiles where the object is to see if it &#xA;qualifies as natural ground" Deprecated="False" filter="0" group="General">
                                                    <TunableTuple name="location_tests" class="TunableTuple" display="Location Tests" muid="A54F87CCB9CD104E" Deprecated="False" filter="0" group="General">
                                                        <TunableVariant type="None" name="has_terrain_tag" class="OptionalTunable" default="Don't_Test" display="Has Terrain Tag" muid="38AA55BF46081F82" description="If checked, will verify the subject of the test is currently on&#xA;the tuned terrain tag." Deprecated="False" filter="0" group="General">
                                                            <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="DC11A9815E235924" />
                                                            <TunableTuple name="enabled" class="TunableTuple" display="Enabled" muid="6252187D53BE413C" description=",&#xA;A set of terrain tags required for this test to pass." Deprecated="False" filter="0" group="General">
                                                                <Tunable type="bool" name="negate" class="Tunable" default="False" display="Negate" muid="5B9E8D83F765729C" description="If checked, the test will be inverted. In other words,&#xA;the test will fail if at least one tag is detected at&#xA;this location." Deprecated="False" filter="0" group="General" />
                                                                <TunableList name="terrain_tags" class="TunableEnumSet" display="Terrain Tags" muid="FA0E2BF1713876C3" description="A set of terrain tags. Only one of these tags needs to be&#xA;present at this location. Although it is not tunable, there&#xA;is a threshold weight underneath which a terrain tag will&#xA;not appear to be present." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                    <TunableEnum type="TerrainTag" class="TunableEnumEntry" default="INVALID" muid="AE9BF057C5225226" static_entries="world-terrain_enums.TerrainTag" Deprecated="False" filter="0" group="General" />
                                                                </TunableList>
                                                                <Tunable type="bool" name="test_floor_tiles" class="Tunable" default="False" display="Test Floor Tiles" muid="1FD2F7073B06E433" description="If checked, floor tiles will be tested. Otherwise, &#xA;it'll only check the terrain and will ignore the &#xA;floor tiles on the terrain." Deprecated="False" filter="0" group="General" />
                                                            </TunableTuple>
                                                        </TunableVariant>
                                                        <TunableVariant type="None" name="in_common_area" class="OptionalTunable" default="Don't_Test" display="In Common Area" muid="4E7BA32945EE28A4" description="If checked, will verify the subject is in the common area&#xA;of an apartment.  If unchecked will verify the subject is not." Deprecated="False" filter="0" group="General">
                                                            <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="E4F9B2BAE1C8F737" />
                                                            <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="C51799D655520D58" Deprecated="False" filter="0" group="General" />
                                                        </TunableVariant>
                                                        <TunableVariant type="None" name="is_fire_allowed" class="OptionalTunable" default="Don't_Test" display="Is Fire Allowed" muid="B09079E4D3CC4618" description="If checked, will verify if fire is possible at the subject's position. &#xA;If unchecked, will pass if fire is not possible.&#xA;If not enabled, doesn't care either way." Deprecated="False" filter="0" group="General">
                                                            <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="9BD7CAB7CB34D53F" />
                                                            <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="88A51AFCEA749ADE" Deprecated="False" filter="0" group="General" />
                                                        </TunableVariant>
                                                        <TunableVariant type="None" name="is_in_slot" class="OptionalTunable" default="Don't_Test" display="Is In Slot" muid="93497B6466D482AB" description="If enabled will test if the object is attacked/deattached to&#xA;any of possible tuned slots.&#xA;If you tune a slot type set the test will test if the object &#xA;is slotted or not slotted into into any of those types. " Deprecated="False" filter="0" group="General">
                                                            <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="DB4384FF1411EE5A" />
                                                            <TunableTuple name="enabled" class="TunableTuple" display="Enabled" muid="EE017C7B2DEDA907" description="Test if an object is current slotted in any of a possible&#xA;list of slot types.&#xA;Empty slot type set is allowed for testing for slotted or&#xA;not slotted only." Deprecated="False" filter="0" group="General">
                                                                <TunableVariant type="None" name="slot_test_type" class="TunableVariant" default="any_slot" display="Slot Test Type" muid="A2C34868C406842A" description="Strategy to test the slots:&#xA;Any Slot - is the object in any slot&#xA;Surface Slot - is object is in a surface slot&#xA;Specific Slot - is the object in specific list of slots" Deprecated="False" filter="0" group="General">
                                                                    <TunableTuple name="any_slot" class="TunableSlotTestType" display="Any Slot" muid="441B26F2213A6E2B" description="Singleton factory for testing if object is slotted." Deprecated="False" filter="0" group="General">
                                                                        <Tunable type="bool" name="require_slotted" class="Tunable" default="True" display="Require Slotted" muid="317A6180DE4F19E2" description="If checked, return success if the object is slotted&#xA;If unchecked, test the absense of slotting." Deprecated="False" filter="0" group="General" />
                                                                    </TunableTuple>
                                                                    <TunableTuple name="specific_slot" class="TunableSpecificSlotTest" display="Specific Slot" muid="A1B93E0A27CEFF69" description="Subclass of SlotTestType that can check against a specific&#xA;slot set." Deprecated="False" filter="0" group="General">
                                                                        <Tunable type="bool" name="require_slotted" class="Tunable" default="True" display="Require Slotted" muid="D07E73CEC7F62963" description="If checked, return success if the object is slotted&#xA;If unchecked, test the absense of slotting." Deprecated="False" filter="0" group="General" />
                                                                        <Tunable type="slot_type_set" name="specific_slot_set" class="TunableReference" display="Specific Slot Set" muid="7A6BFBD14EDB890E" description="Set of slots the object may be attached to." allow_none="False" Deprecated="False" filter="0" group="General" />
                                                                    </TunableTuple>
                                                                    <TunableTuple name="surface_slot" class="TunableSurfaceSlotTest" display="Surface Slot" muid="AC431575EFE04CDB" description="Subclass of SlotTestType that checks that a slot has&#xA;is_surface set to true." Deprecated="False" filter="0" group="General">
                                                                        <Tunable type="bool" name="require_slotted" class="Tunable" default="True" display="Require Slotted" muid="5624629CDF4F027D" description="If checked, return success if the object is slotted&#xA;If unchecked, test the absense of slotting." Deprecated="False" filter="0" group="General" />
                                                                    </TunableTuple>
                                                                </TunableVariant>
                                                            </TunableTuple>
                                                        </TunableVariant>
                                                        <TunableVariant type="None" name="is_inside_building" class="OptionalTunable" default="Don't_Test" display="Is Inside Building" muid="EE637465349645E0" description="If checked, will verify if the subject of the test is inside a&#xA;building. This uses a client function that checks if the block&#xA;the sim is mostly enclosed by walls or if not, if the adjoining&#xA;blocks are themselves enclosed. This should be used when we&#xA;want to test if a subject is inside a normally constructed &#xA;building. If we simply want to test whether the subject is &#xA;covered / has a roof over them, use is_outside. See comment on&#xA;is_outside for more details. If unchecked, will negate this &#xA;test." Deprecated="False" filter="0" group="General">
                                                            <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="FCC4EFA47C128B7" />
                                                            <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="ED8C518AA263515" Deprecated="False" filter="0" group="General" />
                                                        </TunableVariant>
                                                        <TunableVariant type="None" name="is_natural_ground" class="OptionalTunable" default="Don't_Test" display="Is Natural Ground" muid="51DF7ACEA1C7C554" description="If checked, will verify the subject of the test is on natural &#xA;ground (no floor tiles are under him).&#xA;Otherwise, will verify the subject of the test is not on &#xA;natural ground." Deprecated="False" filter="0" group="General">
                                                            <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="8FC1ADDB8C7C0BCD" />
                                                            <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="74C415C9600B7C3C" Deprecated="False" filter="0" group="General" />
                                                        </TunableVariant>
                                                        <TunableVariant type="None" name="is_on_active_lot" class="OptionalTunable" default="Don't_Test" display="Is On Active Lot" muid="C0AA26C2D534E97E" description="If disabled the test will not be used.&#xA;If enabled and checked, the test will pass if the subject is&#xA;on the active lot. (their center is within the lot bounds)&#xA;If enabled and not checked, the test will pass if the subject is &#xA;outside of the active lot.&#xA;&#xA;For example, Ask To Leave is tuned with this enabled and checked&#xA;for the TargetSim. You can only ask someone to leave if they&#xA;are actually on the active lot, but not if they are wandering&#xA;around in the open streets." Deprecated="False" filter="0" group="General">
                                                            <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="DE82FA72FA2AA128" />
                                                            <TunableTuple name="Is_or_is_not_on_active_lot" class="TunableTuple" display="Is Or Is Not On Active Lot" muid="8EF97FF95240D6A" Deprecated="False" filter="0" group="General">
                                                                <Tunable type="bool" name="include_spawn_point" class="Tunable" default="False" display="Include Spawn Point" muid="CF5440CE6DBE263F" description="If set to true, we will consider the lot's spawn point as part of the active lot." Deprecated="False" filter="0" group="General" />
                                                                <Tunable type="bool" name="is_or_is_not_on_active_lot" class="Tunable" default="True" display="Is Or Is Not On Active Lot" muid="AADC15CE8317AB5F" description="If checked then the test will pass if the subject is on&#xA;the active lot." Deprecated="False" filter="0" group="General" />
                                                                <TunableVariant type="None" name="tolerance" class="TunableVariant" default="explicit" display="Tolerance" muid="706C1A623E70219B" Deprecated="False" filter="0" group="General">
                                                                    <Tunable type="int" name="explicit" class="Tunable" default="0" display="Explicit" muid="860A561BE8283472" description="The tolerance from the edge of the lot that the&#xA;location test will use in order to determine if the&#xA;test target is considered on lot or not." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                    <TunableTuple name="use_default_tolerance" class="UseDefaultOfflotToleranceFactory" display="Use Default Tolerance" muid="ED09AF09BB03393" description="Use the default tuned global offlot tolerance tuned&#xA;in objects.components.statistic_component.Default Off Lot." Deprecated="False" filter="0" group="General" />
                                                                </TunableVariant>
                                                            </TunableTuple>
                                                        </TunableVariant>
                                                        <TunableVariant type="None" name="is_on_level" class="OptionalTunable" default="Don't_Test" display="Is On Level" muid="16B546FBFD167B2B" description="If enabled, we check the participant's current level against&#xA;the tuned threshold.  In the case of sims in pools, the effective&#xA;level will be that of the surface of the pool, not the bottom." Deprecated="False" filter="0" group="General">
                                                            <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="7679995FA85ED02D" />
                                                            <TunableTuple name="enabled" class="TunableThreshold" display="Enabled" muid="B0BA5AAA1D4753BD" description="Value/comparison pair used to define a Threshold." Deprecated="False" filter="0" group="General">
                                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="B88BD33CB2B9F7AD" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                <Tunable type="int" name="value" class="Tunable" default="0" display="Value" muid="895E7C7E12A960A7" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                            </TunableTuple>
                                                        </TunableVariant>
                                                        <TunableVariant type="None" name="is_outside" class="OptionalTunable" default="Don't_Test" display="Is Outside" muid="F014DDCB78F5653C" description="PLEASE BE AWARE. If checked, will verify if the subject of the&#xA;test does not have a roof over their head. If unchecked, will &#xA;test if the subject has a roof over their head. If the &#xA;intention is to determine if a subject is in/not in a building, &#xA;this test is deprecated in favor of is_inside_building. If you &#xA;would like to test if a subject is inside a building, but also &#xA;need to test if they have a roof over their head, please use &#xA;both options." Deprecated="False" filter="0" group="General">
                                                            <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="8B3E48037DE22A1B" />
                                                            <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="E769C8001EFABBC1" Deprecated="False" filter="0" group="General" />
                                                        </TunableVariant>
                                                        <TunableVariant type="None" name="is_venue_type" class="OptionalTunable" default="Don't_Test" display="Is Venue Type" muid="FC5FA2F035996E38" description="If checked, will verify if the subject is at a venue of the&#xA;specified type." Deprecated="False" filter="0" group="General">
                                                            <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="D822D14F0742BD65" />
                                                            <TunableTuple name="enabled" class="TunableTuple" display="Enabled" muid="B112E0EABE466EDF" description="Venue type required for this test to pass." Deprecated="False" filter="0" group="General">
                                                                <Tunable type="bool" name="negate" class="Tunable" default="False" display="Negate" muid="D76BCE4E81909871" description="If enabled, the test will return true if the subject&#xA;IS NOT at a venue of the specified type." Deprecated="False" filter="0" group="General" />
                                                                <Tunable type="bool" name="use_source_venue" class="Tunable" default="False" display="Use Source Venue" muid="F7056EBE6A5D929D" description="If enabled, the test will test the source venue instead of the active&#xA;venue.  For example, the Community Lot instead of the active Marketplace.&#xA;Testing the active venue is the default." Deprecated="False" filter="0" group="General" />
                                                                <Tunable type="venue" name="venue_type" class="TunableReference" display="Venue Type" muid="EDBCE56DCC62C6FB" description="Venue type to test against." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                            </TunableTuple>
                                                        </TunableVariant>
                                                        <TunableVariant type="None" name="valid_surface_types" class="OptionalTunable" default="Don't_Test" display="Valid Surface Types" muid="BE581D3D62F0DE1C" description="If enabled, we will test the surface type of the subject&#xA;against prohibited or required surface types." Deprecated="False" filter="0" group="General">
                                                            <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="F85975ADC4534463" />
                                                            <TunableTuple name="Test_Surface_Types" class="TunableWhiteBlackList" display="Test Surface Types" muid="3DAED123FC9E1342" description="Required and Prohibited Surface Types. " Deprecated="False" filter="0" group="General">
                                                                <TunableVariant type="None" name="blacklist" class="OptionalTunable" default="nothing" display="Blacklist" muid="A546F781559CE87B" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is not in the blacklist. If no blacklist is&#xA;specified, no items are disallowed." Deprecated="False" filter="0" group="General">
                                                                    <Tunable name="nothing" class="TunableExistance" display="Nothing" muid="AF395E2A0F92244E" />
                                                                    <TunableTuple name="specify" class="TunableBlacklist" display="Specify" muid="BF5FFBC6C96A8E6" description="A tunable blacklist." Deprecated="False" filter="0" group="General">
                                                                        <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="8A0F7DDD6C5F2212" description="Blacklisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                            <TunableEnum type="SurfaceType" class="TunableEnumEntry" default="SURFACETYPE_WORLD" muid="FF218614F8762840" static_entries="routing.SurfaceType" description="Surface Type the object is placed on." Deprecated="False" filter="0" group="General" invalid_entries="SURFACETYPE_UNKNOWN" />
                                                                        </TunableList>
                                                                        <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="C5638AF8E31D1559" description="Tunable option for how many items must be in the blacklist&#xA;for the blacklist to fail when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                            <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="2C9D2CD69105BD0D" />
                                                                            <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="DC55B2026ECB1E99" description="When testing a collection of items, the number of items in&#xA;that collection that are in the blacklist must pass this&#xA;threshold test for the blacklist to disallow them all." Deprecated="False" filter="0" group="General">
                                                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="BCF44C1947A54A7E" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                                <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="4E5EB456AE3E67FD" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                            </TunableTuple>
                                                                        </TunableVariant>
                                                                    </TunableTuple>
                                                                </TunableVariant>
                                                                <TunableVariant type="None" name="whitelist" class="OptionalTunable" default="everything" display="Whitelist" muid="2761998B832BA01" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is in the whitelist. If no whitelist is&#xA;specified, all items are allowed." Deprecated="False" filter="0" group="General">
                                                                    <Tunable name="everything" class="TunableExistance" display="Everything" muid="474FF3B9A4099628" />
                                                                    <TunableTuple name="specify" class="TunableWhitelist" display="Specify" muid="D536F8939240C8A6" description="A tunable whitelist." Deprecated="False" filter="0" group="General">
                                                                        <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="D044BB895C5A82EE" description="Tunable option for how many items must be in the whitelist&#xA;for the whitelist to pass when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                            <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="5F83187CD0BE9E2F" />
                                                                            <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="57195E4F6E80BA18" description="When testing a collection of items, the number of items in&#xA;that collection that are in the whitelist must pass this&#xA;threshold test for the whitelist to allow them all." Deprecated="False" filter="0" group="General">
                                                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="68EAD8C25FD15102" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                                <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="9E302E7D5EBB6FFB" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                            </TunableTuple>
                                                                        </TunableVariant>
                                                                        <TunableList name="whitelist" class="TunableSet" display="Whitelist" muid="ED1FE463EFFEE228" description="Whitelisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                            <TunableEnum type="SurfaceType" class="TunableEnumEntry" default="SURFACETYPE_WORLD" muid="E5048A675C996081" static_entries="routing.SurfaceType" description="Surface Type the object is placed on." Deprecated="False" filter="0" group="General" invalid_entries="SURFACETYPE_UNKNOWN" />
                                                                        </TunableList>
                                                                    </TunableTuple>
                                                                </TunableVariant>
                                                            </TunableTuple>
                                                        </TunableVariant>
                                                    </TunableTuple>
                                                </TunableTuple>
                                                <Tunable name="none" class="TunableExistance" display="None" muid="445A44372265D074" />
                                                <TunableTuple name="object_definition" class="TunableObjectMatchesDefinitionOrTagTest" display="Object Definition" muid="5C2B5BD9669950F1" description="Check to see if the specified object matches either a static definition or a set of tags" Deprecated="False" filter="0" group="General">
                                                    <TunableVariant type="None" name="item" class="TunableVariant" default="tagged_item" display="Item" muid="9A289BCCFC2AB1BB" description="Whether to test for a specific item or item that has a set of tags" Deprecated="False" filter="0" group="General">
                                                        <TunableTuple name="actual_item" class="CraftActualItemFactory" display="Actual Item" muid="F71E2FD3A8250688" description="This option tests crafted item against a list of possible items" Deprecated="False" filter="0" group="General">
                                                            <TunableList name="items_to_check" class="TunableList" display="Items To Check" muid="E2FEF731CCD6A600" Deprecated="False" filter="0" group="General">
                                                                <Tunable type="object" class="TunableReference" muid="89A58FB8C4E4396E" description="Object that qualifies for this check." allow_none="False" Deprecated="False" filter="0" group="General" />
                                                            </TunableList>
                                                        </TunableTuple>
                                                        <TunableTuple name="tagged_item" class="CraftTaggedItemFactory" display="Tagged Item" muid="B913DF8B618EBA14" description="This option tests crafted item's tags against a list of possible tags" Deprecated="False" filter="0" group="General">
                                                            <TunableList name="tag_set" class="TunableSet" display="Tag Set" muid="D1245354C1D61DE7" description="The tag of objects we want to test ownership of" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                <TunableEnum type="Tag" class="TunableEnumEntry" default="INVALID" muid="BBA6D26143DC633A" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="What tag to test for" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                            </TunableList>
                                                            <TunableEnum type="TagTestType" name="test_type" class="TunableEnumEntry" default="CONTAINS_ANY_TAG_IN_SET" display="Test Type" muid="9F91D990FEE40E7C" static_entries="objects-object_tests.TagTestType" description="How to test the tags in the tag set against the objects on the lot." Deprecated="False" filter="0" group="General" />
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                    <TunableVariant type="None" name="tooltip" class="OptionalTunable" default="disabled" display="Tooltip" muid="19D482E5A2B33B04" description="Reason of failure." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="C8B2A77625941EAD" />
                                                        <Tunable type="int" name="enabled" class="TunableLocalizedString" default="0x0" display="Enabled" muid="B47DBDFB946FA139" description="Reason of failure." Deprecated="False" filter="0" group="General" />
                                                    </TunableVariant>
                                                </TunableTuple>
                                                <TunableTuple name="object_preference" class="TunableObjectScoringPreferenceTest" display="Object Preference" muid="4025BA8DD016968C" description="A tunable factory that checks whether or not the target object of an affordance&#xA;is the Sim's preferred scoring object." Deprecated="False" filter="0" group="General">
                                                    <TunableVariant type="None" name="any_sim" class="OptionalTunable" default="disabled" display="Any Sim" muid="89323C404C5EB8E0" description="If enabled, will return whether the object has any &quot;Use Only&quot; preference&#xA;set for the specified tag.  Will not be sim specific, and thus only&#xA;works for &quot;use only&quot; preference type.  Does NOT rely on interaction&#xA;to determine preference type.&#xA;&#xA;Value is the tag to test for." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="F6FF63C91D5FE1B1" />
                                                        <TunableEnum type="ObjectPreferenceTag" name="enabled" class="TunableEnumEntry" default="INVALID" display="Enabled" muid="DF26269196A11C5D" dynamic_entries="autonomy-autonomy_preference.ObjectPreferenceTag._elements" static_entries="autonomy-autonomy_preference.ObjectPreferenceTag" description="Tag to determine which preference type to use." Deprecated="False" filter="0" group="General" invalid_entries="INVALID" />
                                                    </TunableVariant>
                                                    <Tunable type="bool" name="require" class="Tunable" default="True" display="Require" muid="A4AD6A258F39EFE" description="The Sim's preference is required to be True or required to be False." Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableTuple name="season" class="TunableSeasonTest" display="Season" muid="778F03EFECF0414A" description="SeasonTest will test if the current simulation time falls within the&#xA;specified test conditions." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="bool" name="requires_seasons_pack" class="Tunable" default="True" display="Requires Seasons Pack" muid="4043FDCE9EE80EA1" description="If checked, this test will require that the Seasons pack be &#xA;installed in order for the seasons test to pass.  If unchecked, &#xA;this test will automatically pass." Deprecated="False" filter="0" group="General" />
                                                    <TunableList name="seasons" class="TunableEnumSet" display="Seasons" muid="125560C6A57DFA2F" min="1" description="Season(s) that we must be in to pass the test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                        <TunableEnum type="SeasonType" class="TunableEnumEntry" default="SUMMER" muid="BFEC6FDFBDBD2983" static_entries="seasons-seasons_enums.SeasonType" Deprecated="False" filter="0" group="General" />
                                                    </TunableList>
                                                    <TunableVariant type="None" name="time_of_season" class="OptionalTunable" default="disabled" display="Time Of Season" muid="4BA0E5D1560B4680" description="Portion(s) of season(s) that we must be in to pass the test." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="FD8C2561A179A1CC" />
                                                        <TunableList name="enabled" class="TunableEnumSet" display="Enabled" muid="4E150B967CAC76EF" min="1" description="Portion(s) of season(s) that we must be in to pass the test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                            <TunableEnum type="SeasonSegment" class="TunableEnumEntry" default="EARLY" muid="A4A4337BC6EB4C08" static_entries="seasons-seasons_enums.SeasonSegment" Deprecated="False" filter="0" group="General" />
                                                        </TunableList>
                                                    </TunableVariant>
                                                </TunableTuple>
                                                <TunableTuple name="state" class="TunableStateTest" display="State" muid="232382A706B5A276" description="Gate availability by object state.  By default, the test will use the&#xA;state's linked stat as a fallback in case the target doesn't have the&#xA;state involved." Deprecated="False" filter="0" group="General">
                                                    <TunableVariant type="None" name="fallback_behavior" class="TunableVariant" default="always_fail" display="Fallback Behavior" muid="F0C1060B04355F83" description="What to do if the given object doesn't have the state in question." Deprecated="False" filter="0" group="General">
                                                        <Tunable name="always_fail" class="TunableExistance" display="Always Fail" muid="7BE2B8CA49918A19" />
                                                        <Tunable name="always_pass" class="TunableExistance" display="Always Pass" muid="444C90180CBD7647" />
                                                    </TunableVariant>
                                                    <TunableEnum type="Operator" name="operator" class="TunableOperator" default="EQUAL" display="Operator" muid="B67FAEEA7236CBE9" static_entries="sims4-math.Operator" description="The comparison to use." Deprecated="False" filter="0" group="General" />
                                                    <Tunable type="object_state" name="value" class="TunableReference" display="Value" muid="BA8358F09BC5C136" description="The value to compare to." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="ObjectStateValue" />
                                                </TunableTuple>
                                                <TunableTuple name="statistic" class="TunableStatThresholdTest" display="Statistic" muid="E942591A907C16E" description="A test that checks whether or not a statistic is at a certain threshold for&#xA;a given participant. It can also test whether or not the participant has the&#xA;statistic explicitly added on them." Deprecated="False" filter="0" group="General">
                                                    <Tunable type="bool" name="must_have_stat" class="Tunable" default="False" display="Must Have Stat" muid="74AE35A28AD3A5DD" description="Setting this to True (checked) will ensure that this test only&#xA;passes if the tested Sim actually has the statistic referenced. If&#xA;left False (unchecked), this test will evaluate as if the Sim had&#xA;the statistic at the value of 0" Deprecated="False" filter="0" group="General" />
                                                    <TunableVariant type="None" name="score_to_use" class="TunableVariant" default="user_value" display="Score To Use" muid="982BDE423E647777" description="Depending on the choice, this decides what value to use for the &#xA;threshold comparison." Deprecated="False" filter="0" group="General">
                                                        <TunableTuple name="points" class="Tunable_PointsValue" display="Points" muid="9792487623F77DB3" description="Use the raw points for the comparison in the test." Deprecated="False" filter="0" group="General" />
                                                        <TunableTuple name="rank" class="Tunable_RankValue" display="Rank" muid="2B1924BC411D1D74" description="Use the rank value for the comparison in the test." Deprecated="False" filter="0" group="General" />
                                                        <TunableTuple name="user_value" class="Tunable_UserValue" display="User Value" muid="1ACE8C2B7CB9D033" description="Use the user value for the comparison in the test." Deprecated="False" filter="0" group="General">
                                                            <Tunable type="bool" name="highest_level_reached_instead" class="Tunable" default="False" display="Highest Level Reached Instead" muid="6CE6570D6990EE1D" description="If checked this will test against the highest level reached. This&#xA;currently only works with Ranked Statistics. Other statistics do&#xA;not have a notion of highest level reached. If we are using&#xA;something that doesn't support highest level reached it will &#xA;test against the current level instead." Deprecated="False" filter="0" group="General" />
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                    <Tunable type="statistic" name="stat" class="TunableReference" display="Stat" muid="CD74CFB84298684E" description="The stat we are operating on." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                    <TunableVariant type="None" name="threshold" class="TunableVariant" default="value_threshold" display="Threshold" muid="475050C568A13AC4" description="The value or state threshold to test against." Deprecated="False" filter="0" group="General">
                                                        <TunableTuple name="state_value_threshold" class="TunableObjectStateValueThreshold" display="State Value Threshold" muid="59E231CFD17505AC" description="Value/comparison pair used to define a Threshold." Deprecated="False" filter="0" group="General">
                                                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="8FD594803CF7EEED" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                            <Tunable type="object_state" name="value" class="TunableReference" display="Value" muid="D5EFD54B6AE82BD6" description="The state threshold for this test." allow_none="False" Deprecated="False" filter="0" group="General" restrict="ObjectStateValue" />
                                                        </TunableTuple>
                                                        <TunableTuple name="value_threshold" class="TunableThreshold" display="Value Threshold" muid="8CC145AB3B29F4FC" description="The threshold to control availability based on the statistic's&#xA;value." Deprecated="False" filter="0" group="General">
                                                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="C82FDF63085B10EB" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                            <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="300BF61406A7B977" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                    <TunableEnum type="ParticipantType" name="who" class="TunableEnumEntry" default="Actor" display="Who" muid="40A51FDD3E8629BD" static_entries="interactions.ParticipantType" description="Who or what to apply this test to." Deprecated="False" filter="0" group="General" />
                                                </TunableTuple>
                                                <TunableTuple name="street_civic_policy_test" class="TunableStreetCivicPolicyTest" display="Street Civic Policy Test" muid="C66AAE5F1C03B0CA" description="Test the state of the selected Street's Civic Policy Provider." Deprecated="False" filter="0" group="General">
                                                    <TunableList name="civic_policy_tests" class="TunableList" display="Civic Policy Tests" muid="FEAF19D9A5925C03" description="The tests we wish to run on the civic policies in question, run in&#xA;order.  AND operation, all must pass, first to fail stops tests." Deprecated="False" filter="0" group="General">
                                                        <TunableVariant type="None" class="TunableVariant" default="voting_open" muid="E5E5771CA715226D" description="Individual tests run on Civic Policy Provider." Deprecated="False" filter="0" group="General">
                                                            <TunableTuple name="available" class="TunableBaseCivicPolicyTestAvailable" display="Available" muid="DD915556D576E3F" description="Test available policies. Available policies include everything tuned." Deprecated="False" filter="0" group="General">
                                                                <TunableTuple name="white_black_list" class="TunableWhiteBlackList" display="White Black List" muid="124FF38B161ABD89" description="The civic policies must pass the whitelist and blacklist&#xA;to pass the test." Deprecated="False" filter="0" group="General">
                                                                    <TunableVariant type="None" name="blacklist" class="OptionalTunable" default="nothing" display="Blacklist" muid="941CF3689EB1DC7" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is not in the blacklist. If no blacklist is&#xA;specified, no items are disallowed." Deprecated="False" filter="0" group="General">
                                                                        <Tunable name="nothing" class="TunableExistance" display="Nothing" muid="47BF051829814E33" />
                                                                        <TunableTuple name="specify" class="TunableBlacklist" display="Specify" muid="36EAA32BB900427A" description="A tunable blacklist." Deprecated="False" filter="0" group="General">
                                                                            <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="AA2A9C262800B876" description="Blacklisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                                <Tunable type="snippet" class="TunableReference" muid="7DBF394F085D218C" description="Allowed and disallowed civic policies." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="BaseCivicPolicy" />
                                                                            </TunableList>
                                                                            <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="64765F20601D0C0" description="Tunable option for how many items must be in the blacklist&#xA;for the blacklist to fail when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                                <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="296012F0A640DF19" />
                                                                                <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="4DDB2FB799F9393F" description="When testing a collection of items, the number of items in&#xA;that collection that are in the blacklist must pass this&#xA;threshold test for the blacklist to disallow them all." Deprecated="False" filter="0" group="General">
                                                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="F435A49F437F68D7" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                                    <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="CF7C942B3FAE4D9" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                                </TunableTuple>
                                                                            </TunableVariant>
                                                                        </TunableTuple>
                                                                    </TunableVariant>
                                                                    <TunableVariant type="None" name="whitelist" class="OptionalTunable" default="everything" display="Whitelist" muid="EF294CC9DB960370" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is in the whitelist. If no whitelist is&#xA;specified, all items are allowed." Deprecated="False" filter="0" group="General">
                                                                        <Tunable name="everything" class="TunableExistance" display="Everything" muid="EF9943E78B66668B" />
                                                                        <TunableTuple name="specify" class="TunableWhitelist" display="Specify" muid="FE1F50F983D621D0" description="A tunable whitelist." Deprecated="False" filter="0" group="General">
                                                                            <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="B9EC075FB05AAF02" description="Tunable option for how many items must be in the whitelist&#xA;for the whitelist to pass when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                                <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="CF36384FF3A7A41F" />
                                                                                <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="436E4E5894FE9545" description="When testing a collection of items, the number of items in&#xA;that collection that are in the whitelist must pass this&#xA;threshold test for the whitelist to allow them all." Deprecated="False" filter="0" group="General">
                                                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="A1A39801553CF51E" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                                    <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="72262C87F128D73F" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                                </TunableTuple>
                                                                            </TunableVariant>
                                                                            <TunableList name="whitelist" class="TunableSet" display="Whitelist" muid="7CCE52D432A450E0" description="Whitelisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                                <Tunable type="snippet" class="TunableReference" muid="16582937DF1A721B" description="Allowed and disallowed civic policies." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="BaseCivicPolicy" />
                                                                            </TunableList>
                                                                        </TunableTuple>
                                                                    </TunableVariant>
                                                                </TunableTuple>
                                                            </TunableTuple>
                                                            <TunableTuple name="balloted" class="TunableBaseCivicPolicyTestBalloted" display="Balloted" muid="25FB0ED3FD20BC0D" description="Test balloted policies.  Policies being considered by the next/current vote are&#xA;balloted." Deprecated="False" filter="0" group="General">
                                                                <TunableTuple name="white_black_list" class="TunableWhiteBlackList" display="White Black List" muid="84D7EF976929D06C" description="The civic policies must pass the whitelist and blacklist&#xA;to pass the test." Deprecated="False" filter="0" group="General">
                                                                    <TunableVariant type="None" name="blacklist" class="OptionalTunable" default="nothing" display="Blacklist" muid="5090DED8B0BA3F92" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is not in the blacklist. If no blacklist is&#xA;specified, no items are disallowed." Deprecated="False" filter="0" group="General">
                                                                        <Tunable name="nothing" class="TunableExistance" display="Nothing" muid="6637F9FA69E5B887" />
                                                                        <TunableTuple name="specify" class="TunableBlacklist" display="Specify" muid="628539689F858745" description="A tunable blacklist." Deprecated="False" filter="0" group="General">
                                                                            <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="83EC7E87C8AB81BE" description="Blacklisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                                <Tunable type="snippet" class="TunableReference" muid="AE6B2F0F16EC7BEC" description="Allowed and disallowed civic policies." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="BaseCivicPolicy" />
                                                                            </TunableList>
                                                                            <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="A27F1F1414204D51" description="Tunable option for how many items must be in the blacklist&#xA;for the blacklist to fail when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                                <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="CEBB3441B9C31645" />
                                                                                <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="16002411220E3C6E" description="When testing a collection of items, the number of items in&#xA;that collection that are in the blacklist must pass this&#xA;threshold test for the blacklist to disallow them all." Deprecated="False" filter="0" group="General">
                                                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="A675A5987FF9F742" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                                    <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="9AB4B08829AF9BD0" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                                </TunableTuple>
                                                                            </TunableVariant>
                                                                        </TunableTuple>
                                                                    </TunableVariant>
                                                                    <TunableVariant type="None" name="whitelist" class="OptionalTunable" default="everything" display="Whitelist" muid="EA00F1573BAE7AF" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is in the whitelist. If no whitelist is&#xA;specified, all items are allowed." Deprecated="False" filter="0" group="General">
                                                                        <Tunable name="everything" class="TunableExistance" display="Everything" muid="54F9485C58061FFA" />
                                                                        <TunableTuple name="specify" class="TunableWhitelist" display="Specify" muid="3D2A3151E2C7F784" description="A tunable whitelist." Deprecated="False" filter="0" group="General">
                                                                            <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="27CA0A3CAC04FF18" description="Tunable option for how many items must be in the whitelist&#xA;for the whitelist to pass when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                                <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="1791D3A530D103B7" />
                                                                                <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="76CC81859CB5D890" description="When testing a collection of items, the number of items in&#xA;that collection that are in the whitelist must pass this&#xA;threshold test for the whitelist to allow them all." Deprecated="False" filter="0" group="General">
                                                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="41CD8D4273726656" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                                    <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="3E63A0598014894A" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                                </TunableTuple>
                                                                            </TunableVariant>
                                                                            <TunableList name="whitelist" class="TunableSet" display="Whitelist" muid="C5A15E2ABB4C057" description="Whitelisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                                <Tunable type="snippet" class="TunableReference" muid="A4B77342C351D0A0" description="Allowed and disallowed civic policies." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="BaseCivicPolicy" />
                                                                            </TunableList>
                                                                        </TunableTuple>
                                                                    </TunableVariant>
                                                                </TunableTuple>
                                                            </TunableTuple>
                                                            <TunableTuple name="dormant" class="TunableBaseCivicPolicyTestDormant" display="Dormant" muid="CD044A2BE9B2571" description="Test dormant policies. Dormant policies are not enacted and not balloted." Deprecated="False" filter="0" group="General">
                                                                <TunableTuple name="white_black_list" class="TunableWhiteBlackList" display="White Black List" muid="383C241F5E50E00C" description="The civic policies must pass the whitelist and blacklist&#xA;to pass the test." Deprecated="False" filter="0" group="General">
                                                                    <TunableVariant type="None" name="blacklist" class="OptionalTunable" default="nothing" display="Blacklist" muid="501291C3EED590BB" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is not in the blacklist. If no blacklist is&#xA;specified, no items are disallowed." Deprecated="False" filter="0" group="General">
                                                                        <Tunable name="nothing" class="TunableExistance" display="Nothing" muid="C1BC54C499D60CBB" />
                                                                        <TunableTuple name="specify" class="TunableBlacklist" display="Specify" muid="6DA6D26CC0AF2DC8" description="A tunable blacklist." Deprecated="False" filter="0" group="General">
                                                                            <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="BAB23D4762406BCF" description="Blacklisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                                <Tunable type="snippet" class="TunableReference" muid="64FE68190670AD04" description="Allowed and disallowed civic policies." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="BaseCivicPolicy" />
                                                                            </TunableList>
                                                                            <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="AD9D31CF5B3D9687" description="Tunable option for how many items must be in the blacklist&#xA;for the blacklist to fail when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                                <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="643606E932F4D51" />
                                                                                <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="BF8E0061F3D18B48" description="When testing a collection of items, the number of items in&#xA;that collection that are in the blacklist must pass this&#xA;threshold test for the blacklist to disallow them all." Deprecated="False" filter="0" group="General">
                                                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="3264D8CCE72A284B" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                                    <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="5D093FDD0E33A443" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                                </TunableTuple>
                                                                            </TunableVariant>
                                                                        </TunableTuple>
                                                                    </TunableVariant>
                                                                    <TunableVariant type="None" name="whitelist" class="OptionalTunable" default="everything" display="Whitelist" muid="14816144DBFC924E" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is in the whitelist. If no whitelist is&#xA;specified, all items are allowed." Deprecated="False" filter="0" group="General">
                                                                        <Tunable name="everything" class="TunableExistance" display="Everything" muid="2C4784829543181E" />
                                                                        <TunableTuple name="specify" class="TunableWhitelist" display="Specify" muid="ED8E4EF3707331EF" description="A tunable whitelist." Deprecated="False" filter="0" group="General">
                                                                            <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="1493B43D65CBD723" description="Tunable option for how many items must be in the whitelist&#xA;for the whitelist to pass when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                                <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="C6524E67970E15C5" />
                                                                                <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="FADDD5F0D9DEB766" description="When testing a collection of items, the number of items in&#xA;that collection that are in the whitelist must pass this&#xA;threshold test for the whitelist to allow them all." Deprecated="False" filter="0" group="General">
                                                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="9558F1F842BF7726" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                                    <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="C79C047F36077B25" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                                </TunableTuple>
                                                                            </TunableVariant>
                                                                            <TunableList name="whitelist" class="TunableSet" display="Whitelist" muid="64D5310D35F26C75" description="Whitelisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                                <Tunable type="snippet" class="TunableReference" muid="7A47D3A843182F98" description="Allowed and disallowed civic policies." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="BaseCivicPolicy" />
                                                                            </TunableList>
                                                                        </TunableTuple>
                                                                    </TunableVariant>
                                                                </TunableTuple>
                                                            </TunableTuple>
                                                            <TunableTuple name="enacted" class="TunableBaseCivicPolicyTestEnacted" display="Enacted" muid="458B0122C80CE8D6" description="Test enacted policies." Deprecated="False" filter="0" group="General">
                                                                <TunableTuple name="white_black_list" class="TunableWhiteBlackList" display="White Black List" muid="F417097F4B37B325" description="The civic policies must pass the whitelist and blacklist&#xA;to pass the test." Deprecated="False" filter="0" group="General">
                                                                    <TunableVariant type="None" name="blacklist" class="OptionalTunable" default="nothing" display="Blacklist" muid="72269369F8B3D681" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is not in the blacklist. If no blacklist is&#xA;specified, no items are disallowed." Deprecated="False" filter="0" group="General">
                                                                        <Tunable name="nothing" class="TunableExistance" display="Nothing" muid="6A71A290DD59139F" />
                                                                        <TunableTuple name="specify" class="TunableBlacklist" display="Specify" muid="89C3C29DED806157" description="A tunable blacklist." Deprecated="False" filter="0" group="General">
                                                                            <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="EF6D937C38433EC7" description="Blacklisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                                <Tunable type="snippet" class="TunableReference" muid="B0FC075F56DD7E62" description="Allowed and disallowed civic policies." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="BaseCivicPolicy" />
                                                                            </TunableList>
                                                                            <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="C2D20BFC2BB6C71A" description="Tunable option for how many items must be in the blacklist&#xA;for the blacklist to fail when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                                <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="470AEEC37CE3CDD7" />
                                                                                <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="A1214F7DF8880819" description="When testing a collection of items, the number of items in&#xA;that collection that are in the blacklist must pass this&#xA;threshold test for the blacklist to disallow them all." Deprecated="False" filter="0" group="General">
                                                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="395AB79FB2C195E3" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                                    <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="D51E6B2DE3BF8917" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                                </TunableTuple>
                                                                            </TunableVariant>
                                                                        </TunableTuple>
                                                                    </TunableVariant>
                                                                    <TunableVariant type="None" name="whitelist" class="OptionalTunable" default="everything" display="Whitelist" muid="4E99454336C374B2" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is in the whitelist. If no whitelist is&#xA;specified, all items are allowed." Deprecated="False" filter="0" group="General">
                                                                        <Tunable name="everything" class="TunableExistance" display="Everything" muid="37DAA13E81DF5FDA" />
                                                                        <TunableTuple name="specify" class="TunableWhitelist" display="Specify" muid="4BA04D91198D5103" description="A tunable whitelist." Deprecated="False" filter="0" group="General">
                                                                            <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="9CDB4E7703A15FB7" description="Tunable option for how many items must be in the whitelist&#xA;for the whitelist to pass when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                                <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="763DD18C49553025" />
                                                                                <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="459E1F8CB13EC7D9" description="When testing a collection of items, the number of items in&#xA;that collection that are in the whitelist must pass this&#xA;threshold test for the whitelist to allow them all." Deprecated="False" filter="0" group="General">
                                                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="688A67502839CFBC" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                                    <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="12950DECA46A1223" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                                </TunableTuple>
                                                                            </TunableVariant>
                                                                            <TunableList name="whitelist" class="TunableSet" display="Whitelist" muid="8BB091174CCC449A" description="Whitelisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                                <Tunable type="snippet" class="TunableReference" muid="A748BAFF0954C5F4" description="Allowed and disallowed civic policies." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="BaseCivicPolicy" />
                                                                            </TunableList>
                                                                        </TunableTuple>
                                                                    </TunableVariant>
                                                                </TunableTuple>
                                                            </TunableTuple>
                                                            <TunableTuple name="repealable" class="TunableBaseCivicPolicyTestRepealable" display="Repealable" muid="C637CABAB45FCE47" description="Test up for repeal policies. Up for Repeal policies have been specifically marked&#xA;as such and will (if the vote/petition threshold is reached) be repealed&#xA;as part of closing the next vote." Deprecated="False" filter="0" group="General">
                                                                <TunableTuple name="white_black_list" class="TunableWhiteBlackList" display="White Black List" muid="3C6E5D56C2434A4E" description="The civic policies must pass the whitelist and blacklist&#xA;to pass the test." Deprecated="False" filter="0" group="General">
                                                                    <TunableVariant type="None" name="blacklist" class="OptionalTunable" default="nothing" display="Blacklist" muid="1FF31EDBC3410B97" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is not in the blacklist. If no blacklist is&#xA;specified, no items are disallowed." Deprecated="False" filter="0" group="General">
                                                                        <Tunable name="nothing" class="TunableExistance" display="Nothing" muid="B5A1F1F21650ED7D" />
                                                                        <TunableTuple name="specify" class="TunableBlacklist" display="Specify" muid="9004A81F41779D8C" description="A tunable blacklist." Deprecated="False" filter="0" group="General">
                                                                            <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="49901AEC17BF4EC9" description="Blacklisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                                <Tunable type="snippet" class="TunableReference" muid="BF695C01CCC3441B" description="Allowed and disallowed civic policies." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="BaseCivicPolicy" />
                                                                            </TunableList>
                                                                            <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="8B516B411FFC400F" description="Tunable option for how many items must be in the blacklist&#xA;for the blacklist to fail when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                                <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="39789CAD7621AA4E" />
                                                                                <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="A3AA3F1927F7E30F" description="When testing a collection of items, the number of items in&#xA;that collection that are in the blacklist must pass this&#xA;threshold test for the blacklist to disallow them all." Deprecated="False" filter="0" group="General">
                                                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="3D4D0584008B61D" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                                    <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="EA10902E1307BBE7" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                                </TunableTuple>
                                                                            </TunableVariant>
                                                                        </TunableTuple>
                                                                    </TunableVariant>
                                                                    <TunableVariant type="None" name="whitelist" class="OptionalTunable" default="everything" display="Whitelist" muid="51AE41CB85283F85" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is in the whitelist. If no whitelist is&#xA;specified, all items are allowed." Deprecated="False" filter="0" group="General">
                                                                        <Tunable name="everything" class="TunableExistance" display="Everything" muid="936DB29C486F0558" />
                                                                        <TunableTuple name="specify" class="TunableWhitelist" display="Specify" muid="2E1B35AD86CCC316" description="A tunable whitelist." Deprecated="False" filter="0" group="General">
                                                                            <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="593BD29E0EA02B2A" description="Tunable option for how many items must be in the whitelist&#xA;for the whitelist to pass when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                                <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="86567BFD6FA50D9" />
                                                                                <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="DB9E80524D58817E" description="When testing a collection of items, the number of items in&#xA;that collection that are in the whitelist must pass this&#xA;threshold test for the whitelist to allow them all." Deprecated="False" filter="0" group="General">
                                                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="CB8458FD7A254BD3" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                                    <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="F3EEFDFA24CCD597" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                                </TunableTuple>
                                                                            </TunableVariant>
                                                                            <TunableList name="whitelist" class="TunableSet" display="Whitelist" muid="E4613509CB41306C" description="Whitelisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                                <Tunable type="snippet" class="TunableReference" muid="D4C4617DDB1E1FD1" description="Allowed and disallowed civic policies." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="BaseCivicPolicy" />
                                                                            </TunableList>
                                                                        </TunableTuple>
                                                                    </TunableVariant>
                                                                </TunableTuple>
                                                            </TunableTuple>
                                                            <TunableTuple name="voting_open" class="TunableBaseCivicPolicyTestVotingOpen" display="Voting Open" muid="3A702B84D9823905" description="If checked, will verify that voting is currently active." Deprecated="False" filter="0" group="General">
                                                                <Tunable type="bool" name="negate" class="Tunable" default="False" display="Negate" muid="240499E405532CBA" description="If checked then this test will return True when not active." Deprecated="False" filter="0" group="General" />
                                                            </TunableTuple>
                                                            <TunableTuple name="voting_time_until_change" class="TunableBaseCivicPolicyTestVotingTimeUntilChange" display="Voting Time Until Change" muid="597143251CD76483" description="If checked, will check the time remaining before the next voting open status change." Deprecated="False" filter="0" group="General">
                                                                <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="D4C572294B631279" description="The amount of time relative to the next voting state change to test." Deprecated="False" filter="0" group="General">
                                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="3E99DDBDBB22DB3E" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                    <TunableTuple name="value" class="TunableTimeSpan" display="Value" muid="2C173D09A7E9ECBA" description="Duration before the next change." Deprecated="False" filter="0" group="General">
                                                                        <Tunable type="int" name="days" class="TunableRange" default="0" display="Days" muid="547D07EDB09D1F50" min="0" max="None" description="Number of days" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                        <Tunable type="int" name="hours" class="TunableRange" default="1" display="Hours" muid="AD5669F1D21E7594" min="0" max="23" description="Number of hours" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                        <Tunable type="int" name="minutes" class="TunableRange" default="0" display="Minutes" muid="7E8F2AEB12EAEF80" min="0" max="59" description="Number of minutes" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                    </TunableTuple>
                                                                </TunableTuple>
                                                            </TunableTuple>
                                                        </TunableVariant>
                                                    </TunableList>
                                                    <TunableVariant type="None" name="street" class="TunableVariant" default="literal" display="Street" muid="CD7A0CCFF903C51F" description="Select what street to test." Deprecated="False" filter="0" group="General">
                                                        <Tunable type="street" name="literal" class="TunableReference" display="Literal" muid="64E61E1665A76293" description="Identify a specific Street." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                        <TunableTuple name="via_street_participant" class="TunableStreetParticipant" display="Via Street Participant" muid="B4EC3ED5A0EA096" description="Get the street participant." Deprecated="False" filter="0" group="General" />
                                                        <TunableVariant type="None" name="via_zone_source" class="TunableVariant" default="use_current_zone" display="Via Zone Source" muid="F4105F7FA0C5CE4" description="Select the street to use by specifying a Zone Source." Deprecated="False" filter="0" group="General">
                                                            <TunableTuple name="use_current_zone" class="TunableActiveZone" display="Use Current Zone" muid="2FB961DD40BF1E99" description="Get the active zone." Deprecated="False" filter="0" group="General" />
                                                            <TunableTuple name="use_participant_home_zone" class="TunableParticipantHomeZone" display="Use Participant Home Zone" muid="2DE7B1F4BFC72A08" description="Get a participant's home zone. Can be None if they don't have one." Deprecated="False" filter="0" group="General">
                                                                <TunableEnum type="ParticipantTypeSingleSim" name="participant" class="TunableEnumEntry" default="Actor" display="Participant" muid="89358F6417824409" static_entries="interactions.ParticipantTypeSingleSim" description="Test against the participant's home zone. Townies' home zone will&#xA;be None." Deprecated="False" filter="0" group="General" />
                                                            </TunableTuple>
                                                            <TunableTuple name="use_pick_info" class="TunablePickInfoZone" display="Use Pick Info" muid="D3853257554148A5" description="Get the zone of the lot the user clicked on." Deprecated="False" filter="0" group="General" />
                                                            <TunableTuple name="use_picked_zone_ids" class="TunablePickedZoneIds" display="Use Picked Zone Ids" muid="44410D1D40AA7825" description="Get the zone from the interaction's picked_zone_ids participant. Usually&#xA;comes from a picker." Deprecated="False" filter="0" group="General" />
                                                        </TunableVariant>
                                                    </TunableVariant>
                                                </TunableTuple>
                                            </TunableVariant>
                                        </TunableList>
                                    </TunableList>
                                    <TunableList name="weighted_tests" class="TunableList" display="Weighted Tests" muid="899E77F6BB4217D1" description="Weighted tests for the individual object. One is chosen &#xA;based on weight, and all objects are run against that chosen&#xA;test set." Deprecated="False" filter="0" group="General">
                                        <TunableTuple class="TunableTuple" muid="E8388909A4FC982B" Deprecated="False" filter="0" group="General">
                                            <TunableList name="tests" class="TunableObjectModifyTestSet" display="Tests" muid="47944EC4756570C7" description="All least one subtest group (AKA one list item) must pass&#xA;within this list before the action associated with this&#xA;tuning will be run." Deprecated="False" filter="0" group="General">
                                                <TunableList class="TunableList" muid="A188153DC6977044" description="A list of tests.  All of these must pass for the group to pass." Deprecated="False" filter="0" group="General">
                                                    <TunableVariant type="None" class="TunableObjectModifyTestVariant" default="none" muid="832963D7A5A1E084" description="A single tunable test." Deprecated="False" filter="0" group="General">
                                                        <TunableTuple name="consumable_test" class="TunableConsumableTest" display="Consumable Test" muid="281D98780F2C9895" description="A test that checks information about consumables." Deprecated="False" filter="0" group="General">
                                                            <TunableTuple name="bites_left" class="TunableTuple" display="Bites Left" muid="122820D2024E34DC" description="A check that tests against the number of bites left before the&#xA;subject is completely consumed." Deprecated="False" filter="0" group="General">
                                                                <TunableEnum type="Operator" name="operator" class="TunableOperator" default="EQUAL" display="Operator" muid="6D5BCA5B45FAF1F6" static_entries="sims4-math.Operator" description="The operator to use for the comparison." Deprecated="False" filter="0" group="General" />
                                                                <Tunable type="int" name="value" class="Tunable" default="1" display="Value" muid="345621E914F078CD" description="The number of bites to test against." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                            </TunableTuple>
                                                            <Tunable type="bool" name="is_consumable" class="Tunable" default="True" display="Is Consumable" muid="75945453DADA0ED2" description="If checked, the subject must be a consumable, if unchecked, the&#xA;subject must not be a consumable." Deprecated="False" filter="0" group="General" />
                                                            <TunableEnum type="ParticipantType" name="subject" class="TunableEnumEntry" default="Object" display="Subject" muid="BB990D3A87041611" static_entries="interactions.ParticipantType" description="The subject of the test. This is the consumable object." Deprecated="False" filter="0" group="General" />
                                                        </TunableTuple>
                                                        <TunableTuple name="custom_name" class="TunableCustomNameTest" display="Custom Name" muid="836238D25AEDBFCF" description="Require or prohibit an object from having a custom&#xA;name or description set." Deprecated="False" filter="0" group="General">
                                                            <TunableVariant type="None" name="has_custom_description" class="OptionalTunable" default="disabled" display="Has Custom Description" muid="EE14577C62FCD8B9" description="If checked, the subject must have a custom description set. If unchecked, it cannot have a custom description set." Deprecated="False" filter="0" group="General">
                                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="69A79F814DE1DB95" />
                                                                <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="5E7911927A37DB19" description="If checked, the subject must have a custom description set. If unchecked, it cannot have a custom description set." Deprecated="False" filter="0" group="General" />
                                                            </TunableVariant>
                                                            <TunableVariant type="None" name="has_custom_name" class="OptionalTunable" default="disabled" display="Has Custom Name" muid="D36A2BC83B7B7102" description="If checked, the subject must have a custom name set. If unchecked, it cannot have a custom name set." Deprecated="False" filter="0" group="General">
                                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="798979D4C09D14AE" />
                                                                <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="BCA958727D64F0AE" description="If checked, the subject must have a custom name set. If unchecked, it cannot have a custom name set." Deprecated="False" filter="0" group="General" />
                                                            </TunableVariant>
                                                            <TunableEnum type="ParticipantType" name="participant" class="TunableEnumEntry" default="Object" display="Participant" muid="44C98E595C2AEDA5" static_entries="interactions.ParticipantType" description="The subject who is the object of this test." Deprecated="False" filter="0" group="General" />
                                                        </TunableTuple>
                                                        <TunableTuple name="elapsed_time" class="TunableTimeElapsedZoneTest" display="Elapsed Time" muid="F6DCCE85589353A4" description="Test to make sure enough time has passed since the zone was last saved." Deprecated="False" filter="0" group="General">
                                                            <Tunable type="float" name="minutes_passed" class="TunableSimMinute" default="720" display="Minutes Passed" muid="9111CE5F25FE7F7" min="1" max="None" description="This test will pass when the minutes passed is greater than the&#xA;number minutes since last loading into zone." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                        </TunableTuple>
                                                        <TunableTuple name="existence" class="TunableExistenceTest" display="Existence" muid="5CF4871B41E437B0" description="A test to check whether the specified participant exists." Deprecated="False" filter="0" group="General">
                                                            <Tunable type="bool" name="allow_hidden_sim_status" class="Tunable" default="False" display="Allow Hidden Sim Status" muid="2BBFD3B17A3B4B40" description="If checked then we will ignore hidden Sim status such that they will count as existing even though they&#xA;have been hidden.  Use this in conjunction with Require Instantiated in order to determine the Sim's actual&#xA;instantiated status. " Deprecated="False" filter="0" group="General" />
                                                            <Tunable type="bool" name="exists" class="Tunable" default="True" display="Exists" muid="105BBBFF6B3D85E" description="When checked, require the specified participant to exist. When&#xA;unchecked, require the specified participant to not exist." Deprecated="False" filter="0" group="General" />
                                                            <TunableEnum type="ParticipantType" name="participant" class="TunableEnumEntry" default="TargetSim" display="Participant" muid="1E3EC93DF4C91B2F" static_entries="interactions.ParticipantType" description="The participant for which to check existence." Deprecated="False" filter="0" group="General" />
                                                            <Tunable type="bool" name="require_instantiatable" class="Tunable" default="True" display="Require Instantiatable" muid="62C7728FAFEE5F63" description="If checked, the specified participant must be instantiatable. This&#xA;is generally true for all Sims at LOD above MINIMUM." Deprecated="False" filter="0" group="General" />
                                                        </TunableTuple>
                                                        <TunableTuple name="game_option" class="TunableSimInfoGameplayOptionsTest" display="Game Option" muid="E2D46E0F328CF8DB" description="Test whether or not a Sim has a specific gameplay option set." Deprecated="False" filter="0" group="General">
                                                            <TunableEnum type="TestableGameOptions" name="gameplay_option" class="TunableEnumEntry" default="CIVIC_POLICY_NPC_VOTING_ENABLED" display="Gameplay Option" muid="E31E3351C4DB651B" static_entries="event_testing-game_option_tests.TestableGameOptions" description="The gameplay option to test. This test will pass if this option is&#xA;set." Deprecated="False" filter="0" group="General" />
                                                            <Tunable type="bool" name="invert" class="Tunable" default="False" display="Invert" muid="52924F225CD0CCA" description="If enabled, requires the option to be unset for the test to pass." Deprecated="False" filter="0" group="General" />
                                                            <TunableVariant type="None" name="tooltip" class="OptionalTunable" default="disabled" display="Tooltip" muid="FBB021752C84FCF8" description="Reason of failure." Deprecated="False" filter="0" group="General">
                                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="C257B3A8156CD416" />
                                                                <Tunable type="int" name="enabled" class="TunableLocalizedString" default="0x0" display="Enabled" muid="9F58086247B39C13" description="Reason of failure." Deprecated="False" filter="0" group="General" />
                                                            </TunableVariant>
                                                        </TunableTuple>
                                                        <TunableTuple name="inventory" class="TunableInventoryTest" display="Inventory" muid="B908DAB45A36AB1B" description="A test to check on the contents of either a sim inventory or&#xA;an object inventory." Deprecated="False" filter="0" group="General">
                                                            <TunableVariant type="None" name="contents_check" class="TunableVariant" default="has_anything" display="Contents Check" muid="B175A96DBB646700" description="Checks to run on each object of the specified inventory" Deprecated="False" filter="0" group="General">
                                                                <Tunable name="has_anything" class="TunableExistance" display="Has Anything" muid="4AB0E497A24671D8" />
                                                                <TunableTuple name="has_object_of_participant_type" class="TunableTuple" display="Has Object Of Participant Type" muid="D57F7180C89DEA8F" description="Participant type we want to test if its in the selected&#xA;inventory." Deprecated="False" filter="0" group="General">
                                                                    <TunableEnum type="ParticipantType" name="participant" class="TunableEnumEntry" default="Object" display="Participant" muid="54349AA1169196B3" static_entries="interactions.ParticipantType" description="Which participant of the interaction do we want to validate&#xA;on the inventory. " Deprecated="False" filter="0" group="General" />
                                                                </TunableTuple>
                                                                <TunableTuple name="has_object_with_def" class="TunableTuple" display="Has Object With Def" muid="1D4E7279CBD345A7" Deprecated="False" filter="0" group="General">
                                                                    <Tunable type="object" name="definition" class="TunableReference" display="Definition" muid="EB713AC54DAE2CFE" description="The object definition to look for inside inventory." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                                </TunableTuple>
                                                                <TunableTuple name="has_object_with_states" class="BasicStateCheckFactory" display="Has Object With States" muid="1393317552E9AFD1" description="This option tests crafted item's tags against a list of possible&#xA;tags." Deprecated="False" filter="0" group="General">
                                                                    <TunableVariant type="None" name="object_requirement" class="TunableVariant" default="any_object" display="Object Requirement" muid="7DD4D459DED538A0" Deprecated="False" filter="0" group="General">
                                                                        <Tunable name="any_object" class="TunableExistance" display="Any Object" muid="460881CAE3E4C69D" />
                                                                        <TunableTuple name="definition" class="TunableTuple" display="Definition" muid="FF7CED0EC03FC0C3" Deprecated="False" filter="0" group="General">
                                                                            <Tunable type="object" name="definition" class="TunableReference" display="Definition" muid="E71D66CADA406551" description="The object must have this definition." allow_none="False" Deprecated="False" filter="0" group="General" />
                                                                        </TunableTuple>
                                                                        <TunableTuple name="tag" class="TunableTuple" display="Tag" muid="E8F985F0D1B312F8" Deprecated="False" filter="0" group="General">
                                                                            <TunableTuple name="tag" class="CraftTaggedItemFactory" display="Tag" muid="584662CED5FAE7E8" description="The object must have this tag." Deprecated="False" filter="0" group="General">
                                                                                <TunableList name="tag_set" class="TunableSet" display="Tag Set" muid="3985B85AD5B60C12" description="The tag of objects we want to test ownership of" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                                    <TunableEnum type="Tag" class="TunableEnumEntry" default="INVALID" muid="134866F2E1B45689" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="What tag to test for" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                                                </TunableList>
                                                                                <TunableEnum type="TagTestType" name="test_type" class="TunableEnumEntry" default="CONTAINS_ANY_TAG_IN_SET" display="Test Type" muid="F3B6A95A4491EF57" static_entries="objects-object_tests.TagTestType" description="How to test the tags in the tag set against the objects on the lot." Deprecated="False" filter="0" group="General" />
                                                                            </TunableTuple>
                                                                        </TunableTuple>
                                                                    </TunableVariant>
                                                                    <TunableList name="state_set" class="TunableSet" display="State Set" muid="F9A5B4B2C35B936A" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                        <Tunable type="object_state" class="TunableReference" muid="F55CB825E4E57027" description="What state to test for." allow_none="False" Deprecated="False" filter="0" group="General" />
                                                                    </TunableList>
                                                                    <TunableEnum type="StateTestType" name="test_type" class="TunableEnumEntry" default="CONTAINS_ANY_STATE_IN_SET" display="Test Type" muid="14176876CAC3EF1B" static_entries="objects-object_tests.StateTestType" description="How to test the states in the state set against the objects in&#xA;the inventory." Deprecated="False" filter="0" group="General" />
                                                                </TunableTuple>
                                                                <TunableTuple name="has_object_with_tag" class="CraftTaggedItemFactory" display="Has Object With Tag" muid="A550058AB034053C" description="This option tests crafted item's tags against a list of possible tags" Deprecated="False" filter="0" group="General">
                                                                    <TunableList name="tag_set" class="TunableSet" display="Tag Set" muid="2F20A57848A22C6E" description="The tag of objects we want to test ownership of" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                        <TunableEnum type="Tag" class="TunableEnumEntry" default="INVALID" muid="FBBD2A98B528BC0F" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="What tag to test for" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                                    </TunableList>
                                                                    <TunableEnum type="TagTestType" name="test_type" class="TunableEnumEntry" default="CONTAINS_ANY_TAG_IN_SET" display="Test Type" muid="7AE13E164D178C2C" static_entries="objects-object_tests.TagTestType" description="How to test the tags in the tag set against the objects on the lot." Deprecated="False" filter="0" group="General" />
                                                                </TunableTuple>
                                                            </TunableVariant>
                                                            <TunableVariant type="None" name="inventory_location" class="TunableVariant" default="participant_inventory" display="Inventory Location" muid="C7AD319357953DC0" description="Who owns the inventory. Either look in the inventory of a &#xA;participant or specify an object inventory type directly.&#xA;&#xA;If participant returns multiple inventory owners, the test will &#xA;pass only if ALL of those owners pass the inventory content test." Deprecated="False" filter="0" group="General">
                                                                <TunableTuple name="hidden_inventory_objects" class="TunableTuple" display="Hidden Inventory Objects" muid="2DD31D190B233A2C" Deprecated="False" filter="0" group="General">
                                                                    <TunableEnum type="InventoryType" name="inventory" class="TunableEnumEntry" default="UNDEFINED" display="Inventory" muid="F2782A0175651DB4" dynamic_entries="objects-components-inventory_enums.InventoryType._elements" static_entries="objects-components-inventory_enums.InventoryType" description="Check in the hidden inventory for objects that can go into the&#xA;specified inventory type. EX: check that there are mailbox&#xA;objects in the hidden inventory" Deprecated="False" filter="0" group="General" />
                                                                </TunableTuple>
                                                                <TunableTuple name="object_inventory_type" class="TunableTuple" display="Object Inventory Type" muid="5E7C5BC632F1AC43" Deprecated="False" filter="0" group="General">
                                                                    <TunableEnum type="InventoryType" name="inventory" class="TunableEnumEntry" default="UNDEFINED" display="Inventory" muid="77E2E64D436D9F2" dynamic_entries="objects-components-inventory_enums.InventoryType._elements" static_entries="objects-components-inventory_enums.InventoryType" description="Check the global Object inventory that has the specified type.&#xA;EX: check in the global fridge inventory that exists for all&#xA;fridges" Deprecated="False" filter="0" group="General" />
                                                                </TunableTuple>
                                                                <TunableTuple name="participant_inventory" class="TunableTuple" display="Participant Inventory" muid="D6D7C8241F9E27B7" Deprecated="False" filter="0" group="General">
                                                                    <TunableEnum type="ParticipantType" name="inventory" class="TunableEnumEntry" default="Actor" display="Inventory" muid="12CCFEFBA0A36D2E" static_entries="interactions.ParticipantType" description="The owner of the inventory" Deprecated="False" filter="0" group="General" />
                                                                </TunableTuple>
                                                            </TunableVariant>
                                                            <TunableTuple name="required_count" class="TunableThreshold" display="Required Count" muid="3CF1211B6DD90B45" description="The inventory must have a tunable threshold of objects that&#xA;pass the contents check test.&#xA;&#xA;EX: test is object definition of type pizza. required count is enabled&#xA;and has a threshold of &gt;= 5. That means this test will pass if you&#xA;have 5 or more pizzas in your inventory. To check if any objects&#xA;exist, use required count &gt;= 1" Deprecated="False" filter="0" group="General">
                                                                <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="88F46DAEF809019F" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                <Tunable type="int" name="value" class="Tunable" default="1" display="Value" muid="E88076C9ECB963A3" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                            </TunableTuple>
                                                            <TunableEnum type="TestHiddenInventories" name="test_hidden" class="TunableEnumEntry" default="ANY" display="Test Hidden" muid="1B377870CB88E770" static_entries="objects-object_tests.InventoryTest.TestHiddenInventories" description="Optionally restrict to only hidden or non-hidden inventories." Deprecated="False" filter="0" group="General" />
                                                        </TunableTuple>
                                                        <TunableTuple name="location" class="TunableLocationTest" display="Location" muid="CCC85A589BD2383E" description="Tests for object locations.&#xA;Outside: Check if an object is on the inside or outside (has a roof over&#xA;its head)&#xA;Natural ground: Checks the floor tiles where the object is to see if it &#xA;qualifies as natural ground" Deprecated="False" filter="0" group="General">
                                                            <TunableTuple name="location_tests" class="TunableTuple" display="Location Tests" muid="CD672098144C2A74" Deprecated="False" filter="0" group="General">
                                                                <TunableVariant type="None" name="has_terrain_tag" class="OptionalTunable" default="Don't_Test" display="Has Terrain Tag" muid="7B37D015A9F99E87" description="If checked, will verify the subject of the test is currently on&#xA;the tuned terrain tag." Deprecated="False" filter="0" group="General">
                                                                    <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="AA3A11F1CB820F39" />
                                                                    <TunableTuple name="enabled" class="TunableTuple" display="Enabled" muid="3ADC4A2C074E4EC7" description=",&#xA;A set of terrain tags required for this test to pass." Deprecated="False" filter="0" group="General">
                                                                        <Tunable type="bool" name="negate" class="Tunable" default="False" display="Negate" muid="82279460E08BE377" description="If checked, the test will be inverted. In other words,&#xA;the test will fail if at least one tag is detected at&#xA;this location." Deprecated="False" filter="0" group="General" />
                                                                        <TunableList name="terrain_tags" class="TunableEnumSet" display="Terrain Tags" muid="260129B2856E44CF" description="A set of terrain tags. Only one of these tags needs to be&#xA;present at this location. Although it is not tunable, there&#xA;is a threshold weight underneath which a terrain tag will&#xA;not appear to be present." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                            <TunableEnum type="TerrainTag" class="TunableEnumEntry" default="INVALID" muid="4B7ABE9123507084" static_entries="world-terrain_enums.TerrainTag" Deprecated="False" filter="0" group="General" />
                                                                        </TunableList>
                                                                        <Tunable type="bool" name="test_floor_tiles" class="Tunable" default="False" display="Test Floor Tiles" muid="39900A9DB0B1FEC8" description="If checked, floor tiles will be tested. Otherwise, &#xA;it'll only check the terrain and will ignore the &#xA;floor tiles on the terrain." Deprecated="False" filter="0" group="General" />
                                                                    </TunableTuple>
                                                                </TunableVariant>
                                                                <TunableVariant type="None" name="in_common_area" class="OptionalTunable" default="Don't_Test" display="In Common Area" muid="D2477B4AADD0EDFF" description="If checked, will verify the subject is in the common area&#xA;of an apartment.  If unchecked will verify the subject is not." Deprecated="False" filter="0" group="General">
                                                                    <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="4E68E6C253C81C44" />
                                                                    <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="8537A441E3AD4570" Deprecated="False" filter="0" group="General" />
                                                                </TunableVariant>
                                                                <TunableVariant type="None" name="is_fire_allowed" class="OptionalTunable" default="Don't_Test" display="Is Fire Allowed" muid="5484D949EDF6B9D3" description="If checked, will verify if fire is possible at the subject's position. &#xA;If unchecked, will pass if fire is not possible.&#xA;If not enabled, doesn't care either way." Deprecated="False" filter="0" group="General">
                                                                    <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="D0896DD8B2758428" />
                                                                    <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="2C3FE868E614AB83" Deprecated="False" filter="0" group="General" />
                                                                </TunableVariant>
                                                                <TunableVariant type="None" name="is_in_slot" class="OptionalTunable" default="Don't_Test" display="Is In Slot" muid="96382F6082D1A12" description="If enabled will test if the object is attacked/deattached to&#xA;any of possible tuned slots.&#xA;If you tune a slot type set the test will test if the object &#xA;is slotted or not slotted into into any of those types. " Deprecated="False" filter="0" group="General">
                                                                    <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="64D5EE62AA5AE8BE" />
                                                                    <TunableTuple name="enabled" class="TunableTuple" display="Enabled" muid="A056AE1EAA18E67" description="Test if an object is current slotted in any of a possible&#xA;list of slot types.&#xA;Empty slot type set is allowed for testing for slotted or&#xA;not slotted only." Deprecated="False" filter="0" group="General">
                                                                        <TunableVariant type="None" name="slot_test_type" class="TunableVariant" default="any_slot" display="Slot Test Type" muid="5371343F8986C157" description="Strategy to test the slots:&#xA;Any Slot - is the object in any slot&#xA;Surface Slot - is object is in a surface slot&#xA;Specific Slot - is the object in specific list of slots" Deprecated="False" filter="0" group="General">
                                                                            <TunableTuple name="any_slot" class="TunableSlotTestType" display="Any Slot" muid="8C6ED2A2FAD0C561" description="Singleton factory for testing if object is slotted." Deprecated="False" filter="0" group="General">
                                                                                <Tunable type="bool" name="require_slotted" class="Tunable" default="True" display="Require Slotted" muid="968E55EF1B104899" description="If checked, return success if the object is slotted&#xA;If unchecked, test the absense of slotting." Deprecated="False" filter="0" group="General" />
                                                                            </TunableTuple>
                                                                            <TunableTuple name="specific_slot" class="TunableSpecificSlotTest" display="Specific Slot" muid="5D5608A28A9FBCA3" description="Subclass of SlotTestType that can check against a specific&#xA;slot set." Deprecated="False" filter="0" group="General">
                                                                                <Tunable type="bool" name="require_slotted" class="Tunable" default="True" display="Require Slotted" muid="8F766564016AC94D" description="If checked, return success if the object is slotted&#xA;If unchecked, test the absense of slotting." Deprecated="False" filter="0" group="General" />
                                                                                <Tunable type="slot_type_set" name="specific_slot_set" class="TunableReference" display="Specific Slot Set" muid="1BF99E08A88E1288" description="Set of slots the object may be attached to." allow_none="False" Deprecated="False" filter="0" group="General" />
                                                                            </TunableTuple>
                                                                            <TunableTuple name="surface_slot" class="TunableSurfaceSlotTest" display="Surface Slot" muid="249F5B88A31C2C9F" description="Subclass of SlotTestType that checks that a slot has&#xA;is_surface set to true." Deprecated="False" filter="0" group="General">
                                                                                <Tunable type="bool" name="require_slotted" class="Tunable" default="True" display="Require Slotted" muid="BD2A0CF5FC40055A" description="If checked, return success if the object is slotted&#xA;If unchecked, test the absense of slotting." Deprecated="False" filter="0" group="General" />
                                                                            </TunableTuple>
                                                                        </TunableVariant>
                                                                    </TunableTuple>
                                                                </TunableVariant>
                                                                <TunableVariant type="None" name="is_inside_building" class="OptionalTunable" default="Don't_Test" display="Is Inside Building" muid="25C90E592ECC505D" description="If checked, will verify if the subject of the test is inside a&#xA;building. This uses a client function that checks if the block&#xA;the sim is mostly enclosed by walls or if not, if the adjoining&#xA;blocks are themselves enclosed. This should be used when we&#xA;want to test if a subject is inside a normally constructed &#xA;building. If we simply want to test whether the subject is &#xA;covered / has a roof over them, use is_outside. See comment on&#xA;is_outside for more details. If unchecked, will negate this &#xA;test." Deprecated="False" filter="0" group="General">
                                                                    <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="AF86BA795D927968" />
                                                                    <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="606DBF279E927778" Deprecated="False" filter="0" group="General" />
                                                                </TunableVariant>
                                                                <TunableVariant type="None" name="is_natural_ground" class="OptionalTunable" default="Don't_Test" display="Is Natural Ground" muid="C51B995A366BD442" description="If checked, will verify the subject of the test is on natural &#xA;ground (no floor tiles are under him).&#xA;Otherwise, will verify the subject of the test is not on &#xA;natural ground." Deprecated="False" filter="0" group="General">
                                                                    <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="E411D76D98C05814" />
                                                                    <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="EAE4716ECA35EB02" Deprecated="False" filter="0" group="General" />
                                                                </TunableVariant>
                                                                <TunableVariant type="None" name="is_on_active_lot" class="OptionalTunable" default="Don't_Test" display="Is On Active Lot" muid="5DAAACB08E3A5213" description="If disabled the test will not be used.&#xA;If enabled and checked, the test will pass if the subject is&#xA;on the active lot. (their center is within the lot bounds)&#xA;If enabled and not checked, the test will pass if the subject is &#xA;outside of the active lot.&#xA;&#xA;For example, Ask To Leave is tuned with this enabled and checked&#xA;for the TargetSim. You can only ask someone to leave if they&#xA;are actually on the active lot, but not if they are wandering&#xA;around in the open streets." Deprecated="False" filter="0" group="General">
                                                                    <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="AE3C82C4FD4E04B7" />
                                                                    <TunableTuple name="Is_or_is_not_on_active_lot" class="TunableTuple" display="Is Or Is Not On Active Lot" muid="B92D911C4039561E" Deprecated="False" filter="0" group="General">
                                                                        <Tunable type="bool" name="include_spawn_point" class="Tunable" default="False" display="Include Spawn Point" muid="4C359D542ABB2419" description="If set to true, we will consider the lot's spawn point as part of the active lot." Deprecated="False" filter="0" group="General" />
                                                                        <Tunable type="bool" name="is_or_is_not_on_active_lot" class="Tunable" default="True" display="Is Or Is Not On Active Lot" muid="59317EB8E1426C30" description="If checked then the test will pass if the subject is on&#xA;the active lot." Deprecated="False" filter="0" group="General" />
                                                                        <TunableVariant type="None" name="tolerance" class="TunableVariant" default="explicit" display="Tolerance" muid="AB675C51D6ED74C1" Deprecated="False" filter="0" group="General">
                                                                            <Tunable type="int" name="explicit" class="Tunable" default="0" display="Explicit" muid="D47443794780B738" description="The tolerance from the edge of the lot that the&#xA;location test will use in order to determine if the&#xA;test target is considered on lot or not." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                            <TunableTuple name="use_default_tolerance" class="UseDefaultOfflotToleranceFactory" display="Use Default Tolerance" muid="780DC9836610D820" description="Use the default tuned global offlot tolerance tuned&#xA;in objects.components.statistic_component.Default Off Lot." Deprecated="False" filter="0" group="General" />
                                                                        </TunableVariant>
                                                                    </TunableTuple>
                                                                </TunableVariant>
                                                                <TunableVariant type="None" name="is_on_level" class="OptionalTunable" default="Don't_Test" display="Is On Level" muid="D58A89663EB27C7" description="If enabled, we check the participant's current level against&#xA;the tuned threshold.  In the case of sims in pools, the effective&#xA;level will be that of the surface of the pool, not the bottom." Deprecated="False" filter="0" group="General">
                                                                    <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="78EBA549CC63A7FA" />
                                                                    <TunableTuple name="enabled" class="TunableThreshold" display="Enabled" muid="CD387DF04F31CD69" description="Value/comparison pair used to define a Threshold." Deprecated="False" filter="0" group="General">
                                                                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="EDE0F672E062560" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                        <Tunable type="int" name="value" class="Tunable" default="0" display="Value" muid="FE5172AB4D77409F" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                    </TunableTuple>
                                                                </TunableVariant>
                                                                <TunableVariant type="None" name="is_outside" class="OptionalTunable" default="Don't_Test" display="Is Outside" muid="21491721162177B6" description="PLEASE BE AWARE. If checked, will verify if the subject of the&#xA;test does not have a roof over their head. If unchecked, will &#xA;test if the subject has a roof over their head. If the &#xA;intention is to determine if a subject is in/not in a building, &#xA;this test is deprecated in favor of is_inside_building. If you &#xA;would like to test if a subject is inside a building, but also &#xA;need to test if they have a roof over their head, please use &#xA;both options." Deprecated="False" filter="0" group="General">
                                                                    <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="22F89ACFFEDC177D" />
                                                                    <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="86564509EEE627C4" Deprecated="False" filter="0" group="General" />
                                                                </TunableVariant>
                                                                <TunableVariant type="None" name="is_venue_type" class="OptionalTunable" default="Don't_Test" display="Is Venue Type" muid="3FCFE917B3E54794" description="If checked, will verify if the subject is at a venue of the&#xA;specified type." Deprecated="False" filter="0" group="General">
                                                                    <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="5DE003DC9B314825" />
                                                                    <TunableTuple name="enabled" class="TunableTuple" display="Enabled" muid="76F6E167E258922F" description="Venue type required for this test to pass." Deprecated="False" filter="0" group="General">
                                                                        <Tunable type="bool" name="negate" class="Tunable" default="False" display="Negate" muid="54E34CB412734BF2" description="If enabled, the test will return true if the subject&#xA;IS NOT at a venue of the specified type." Deprecated="False" filter="0" group="General" />
                                                                        <Tunable type="bool" name="use_source_venue" class="Tunable" default="False" display="Use Source Venue" muid="889409FF9C7F12F5" description="If enabled, the test will test the source venue instead of the active&#xA;venue.  For example, the Community Lot instead of the active Marketplace.&#xA;Testing the active venue is the default." Deprecated="False" filter="0" group="General" />
                                                                        <Tunable type="venue" name="venue_type" class="TunableReference" display="Venue Type" muid="A3A5EEEE073A3A45" description="Venue type to test against." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                                    </TunableTuple>
                                                                </TunableVariant>
                                                                <TunableVariant type="None" name="valid_surface_types" class="OptionalTunable" default="Don't_Test" display="Valid Surface Types" muid="1EE088866C021688" description="If enabled, we will test the surface type of the subject&#xA;against prohibited or required surface types." Deprecated="False" filter="0" group="General">
                                                                    <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="384F05B9BD983717" />
                                                                    <TunableTuple name="Test_Surface_Types" class="TunableWhiteBlackList" display="Test Surface Types" muid="3B624D7F07655BFD" description="Required and Prohibited Surface Types. " Deprecated="False" filter="0" group="General">
                                                                        <TunableVariant type="None" name="blacklist" class="OptionalTunable" default="nothing" display="Blacklist" muid="467517310EB96252" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is not in the blacklist. If no blacklist is&#xA;specified, no items are disallowed." Deprecated="False" filter="0" group="General">
                                                                            <Tunable name="nothing" class="TunableExistance" display="Nothing" muid="3DB2477DC3001751" />
                                                                            <TunableTuple name="specify" class="TunableBlacklist" display="Specify" muid="D7074807D1C2BC4A" description="A tunable blacklist." Deprecated="False" filter="0" group="General">
                                                                                <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="5A85E0805261D034" description="Blacklisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                                    <TunableEnum type="SurfaceType" class="TunableEnumEntry" default="SURFACETYPE_WORLD" muid="A43BDCF80256F141" static_entries="routing.SurfaceType" description="Surface Type the object is placed on." Deprecated="False" filter="0" group="General" invalid_entries="SURFACETYPE_UNKNOWN" />
                                                                                </TunableList>
                                                                                <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="76F0C5CF62A759D6" description="Tunable option for how many items must be in the blacklist&#xA;for the blacklist to fail when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                                    <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="6499777C0FF455D3" />
                                                                                    <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="7D2734BD0EE5186A" description="When testing a collection of items, the number of items in&#xA;that collection that are in the blacklist must pass this&#xA;threshold test for the blacklist to disallow them all." Deprecated="False" filter="0" group="General">
                                                                                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="5FDDC1BA0441CE3D" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                                        <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="D39804A81C193F35" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                                    </TunableTuple>
                                                                                </TunableVariant>
                                                                            </TunableTuple>
                                                                        </TunableVariant>
                                                                        <TunableVariant type="None" name="whitelist" class="OptionalTunable" default="everything" display="Whitelist" muid="7864C9121D5ABE66" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is in the whitelist. If no whitelist is&#xA;specified, all items are allowed." Deprecated="False" filter="0" group="General">
                                                                            <Tunable name="everything" class="TunableExistance" display="Everything" muid="2A5CECA711F010CF" />
                                                                            <TunableTuple name="specify" class="TunableWhitelist" display="Specify" muid="95BBB2FD96FCA960" description="A tunable whitelist." Deprecated="False" filter="0" group="General">
                                                                                <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="50756BA073DA6BB0" description="Tunable option for how many items must be in the whitelist&#xA;for the whitelist to pass when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                                    <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="52CA821DBF63D8EF" />
                                                                                    <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="B0936426071C0AA5" description="When testing a collection of items, the number of items in&#xA;that collection that are in the whitelist must pass this&#xA;threshold test for the whitelist to allow them all." Deprecated="False" filter="0" group="General">
                                                                                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="EEEAE6616045787E" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                                        <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="5C76C8A169FDAF65" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                                    </TunableTuple>
                                                                                </TunableVariant>
                                                                                <TunableList name="whitelist" class="TunableSet" display="Whitelist" muid="F065AEBB5FCA6678" description="Whitelisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                                    <TunableEnum type="SurfaceType" class="TunableEnumEntry" default="SURFACETYPE_WORLD" muid="B13541C243AE21D7" static_entries="routing.SurfaceType" description="Surface Type the object is placed on." Deprecated="False" filter="0" group="General" invalid_entries="SURFACETYPE_UNKNOWN" />
                                                                                </TunableList>
                                                                            </TunableTuple>
                                                                        </TunableVariant>
                                                                    </TunableTuple>
                                                                </TunableVariant>
                                                            </TunableTuple>
                                                        </TunableTuple>
                                                        <Tunable name="none" class="TunableExistance" display="None" muid="2B9DF07083B95024" />
                                                        <TunableTuple name="object_definition" class="TunableObjectMatchesDefinitionOrTagTest" display="Object Definition" muid="AD7E5E7DBFD3B797" description="Check to see if the specified object matches either a static definition or a set of tags" Deprecated="False" filter="0" group="General">
                                                            <TunableVariant type="None" name="item" class="TunableVariant" default="tagged_item" display="Item" muid="D6DEB35FD339BF7E" description="Whether to test for a specific item or item that has a set of tags" Deprecated="False" filter="0" group="General">
                                                                <TunableTuple name="actual_item" class="CraftActualItemFactory" display="Actual Item" muid="83C3D3614A5143E2" description="This option tests crafted item against a list of possible items" Deprecated="False" filter="0" group="General">
                                                                    <TunableList name="items_to_check" class="TunableList" display="Items To Check" muid="5EC2986A3D881BF4" Deprecated="False" filter="0" group="General">
                                                                        <Tunable type="object" class="TunableReference" muid="6977C3BC3D96E4CC" description="Object that qualifies for this check." allow_none="False" Deprecated="False" filter="0" group="General" />
                                                                    </TunableList>
                                                                </TunableTuple>
                                                                <TunableTuple name="tagged_item" class="CraftTaggedItemFactory" display="Tagged Item" muid="AFE29DF9E8AB26E7" description="This option tests crafted item's tags against a list of possible tags" Deprecated="False" filter="0" group="General">
                                                                    <TunableList name="tag_set" class="TunableSet" display="Tag Set" muid="D09B4B2892F7665D" description="The tag of objects we want to test ownership of" Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                        <TunableEnum type="Tag" class="TunableEnumEntry" default="INVALID" muid="E4E02F87875E09B4" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" description="What tag to test for" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                                    </TunableList>
                                                                    <TunableEnum type="TagTestType" name="test_type" class="TunableEnumEntry" default="CONTAINS_ANY_TAG_IN_SET" display="Test Type" muid="E25CC6059D76AA76" static_entries="objects-object_tests.TagTestType" description="How to test the tags in the tag set against the objects on the lot." Deprecated="False" filter="0" group="General" />
                                                                </TunableTuple>
                                                            </TunableVariant>
                                                            <TunableVariant type="None" name="tooltip" class="OptionalTunable" default="disabled" display="Tooltip" muid="2E2F00D4D5E53157" description="Reason of failure." Deprecated="False" filter="0" group="General">
                                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="2697C21170BC0A7C" />
                                                                <Tunable type="int" name="enabled" class="TunableLocalizedString" default="0x0" display="Enabled" muid="CD684CACB9F64FB9" description="Reason of failure." Deprecated="False" filter="0" group="General" />
                                                            </TunableVariant>
                                                        </TunableTuple>
                                                        <TunableTuple name="object_preference" class="TunableObjectScoringPreferenceTest" display="Object Preference" muid="FA2C67B6CC534810" description="A tunable factory that checks whether or not the target object of an affordance&#xA;is the Sim's preferred scoring object." Deprecated="False" filter="0" group="General">
                                                            <TunableVariant type="None" name="any_sim" class="OptionalTunable" default="disabled" display="Any Sim" muid="6427666DCB8BFEF1" description="If enabled, will return whether the object has any &quot;Use Only&quot; preference&#xA;set for the specified tag.  Will not be sim specific, and thus only&#xA;works for &quot;use only&quot; preference type.  Does NOT rely on interaction&#xA;to determine preference type.&#xA;&#xA;Value is the tag to test for." Deprecated="False" filter="0" group="General">
                                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="E6A998BE3A30D86C" />
                                                                <TunableEnum type="ObjectPreferenceTag" name="enabled" class="TunableEnumEntry" default="INVALID" display="Enabled" muid="57E2C4D08D38C4B7" dynamic_entries="autonomy-autonomy_preference.ObjectPreferenceTag._elements" static_entries="autonomy-autonomy_preference.ObjectPreferenceTag" description="Tag to determine which preference type to use." Deprecated="False" filter="0" group="General" invalid_entries="INVALID" />
                                                            </TunableVariant>
                                                            <Tunable type="bool" name="require" class="Tunable" default="True" display="Require" muid="DCA28B1EE2F182EA" description="The Sim's preference is required to be True or required to be False." Deprecated="False" filter="0" group="General" />
                                                        </TunableTuple>
                                                        <TunableTuple name="season" class="TunableSeasonTest" display="Season" muid="B1A412DE96734A98" description="SeasonTest will test if the current simulation time falls within the&#xA;specified test conditions." Deprecated="False" filter="0" group="General">
                                                            <Tunable type="bool" name="requires_seasons_pack" class="Tunable" default="True" display="Requires Seasons Pack" muid="F73E5546CE0B94CE" description="If checked, this test will require that the Seasons pack be &#xA;installed in order for the seasons test to pass.  If unchecked, &#xA;this test will automatically pass." Deprecated="False" filter="0" group="General" />
                                                            <TunableList name="seasons" class="TunableEnumSet" display="Seasons" muid="B80BA0B2006E932A" min="1" description="Season(s) that we must be in to pass the test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                <TunableEnum type="SeasonType" class="TunableEnumEntry" default="SUMMER" muid="DFBC84685C9BAECF" static_entries="seasons-seasons_enums.SeasonType" Deprecated="False" filter="0" group="General" />
                                                            </TunableList>
                                                            <TunableVariant type="None" name="time_of_season" class="OptionalTunable" default="disabled" display="Time Of Season" muid="BE1560B1C71B5288" description="Portion(s) of season(s) that we must be in to pass the test." Deprecated="False" filter="0" group="General">
                                                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="161792625C017372" />
                                                                <TunableList name="enabled" class="TunableEnumSet" display="Enabled" muid="E0F8E4FD8D24A148" min="1" description="Portion(s) of season(s) that we must be in to pass the test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                    <TunableEnum type="SeasonSegment" class="TunableEnumEntry" default="EARLY" muid="988CEACA0F353F24" static_entries="seasons-seasons_enums.SeasonSegment" Deprecated="False" filter="0" group="General" />
                                                                </TunableList>
                                                            </TunableVariant>
                                                        </TunableTuple>
                                                        <TunableTuple name="state" class="TunableStateTest" display="State" muid="988F251EE0DA1F26" description="Gate availability by object state.  By default, the test will use the&#xA;state's linked stat as a fallback in case the target doesn't have the&#xA;state involved." Deprecated="False" filter="0" group="General">
                                                            <TunableVariant type="None" name="fallback_behavior" class="TunableVariant" default="always_fail" display="Fallback Behavior" muid="36E8798A3F639BF9" description="What to do if the given object doesn't have the state in question." Deprecated="False" filter="0" group="General">
                                                                <Tunable name="always_fail" class="TunableExistance" display="Always Fail" muid="DBED8E3B8E288E4C" />
                                                                <Tunable name="always_pass" class="TunableExistance" display="Always Pass" muid="692F35DDA901291B" />
                                                            </TunableVariant>
                                                            <TunableEnum type="Operator" name="operator" class="TunableOperator" default="EQUAL" display="Operator" muid="E665A6A734CCCD97" static_entries="sims4-math.Operator" description="The comparison to use." Deprecated="False" filter="0" group="General" />
                                                            <Tunable type="object_state" name="value" class="TunableReference" display="Value" muid="D51DF10735B6AD0F" description="The value to compare to." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="ObjectStateValue" />
                                                        </TunableTuple>
                                                        <TunableTuple name="statistic" class="TunableStatThresholdTest" display="Statistic" muid="5D16583B004F6BBA" description="A test that checks whether or not a statistic is at a certain threshold for&#xA;a given participant. It can also test whether or not the participant has the&#xA;statistic explicitly added on them." Deprecated="False" filter="0" group="General">
                                                            <Tunable type="bool" name="must_have_stat" class="Tunable" default="False" display="Must Have Stat" muid="2B468097A7DAF18E" description="Setting this to True (checked) will ensure that this test only&#xA;passes if the tested Sim actually has the statistic referenced. If&#xA;left False (unchecked), this test will evaluate as if the Sim had&#xA;the statistic at the value of 0" Deprecated="False" filter="0" group="General" />
                                                            <TunableVariant type="None" name="score_to_use" class="TunableVariant" default="user_value" display="Score To Use" muid="87F88F7423C4E912" description="Depending on the choice, this decides what value to use for the &#xA;threshold comparison." Deprecated="False" filter="0" group="General">
                                                                <TunableTuple name="points" class="Tunable_PointsValue" display="Points" muid="8BAC7637E5FAC13A" description="Use the raw points for the comparison in the test." Deprecated="False" filter="0" group="General" />
                                                                <TunableTuple name="rank" class="Tunable_RankValue" display="Rank" muid="7CE4E8BB23797094" description="Use the rank value for the comparison in the test." Deprecated="False" filter="0" group="General" />
                                                                <TunableTuple name="user_value" class="Tunable_UserValue" display="User Value" muid="B1E8C58BC59B2C0" description="Use the user value for the comparison in the test." Deprecated="False" filter="0" group="General">
                                                                    <Tunable type="bool" name="highest_level_reached_instead" class="Tunable" default="False" display="Highest Level Reached Instead" muid="22F00D13BBAA9E07" description="If checked this will test against the highest level reached. This&#xA;currently only works with Ranked Statistics. Other statistics do&#xA;not have a notion of highest level reached. If we are using&#xA;something that doesn't support highest level reached it will &#xA;test against the current level instead." Deprecated="False" filter="0" group="General" />
                                                                </TunableTuple>
                                                            </TunableVariant>
                                                            <Tunable type="statistic" name="stat" class="TunableReference" display="Stat" muid="1023F98264D0D12B" description="The stat we are operating on." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                            <TunableVariant type="None" name="threshold" class="TunableVariant" default="value_threshold" display="Threshold" muid="CEA5964C132A737A" description="The value or state threshold to test against." Deprecated="False" filter="0" group="General">
                                                                <TunableTuple name="state_value_threshold" class="TunableObjectStateValueThreshold" display="State Value Threshold" muid="67DEA5C7EA9574D3" description="Value/comparison pair used to define a Threshold." Deprecated="False" filter="0" group="General">
                                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="466D745382145B80" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                    <Tunable type="object_state" name="value" class="TunableReference" display="Value" muid="E3B31A9F4CCD71BE" description="The state threshold for this test." allow_none="False" Deprecated="False" filter="0" group="General" restrict="ObjectStateValue" />
                                                                </TunableTuple>
                                                                <TunableTuple name="value_threshold" class="TunableThreshold" display="Value Threshold" muid="207E29D4EE983FEF" description="The threshold to control availability based on the statistic's&#xA;value." Deprecated="False" filter="0" group="General">
                                                                    <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="7D1A5FBB92CE2508" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                    <Tunable type="float" name="value" class="Tunable" default="0" display="Value" muid="CA6638C805C28A" description="The value of a threshold." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                </TunableTuple>
                                                            </TunableVariant>
                                                            <TunableEnum type="ParticipantType" name="who" class="TunableEnumEntry" default="Actor" display="Who" muid="7A35CEC53C4F07B" static_entries="interactions.ParticipantType" description="Who or what to apply this test to." Deprecated="False" filter="0" group="General" />
                                                        </TunableTuple>
                                                        <TunableTuple name="street_civic_policy_test" class="TunableStreetCivicPolicyTest" display="Street Civic Policy Test" muid="B410278D248E4CD6" description="Test the state of the selected Street's Civic Policy Provider." Deprecated="False" filter="0" group="General">
                                                            <TunableList name="civic_policy_tests" class="TunableList" display="Civic Policy Tests" muid="ACD357C7601D77CB" description="The tests we wish to run on the civic policies in question, run in&#xA;order.  AND operation, all must pass, first to fail stops tests." Deprecated="False" filter="0" group="General">
                                                                <TunableVariant type="None" class="TunableVariant" default="voting_open" muid="11934A049845359C" description="Individual tests run on Civic Policy Provider." Deprecated="False" filter="0" group="General">
                                                                    <TunableTuple name="available" class="TunableBaseCivicPolicyTestAvailable" display="Available" muid="1EBB45CCD088CB6F" description="Test available policies. Available policies include everything tuned." Deprecated="False" filter="0" group="General">
                                                                        <TunableTuple name="white_black_list" class="TunableWhiteBlackList" display="White Black List" muid="3739F527F61BAAF1" description="The civic policies must pass the whitelist and blacklist&#xA;to pass the test." Deprecated="False" filter="0" group="General">
                                                                            <TunableVariant type="None" name="blacklist" class="OptionalTunable" default="nothing" display="Blacklist" muid="E17E44A9A8F25B2A" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is not in the blacklist. If no blacklist is&#xA;specified, no items are disallowed." Deprecated="False" filter="0" group="General">
                                                                                <Tunable name="nothing" class="TunableExistance" display="Nothing" muid="B6FE838FC87D8A97" />
                                                                                <TunableTuple name="specify" class="TunableBlacklist" display="Specify" muid="8979E144B0DD1C3E" description="A tunable blacklist." Deprecated="False" filter="0" group="General">
                                                                                    <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="F16E1CDA8995610" description="Blacklisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                                        <Tunable type="snippet" class="TunableReference" muid="702D50A7C2E989AB" description="Allowed and disallowed civic policies." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="BaseCivicPolicy" />
                                                                                    </TunableList>
                                                                                    <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="3368BF304C92673A" description="Tunable option for how many items must be in the blacklist&#xA;for the blacklist to fail when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                                        <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="3467FAF37D7C4D2B" />
                                                                                        <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="413792B469C612F5" description="When testing a collection of items, the number of items in&#xA;that collection that are in the blacklist must pass this&#xA;threshold test for the blacklist to disallow them all." Deprecated="False" filter="0" group="General">
                                                                                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="A72386A667816A8F" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                                            <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="2078AD8C0AFC4F20" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                                        </TunableTuple>
                                                                                    </TunableVariant>
                                                                                </TunableTuple>
                                                                            </TunableVariant>
                                                                            <TunableVariant type="None" name="whitelist" class="OptionalTunable" default="everything" display="Whitelist" muid="9A133398B93D4E51" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is in the whitelist. If no whitelist is&#xA;specified, all items are allowed." Deprecated="False" filter="0" group="General">
                                                                                <Tunable name="everything" class="TunableExistance" display="Everything" muid="721A54B81224EC1F" />
                                                                                <TunableTuple name="specify" class="TunableWhitelist" display="Specify" muid="D15D0936964A66C9" description="A tunable whitelist." Deprecated="False" filter="0" group="General">
                                                                                    <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="DDF951503DF28FFD" description="Tunable option for how many items must be in the whitelist&#xA;for the whitelist to pass when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                                        <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="5EF5C77AAE208165" />
                                                                                        <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="26DA0A66555AD0B9" description="When testing a collection of items, the number of items in&#xA;that collection that are in the whitelist must pass this&#xA;threshold test for the whitelist to allow them all." Deprecated="False" filter="0" group="General">
                                                                                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="1378AF2E95BE73C0" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                                            <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="1B2132D78F10D6C5" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                                        </TunableTuple>
                                                                                    </TunableVariant>
                                                                                    <TunableList name="whitelist" class="TunableSet" display="Whitelist" muid="B068E1E4E86DFC8B" description="Whitelisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                                        <Tunable type="snippet" class="TunableReference" muid="8ADA347DBB102BC5" description="Allowed and disallowed civic policies." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="BaseCivicPolicy" />
                                                                                    </TunableList>
                                                                                </TunableTuple>
                                                                            </TunableVariant>
                                                                        </TunableTuple>
                                                                    </TunableTuple>
                                                                    <TunableTuple name="balloted" class="TunableBaseCivicPolicyTestBalloted" display="Balloted" muid="F807E7932167D89A" description="Test balloted policies.  Policies being considered by the next/current vote are&#xA;balloted." Deprecated="False" filter="0" group="General">
                                                                        <TunableTuple name="white_black_list" class="TunableWhiteBlackList" display="White Black List" muid="A07D7A1F68C152B3" description="The civic policies must pass the whitelist and blacklist&#xA;to pass the test." Deprecated="False" filter="0" group="General">
                                                                            <TunableVariant type="None" name="blacklist" class="OptionalTunable" default="nothing" display="Blacklist" muid="DD1C446A2E4CA21D" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is not in the blacklist. If no blacklist is&#xA;specified, no items are disallowed." Deprecated="False" filter="0" group="General">
                                                                                <Tunable name="nothing" class="TunableExistance" display="Nothing" muid="97A16712E397EDB2" />
                                                                                <TunableTuple name="specify" class="TunableBlacklist" display="Specify" muid="F1853B84F8D8F11E" description="A tunable blacklist." Deprecated="False" filter="0" group="General">
                                                                                    <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="C37B7251B0443C4C" description="Blacklisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                                        <Tunable type="snippet" class="TunableReference" muid="5FFD8A786ED3F550" description="Allowed and disallowed civic policies." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="BaseCivicPolicy" />
                                                                                    </TunableList>
                                                                                    <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="5C019E6C54C0DB6E" description="Tunable option for how many items must be in the blacklist&#xA;for the blacklist to fail when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                                        <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="D2FCE3CA6A5F2CC" />
                                                                                        <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="203E49BEA58A7486" description="When testing a collection of items, the number of items in&#xA;that collection that are in the blacklist must pass this&#xA;threshold test for the blacklist to disallow them all." Deprecated="False" filter="0" group="General">
                                                                                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="60F216660D205456" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                                            <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="F0D6D9F8CF366814" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                                        </TunableTuple>
                                                                                    </TunableVariant>
                                                                                </TunableTuple>
                                                                            </TunableVariant>
                                                                            <TunableVariant type="None" name="whitelist" class="OptionalTunable" default="everything" display="Whitelist" muid="8F48C836397309D7" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is in the whitelist. If no whitelist is&#xA;specified, all items are allowed." Deprecated="False" filter="0" group="General">
                                                                                <Tunable name="everything" class="TunableExistance" display="Everything" muid="BDECD5573058DBFA" />
                                                                                <TunableTuple name="specify" class="TunableWhitelist" display="Specify" muid="70C69D82779B430B" description="A tunable whitelist." Deprecated="False" filter="0" group="General">
                                                                                    <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="8EB9BDDF6FF699CD" description="Tunable option for how many items must be in the whitelist&#xA;for the whitelist to pass when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                                        <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="7D11AF726CC04BD6" />
                                                                                        <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="BD50A80CF5CB9F14" description="When testing a collection of items, the number of items in&#xA;that collection that are in the whitelist must pass this&#xA;threshold test for the whitelist to allow them all." Deprecated="False" filter="0" group="General">
                                                                                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="C40D299D130144FF" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                                            <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="13ADBD9221555A01" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                                        </TunableTuple>
                                                                                    </TunableVariant>
                                                                                    <TunableList name="whitelist" class="TunableSet" display="Whitelist" muid="AD1B7CDBB191DE81" description="Whitelisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                                        <Tunable type="snippet" class="TunableReference" muid="3C4F9EFEEEEF90BD" description="Allowed and disallowed civic policies." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="BaseCivicPolicy" />
                                                                                    </TunableList>
                                                                                </TunableTuple>
                                                                            </TunableVariant>
                                                                        </TunableTuple>
                                                                    </TunableTuple>
                                                                    <TunableTuple name="dormant" class="TunableBaseCivicPolicyTestDormant" display="Dormant" muid="6D8623ADEA24F21C" description="Test dormant policies. Dormant policies are not enacted and not balloted." Deprecated="False" filter="0" group="General">
                                                                        <TunableTuple name="white_black_list" class="TunableWhiteBlackList" display="White Black List" muid="8297AED8CD33761B" description="The civic policies must pass the whitelist and blacklist&#xA;to pass the test." Deprecated="False" filter="0" group="General">
                                                                            <TunableVariant type="None" name="blacklist" class="OptionalTunable" default="nothing" display="Blacklist" muid="772ACE80B7AE64AA" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is not in the blacklist. If no blacklist is&#xA;specified, no items are disallowed." Deprecated="False" filter="0" group="General">
                                                                                <Tunable name="nothing" class="TunableExistance" display="Nothing" muid="2CC773AC859D8E78" />
                                                                                <TunableTuple name="specify" class="TunableBlacklist" display="Specify" muid="14194A536A6D5C63" description="A tunable blacklist." Deprecated="False" filter="0" group="General">
                                                                                    <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="8DE65ECC01584C4E" description="Blacklisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                                        <Tunable type="snippet" class="TunableReference" muid="36952821A998A747" description="Allowed and disallowed civic policies." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="BaseCivicPolicy" />
                                                                                    </TunableList>
                                                                                    <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="A8ABD5324134F8F0" description="Tunable option for how many items must be in the blacklist&#xA;for the blacklist to fail when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                                        <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="6BF67A498453196B" />
                                                                                        <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="9D12168F71D5C644" description="When testing a collection of items, the number of items in&#xA;that collection that are in the blacklist must pass this&#xA;threshold test for the blacklist to disallow them all." Deprecated="False" filter="0" group="General">
                                                                                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="ADDD412FFE75C330" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                                            <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="5AC7493E0B081B19" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                                        </TunableTuple>
                                                                                    </TunableVariant>
                                                                                </TunableTuple>
                                                                            </TunableVariant>
                                                                            <TunableVariant type="None" name="whitelist" class="OptionalTunable" default="everything" display="Whitelist" muid="86493F854F0938E" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is in the whitelist. If no whitelist is&#xA;specified, all items are allowed." Deprecated="False" filter="0" group="General">
                                                                                <Tunable name="everything" class="TunableExistance" display="Everything" muid="57BBDEC86AFFCC56" />
                                                                                <TunableTuple name="specify" class="TunableWhitelist" display="Specify" muid="37C8384906F4E110" description="A tunable whitelist." Deprecated="False" filter="0" group="General">
                                                                                    <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="90813CE33BA5F1E0" description="Tunable option for how many items must be in the whitelist&#xA;for the whitelist to pass when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                                        <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="296C3C44927923A2" />
                                                                                        <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="4CC93D7CA63E6A4F" description="When testing a collection of items, the number of items in&#xA;that collection that are in the whitelist must pass this&#xA;threshold test for the whitelist to allow them all." Deprecated="False" filter="0" group="General">
                                                                                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="D75F045AFC05E842" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                                            <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="720D6EC06B8F7C9C" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                                        </TunableTuple>
                                                                                    </TunableVariant>
                                                                                    <TunableList name="whitelist" class="TunableSet" display="Whitelist" muid="7994C61434859BF" description="Whitelisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                                        <Tunable type="snippet" class="TunableReference" muid="E113F494D9472DB0" description="Allowed and disallowed civic policies." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="BaseCivicPolicy" />
                                                                                    </TunableList>
                                                                                </TunableTuple>
                                                                            </TunableVariant>
                                                                        </TunableTuple>
                                                                    </TunableTuple>
                                                                    <TunableTuple name="enacted" class="TunableBaseCivicPolicyTestEnacted" display="Enacted" muid="701B5A885EBFBE15" description="Test enacted policies." Deprecated="False" filter="0" group="General">
                                                                        <TunableTuple name="white_black_list" class="TunableWhiteBlackList" display="White Black List" muid="51826E79D0A47B37" description="The civic policies must pass the whitelist and blacklist&#xA;to pass the test." Deprecated="False" filter="0" group="General">
                                                                            <TunableVariant type="None" name="blacklist" class="OptionalTunable" default="nothing" display="Blacklist" muid="32D6141AD8A9C47" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is not in the blacklist. If no blacklist is&#xA;specified, no items are disallowed." Deprecated="False" filter="0" group="General">
                                                                                <Tunable name="nothing" class="TunableExistance" display="Nothing" muid="78E3E5A7BAA73E11" />
                                                                                <TunableTuple name="specify" class="TunableBlacklist" display="Specify" muid="13A1ECB770440DE0" description="A tunable blacklist." Deprecated="False" filter="0" group="General">
                                                                                    <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="60E284090715AFC4" description="Blacklisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                                        <Tunable type="snippet" class="TunableReference" muid="211ADAC67A8E2074" description="Allowed and disallowed civic policies." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="BaseCivicPolicy" />
                                                                                    </TunableList>
                                                                                    <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="D173C9AA0418D0A5" description="Tunable option for how many items must be in the blacklist&#xA;for the blacklist to fail when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                                        <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="ACD4A1651F1D7109" />
                                                                                        <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="7F26CB9B7BDD2D88" description="When testing a collection of items, the number of items in&#xA;that collection that are in the blacklist must pass this&#xA;threshold test for the blacklist to disallow them all." Deprecated="False" filter="0" group="General">
                                                                                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="5909F9F24FBF8255" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                                            <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="F57B09A25E15D99" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                                        </TunableTuple>
                                                                                    </TunableVariant>
                                                                                </TunableTuple>
                                                                            </TunableVariant>
                                                                            <TunableVariant type="None" name="whitelist" class="OptionalTunable" default="everything" display="Whitelist" muid="D7F623BEAAF06DF2" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is in the whitelist. If no whitelist is&#xA;specified, all items are allowed." Deprecated="False" filter="0" group="General">
                                                                                <Tunable name="everything" class="TunableExistance" display="Everything" muid="2F3FFDDE92D11591" />
                                                                                <TunableTuple name="specify" class="TunableWhitelist" display="Specify" muid="DD55DB3DEAE2BAEA" description="A tunable whitelist." Deprecated="False" filter="0" group="General">
                                                                                    <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="DEA3D72759F8A572" description="Tunable option for how many items must be in the whitelist&#xA;for the whitelist to pass when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                                        <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="DD63E9BB95E4693B" />
                                                                                        <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="94C39139E9F4520F" description="When testing a collection of items, the number of items in&#xA;that collection that are in the whitelist must pass this&#xA;threshold test for the whitelist to allow them all." Deprecated="False" filter="0" group="General">
                                                                                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="F0AF5C147F2BC1D1" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                                            <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="9F12E6F232464E47" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                                        </TunableTuple>
                                                                                    </TunableVariant>
                                                                                    <TunableList name="whitelist" class="TunableSet" display="Whitelist" muid="1CB4D120E7342F49" description="Whitelisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                                        <Tunable type="snippet" class="TunableReference" muid="FEDDD01D99E06FC" description="Allowed and disallowed civic policies." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="BaseCivicPolicy" />
                                                                                    </TunableList>
                                                                                </TunableTuple>
                                                                            </TunableVariant>
                                                                        </TunableTuple>
                                                                    </TunableTuple>
                                                                    <TunableTuple name="repealable" class="TunableBaseCivicPolicyTestRepealable" display="Repealable" muid="AEC2133FAD738639" description="Test up for repeal policies. Up for Repeal policies have been specifically marked&#xA;as such and will (if the vote/petition threshold is reached) be repealed&#xA;as part of closing the next vote." Deprecated="False" filter="0" group="General">
                                                                        <TunableTuple name="white_black_list" class="TunableWhiteBlackList" display="White Black List" muid="94D1091AACCDAE0A" description="The civic policies must pass the whitelist and blacklist&#xA;to pass the test." Deprecated="False" filter="0" group="General">
                                                                            <TunableVariant type="None" name="blacklist" class="OptionalTunable" default="nothing" display="Blacklist" muid="CB7CFD93EBDD3BD3" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is not in the blacklist. If no blacklist is&#xA;specified, no items are disallowed." Deprecated="False" filter="0" group="General">
                                                                                <Tunable name="nothing" class="TunableExistance" display="Nothing" muid="328E836DEA9E607" />
                                                                                <TunableTuple name="specify" class="TunableBlacklist" display="Specify" muid="E3C60ACAF5067121" description="A tunable blacklist." Deprecated="False" filter="0" group="General">
                                                                                    <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="7042E351F59B8956" description="Blacklisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                                        <Tunable type="snippet" class="TunableReference" muid="E4A8DA416A2382E0" description="Allowed and disallowed civic policies." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="BaseCivicPolicy" />
                                                                                    </TunableList>
                                                                                    <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="B1F30CAE1AFA400F" description="Tunable option for how many items must be in the blacklist&#xA;for the blacklist to fail when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                                        <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="816766289859EDBC" />
                                                                                        <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="9BA7E20D02D22688" description="When testing a collection of items, the number of items in&#xA;that collection that are in the blacklist must pass this&#xA;threshold test for the blacklist to disallow them all." Deprecated="False" filter="0" group="General">
                                                                                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="7F2B690FD361549E" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                                            <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="2E5C627DC66106C8" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                                        </TunableTuple>
                                                                                    </TunableVariant>
                                                                                </TunableTuple>
                                                                            </TunableVariant>
                                                                            <TunableVariant type="None" name="whitelist" class="OptionalTunable" default="everything" display="Whitelist" muid="6A88051CA6E515A3" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is in the whitelist. If no whitelist is&#xA;specified, all items are allowed." Deprecated="False" filter="0" group="General">
                                                                                <Tunable name="everything" class="TunableExistance" display="Everything" muid="A9155029794DA453" />
                                                                                <TunableTuple name="specify" class="TunableWhitelist" display="Specify" muid="DE294749B862F944" description="A tunable whitelist." Deprecated="False" filter="0" group="General">
                                                                                    <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="A8FA5262B95B9947" description="Tunable option for how many items must be in the whitelist&#xA;for the whitelist to pass when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                                                        <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="4122B9CA753280D8" />
                                                                                        <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="EB97A2A07A560497" description="When testing a collection of items, the number of items in&#xA;that collection that are in the whitelist must pass this&#xA;threshold test for the whitelist to allow them all." Deprecated="False" filter="0" group="General">
                                                                                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="FE99F1950CBF8465" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                                            <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="BAC6BFBBDDF2FB08" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                                        </TunableTuple>
                                                                                    </TunableVariant>
                                                                                    <TunableList name="whitelist" class="TunableSet" display="Whitelist" muid="7B7EE75D98E6EDA2" description="Whitelisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                                                        <Tunable type="snippet" class="TunableReference" muid="DFA148AEFAD856F9" description="Allowed and disallowed civic policies." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="BaseCivicPolicy" />
                                                                                    </TunableList>
                                                                                </TunableTuple>
                                                                            </TunableVariant>
                                                                        </TunableTuple>
                                                                    </TunableTuple>
                                                                    <TunableTuple name="voting_open" class="TunableBaseCivicPolicyTestVotingOpen" display="Voting Open" muid="C28A6CCA2322FC53" description="If checked, will verify that voting is currently active." Deprecated="False" filter="0" group="General">
                                                                        <Tunable type="bool" name="negate" class="Tunable" default="False" display="Negate" muid="ECDD3CDB9856420" description="If checked then this test will return True when not active." Deprecated="False" filter="0" group="General" />
                                                                    </TunableTuple>
                                                                    <TunableTuple name="voting_time_until_change" class="TunableBaseCivicPolicyTestVotingTimeUntilChange" display="Voting Time Until Change" muid="78404481C5B9F727" description="If checked, will check the time remaining before the next voting open status change." Deprecated="False" filter="0" group="General">
                                                                        <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="A082830E066B7B4A" description="The amount of time relative to the next voting state change to test." Deprecated="False" filter="0" group="General">
                                                                            <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="FF6E8781586CF937" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                                            <TunableTuple name="value" class="TunableTimeSpan" display="Value" muid="E35AEB2ECCC0C49D" description="Duration before the next change." Deprecated="False" filter="0" group="General">
                                                                                <Tunable type="int" name="days" class="TunableRange" default="0" display="Days" muid="18D07F3AD21A1EF9" min="0" max="None" description="Number of days" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                                <Tunable type="int" name="hours" class="TunableRange" default="1" display="Hours" muid="9B35915C1127C108" min="0" max="23" description="Number of hours" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                                <Tunable type="int" name="minutes" class="TunableRange" default="0" display="Minutes" muid="EEEA4170211579" min="0" max="59" description="Number of minutes" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                                            </TunableTuple>
                                                                        </TunableTuple>
                                                                    </TunableTuple>
                                                                </TunableVariant>
                                                            </TunableList>
                                                            <TunableVariant type="None" name="street" class="TunableVariant" default="literal" display="Street" muid="8C4FA72A89B1E723" description="Select what street to test." Deprecated="False" filter="0" group="General">
                                                                <Tunable type="street" name="literal" class="TunableReference" display="Literal" muid="1CE79B262101D460" description="Identify a specific Street." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                                                <TunableTuple name="via_street_participant" class="TunableStreetParticipant" display="Via Street Participant" muid="ABE54927D11EB945" description="Get the street participant." Deprecated="False" filter="0" group="General" />
                                                                <TunableVariant type="None" name="via_zone_source" class="TunableVariant" default="use_current_zone" display="Via Zone Source" muid="2139A5466E71751D" description="Select the street to use by specifying a Zone Source." Deprecated="False" filter="0" group="General">
                                                                    <TunableTuple name="use_current_zone" class="TunableActiveZone" display="Use Current Zone" muid="82F49D7BB0A9941C" description="Get the active zone." Deprecated="False" filter="0" group="General" />
                                                                    <TunableTuple name="use_participant_home_zone" class="TunableParticipantHomeZone" display="Use Participant Home Zone" muid="EEB4A2A46DDC30D" description="Get a participant's home zone. Can be None if they don't have one." Deprecated="False" filter="0" group="General">
                                                                        <TunableEnum type="ParticipantTypeSingleSim" name="participant" class="TunableEnumEntry" default="Actor" display="Participant" muid="97AC331875DDEB7C" static_entries="interactions.ParticipantTypeSingleSim" description="Test against the participant's home zone. Townies' home zone will&#xA;be None." Deprecated="False" filter="0" group="General" />
                                                                    </TunableTuple>
                                                                    <TunableTuple name="use_pick_info" class="TunablePickInfoZone" display="Use Pick Info" muid="E3DEF967A08154DC" description="Get the zone of the lot the user clicked on." Deprecated="False" filter="0" group="General" />
                                                                    <TunableTuple name="use_picked_zone_ids" class="TunablePickedZoneIds" display="Use Picked Zone Ids" muid="A27FFBE28DF7F85B" description="Get the zone from the interaction's picked_zone_ids participant. Usually&#xA;comes from a picker." Deprecated="False" filter="0" group="General" />
                                                                </TunableVariant>
                                                            </TunableVariant>
                                                        </TunableTuple>
                                                    </TunableVariant>
                                                </TunableList>
                                            </TunableList>
                                            <Tunable type="int" name="weight" class="TunableRange" default="1" display="Weight" muid="F27A9480C708029A" min="1" max="None" description="Weight to use." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                        </TunableTuple>
                                    </TunableList>
                                </TunableTuple>
                            </TunableList>
                        </TunableTuple>
                    </TunableTuple>
                    <TunableTuple name="start_situation" class="StartSituation" display="Start Situation" muid="F07DA9DA40743951" description="Start a situation." Deprecated="False" filter="0" group="General">
                        <Tunable type="situation" name="situation" class="TunableReference" display="Situation" muid="12FFB82BBF9FC27" description="The situation to start." allow_none="False" Deprecated="False" filter="0" group="General" />
                    </TunableTuple>
                </TunableVariant>
                <TunableTuple name="time" class="TunableTimeOfDay" display="Time" muid="BBE18060650DF1F8" description="The time of day this event will occur." Deprecated="False" filter="0" group="General">
                    <Tunable type="int" name="hour" class="TunableRange" default="12" display="Hour" muid="C9AE58F29B5EAD3A" min="0" max="23" description="Hour of the day" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                    <Tunable type="int" name="minute" class="TunableRange" default="0" display="Minute" muid="2AB61AF05C4144D0" min="0" max="59" description="Minute of Hour" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                </TunableTuple>
            </TunableTuple>
        </TunableList>

        <TunableVariant type="None" name="holiday_buff_reason" class="OptionalTunable" default="disabled" display="Holiday Buff Reason" muid="B9B114FC1E0DC6A7" description="If set, specify a reason why the buff was added." Deprecated="False" filter="0" group="General">
            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="94C2F49AD62ACFA3" />
            <Tunable type="int" name="enabled" class="TunableLocalizedString" default="0x0" display="Enabled" muid="F9CC9FE244D9F484" description="The reason the buff was added. This will be displayed in the&#xA;buff tooltip." Deprecated="False" filter="0" group="General" />
        </TunableVariant>

        <TunableList name="holiday_buffs" class="TunableList" display="Holiday Buffs" muid="4E7DA7796CAF7D2E" description="A list of buffs that will be given out to all Sims during each&#xA;holiday." Deprecated="False" filter="0" group="General" unique_entries="true">
            <Tunable type="buff" class="TunableReference" muid="F93149DC30B97083" description="A buff that is given to all Sims during the holiday." allow_none="False" Deprecated="False" filter="0" group="General" />
        </TunableList>

        <TunableList name="lifecycle_actions" class="TunableList" display="Lifecycle Actions" muid="635182E3F8669A18" description="Actions that occur as a result of the tradition activation/de-activation." Deprecated="False" filter="0" group="General">
            <TunableTuple class="TunableTraditionActions" muid="9D8384C8D46BDE2E" description="An action that occurs at a specific time in the lifecycle of the tradition." Deprecated="False" filter="0" group="General">
                <TunableList name="actions_to_apply" class="TunableList" display="Actions To Apply" muid="42F07B5794B4BBA1" description="Actions to apply for this event." Deprecated="False" filter="0" group="General">
                    <TunableVariant type="None" class="TraditionActionVariant" default="start_situation" muid="B282DEFA21D7D097" Deprecated="False" filter="0" group="General">
                        <TunableTuple name="destroy_situations" class="DestroySituations" display="Destroy Situations" muid="B19BB0DDE225DDF7" description="End situations by tag." Deprecated="False" filter="0" group="General">
                            <TunableList name="required_participant" class="TunableEnumFlags" display="Required Participant" muid="21A6CACB702F1669" description="If tuned, only situations with this participant will be destroyed." Deprecated="False" filter="0" group="General" unique_entries="true">
                                <TunableEnum type="ParticipantType" class="TunableEnumEntry" default="Invalid" muid="80AC67113EDB4597" static_entries="interactions.ParticipantType" Deprecated="False" filter="0" group="General" />
                            </TunableList>
                            <TunableList name="situation_tags" class="TunableSet" display="Situation Tags" muid="5BBDA4E918EE212C" description="A situation must match at least one of the tuned tags in order to&#xA;be destroyed." Deprecated="False" filter="0" group="General" unique_entries="true">
                                <TunableEnum type="Tag" class="TunableEnumWithFilter" default="INVALID" muid="53FEE1BFD91A4FBC" dynamic_entries="tag.Tag._elements" static_entries="tag.Tag" Deprecated="False" dynamic_entries_prefix="situation" filter="0" group="General" pack_safe="True" />
                            </TunableList>
                        </TunableTuple>
                        <TunableTuple name="start_situation" class="StartSituation" display="Start Situation" muid="FAEA950102FA873B" description="Start a situation." Deprecated="False" filter="0" group="General">
                            <Tunable type="situation" name="situation" class="TunableReference" display="Situation" muid="4043153A1E822CA7" description="The situation to start." allow_none="False" Deprecated="False" filter="0" group="General" />
                        </TunableTuple>
                    </TunableVariant>
                </TunableList>
                <TunableList name="trigger_on_events" class="TunableEnumSet" display="Trigger On Events" muid="F3A17B99789E11B3" description="Event that would trigger these actions." Deprecated="False" filter="0" group="General" unique_entries="true">
                    <TunableEnum type="TraditionActivationEvent" class="TunableEnumEntry" default="HOLIDAY_ACTIVATE" muid="7B0CE880BA93D0F5" static_entries="holidays-holiday_tradition.TraditionActivationEvent" Deprecated="False" filter="0" group="General" />
                </TunableList>
            </TunableTuple>
        </TunableList>

        <TunableVariant type="None" name="pre_holiday_buff_reason" class="OptionalTunable" default="disabled" display="Pre Holiday Buff Reason" muid="7BC350791E9FBEA1" description="If set, specify a reason why the buff was added." Deprecated="False" filter="0" group="General">
            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="9F24208549C2FC50" />
            <Tunable type="int" name="enabled" class="TunableLocalizedString" default="0x0" display="Enabled" muid="8999CAEB22813EAF" description="The reason the buff was added. This will be displayed in the&#xA;buff tooltip." Deprecated="False" filter="0" group="General" />
        </TunableVariant>

        <TunableList name="pre_holiday_buffs" class="TunableList" display="Pre Holiday Buffs" muid="D8471515340C353F" description="A list of buffs that will be given out to all of the player Sims&#xA;during the pre-holiday period of each holiday." Deprecated="False" filter="0" group="General" unique_entries="true">
            <Tunable type="buff" class="TunableReference" muid="C2FF1AC4467327E3" description="A buff that is given to all of the player Sims when it is the&#xA;pre-holiday period." allow_none="False" Deprecated="False" filter="0" group="General" />
        </TunableList>

        <TunableList name="preference" class="TunableList" display="Preference" muid="602A1772416631F8" description="A list of pairs of preference categories and tests.  To determine&#xA;what a Sim feels about a tradition each set of tests in this list&#xA;will be run in order.  When one of the test sets passes then we&#xA;will set that as the preference.  If none of them pass we will&#xA;default to LIKES." Deprecated="False" filter="0" group="General">
            <TunableTuple class="TunableTuple" muid="96CF5518D25FF39C" description="A pair of preference and test set." Deprecated="False" filter="0" group="General">
                <TunableEnum type="TraditionPreference" name="preference" class="TunableEnumEntry" default="LIKES" display="Preference" muid="6E81FCB510E87976" static_entries="holidays-holiday_globals.TraditionPreference" description="The preference that the Sim will have to this tradition if&#xA;the test set passes." Deprecated="False" filter="0" group="General" />
                <TunableVariant type="None" name="reason" class="OptionalTunable" default="disabled" display="Reason" muid="84BB36D80CCAFCCA" description="If enabled then we will also give this reason as to why the&#xA;preference is the way it is." Deprecated="False" filter="0" group="General">
                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="3589C552A8B4B4A6" />
                    <Tunable type="int" name="enabled" class="TunableLocalizedString" default="0x0" display="Enabled" muid="880DC37305E6C0F2" description="The reason that the Sim has this preference." Deprecated="False" filter="0" group="General" />
                </TunableVariant>
                <TunableList name="tests" class="TunablePreferenceTestList" display="Tests" muid="AC3A9442FAB3DA8" description="A set of tests that need to pass for the Sim to have the&#xA;tuned preference." Deprecated="False" filter="0" group="General">
                    <TunableVariant type="None" class="TunablePreferenceTestVariant" default="sim_info" muid="594C8EE2376E9F3F" description="A single tunable test." Deprecated="False" filter="0" group="General">
                        <TunableTuple name="location" class="TunableLocationTest" display="Location" muid="9E2432EDED8600B6" description="Tests for object locations.&#xA;Outside: Check if an object is on the inside or outside (has a roof over&#xA;its head)&#xA;Natural ground: Checks the floor tiles where the object is to see if it &#xA;qualifies as natural ground" Deprecated="False" filter="0" group="General">
                            <TunableTuple name="location_tests" class="TunableTuple" display="Location Tests" muid="62F67B5EAE83992" Deprecated="False" filter="0" group="General">
                                <TunableVariant type="None" name="has_terrain_tag" class="OptionalTunable" default="Don't_Test" display="Has Terrain Tag" muid="3A4BF623D7D9ABA9" description="If checked, will verify the subject of the test is currently on&#xA;the tuned terrain tag." Deprecated="False" filter="0" group="General">
                                    <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="DDBEB64AAA30D417" />
                                    <TunableTuple name="enabled" class="TunableTuple" display="Enabled" muid="49EC6F3655387251" description=",&#xA;A set of terrain tags required for this test to pass." Deprecated="False" filter="0" group="General">
                                        <Tunable type="bool" name="negate" class="Tunable" default="False" display="Negate" muid="81376B227500929E" description="If checked, the test will be inverted. In other words,&#xA;the test will fail if at least one tag is detected at&#xA;this location." Deprecated="False" filter="0" group="General" />
                                        <TunableList name="terrain_tags" class="TunableEnumSet" display="Terrain Tags" muid="3E02CBD84CABD369" description="A set of terrain tags. Only one of these tags needs to be&#xA;present at this location. Although it is not tunable, there&#xA;is a threshold weight underneath which a terrain tag will&#xA;not appear to be present." Deprecated="False" filter="0" group="General" unique_entries="true">
                                            <TunableEnum type="TerrainTag" class="TunableEnumEntry" default="INVALID" muid="9A2655EA943D34FB" static_entries="world-terrain_enums.TerrainTag" Deprecated="False" filter="0" group="General" />
                                        </TunableList>
                                        <Tunable type="bool" name="test_floor_tiles" class="Tunable" default="False" display="Test Floor Tiles" muid="ED461BA3FCC2F3B4" description="If checked, floor tiles will be tested. Otherwise, &#xA;it'll only check the terrain and will ignore the &#xA;floor tiles on the terrain." Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                </TunableVariant>
                                <TunableVariant type="None" name="in_common_area" class="OptionalTunable" default="Don't_Test" display="In Common Area" muid="788207B8D4127155" description="If checked, will verify the subject is in the common area&#xA;of an apartment.  If unchecked will verify the subject is not." Deprecated="False" filter="0" group="General">
                                    <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="EE97220AD472F106" />
                                    <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="87A634AAAF377450" Deprecated="False" filter="0" group="General" />
                                </TunableVariant>
                                <TunableVariant type="None" name="is_fire_allowed" class="OptionalTunable" default="Don't_Test" display="Is Fire Allowed" muid="21440809D2AB2AD0" description="If checked, will verify if fire is possible at the subject's position. &#xA;If unchecked, will pass if fire is not possible.&#xA;If not enabled, doesn't care either way." Deprecated="False" filter="0" group="General">
                                    <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="72FD56198FDF8E7D" />
                                    <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="D162DA1F73C9A29C" Deprecated="False" filter="0" group="General" />
                                </TunableVariant>
                                <TunableVariant type="None" name="is_in_slot" class="OptionalTunable" default="Don't_Test" display="Is In Slot" muid="9586D575B2A34EC4" description="If enabled will test if the object is attacked/deattached to&#xA;any of possible tuned slots.&#xA;If you tune a slot type set the test will test if the object &#xA;is slotted or not slotted into into any of those types. " Deprecated="False" filter="0" group="General">
                                    <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="437E1C6122355923" />
                                    <TunableTuple name="enabled" class="TunableTuple" display="Enabled" muid="4C3B3F5B89A9D15C" description="Test if an object is current slotted in any of a possible&#xA;list of slot types.&#xA;Empty slot type set is allowed for testing for slotted or&#xA;not slotted only." Deprecated="False" filter="0" group="General">
                                        <TunableVariant type="None" name="slot_test_type" class="TunableVariant" default="any_slot" display="Slot Test Type" muid="D6BDFC77D8AFB208" description="Strategy to test the slots:&#xA;Any Slot - is the object in any slot&#xA;Surface Slot - is object is in a surface slot&#xA;Specific Slot - is the object in specific list of slots" Deprecated="False" filter="0" group="General">
                                            <TunableTuple name="any_slot" class="TunableSlotTestType" display="Any Slot" muid="D8DE57AF2D204A2B" description="Singleton factory for testing if object is slotted." Deprecated="False" filter="0" group="General">
                                                <Tunable type="bool" name="require_slotted" class="Tunable" default="True" display="Require Slotted" muid="F27904CFFB6849F4" description="If checked, return success if the object is slotted&#xA;If unchecked, test the absense of slotting." Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <TunableTuple name="specific_slot" class="TunableSpecificSlotTest" display="Specific Slot" muid="98614F4D11A74DD3" description="Subclass of SlotTestType that can check against a specific&#xA;slot set." Deprecated="False" filter="0" group="General">
                                                <Tunable type="bool" name="require_slotted" class="Tunable" default="True" display="Require Slotted" muid="61A30E3055EC5C7E" description="If checked, return success if the object is slotted&#xA;If unchecked, test the absense of slotting." Deprecated="False" filter="0" group="General" />
                                                <Tunable type="slot_type_set" name="specific_slot_set" class="TunableReference" display="Specific Slot Set" muid="64E6CF92EE6EB01D" description="Set of slots the object may be attached to." allow_none="False" Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                            <TunableTuple name="surface_slot" class="TunableSurfaceSlotTest" display="Surface Slot" muid="D2F24985EB58771D" description="Subclass of SlotTestType that checks that a slot has&#xA;is_surface set to true." Deprecated="False" filter="0" group="General">
                                                <Tunable type="bool" name="require_slotted" class="Tunable" default="True" display="Require Slotted" muid="22E50ABF1AA6151E" description="If checked, return success if the object is slotted&#xA;If unchecked, test the absense of slotting." Deprecated="False" filter="0" group="General" />
                                            </TunableTuple>
                                        </TunableVariant>
                                    </TunableTuple>
                                </TunableVariant>
                                <TunableVariant type="None" name="is_inside_building" class="OptionalTunable" default="Don't_Test" display="Is Inside Building" muid="80A274FA752DFDA4" description="If checked, will verify if the subject of the test is inside a&#xA;building. This uses a client function that checks if the block&#xA;the sim is mostly enclosed by walls or if not, if the adjoining&#xA;blocks are themselves enclosed. This should be used when we&#xA;want to test if a subject is inside a normally constructed &#xA;building. If we simply want to test whether the subject is &#xA;covered / has a roof over them, use is_outside. See comment on&#xA;is_outside for more details. If unchecked, will negate this &#xA;test." Deprecated="False" filter="0" group="General">
                                    <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="E99733F5C513CD47" />
                                    <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="4B85388701DF3B94" Deprecated="False" filter="0" group="General" />
                                </TunableVariant>
                                <TunableVariant type="None" name="is_natural_ground" class="OptionalTunable" default="Don't_Test" display="Is Natural Ground" muid="A62AE790D5DAF64D" description="If checked, will verify the subject of the test is on natural &#xA;ground (no floor tiles are under him).&#xA;Otherwise, will verify the subject of the test is not on &#xA;natural ground." Deprecated="False" filter="0" group="General">
                                    <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="BE07527CAFD0C916" />
                                    <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="7AE070F362E16324" Deprecated="False" filter="0" group="General" />
                                </TunableVariant>
                                <TunableVariant type="None" name="is_on_active_lot" class="OptionalTunable" default="Don't_Test" display="Is On Active Lot" muid="A462487CEE127510" description="If disabled the test will not be used.&#xA;If enabled and checked, the test will pass if the subject is&#xA;on the active lot. (their center is within the lot bounds)&#xA;If enabled and not checked, the test will pass if the subject is &#xA;outside of the active lot.&#xA;&#xA;For example, Ask To Leave is tuned with this enabled and checked&#xA;for the TargetSim. You can only ask someone to leave if they&#xA;are actually on the active lot, but not if they are wandering&#xA;around in the open streets." Deprecated="False" filter="0" group="General">
                                    <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="E85F12A414FEC6D6" />
                                    <TunableTuple name="Is_or_is_not_on_active_lot" class="TunableTuple" display="Is Or Is Not On Active Lot" muid="CCE1B0581ABC99B5" Deprecated="False" filter="0" group="General">
                                        <Tunable type="bool" name="include_spawn_point" class="Tunable" default="False" display="Include Spawn Point" muid="1FE3F3C77BC743EC" description="If set to true, we will consider the lot's spawn point as part of the active lot." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="bool" name="is_or_is_not_on_active_lot" class="Tunable" default="True" display="Is Or Is Not On Active Lot" muid="D10E13A66DF3EEEE" description="If checked then the test will pass if the subject is on&#xA;the active lot." Deprecated="False" filter="0" group="General" />
                                        <TunableVariant type="None" name="tolerance" class="TunableVariant" default="explicit" display="Tolerance" muid="98B3E457B2B3125D" Deprecated="False" filter="0" group="General">
                                            <Tunable type="int" name="explicit" class="Tunable" default="0" display="Explicit" muid="3D6C4451814E3216" description="The tolerance from the edge of the lot that the&#xA;location test will use in order to determine if the&#xA;test target is considered on lot or not." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                            <TunableTuple name="use_default_tolerance" class="UseDefaultOfflotToleranceFactory" display="Use Default Tolerance" muid="ABB1D30E7D202315" description="Use the default tuned global offlot tolerance tuned&#xA;in objects.components.statistic_component.Default Off Lot." Deprecated="False" filter="0" group="General" />
                                        </TunableVariant>
                                    </TunableTuple>
                                </TunableVariant>
                                <TunableVariant type="None" name="is_on_level" class="OptionalTunable" default="Don't_Test" display="Is On Level" muid="F550DF3FC53D6A12" description="If enabled, we check the participant's current level against&#xA;the tuned threshold.  In the case of sims in pools, the effective&#xA;level will be that of the surface of the pool, not the bottom." Deprecated="False" filter="0" group="General">
                                    <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="1598064E0E953722" />
                                    <TunableTuple name="enabled" class="TunableThreshold" display="Enabled" muid="B6A6C94AA7460C3" description="Value/comparison pair used to define a Threshold." Deprecated="False" filter="0" group="General">
                                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="76C833C6016CC092" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="int" name="value" class="Tunable" default="0" display="Value" muid="6BC2740896636071" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                </TunableVariant>
                                <TunableVariant type="None" name="is_outside" class="OptionalTunable" default="Don't_Test" display="Is Outside" muid="ECD2AB16120EAF80" description="PLEASE BE AWARE. If checked, will verify if the subject of the&#xA;test does not have a roof over their head. If unchecked, will &#xA;test if the subject has a roof over their head. If the &#xA;intention is to determine if a subject is in/not in a building, &#xA;this test is deprecated in favor of is_inside_building. If you &#xA;would like to test if a subject is inside a building, but also &#xA;need to test if they have a roof over their head, please use &#xA;both options." Deprecated="False" filter="0" group="General">
                                    <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="3041F8B60A629150" />
                                    <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="94ADAD593263D4BD" Deprecated="False" filter="0" group="General" />
                                </TunableVariant>
                                <TunableVariant type="None" name="is_venue_type" class="OptionalTunable" default="Don't_Test" display="Is Venue Type" muid="2FE8408B82A3628B" description="If checked, will verify if the subject is at a venue of the&#xA;specified type." Deprecated="False" filter="0" group="General">
                                    <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="688607634734F3C" />
                                    <TunableTuple name="enabled" class="TunableTuple" display="Enabled" muid="6F5B0BDE26B6FFE" description="Venue type required for this test to pass." Deprecated="False" filter="0" group="General">
                                        <Tunable type="bool" name="negate" class="Tunable" default="False" display="Negate" muid="5B1C4349A13F3A1E" description="If enabled, the test will return true if the subject&#xA;IS NOT at a venue of the specified type." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="bool" name="use_source_venue" class="Tunable" default="False" display="Use Source Venue" muid="1D638ACA8AB22576" description="If enabled, the test will test the source venue instead of the active&#xA;venue.  For example, the Community Lot instead of the active Marketplace.&#xA;Testing the active venue is the default." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="venue" name="venue_type" class="TunableReference" display="Venue Type" muid="64D4304FD63A08B6" description="Venue type to test against." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                    </TunableTuple>
                                </TunableVariant>
                                <TunableVariant type="None" name="valid_surface_types" class="OptionalTunable" default="Don't_Test" display="Valid Surface Types" muid="FBB9F7D117978E7E" description="If enabled, we will test the surface type of the subject&#xA;against prohibited or required surface types." Deprecated="False" filter="0" group="General">
                                    <Tunable name="Don't_Test" class="TunableExistance" display="Don'T Test" muid="262251599C13FA2E" />
                                    <TunableTuple name="Test_Surface_Types" class="TunableWhiteBlackList" display="Test Surface Types" muid="A56C846BC5CD16F0" description="Required and Prohibited Surface Types. " Deprecated="False" filter="0" group="General">
                                        <TunableVariant type="None" name="blacklist" class="OptionalTunable" default="nothing" display="Blacklist" muid="7E644A02615D736A" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is not in the blacklist. If no blacklist is&#xA;specified, no items are disallowed." Deprecated="False" filter="0" group="General">
                                            <Tunable name="nothing" class="TunableExistance" display="Nothing" muid="B79CDBF95FB29860" />
                                            <TunableTuple name="specify" class="TunableBlacklist" display="Specify" muid="ACBDF9ED18DC02E" description="A tunable blacklist." Deprecated="False" filter="0" group="General">
                                                <TunableList name="blacklist" class="TunableSet" display="Blacklist" muid="E1A69A53D01F6B03" description="Blacklisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                    <TunableEnum type="SurfaceType" class="TunableEnumEntry" default="SURFACETYPE_WORLD" muid="F67FC464535A2682" static_entries="routing.SurfaceType" description="Surface Type the object is placed on." Deprecated="False" filter="0" group="General" invalid_entries="SURFACETYPE_UNKNOWN" />
                                                </TunableList>
                                                <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="FE5146C30C033B7C" description="Tunable option for how many items must be in the blacklist&#xA;for the blacklist to fail when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="91416165A5466066" />
                                                    <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="88E86B40ACF223D5" description="When testing a collection of items, the number of items in&#xA;that collection that are in the blacklist must pass this&#xA;threshold test for the blacklist to disallow them all." Deprecated="False" filter="0" group="General">
                                                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="52C13851FBCA252F" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                        <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="6D35BD8DE665E36B" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                    </TunableTuple>
                                                </TunableVariant>
                                            </TunableTuple>
                                        </TunableVariant>
                                        <TunableVariant type="None" name="whitelist" class="OptionalTunable" default="everything" display="Whitelist" muid="D7CD35EC27F69363" description="When an item is tested against this white/black list, it is&#xA;only allowed if it is in the whitelist. If no whitelist is&#xA;specified, all items are allowed." Deprecated="False" filter="0" group="General">
                                            <Tunable name="everything" class="TunableExistance" display="Everything" muid="58A28BF431DEA29" />
                                            <TunableTuple name="specify" class="TunableWhitelist" display="Specify" muid="32B5B9386040A55A" description="A tunable whitelist." Deprecated="False" filter="0" group="General">
                                                <TunableVariant type="None" name="threshold" class="OptionalTunable" default="threshold" display="Threshold" muid="63E71AEF02F76AFF" description="Tunable option for how many items must be in the whitelist&#xA;for the whitelist to pass when testing a collection of items.&#xA;By default, only one object needs to be in the list." Deprecated="False" filter="0" group="General">
                                                    <Tunable name="all_must_match" class="TunableExistance" display="All Must Match" muid="2EBD67F8C109F609" />
                                                    <TunableTuple name="threshold" class="TunableThreshold" display="Threshold" muid="884C8315BCD64460" description="When testing a collection of items, the number of items in&#xA;that collection that are in the whitelist must pass this&#xA;threshold test for the whitelist to allow them all." Deprecated="False" filter="0" group="General">
                                                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="F67EBDB225524DBF" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                                        <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="D5738B787EE4D24" min="0" max="None" tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                                    </TunableTuple>
                                                </TunableVariant>
                                                <TunableList name="whitelist" class="TunableSet" display="Whitelist" muid="4C50C3E0F7BD669C" description="Whitelisted items." Deprecated="False" filter="0" group="General" unique_entries="true">
                                                    <TunableEnum type="SurfaceType" class="TunableEnumEntry" default="SURFACETYPE_WORLD" muid="EAE90E1A8F102B81" static_entries="routing.SurfaceType" description="Surface Type the object is placed on." Deprecated="False" filter="0" group="General" invalid_entries="SURFACETYPE_UNKNOWN" />
                                                </TunableList>
                                            </TunableTuple>
                                        </TunableVariant>
                                    </TunableTuple>
                                </TunableVariant>
                            </TunableTuple>
                        </TunableTuple>
                        <TunableTuple name="relationship" class="TunableRelationshipTest" display="Relationship" muid="7C0F5A7F0761FCF2" description="Gate availability by a relationship status." Deprecated="False" filter="0" group="General">
                            <Tunable type="bool" name="invert_num_relations" class="Tunable" default="False" display="Invert Num Relations" muid="5874C19F723731AF" description="If checked then we will check that your Num Relations is less than or&#xA;equal to the value rather than the other way around." Deprecated="False" filter="0" group="General" />
                            <Tunable type="int" name="num_relations" class="Tunable" default="0" display="Num Relations" muid="7850D5BB63108DC5" description="Number of Sims with specified relationships required to pass,&#xA;default(0) is all known relations.&#xA;&#xA;If value set to 1 or greater, then test is looking at least that&#xA;number of relationship to match the criteria.&#xA;&#xA;If value is set to 0, then test will pass if relationships being&#xA;tested must match all criteria of the test to succeed.  For&#xA;example, if interaction should not appear if any relationship&#xA;contains a relationship bit, this value should be 0." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                            <TunableTuple name="prohibited_relationship_bits" class="TunableTuple" display="Prohibited Relationship Bits" muid="27664C3D78EE6D7C" Deprecated="False" filter="0" group="General">
                                <TunableList name="match_all" class="TunableSet" display="Match All" muid="43608B9EC8FA38E3" description="All of these relationship bits must match to fail the test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                    <Tunable type="relbit" class="TunableReference" muid="B211B7F7F8A52F73" allow_none="False" Deprecated="False" filter="0" group="General" />
                                </TunableList>
                                <TunableList name="match_any" class="TunableSet" display="Match Any" muid="B105C46E9CC8BD25" description="If any of these relationship bits match the test will fail." Deprecated="False" filter="0" group="General" unique_entries="true">
                                    <Tunable type="relbit" class="TunableReference" muid="597544ABC844946E" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                </TunableList>
                            </TunableTuple>
                            <TunableTuple name="relationship_score_interval" class="TunableInterval" display="Relationship Score Interval" muid="5FC5FD5F5EC3D03B" description="The range that the relationship score must be within in order for&#xA;this test to pass." Deprecated="False" filter="0" group="General">
                                <Tunable type="float" name="lower_bound" class="TunableRange" default="-100.0" display="Lower Bound" muid="567E4FC1F489E483" min="-100.0" max="None" description="The lower bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                <Tunable type="float" name="upper_bound" class="TunableRange" default="100.0" display="Upper Bound" muid="54FF58D955F0DE6E" min="None" max="100.0" description="The upper bound of the interval." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                            </TunableTuple>
                            <TunableTuple name="required_relationship_bits" class="TunableTuple" display="Required Relationship Bits" muid="4AFF58A2D447B288" Deprecated="False" filter="0" group="General">
                                <TunableList name="match_all" class="TunableSet" display="Match All" muid="5EDE656F61DC02F9" description="All of these relationship bits must be present to pass the&#xA;test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                    <Tunable type="relbit" class="TunableReference" muid="A6D7B4581F0AB6E" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                </TunableList>
                                <TunableList name="match_any" class="TunableSet" display="Match Any" muid="74C7B6D61B4EC8CB" description="Any of these relationship bits will pass the test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                    <Tunable type="relbit" class="TunableReference" muid="E98CEBD191D360C2" allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                                </TunableList>
                            </TunableTuple>
                            <TunableVariant type="None" name="test_incest" class="TunableVariant" default="disabled" display="Test Incest" muid="65304CB24642623F" description="Test for incest status. Test passes if this matches the two Sim's&#xA;incest status." Deprecated="False" filter="0" group="General">
                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="825BC21EFF58D5AA" />
                                <Tunable name="is incestuous" class="TunableExistance" display="Is Incestuous" muid="4AEA9ADE65AB3A05" />
                                <Tunable name="is not incestuous" class="TunableExistance" display="Is Not Incestuous" muid="B092FDDB0254C8E" />
                            </TunableVariant>
                            <Tunable type="statistic" name="track" class="TunableReference" display="Track" muid="C9EFF5F896F17A1F" description="If set, the test will use the relationship score between sims for&#xA;this track. If unset, the track defaults to the global module&#xA;tunable REL_INSPECTOR_TRACK." allow_none="True" Deprecated="False" filter="0" group="General" pack_safe="True" restrict="RelationshipTrack" />
                        </TunableTuple>
                        <TunableTuple name="sim_info" class="TunableSimInfoTest" display="Sim Info" muid="2C09F48895DC107" description="The SimInfo tests some of the basic aspects of a Sim, such as their age,&#xA;gender, or species." Deprecated="False" filter="0" group="General">
                            <TunableVariant type="None" name="ages" class="OptionalTunable" default="unspecified" display="Ages" muid="680EF9DC09CDE793" description="The Sim must be one of the specified ages." Deprecated="False" filter="0" group="General">
                                <TunableList name="specified" class="TunableEnumSet" default="TEEN,YOUNGADULT,ADULT,ELDER" display="Specified" muid="1F7A28B0A4005531" description="The Sim must be one of the specified ages." Deprecated="False" filter="0" group="General" unique_entries="true">
                                    <TunableEnum type="Age" class="TunableEnumEntry" default="ADULT" muid="DDDEB9C0B2431D1B" static_entries="sims-sim_info_types.Age" Deprecated="False" filter="0" group="General" />
                                </TunableList>
                                <Tunable name="unspecified" class="TunableExistance" display="Unspecified" muid="34ACC4B5E0A73CE8" />
                            </TunableVariant>
                            <TunableVariant type="None" name="can_age_up" class="OptionalTunable" default="unspecified" display="Can Age Up" muid="13B02CB2DDE7591A" description="Whether the Sim is eligible to advance to the next age." Deprecated="False" filter="0" group="General">
                                <Tunable type="bool" name="specified" class="Tunable" default="None" display="Specified" muid="CFE0A7419933B9DB" description="Whether the Sim is eligible to advance to the next age." Deprecated="False" filter="0" group="General" />
                                <Tunable name="unspecified" class="TunableExistance" display="Unspecified" muid="9F03D64718C35347" />
                            </TunableVariant>
                            <TunableVariant type="None" name="gender" class="OptionalTunable" default="unspecified" display="Gender" muid="9DB82BF901CBB572" description="The Sim must be of the specified gender." Deprecated="False" filter="0" group="General">
                                <TunableEnum type="Gender" name="specified" class="TunableEnumEntry" default="None" display="Specified" muid="FFD9D404B9EF7B5D" static_entries="sims-sim_info_types.Gender" description="The Sim must be of the specified gender." Deprecated="False" filter="0" group="General" />
                                <Tunable name="unspecified" class="TunableExistance" display="Unspecified" muid="76F8ACB7E3C84170" />
                            </TunableVariant>
                            <TunableVariant type="None" name="has_been_played" class="OptionalTunable" default="disabled" display="Has Been Played" muid="16541C996E0CE018" description="Whether the Sim has ever been played as a Playable Sim.&#xA;If enabled and true, the Sim must have been played by the player.&#xA;If enabled and false, the Sim must never have been played.&#xA;If disabled, this portion of the Sim Info test will be ignored." Deprecated="False" filter="0" group="General">
                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="709ED932E24B1A97" />
                                <Tunable type="bool" name="enabled" class="Tunable" default="False" display="Enabled" muid="D3C69C425182FBD5" description="Whether the Sim has ever been played as a Playable Sim.&#xA;If enabled and true, the Sim must have been played by the player.&#xA;If enabled and false, the Sim must never have been played.&#xA;If disabled, this portion of the Sim Info test will be ignored." Deprecated="False" filter="0" group="General" />
                            </TunableVariant>
                            <TunableVariant type="None" name="is_active_sim" class="OptionalTunable" default="disabled" display="Is Active Sim" muid="633E145760E181AE" description="Whether the Sim must be the active selected Sim.&#xA;If enabled and true, the sim must active for this test to pass.&#xA;If enabled and false, the sim must not be active for this test to pass.&#xA;If disabled, this portion of the Sim Info test will be ignored." Deprecated="False" filter="0" group="General">
                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="1653408F4E32603F" />
                                <Tunable type="bool" name="enabled" class="Tunable" default="True" display="Enabled" muid="300C151DE3F11416" description="Whether the Sim must be the active selected Sim.&#xA;If enabled and true, the sim must active for this test to pass.&#xA;If enabled and false, the sim must not be active for this test to pass.&#xA;If disabled, this portion of the Sim Info test will be ignored." Deprecated="False" filter="0" group="General" />
                            </TunableVariant>
                            <TunableEnum type="MatchType" name="match_type" class="TunableEnumEntry" default="MATCH_ALL" display="Match Type" muid="AD343327F58CBF94" static_entries="sims-sim_info_tests.MatchType" description="When testing multiple participants if MATCH_ALL is set, then all the&#xA;participants need to pass the test.&#xA; &#xA;If MATCH_ANY is set, test will pass as soon as one of them meet the&#xA;criteria" Deprecated="False" filter="0" group="General" />
                            <TunableVariant type="None" name="npc" class="OptionalTunable" default="disabled" display="Npc" muid="A8F43FB7021D6869" description="Whether the Sim must be an NPC or Playable Sim.&#xA;If enabled and true, the sim must be an NPC for this test to pass.&#xA;If enabled and false, the sim must be playable, non-NPC sim for this test to pass.&#xA;If disabled, this portion of the Sim Info test will be ignored.&#xA;&#xA;Note: NPC in this case means a Sim that is not currently&#xA;controllable (selectable), or Not Player Controllable. If you&#xA;need to know if the Sim has ever been played, use 'Has Been&#xA;Played'" Deprecated="False" filter="0" group="General">
                                <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="5182EA31EA642988" />
                                <Tunable type="bool" name="enabled" class="Tunable" default="False" display="Enabled" muid="4D9F5073199EB91E" description="Whether the Sim must be an NPC or Playable Sim.&#xA;If enabled and true, the sim must be an NPC for this test to pass.&#xA;If enabled and false, the sim must be playable, non-NPC sim for this test to pass.&#xA;If disabled, this portion of the Sim Info test will be ignored.&#xA;&#xA;Note: NPC in this case means a Sim that is not currently&#xA;controllable (selectable), or Not Player Controllable. If you&#xA;need to know if the Sim has ever been played, use 'Has Been&#xA;Played'" Deprecated="False" filter="0" group="General" />
                            </TunableVariant>
                            <TunableVariant type="None" name="species" class="TunableVariant" default="unspecified" display="Species" muid="E238A89B579E80A9" Deprecated="False" filter="0" group="General">
                                <TunableTuple name="specified" class="Tunable_SpeciesTestSpecies" display="Specified" muid="E798D2B64F98A9A1" description="The Sim must be one of the specified species. Species are consolidated, e.g.&#xA;large/small dog are both DOG." Deprecated="False" filter="0" group="General">
                                    <TunableList name="species" class="TunableEnumSet" display="Species" muid="46B2A220DCF129E0" description="The Sim must be one of the specified species. Species are&#xA;consolidated, e.g. large/small dog are both DOG." Deprecated="False" filter="0" group="General" unique_entries="true">
                                        <TunableEnum type="Species" class="TunableEnumEntry" default="HUMAN" muid="EAEEF5F185B8199F" static_entries="sims-sim_info_types.Species" Deprecated="False" filter="0" group="General" invalid_entries="INVALID" />
                                    </TunableList>
                                </TunableTuple>
                                <TunableTuple name="specified_extended" class="Tunable_SpeciesTestExtendedSpecies" display="Specified Extended" muid="EB6997BCBB207D07" description="The Sim must be one of the specified species. Species are *not* consolidated,&#xA;e.g. large/small dog are different species." Deprecated="False" filter="0" group="General">
                                    <TunableList name="species" class="TunableEnumSet" display="Species" muid="127C6CFF33FDD111" description="The Sim must be one of the specified species. Species are *not*&#xA;consolidated, e.g. large/small dog are different species." Deprecated="False" filter="0" group="General" unique_entries="true">
                                        <TunableEnum type="SpeciesExtended" class="TunableEnumEntry" default="Species.HUMAN" muid="E0CBD53243393FE1" static_entries="sims-sim_info_types.SpeciesExtended" Deprecated="False" filter="0" group="General" invalid_entries="INVALID" />
                                    </TunableList>
                                </TunableTuple>
                                <Tunable name="unspecified" class="TunableExistance" display="Unspecified" muid="9EF6AC8613DE92BF" />
                            </TunableVariant>
                            <TunableEnum type="ParticipantType" name="who" class="TunableEnumEntry" default="Actor" display="Who" muid="65460DF8B9BA3E7" static_entries="interactions.ParticipantType" description="Who or what to apply this test to" Deprecated="False" filter="0" group="General" />
                        </TunableTuple>
                        <TunableTuple name="trait" class="TunableTraitTest" display="Trait" muid="4BF82F33C969D654" description="Test to require a Sim to have or not have certain specific traits." Deprecated="False" filter="0" group="General">
                            <Tunable type="bool" name="apply_thresholds_on_individual_basis" class="Tunable" default="True" display="Apply Thresholds On Individual Basis" muid="1C723957E626E6F" description="If checked then Num Whitelist Required and Num Blacklist Allowed&#xA;will be applied to each individual participant from the subject.&#xA;If unchecked then it will apply the values to the total whitelist&#xA;and blacklist matches on the group.&#xA;&#xA;IMPORTANT!!!&#xA;In the case of objectives this should probably be set to false&#xA;since we know that this is coming from only one sim and that we&#xA;want to use the value that comes out of the test result numeric.&#xA;This isn't just locked to being this value since there are valid&#xA;cases within that system when you are looking at a group of sims&#xA;and could want to test that one of your sims passes.  Ex. Having&#xA;a ghost sim in the household." Deprecated="False" filter="0" group="General" />
                            <TunableList name="blacklist_trait_types" class="TunableEnumSet" display="Blacklist Trait Types" muid="4E0DA1C11D995C25" description="The Sim is required to not have traits of these types to pass this &#xA;test. Should Num Blacklist Allowed be specified, then the Sim is &#xA;allowed to have up to that amount of blacklisted traits before &#xA;failing this test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                <TunableEnum type="TraitType" class="TunableEnumEntry" default="PERSONALITY" muid="F7C17F69C2BBEA80" static_entries="traits-trait_type.TraitType" Deprecated="False" filter="0" group="General" />
                            </TunableList>
                            <TunableList name="blacklist_traits" class="TunableList" display="Blacklist Traits" muid="A4983B1A5E9948C5" description="The is required to not have traits from this list in order to pass&#xA;this test. Should num_blacklist_allowed be specified, then the Sim&#xA;is allowed to have up to that amount of blacklisted traits before&#xA;failing this test." Deprecated="False" filter="0" group="General">
                                <Tunable type="trait" class="TunableReference" muid="EE0D0DCBCB37C4C2" description="A blacklist trait." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                            </TunableList>
                            <Tunable type="int" name="num_blacklist_allowed" class="Tunable" default="0" display="Num Blacklist Allowed" muid="23412B5A6FB5C87B" description="The threshold of blacklist traits owned by the specified Sim that&#xA;will trigger a test failure." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                            <Tunable type="int" name="num_whitelist_required" class="Tunable" default="1" display="Num Whitelist Required" muid="ADB0BF35E5FC0C48" description="The number of whitelist traits that the specified Sim is required to&#xA;have in order to pass this test." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                            <TunableEnum type="ParticipantType" name="subject" class="TunableEnumEntry" default="Actor" display="Subject" muid="69BCF4DACAD75BF8" static_entries="interactions.ParticipantType" description="The participant that is to be the subject of the test." Deprecated="False" filter="0" group="General" />
                            <TunableList name="whitelist_trait_types" class="TunableEnumSet" display="Whitelist Trait Types" muid="5A2D1CC6539FB12F" description="The Sim is required to have the specified number of traits with &#xA;these types in order to pass the test." Deprecated="False" filter="0" group="General" unique_entries="true">
                                <TunableEnum type="TraitType" class="TunableEnumEntry" default="PERSONALITY" muid="BAB66AB6E30F1E60" static_entries="traits-trait_type.TraitType" Deprecated="False" filter="0" group="General" />
                            </TunableList>
                            <TunableList name="whitelist_traits" class="TunableList" display="Whitelist Traits" muid="FE5D8EA9EDD5A00A" description="The Sim is required to have the specified number of traits from this&#xA;list in order to pass the test." Deprecated="False" filter="0" group="General">
                                <Tunable type="trait" class="TunableReference" muid="E32BB8790945194B" description="A whitelist trait. Please note: for pack-safe entries that are&#xA;not loaded, the game will behave as if the entry doesn't exist.&#xA;This allows you to specify a pack trait and required count of 1&#xA;and always fail the test should the appropriate pack not be&#xA;installed." allow_none="False" Deprecated="False" filter="0" group="General" pack_safe="True" />
                            </TunableList>
                        </TunableTuple>
                        <TunableTuple name="travel_group" class="TunableTravelGroupTest" display="Travel Group" muid="B26B1811E8EC02AF" description="A test to check the number of available Sim slots in a participant's travel group." Deprecated="False" filter="0" group="General">
                            <Tunable type="bool" name="include_household_travel_group" class="Tunable" default="False" display="Include Household Travel Group" muid="FB1A984E5519ECDE" description="If checked, the travel group that any sims in the participant's&#xA;household will be used in the event that the participant is not&#xA;actually on vacation." Deprecated="False" filter="0" group="General" />
                            <TunableEnum type="ParticipantType" name="participant" class="TunableEnumEntry" default="Actor" display="Participant" muid="B32E5A92AC44E8B3" static_entries="interactions.ParticipantType" description="The subject whose travel group is the object of this test." Deprecated="False" filter="0" group="General" />
                            <TunableVariant type="None" name="test_type" class="TunableVariant" default="count" display="Test Type" muid="7ED325C25B2A3AE2" description="The type of test to determine what about this travel group's size&#xA;we care about." Deprecated="False" filter="0" group="General">
                                <TunableTuple name="can_extend" class="Tunable_TravelGroupCanExtendStay" display="Can Extend" muid="1B607EC52358A649" description="Use this option to check whether or not a participant can&#xA;extend their vacation. This test will fail if the participant is&#xA;not in a travel group or their travel group does not have&#xA;an end time specified." Deprecated="False" filter="0" group="General" />
                                <TunableTuple name="count" class="Tunable_TravelGroupFreeSlots" display="Count" muid="66B2283D320B000" description="Use this option when you're testing for a specific number of&#xA;free slots in the travel group." Deprecated="False" filter="0" group="General">
                                    <TunableTuple name="count" class="TunableThreshold" display="Count" muid="D25C2F48B1451FF6" description="The number of required free slots for the specified&#xA;travel group." Deprecated="False" filter="0" group="General">
                                        <TunableEnum type="Operator" name="comparison" class="TunableOperator" default="GREATER_OR_EQUAL" display="Comparison" muid="C1385BFD074AEDD4" static_entries="sims4-math.Operator" description="The comparison to perform against the value." Deprecated="False" filter="0" group="General" />
                                        <Tunable type="int" name="value" class="TunableRange" default="1" display="Value" muid="7A3E2A2A73310D4C" min="0" max="None" description="The range of required free slots." tuning_state="NeedsTuning" Deprecated="False" filter="0" group="General" />
                                    </TunableTuple>
                                </TunableTuple>
                                <TunableTuple name="in_travel_group" class="Tunable_TravelGroupExists" display="In Travel Group" muid="5ADEC559FF41D08D" description="Use this option when testing to see if the participant exists&#xA;in the travel group or not." Deprecated="False" filter="0" group="General">
                                    <Tunable type="bool" name="exists" class="Tunable" default="True" display="Exists" muid="FB5909AFE8B61694" description="If checked, this test will fail if the Sim is not in a&#xA;travel group. If unchecked, this test will fail if the Sim&#xA;is in a travel group." Deprecated="False" filter="0" group="General" />
                                </TunableTuple>
                                <TunableTuple name="participant" class="Tunable_TravelGroupAddParticipant" display="Participant" muid="BBCD6EF1B7EF9464" description="Use this option when you're testing a specific Sim being added&#xA;to the travel group." Deprecated="False" filter="0" group="General">
                                    <TunableEnum type="ParticipantType" name="participant" class="TunableEnumEntry" default="TargetSim" display="Participant" muid="C18747D6D01900C8" static_entries="interactions.ParticipantType" description="The participant to be added." Deprecated="False" filter="0" group="General" />
                                </TunableTuple>
                            </TunableVariant>
                        </TunableTuple>
                    </TunableVariant>
                </TunableList>
            </TunableTuple>
        </TunableList>

        <TunableVariant type="None" name="preference_reward_buff" class="OptionalTunable" default="disabled" display="Preference Reward Buff" muid="90E1BAC3DFCB45BA" description="If enabled then if the Sim loves this tradition when the holiday is&#xA;completed they will get a special buff if they completed the&#xA;tradition." Deprecated="False" filter="0" group="General">
            <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="FA60B81815178ABF" />
            <TunableTuple name="enabled" class="TunableBuffReference" display="Enabled" muid="67CF5E5F08075F5F" description="The buff given if this Sim loves the tradition and has completed&#xA;it at the end of the holiday." Deprecated="False" filter="0" group="General">
                <TunableVariant type="None" name="buff_reason" class="OptionalTunable" default="disabled" display="Buff Reason" muid="B7FBC874A0D62C0A" description="If set, specify a reason why the buff was added." Deprecated="False" filter="0" group="General">
                    <Tunable name="disabled" class="TunableExistance" display="Disabled" muid="F535A546FA331F5D" />
                    <Tunable type="int" name="enabled" class="TunableLocalizedString" default="0x0" display="Enabled" muid="4F0AE11104EF09EA" description="The reason the buff was added. This will be displayed in the&#xA;buff tooltip." Deprecated="False" filter="0" group="General" />
                </TunableVariant>
                <Tunable type="buff" name="buff_type" class="TunableReference" display="Buff Type" muid="85B7356C1A4A79CA" description="Buff that will get added to sim." allow_none="False" Deprecated="False" filter="0" group="General" />
            </TunableTuple>
        </TunableVariant>

        <Tunable type="bool" name="selectable" class="Tunable" default="True" display="Selectable" muid="93B4FE70C8685C82" description="If checked then this tradition will appear in the tradition&#xA;selection." Deprecated="False" export_modes="client_binary,server_binary,server_xml" filter="0" group="UI" />

        <Tunable type="situation_goal" name="situation_goal" class="TunableReference" display="Situation Goal" muid="AC2AE085428CE610" description="This is the situation goal that will be offered when this tradition&#xA;is active." allow_none="False" Deprecated="False" filter="0" group="General" />
    </Instance>

    <VersionHistory>
        <ActionList>
            <Action type="kRemove" old_muid="40244DD18B2B86BD" />
        </ActionList>
    </VersionHistory>
</TuningRoot>